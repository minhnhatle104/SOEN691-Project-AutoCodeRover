{
    "task_id": "google__gson-1555",
    "setup_info": {
        "repo_path": "/Users/rabeyakhatunmuna/Documents/research/SOEN691-Project-AutoCodeRover/SWE-bench/testbed/google__gson/setup_google__gson__0.1",
        "env_name": "setup_google__gson__0.1",
        "pre_install": [],
        "install": "mvn clean install -Dmaven.test.skip=true",
        "test_cmd": "mvn clean test gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java"
    },
    "task_info": {
        "repo": "google/gson",
        "pull_number": 1555,
        "instance_id": "google__gson-1555",
        "issue_numbers": [
            "1553"
        ],
        "base_commit": "aa236ec38d39f434c1641aeaef9241aec18affde",
        "patch": "diff --git a/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java b/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\nindex 13a7bb7ebe..d75e4ee04a 100644\n--- a/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java\n@@ -55,6 +55,7 @@ TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gso\n     Object instance = constructorConstructor.get(TypeToken.get(annotation.value())).construct();\n \n     TypeAdapter<?> typeAdapter;\n+    boolean nullSafe = annotation.nullSafe();\n     if (instance instanceof TypeAdapter) {\n       typeAdapter = (TypeAdapter<?>) instance;\n     } else if (instance instanceof TypeAdapterFactory) {\n@@ -66,7 +67,8 @@ TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gso\n       JsonDeserializer<?> deserializer = instance instanceof JsonDeserializer\n           ? (JsonDeserializer) instance\n           : null;\n-      typeAdapter = new TreeTypeAdapter(serializer, deserializer, gson, type, null);\n+      typeAdapter = new TreeTypeAdapter(serializer, deserializer, gson, type, null, nullSafe);\n+      nullSafe = false;\n     } else {\n       throw new IllegalArgumentException(\"Invalid attempt to bind an instance of \"\n           + instance.getClass().getName() + \" as a @JsonAdapter for \" + type.toString()\n@@ -74,7 +76,7 @@ TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gso\n           + \" JsonSerializer or JsonDeserializer.\");\n     }\n \n-    if (typeAdapter != null && annotation.nullSafe()) {\n+    if (typeAdapter != null && nullSafe) {\n       typeAdapter = typeAdapter.nullSafe();\n     }\n \ndiff --git a/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java b/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java\nindex a5c6c5dcda..a216c06aca 100644\n--- a/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java\n+++ b/gson/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java\n@@ -45,17 +45,24 @@ public final class TreeTypeAdapter<T> extends TypeAdapter<T> {\n   private final TypeToken<T> typeToken;\n   private final TypeAdapterFactory skipPast;\n   private final GsonContextImpl context = new GsonContextImpl();\n+  private final boolean nullSafe;\n \n   /** The delegate is lazily created because it may not be needed, and creating it may fail. */\n   private TypeAdapter<T> delegate;\n \n   public TreeTypeAdapter(JsonSerializer<T> serializer, JsonDeserializer<T> deserializer,\n-      Gson gson, TypeToken<T> typeToken, TypeAdapterFactory skipPast) {\n+      Gson gson, TypeToken<T> typeToken, TypeAdapterFactory skipPast, boolean nullSafe) {\n     this.serializer = serializer;\n     this.deserializer = deserializer;\n     this.gson = gson;\n     this.typeToken = typeToken;\n     this.skipPast = skipPast;\n+    this.nullSafe = nullSafe;\n+  }\n+\n+  public TreeTypeAdapter(JsonSerializer<T> serializer, JsonDeserializer<T> deserializer,\n+                         Gson gson, TypeToken<T> typeToken, TypeAdapterFactory skipPast) {\n+    this(serializer, deserializer, gson, typeToken, skipPast, true);\n   }\n \n   @Override public T read(JsonReader in) throws IOException {\n@@ -63,7 +70,7 @@ public TreeTypeAdapter(JsonSerializer<T> serializer, JsonDeserializer<T> deseria\n       return delegate().read(in);\n     }\n     JsonElement value = Streams.parse(in);\n-    if (value.isJsonNull()) {\n+    if (nullSafe && value.isJsonNull()) {\n       return null;\n     }\n     return deserializer.deserialize(value, typeToken.getType(), context);\n@@ -74,7 +81,7 @@ public TreeTypeAdapter(JsonSerializer<T> serializer, JsonDeserializer<T> deseria\n       delegate().write(out, value);\n       return;\n     }\n-    if (value == null) {\n+    if (nullSafe && value == null) {\n       out.nullValue();\n       return;\n     }\n",
        "test_patch": "diff --git a/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java b/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java\nindex 8ab4e128a6..b4dfc3593c 100644\n--- a/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java\n+++ b/gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java\n@@ -161,4 +161,22 @@ private static final class BaseIntegerAdapter implements JsonSerializer<Base<Int\n       return new JsonPrimitive(\"BaseIntegerAdapter\");\n     }\n   }\n+\n+  public void testJsonAdapterNullSafe() {\n+    Gson gson = new Gson();\n+    String json = gson.toJson(new Computer3(null, null));\n+    assertEquals(\"{\\\"user1\\\":\\\"UserSerializerDeserializer\\\"}\", json);\n+    Computer3 computer3 = gson.fromJson(\"{\\\"user1\\\":null, \\\"user2\\\":null}\", Computer3.class);\n+    assertEquals(\"UserSerializerDeserializer\", computer3.user1.name);\n+    assertNull(computer3.user2);\n+  }\n+\n+  private static final class Computer3 {\n+    @JsonAdapter(value = UserSerializerDeserializer.class, nullSafe = false) final User user1;\n+    @JsonAdapter(value = UserSerializerDeserializer.class) final User user2;\n+    Computer3(User user1, User user2) {\n+      this.user1 = user1;\n+      this.user2 = user2;\n+    }\n+  }\n }\n",
        "problem_statement": "JsonAdapter nullSafe parameter is ignored by JsonSerializer/JsonDeserializer type adapters\nHi there,\r\n\r\nIt looks like gson uses TreeTypeAdapter for JsonSerializer/JsonDeserializer type adapters.\r\nTreeTypeAdapter is always nullSafe, so nullSafe value of JsonAdapter annotation is ignored in this case which is at least confusing.\r\n\r\nI fixed this locally by adding nullSafe parameter to the TreeTypeAdapter and would love to submit a PR if it need be. Shall I go ahead?\r\n\r\nThanks!\n",
        "hints_text": "",
        "created_at": 1563529356000,
        "FAIL_TO_PASS": [
            "gson:com.google.gson.functional.JsonAdapterSerializerDeserializerTest"
        ],
        "PASS_TO_PASS": [],
        "version": "0.1",
        "pr_link": "https://github.com/google/gson/pull/1555"
    }
}