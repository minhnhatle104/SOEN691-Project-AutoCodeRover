{
    "task_id": "fasterxml__jackson-dataformat-xml-638",
    "setup_info": {
        "repo_path": "/Users/rabeyakhatunmuna/Documents/research/SOEN691-Project-AutoCodeRover/SWE-bench/testbed/fasterxml__jackson-dataformat-xml/setup_fasterxml__jackson-dataformat-xml__0.1",
        "env_name": "setup_fasterxml__jackson-dataformat-xml__0.1",
        "pre_install": [],
        "install": "mvn clean install -Dmaven.test.skip=true",
        "test_cmd": "mvn clean test src/test/java/com/fasterxml/jackson/dataformat/xml/ser/SerializationNameMergingTest.java"
    },
    "task_info": {
        "repo": "fasterxml/jackson-dataformat-xml",
        "pull_number": 638,
        "instance_id": "fasterxml__jackson-dataformat-xml-638",
        "issue_numbers": [
            "637"
        ],
        "base_commit": "ac00d648e9b424f4b6c4d7aaaa23abf50adc1b5a",
        "patch": "diff --git a/release-notes/VERSION-2.x b/release-notes/VERSION-2.x\nindex d2f7f756..9f5174b9 100644\n--- a/release-notes/VERSION-2.x\n+++ b/release-notes/VERSION-2.x\n@@ -16,6 +16,8 @@ Project: jackson-dataformat-xml\n   `XmlMapper.createParser(XMLStreamReader)` overloads\n #634: Support use of xsi:type for polymorphic deserialization\n   (FromXmlParser.Feature.AUTO_DETECT_XSI_TYPE)\n+#637: `JacksonXmlAnnotationIntrospector.findNamespace()` should\n+  properly merge namespace information\n * Upgrade Woodstox to 6.6.0 (latest at the time)\n \n 2.16.1 (24-Dec-2023)\ndiff --git a/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java\nindex a86914fc..144c4582 100644\n--- a/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java\n@@ -117,16 +117,27 @@ public PropertyName findRootName(AnnotatedClass ac)\n     @Override\n     public String findNamespace(MapperConfig<?> config, Annotated ann)\n     {\n-        JacksonXmlProperty prop = _findAnnotation(ann, JacksonXmlProperty.class);\n-        if (prop != null) {\n-            return prop.namespace();\n+        String ns1 = null;\n+        JacksonXmlProperty xmlProp = _findAnnotation(ann, JacksonXmlProperty.class);\n+        if (xmlProp != null) {\n+            ns1 = xmlProp.namespace();\n         }\n         // 14-Nov-2020, tatu: 2.12 adds namespace for this too\n         JsonProperty jprop = _findAnnotation(ann, JsonProperty.class);\n+        String ns2 = null;\n         if (jprop != null) {\n-            return jprop.namespace();\n+            ns2 = jprop.namespace();\n         }\n-        return null;\n+        if (ns1 == null) {\n+            return ns2;\n+        }\n+        if (ns2 == null) {\n+            return ns1;\n+        }\n+        if (ns1.isEmpty()) {\n+            return ns2;\n+        }\n+        return ns1;\n     }\n \n     /**\n",
        "test_patch": "diff --git a/src/test/java/com/fasterxml/jackson/dataformat/xml/ser/SerializationNameMergingTest.java b/src/test/java/com/fasterxml/jackson/dataformat/xml/ser/SerializationNameMergingTest.java\nnew file mode 100644\nindex 00000000..52759a71\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/dataformat/xml/ser/SerializationNameMergingTest.java\n@@ -0,0 +1,29 @@\n+package com.fasterxml.jackson.dataformat.xml.ser;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.XmlMapper;\n+import com.fasterxml.jackson.dataformat.xml.XmlTestBase;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+\n+// [dataformat-xml#637]\n+public class SerializationNameMergingTest extends XmlTestBase\n+{\n+    // [dataformat-xml#637]\n+    static class NamesBean {\n+        // XML annotations have precedence over default/standard/json ones\n+        // but local name, namespace should be merged\n+        @JsonProperty(value=\"value\", namespace=\"uri:ns1\")\n+        @JacksonXmlProperty(isAttribute=true)\n+        public int valueDefault = 42;\n+    }\n+\n+    private final XmlMapper MAPPER = newMapper();\n+\n+\n+    // [dataformat-xml#637]\n+    public void testNamespaceMerging637() throws Exception\n+    {\n+        assertEquals(a2q(\"<NamesBean xmlns:wstxns1='uri:ns1' wstxns1:value='42'/>\"),\n+                MAPPER.writeValueAsString(new NamesBean()));\n+    }\n+}\n",
        "problem_statement": "`JacksonXmlAnnotationIntrospector.findNamespace()` should properly merge namespace information\n(note: offshoot of #628)\r\n\r\nLooks like method `findNamepace()` in `JacksonXmlAnnotationIntrospector` is considering both `@JsonProperty` and `@JacksonXmlNamespace` (latter having precedence) but does not support case like so:\r\n\r\n```\r\n       @JsonProperty(value=\"value\", namespace=\"uri:ns1\")\r\n        @JacksonXmlProperty(isAttribute=true)\r\n        public int valueDefault = 42;\r\n```\r\n\r\nin which `@JacksonXmlProperty` does not define namespace (that is, is left as \"\", empty String).\r\nIn such case it should then return `namespace` value of `@JsonProperty` instead.\r\n\r\nIdeally in future we could simply use methods from `AnnotationIntrospection` -- `findNameForSerialization()` and `findNameForDeserializaiton` -- which also expose \"namespace\", but on short term let's handle merging better.\r\n\r\n\r\n\r\n\n",
        "hints_text": "",
        "created_at": 1707001857000,
        "FAIL_TO_PASS": [
            "src:com.fasterxml.jackson.dataformat.xml.ser.SerializationNameMergingTest"
        ],
        "PASS_TO_PASS": [],
        "version": "0.1",
        "pr_link": "https://github.com/fasterxml/jackson-dataformat-xml/pull/638"
    }
}