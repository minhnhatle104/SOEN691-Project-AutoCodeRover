{
    "task_id": "googlecontainertools__jib-4035",
    "setup_info": {
        "repo_path": "/Users/rabeyakhatunmuna/Documents/research/SOEN691-Project-AutoCodeRover/SWE-bench/testbed/googlecontainertools__jib/setup_googlecontainertools__jib__0.1",
        "env_name": "setup_googlecontainertools__jib__0.1",
        "pre_install": [],
        "install": "./gradlew clean build",
        "test_cmd": "./gradlew test jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java"
    },
    "task_info": {
        "repo": "googlecontainertools/jib",
        "pull_number": 4035,
        "instance_id": "googlecontainertools__jib-4035",
        "issue_numbers": [
            "4032"
        ],
        "base_commit": "934814cc5a2f8d22af8644aabe0d2a2e803818cd",
        "patch": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java\nindex 1b4acde65d..0fc0a219da 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java\n@@ -72,9 +72,9 @@ static Optional<RegistryAuthenticator> fromAuthenticationMethod(\n       @Nullable String userAgent,\n       FailoverHttpClient httpClient)\n       throws RegistryAuthenticationFailedException {\n-    // If the authentication method starts with 'basic ' (case insensitive), no registry\n+    // If the authentication method starts with 'basic' (case insensitive), no registry\n     // authentication is needed.\n-    if (authenticationMethod.matches(\"^(?i)(basic) .*\")) {\n+    if (authenticationMethod.matches(\"^(?i)(basic).*\")) {\n       return Optional.empty();\n     }\n \n",
        "test_patch": "diff --git a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java\nindex fad7c41fcf..0ce5be3dba 100644\n--- a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java\n+++ b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java\n@@ -16,6 +16,9 @@\n \n package com.google.cloud.tools.jib.registry;\n \n+import static com.google.common.truth.Truth.assertThat;\n+import static com.google.common.truth.Truth8.assertThat;\n+\n import com.google.cloud.tools.jib.api.Credential;\n import com.google.cloud.tools.jib.api.RegistryAuthenticationFailedException;\n import com.google.cloud.tools.jib.http.FailoverHttpClient;\n@@ -83,10 +86,11 @@ public void testFromAuthenticationMethod_bearer()\n                 \"user-agent\",\n                 httpClient)\n             .get();\n-    Assert.assertEquals(\n-        new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"),\n-        registryAuthenticator.getAuthenticationUrl(\n-            null, Collections.singletonMap(\"someimage\", \"scope\")));\n+    assertThat(\n+            registryAuthenticator.getAuthenticationUrl(\n+                null, Collections.singletonMap(\"someimage\", \"scope\")))\n+        .isEqualTo(\n+            new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"));\n \n     registryAuthenticator =\n         RegistryAuthenticator.fromAuthenticationMethod(\n@@ -95,10 +99,11 @@ public void testFromAuthenticationMethod_bearer()\n                 \"user-agent\",\n                 httpClient)\n             .get();\n-    Assert.assertEquals(\n-        new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"),\n-        registryAuthenticator.getAuthenticationUrl(\n-            null, Collections.singletonMap(\"someimage\", \"scope\")));\n+    assertThat(\n+            registryAuthenticator.getAuthenticationUrl(\n+                null, Collections.singletonMap(\"someimage\", \"scope\")))\n+        .isEqualTo(\n+            new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"));\n   }\n \n   @Test\n@@ -155,29 +160,34 @@ public void istAuthenticationUrl_oauth2() throws MalformedURLException {\n \n   @Test\n   public void testFromAuthenticationMethod_basic() throws RegistryAuthenticationFailedException {\n-    Assert.assertFalse(\n-        RegistryAuthenticator.fromAuthenticationMethod(\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n+                \"Basic\", registryEndpointRequestProperties, \"user-agent\", httpClient))\n+        .isEmpty();\n+\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n                 \"Basic realm=\\\"https://somerealm\\\",service=\\\"someservice\\\",scope=\\\"somescope\\\"\",\n                 registryEndpointRequestProperties,\n                 \"user-agent\",\n-                httpClient)\n-            .isPresent());\n+                httpClient))\n+        .isEmpty();\n \n-    Assert.assertFalse(\n-        RegistryAuthenticator.fromAuthenticationMethod(\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n                 \"BASIC realm=\\\"https://somerealm\\\",service=\\\"someservice\\\",scope=\\\"somescope\\\"\",\n                 registryEndpointRequestProperties,\n                 \"user-agent\",\n-                httpClient)\n-            .isPresent());\n+                httpClient))\n+        .isEmpty();\n \n-    Assert.assertFalse(\n-        RegistryAuthenticator.fromAuthenticationMethod(\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n                 \"bASIC realm=\\\"https://somerealm\\\",service=\\\"someservice\\\",scope=\\\"somescope\\\"\",\n                 registryEndpointRequestProperties,\n                 \"user-agent\",\n-                httpClient)\n-            .isPresent());\n+                httpClient))\n+        .isEmpty();\n   }\n \n   @Test\n",
        "problem_statement": "Jib authentification does not respect www-authenticate specification allowing Basic auth without specifying realm\n**Environment**:\r\n\r\n- *Jib version:* 3.3.2\r\n- *Build tool:* Gradle\r\n- *OS:* Macos Ventura 13.3.1\r\n\r\n**Description of the issue**:\r\nWhen trying to login to my self-hosted Docker registry, Jib fails with the following error:\r\n```\r\nCaused by: com.google.cloud.tools.jib.api.RegistryAuthenticationFailedException: Failed to authenticate with registry <my registry> because: 'Bearer' was not found in the 'WWW-Authenticate' header, tried to parse: Basic\r\n```\r\nHaving a look to `com.google.cloud.tools.jib.registry.RegistryAuthenticator#fromAuthenticationMethod` I see that regexp used to determine authentification method has a space before the `.*`. \r\n```java\r\nauthenticationMethod.matches(\"^(?i)(basic) .*\")\r\n```\r\nThis makes jib to fail to select auth method given header `WWW-Authenticate: Basic`\r\n\r\n**Expected behavior**:\r\nAccording to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/WWW-Authenticate#syntax it is allowed to use `WWW-Authenticate: Basic` without providing any realm/charset. Jib should allow that\r\n\r\n**Steps to reproduce**:\r\nTry to login to any registry responding with `WWW-Authenticate: Basic` header.\r\n\n",
        "hints_text": "",
        "created_at": 1685486209000,
        "FAIL_TO_PASS": [
            "jib-core:com.google.cloud.tools.jib.registry.RegistryAuthenticatorTest"
        ],
        "PASS_TO_PASS": [],
        "version": "0.1",
        "pr_link": "https://github.com/googlecontainertools/jib/pull/4035"
    }
}