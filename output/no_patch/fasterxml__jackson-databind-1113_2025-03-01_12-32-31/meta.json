{
    "task_id": "fasterxml__jackson-databind-1113",
    "setup_info": {
        "repo_path": "/Users/rabeyakhatunmuna/Documents/research/SOEN691-Project-AutoCodeRover/SWE-bench/testbed/fasterxml__jackson-databind/setup_fasterxml__jackson-databind__0.1",
        "env_name": "setup_fasterxml__jackson-databind__0.1",
        "pre_install": [],
        "install": "mvn clean install -Dmaven.test.skip=true",
        "test_cmd": "mvn clean test src/test/java/com/fasterxml/jackson/databind/deser/ExceptionFromCustomEnumKeyDeserializerTest.java"
    },
    "task_info": {
        "repo": "fasterxml/jackson-databind",
        "pull_number": 1113,
        "instance_id": "fasterxml__jackson-databind-1113",
        "issue_numbers": [
            "1112"
        ],
        "base_commit": "308ed4ed89b32d119b5994e457597275c6a0af7d",
        "patch": "diff --git a/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java b/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\nindex 0c091d9767..b7fcb3b34b 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n@@ -928,7 +928,7 @@ public JsonMappingException weirdNumberException(Number value, Class<?> instClas\n      */\n     public JsonMappingException weirdKeyException(Class<?> keyClass, String keyValue, String msg) {\n         return InvalidFormatException.from(_parser,\n-                String.format(\"Can not construct Map key of type %s from String \\\"%s\\\": \",\n+                String.format(\"Can not construct Map key of type %s from String \\\"%s\\\": %s\",\n                         keyClass.getName(), _desc(keyValue), msg),\n                 keyValue, keyClass);\n     }\n",
        "test_patch": "diff --git a/src/test/java/com/fasterxml/jackson/databind/deser/ExceptionFromCustomEnumKeyDeserializerTest.java b/src/test/java/com/fasterxml/jackson/databind/deser/ExceptionFromCustomEnumKeyDeserializerTest.java\nnew file mode 100644\nindex 0000000000..d303dcd033\n--- /dev/null\n+++ b/src/test/java/com/fasterxml/jackson/databind/deser/ExceptionFromCustomEnumKeyDeserializerTest.java\n@@ -0,0 +1,105 @@\n+/******************************************************************************\n+ * * This data and information is proprietary to, and a valuable trade secret\n+ * * of, Basis Technology Corp.  It is given in confidence by Basis Technology\n+ * * and may only be used as permitted under the license agreement under which\n+ * * it has been distributed, and in no other way.\n+ * *\n+ * * Copyright (c) 2015 Basis Technology Corporation All rights reserved.\n+ * *\n+ * * The technical data and information provided herein are provided with\n+ * * `limited rights', and the computer software provided herein is provided\n+ * * with `restricted rights' as those terms are defined in DAR and ASPR\n+ * * 7-104.9(a).\n+ ******************************************************************************/\n+\n+package com.fasterxml.jackson.databind.deser;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.DeserializationContext;\n+import com.fasterxml.jackson.databind.KeyDeserializer;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ *\n+ */\n+public class ExceptionFromCustomEnumKeyDeserializerTest {\n+    public enum AnEnum {\n+        ZERO,\n+        ONE\n+    }\n+\n+    public static class AnEnumDeserializer extends FromStringDeserializer<AnEnum> {\n+\n+        public AnEnumDeserializer() {\n+            super(AnEnum.class);\n+        }\n+\n+        //CHECKSTYLE:OFF\n+        @Override\n+        protected AnEnum _deserialize(String value, DeserializationContext ctxt) throws IOException {\n+            try {\n+                return AnEnum.valueOf(value);\n+            } catch (IllegalArgumentException e) {\n+                throw ctxt.weirdKeyException(AnEnum.class, value, \"Undefined AnEnum code\");\n+            }\n+        }\n+    }\n+\n+    public static class AnEnumKeyDeserializer extends KeyDeserializer {\n+\n+        @Override\n+        public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException {\n+            try {\n+                return AnEnum.valueOf(key);\n+            } catch (IllegalArgumentException e) {\n+                throw ctxt.weirdKeyException(AnEnum.class, key, \"Undefined AnEnum code\");\n+            }\n+        }\n+    }\n+\n+\n+    @JsonDeserialize(using = AnEnumDeserializer.class, keyUsing = AnEnumKeyDeserializer.class)\n+    public enum LanguageCodeMixin {\n+    }\n+\n+    public static class EnumModule extends SimpleModule {\n+\n+        public void setupModule(SetupContext context) {\n+            context.setMixInAnnotations(AnEnum.class, LanguageCodeMixin.class);\n+        }\n+\n+        /**\n+         * Register a Jackson module for Rosette's top-level enums an {@link ObjectMapper}.\n+         * @param mapper the mapper.\n+         * @return the same mapper, for convenience.\n+         */\n+        public static ObjectMapper setupObjectMapper(ObjectMapper mapper) {\n+            final EnumModule module = new EnumModule();\n+            mapper.registerModule(module);\n+            return mapper;\n+        }\n+    }\n+\n+    @Test\n+    public void lostMessage() {\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        objectMapper.registerModule(new EnumModule());\n+        try {\n+            objectMapper.readValue(\"{\\\"TWO\\\": \\\"dumpling\\\"}\", new TypeReference<Map<AnEnum, String>>() {});\n+        } catch (IOException e) {\n+            assertTrue(e.getMessage().contains(\"Undefined AnEnum\"));\n+            return;\n+        }\n+        fail(\"No exception\");\n+    }\n+}\n",
        "problem_statement": "Detailed error message from custom key deserializer is discarded\nThe PR I'm about to create shows what I'm talking about.\n\n",
        "hints_text": "",
        "created_at": 1454190854000,
        "FAIL_TO_PASS": [
            "src:com.fasterxml.jackson.databind.deser.ExceptionFromCustomEnumKeyDeserializerTest"
        ],
        "PASS_TO_PASS": [],
        "version": "0.1",
        "pr_link": "https://github.com/fasterxml/jackson-databind/pull/1113"
    }
}