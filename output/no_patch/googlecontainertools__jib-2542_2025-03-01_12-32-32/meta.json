{
    "task_id": "googlecontainertools__jib-2542",
    "setup_info": {
        "repo_path": "/Users/rabeyakhatunmuna/Documents/research/SOEN691-Project-AutoCodeRover/SWE-bench/testbed/googlecontainertools__jib/setup_googlecontainertools__jib__0.1",
        "env_name": "setup_googlecontainertools__jib__0.1",
        "pre_install": [],
        "install": "./gradlew clean build",
        "test_cmd": "./gradlew test jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java"
    },
    "task_info": {
        "repo": "googlecontainertools/jib",
        "pull_number": 2542,
        "instance_id": "googlecontainertools__jib-2542",
        "issue_numbers": [
            "2532"
        ],
        "base_commit": "4fd4650c2a8fcb4b13b60bdd3ff9449235bf02e8",
        "patch": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java\nindex eb010f0075..d04c2cb5f8 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java\n@@ -46,8 +46,8 @@\n class RegistryEndpointCaller<T> {\n \n   /**\n-   * <a\n-   * href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308</a>.\n+   * <a href =\n+   * \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308</a>.\n    */\n   @VisibleForTesting static final int STATUS_CODE_PERMANENT_REDIRECT = 308;\n \n@@ -188,22 +188,28 @@ RegistryErrorException newRegistryErrorException(ResponseException responseExcep\n     RegistryErrorExceptionBuilder registryErrorExceptionBuilder =\n         new RegistryErrorExceptionBuilder(\n             registryEndpointProvider.getActionDescription(), responseException);\n-\n-    try {\n-      ErrorResponseTemplate errorResponse =\n-          JsonTemplateMapper.readJson(responseException.getContent(), ErrorResponseTemplate.class);\n-      for (ErrorEntryTemplate errorEntry : errorResponse.getErrors()) {\n-        registryErrorExceptionBuilder.addReason(errorEntry);\n+    if (responseException.getContent() != null) {\n+      try {\n+        ErrorResponseTemplate errorResponse =\n+            JsonTemplateMapper.readJson(\n+                responseException.getContent(), ErrorResponseTemplate.class);\n+        for (ErrorEntryTemplate errorEntry : errorResponse.getErrors()) {\n+          registryErrorExceptionBuilder.addReason(errorEntry);\n+        }\n+      } catch (IOException ex) {\n+        registryErrorExceptionBuilder.addReason(\n+            \"registry returned error code \"\n+                + responseException.getStatusCode()\n+                + \"; possible causes include invalid or wrong reference. Actual error output follows:\\n\"\n+                + responseException.getContent()\n+                + \"\\n\");\n       }\n-    } catch (IOException ex) {\n+    } else {\n       registryErrorExceptionBuilder.addReason(\n           \"registry returned error code \"\n               + responseException.getStatusCode()\n-              + \"; possible causes include invalid or wrong reference. Actual error output follows:\\n\"\n-              + responseException.getContent()\n-              + \"\\n\");\n+              + \" but did not return any details; possible causes include invalid or wrong reference, or proxy/firewall/VPN interfering \\n\");\n     }\n-\n     return registryErrorExceptionBuilder.build();\n   }\n \n",
        "test_patch": "diff --git a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java\nindex 903198104f..afe384cb04 100644\n--- a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java\n+++ b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java\n@@ -435,6 +435,24 @@ public void testNewRegistryErrorException_nonJsonErrorOutput() {\n         registryException.getMessage());\n   }\n \n+  @Test\n+  public void testNewRegistryErrorException_noOutputFromRegistry() {\n+    ResponseException httpException = Mockito.mock(ResponseException.class);\n+    // Registry returning null error output\n+    Mockito.when(httpException.getContent()).thenReturn(null);\n+    Mockito.when(httpException.getStatusCode()).thenReturn(404);\n+\n+    RegistryErrorException registryException =\n+        endpointCaller.newRegistryErrorException(httpException);\n+    Assert.assertSame(httpException, registryException.getCause());\n+    Assert.assertEquals(\n+        \"Tried to actionDescription but failed because: registry returned error code 404 \"\n+            + \"but did not return any details; possible causes include invalid or wrong reference, or proxy/firewall/VPN interfering \\n\"\n+            + \" | If this is a bug, please file an issue at \"\n+            + \"https://github.com/GoogleContainerTools/jib/issues/new\",\n+        registryException.getMessage());\n+  }\n+\n   /**\n    * Verifies that a response with {@code httpStatusCode} throws {@link\n    * RegistryUnauthorizedException}.\n",
        "problem_statement": "NPE if the server doesn't provide any HTTP content for an error\nA user reported an NPE on the [Gitter channel](https://gitter.im/google/jib).\r\n\r\n```\r\nCaused by: java.lang.NullPointerException\r\n\tat com.fasterxml.jackson.core.JsonFactory.createParser(JsonFactory.java:889)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3005)\r\n\tat com.google.cloud.tools.jib.json.JsonTemplateMapper.readJson(JsonTemplateMapper.java:118)\r\n\tat com.google.cloud.tools.jib.json.JsonTemplateMapper.readJson (JsonTemplateMapper.java:118)\r\n\tat com.google.cloud.tools.jib.registry.RegistryEndpointCaller.newRegistryErrorException (RegistryEndpointCaller.java:194)\r\n```\r\n\r\nThe NPE is when there was an error communicating with the server. Jib tries to parse the content of the error message (supposed to be a JSON) from the server.\r\n```java\r\n      ErrorResponseTemplate errorResponse =\r\n          JsonTemplateMapper.readJson(responseException.getContent(), ErrorResponseTemplate.class);\r\n```\r\n\r\nI noticed that if we pass a null string, `JsonTemplateMapper.readJson()` throws NPE with the same stacktrace.\r\n```java\r\nJsonTemplateMapper.readJson((String) null, ErrorResponseTemplate.class);\r\n```\r\n\r\nTurns out `responseException.getContent()` can return null if there was no content from the server. The reason I think NullAway couldn't catch this is that the return value of `getContet()` basically comes from a method in the Google HTTP Client library.\n",
        "hints_text": "",
        "created_at": 1593204716000,
        "FAIL_TO_PASS": [
            "jib-core:com.google.cloud.tools.jib.registry.RegistryEndpointCallerTest"
        ],
        "PASS_TO_PASS": [],
        "version": "0.1",
        "pr_link": "https://github.com/googlecontainertools/jib/pull/2542"
    }
}