diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 7ef51bc847..5197a5258c 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -377,8 +377,14 @@ def hstack(cls, *args):
         if len(args) == 0:
             return cls._new()
 
-        kls = type(args[0])
-        return reduce(kls.row_join, args)
+        # Adjusted to handle zero-dimension matrices correctly
+        non_empty_matrices = [arg for arg in args if arg.rows != 0 or arg.cols != 0]
+        if not non_empty_matrices:
+            total_cols = sum(arg.cols for arg in args)
+            return cls._new(0, total_cols)
+
+        kls = type(non_empty_matrices[0])
+        return reduce(kls.row_join, non_empty_matrices)
 
     def reshape(self, rows, cols):
         """Reshape the matrix. Total number of elements must remain the same.
@@ -600,8 +606,14 @@ def vstack(cls, *args):
         if len(args) == 0:
             return cls._new()
 
-        kls = type(args[0])
-        return reduce(kls.col_join, args)
+        # Adjusted to handle zero-dimension matrices correctly
+        non_empty_matrices = [arg for arg in args if arg.rows != 0 or arg.cols != 0]
+        if not non_empty_matrices:
+            total_rows = sum(arg.rows for arg in args)
+            return cls._new(total_rows, 0)
+
+        kls = type(non_empty_matrices[0])
+        return reduce(kls.col_join, non_empty_matrices)
 
 
 class MatrixSpecial(MatrixRequired):
