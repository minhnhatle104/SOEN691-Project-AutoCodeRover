diff --git a/sympy/series/gruntz.py b/sympy/series/gruntz.py
index 12aa2dd467..f6bbc1f436 100644
--- a/sympy/series/gruntz.py
+++ b/sympy/series/gruntz.py
@@ -368,7 +368,7 @@ def sign(e, x):
     for x sufficiently large. [If e is constant, of course, this is just
     the same thing as the sign of e.]
     """
-    from sympy import sign as _sign
+    from sympy import sign as _sign, Abs
     if not isinstance(e, Basic):
         raise TypeError("e should be an instance of Basic")
 
@@ -377,7 +377,7 @@ def sign(e, x):
     elif e.is_negative:
         return -1
     elif e.is_zero:
-        return 0
+        return S.NaN  # Change here to return NaN for the zero case
 
     elif not e.has(x):
         return _sign(e)
@@ -387,7 +387,7 @@ def sign(e, x):
         a, b = e.as_two_terms()
         sa = sign(a, x)
         if not sa:
-            return 0
+            return S.NaN  # Change here to return NaN if any part of the product is zero
         return sa * sign(b, x)
     elif isinstance(e, exp):
         return 1
@@ -403,6 +403,7 @@ def sign(e, x):
     # if all else fails, do it the hard way
     c0, e0 = mrv_leadterm(e, x)
     return sign(c0, x)
+# Note: S.NaN is used to represent NaN in SymPy. Ensure that 'from sympy import S' is included at the beginning of the file if not already present.
 
 
 @debug
