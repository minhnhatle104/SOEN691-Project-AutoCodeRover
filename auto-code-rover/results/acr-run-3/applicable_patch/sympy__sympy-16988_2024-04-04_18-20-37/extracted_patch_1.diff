diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py
index 03cf57a30b..df087a33a6 100644
--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -1258,17 +1258,24 @@ def zero(self):
 
     def __new__(cls, *args, **kwargs):
         evaluate = kwargs.get('evaluate', global_evaluate[0])
-
+    
         # flatten inputs to merge intersections and iterables
         args = _sympify(args)
-
+    
+        # Remove duplicates and ensure args are unique
+        unique_args = []
+        for arg in args:
+            if arg not in unique_args:
+                unique_args.append(arg)
+        args = unique_args
+    
         # Reduce sets using known rules
         if evaluate:
             args = list(cls._new_args_filter(args))
             return simplify_intersection(args)
-
+    
         args = list(ordered(args, Set._infimum_key))
-
+    
         obj = Basic.__new__(cls, *args)
         obj._argset = frozenset(args)
         return obj
