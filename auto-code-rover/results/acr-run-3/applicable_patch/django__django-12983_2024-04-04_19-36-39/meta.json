{
    "task_id": "django__django-12983",
    "setup_info": {
        "repo_path": "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2",
        "env_name": "setup_django__django__3.2",
        "pre_install": [],
        "install": "python -m pip install -e .",
        "test_cmd": "./tests/runtests.py --verbosity 2 utils_tests.test_text"
    },
    "task_info": {
        "instance_id": "django__django-12983",
        "base_commit": "3bc4240d979812bd11365ede04c028ea13fdc8c6",
        "hints_text": "The current version of the patch converts all underscores to dashes which (as discussed on the PR) isn't an obviously desired change. A discussion is needed to see if there's consensus about that change.",
        "created_at": "2020-05-26T22:02:40Z",
        "test_patch": "diff --git a/tests/utils_tests/test_text.py b/tests/utils_tests/test_text.py\n--- a/tests/utils_tests/test_text.py\n+++ b/tests/utils_tests/test_text.py\n@@ -192,6 +192,13 @@ def test_slugify(self):\n             # given - expected - Unicode?\n             ('Hello, World!', 'hello-world', False),\n             ('spam & eggs', 'spam-eggs', False),\n+            (' multiple---dash and  space ', 'multiple-dash-and-space', False),\n+            ('\\t whitespace-in-value \\n', 'whitespace-in-value', False),\n+            ('underscore_in-value', 'underscore_in-value', False),\n+            ('__strip__underscore-value___', 'strip__underscore-value', False),\n+            ('--strip-dash-value---', 'strip-dash-value', False),\n+            ('__strip-mixed-value---', 'strip-mixed-value', False),\n+            ('_ -strip-mixed-value _-', 'strip-mixed-value', False),\n             ('spam & \u0131\u00e7\u00fc\u015f', 'spam-\u0131\u00e7\u00fc\u015f', True),\n             ('foo \u0131\u00e7 bar', 'foo-\u0131\u00e7-bar', True),\n             ('    foo \u0131\u00e7 bar', 'foo-\u0131\u00e7-bar', True),\n",
        "repo": "django/django",
        "problem_statement": "Make django.utils.text.slugify() strip dashes and underscores\nDescription\n\t \n\t\t(last modified by Elinaldo do Nascimento Monteiro)\n\t \nBug generation slug\nExample:\nfrom django.utils import text\ntext.slugify(\"___This is a test ---\")\noutput: ___this-is-a-test-\nImprovement after correction\nfrom django.utils import text\ntext.slugify(\"___This is a test ---\")\noutput: this-is-a-test\n\u200bPR\n",
        "version": "3.2",
        "FAIL_TO_PASS": [
            "test_slugify (utils_tests.test_text.TestUtilsText)"
        ],
        "PASS_TO_PASS": [
            "test_compress_sequence (utils_tests.test_text.TestUtilsText)",
            "test_format_lazy (utils_tests.test_text.TestUtilsText)",
            "test_get_text_list (utils_tests.test_text.TestUtilsText)",
            "test_get_valid_filename (utils_tests.test_text.TestUtilsText)",
            "test_normalize_newlines (utils_tests.test_text.TestUtilsText)",
            "test_phone2numeric (utils_tests.test_text.TestUtilsText)",
            "test_smart_split (utils_tests.test_text.TestUtilsText)",
            "test_truncate_chars (utils_tests.test_text.TestUtilsText)",
            "test_truncate_chars_html (utils_tests.test_text.TestUtilsText)",
            "test_truncate_html_words (utils_tests.test_text.TestUtilsText)",
            "test_truncate_words (utils_tests.test_text.TestUtilsText)",
            "test_unescape_entities (utils_tests.test_text.TestUtilsText)",
            "test_unescape_entities_deprecated (utils_tests.test_text.TestUtilsText)",
            "test_unescape_string_literal (utils_tests.test_text.TestUtilsText)",
            "test_wrap (utils_tests.test_text.TestUtilsText)"
        ],
        "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
        "patch": "diff --git a/django/utils/text.py b/django/utils/text.py\n--- a/django/utils/text.py\n+++ b/django/utils/text.py\n@@ -393,17 +393,18 @@ def unescape_string_literal(s):\n @keep_lazy_text\n def slugify(value, allow_unicode=False):\n     \"\"\"\n-    Convert to ASCII if 'allow_unicode' is False. Convert spaces to hyphens.\n-    Remove characters that aren't alphanumerics, underscores, or hyphens.\n-    Convert to lowercase. Also strip leading and trailing whitespace.\n+    Convert to ASCII if 'allow_unicode' is False. Convert spaces or repeated\n+    dashes to single dashes. Remove characters that aren't alphanumerics,\n+    underscores, or hyphens. Convert to lowercase. Also strip leading and\n+    trailing whitespace, dashes, and underscores.\n     \"\"\"\n     value = str(value)\n     if allow_unicode:\n         value = unicodedata.normalize('NFKC', value)\n     else:\n         value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')\n-    value = re.sub(r'[^\\w\\s-]', '', value.lower()).strip()\n-    return re.sub(r'[-\\s]+', '-', value)\n+    value = re.sub(r'[^\\w\\s-]', '', value.lower())\n+    return re.sub(r'[-\\s]+', '-', value).strip('-_')\n \n \n def camel_case_to_spaces(value):\n",
        "pr_link": "https://github.com/django/django/pull/12983"
    }
}