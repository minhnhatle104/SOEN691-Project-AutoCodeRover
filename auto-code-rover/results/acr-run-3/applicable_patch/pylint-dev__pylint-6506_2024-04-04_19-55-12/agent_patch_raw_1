# modification 1
```python
<file>pylint/config/config_initialization.py</file>
<original>if unrecognized_options:
    msg = ", ".join(unrecognized_options)
    linter.add_message("unrecognized-option", line=0, args=msg)
    raise _UnrecognizedOptionError(options=unrecognized_options)</original>
<patched>if unrecognized_options:
    msg = ", ".join(unrecognized_options)
    linter.add_message("unrecognized-option", line=0, args=msg)
    print(f"Unrecognized options: {msg}\nFor usage information, use --help")
    sys.exit(2)</patched>
```

This modification changes the behavior when unrecognized options are detected. Instead of raising `_UnrecognizedOptionError` which leads to a traceback, it now prints a message indicating the unrecognized options and suggests using `--help` for more information. It then exits the program with an exit code of 2, which is commonly used to indicate command line syntax errors. This approach aligns with the expected behavior described in the issue, providing a more user-friendly output when encountering unrecognized options.