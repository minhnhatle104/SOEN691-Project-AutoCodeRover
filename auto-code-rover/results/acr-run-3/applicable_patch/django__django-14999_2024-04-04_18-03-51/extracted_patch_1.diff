diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 982816be3a..b1f1f1065c 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -321,11 +321,15 @@ class RenameModel(ModelOperation):
         if self.allow_migrate_model(schema_editor.connection.alias, new_model):
             old_model = from_state.apps.get_model(app_label, self.old_name)
             # Move the main table
-            schema_editor.alter_db_table(
-                new_model,
-                old_model._meta.db_table,
-                new_model._meta.db_table,
-            )
+            # Check if db_table has been explicitly defined and skip if so
+            if old_model._meta.db_table == new_model._meta.db_table:
+                pass
+            else:
+                schema_editor.alter_db_table(
+                    new_model,
+                    old_model._meta.db_table,
+                    new_model._meta.db_table,
+                )
             # Alter the fields pointing to us
             for related_object in old_model._meta.related_objects:
                 if related_object.related_model == old_model:
@@ -354,11 +358,15 @@ class RenameModel(ModelOperation):
                 # Rename the M2M table that's based on this model's name.
                 old_m2m_model = old_field.remote_field.through
                 new_m2m_model = new_field.remote_field.through
-                schema_editor.alter_db_table(
-                    new_m2m_model,
-                    old_m2m_model._meta.db_table,
-                    new_m2m_model._meta.db_table,
-                )
+                # Check if M2M db_table has been explicitly defined and skip if so
+                if old_m2m_model._meta.db_table == new_m2m_model._meta.db_table:
+                    pass
+                else:
+                    schema_editor.alter_db_table(
+                        new_m2m_model,
+                        old_m2m_model._meta.db_table,
+                        new_m2m_model._meta.db_table,
+                    )
                 # Rename the column in the M2M table that's based on this
                 # model's name.
                 schema_editor.alter_field(
