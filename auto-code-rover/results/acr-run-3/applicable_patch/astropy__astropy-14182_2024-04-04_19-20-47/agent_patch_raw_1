# modification 1
```python
<file>astropy/io/ascii/rst.py</file>
<original>    def __init__(self):
        super().__init__(delimiter_pad=None, bookend=False)
</original>
<patched>    def __init__(self, header_rows=None):
        self.header_rows = header_rows if header_rows is not None else ["name"]
        super().__init__(delimiter_pad=None, bookend=False)</patched>
```

# modification 2
```python
<file>astropy/io/ascii/rst.py</file>
<original>    def write(self, lines):
        lines = super().write(lines)
        lines = [lines[1]] + lines + [lines[1]]
        return lines
</original>
<patched>    def write(self, lines):
        if self.header_rows:
            header_line = self.header_rows[0]  # Assuming the first row is the header for simplicity
            lines = [header_line] + lines + [header_line]
        else:
            lines = super().write(lines)
            lines = [lines[1]] + lines + [lines[1]]
        return lines</patched>
```

**Note**: The modifications assume a simplistic approach to handling `header_rows` in the `RST` class. The `write` method's patch, in particular, is a basic implementation that might need further refinement based on the specific requirements for handling multiple header rows or more complex scenarios. Additional adjustments may be necessary to fully integrate the `header_rows` functionality, including updating related methods or classes that interact with the `RST` class.