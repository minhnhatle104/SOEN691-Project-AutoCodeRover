diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py
index 8fe6e7a9c1..869c20047e 100644
--- a/lib/mpl_toolkits/mplot3d/art3d.py
+++ b/lib/mpl_toolkits/mplot3d/art3d.py
@@ -211,10 +211,17 @@ class Line3D(lines.Line2D):
 
     @artist.allow_rasterization
     def draw(self, renderer):
-        xs3d, ys3d, zs3d = self._verts3d
-        xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)
-        self.set_data(xs, ys)
-        super().draw(renderer)
+        # Check if _verts3d is set before attempting to access it
+        if hasattr(self, '_verts3d'):
+            xs3d, ys3d, zs3d = self._verts3d
+            xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M)
+            self.set_data(xs, ys)
+            super().draw(renderer)
+        else:
+            # Handle the case where _verts3d is not set. This could involve logging a warning
+            # and skipping the drawing of this particular Line3D object.
+            import warnings
+            warnings.warn("Attempted to draw Line3D object without setting _verts3d. Skipping drawing.")
         self.stale = False
 
 
