Given the nature of the issue described and without direct access to the actual Sphinx codebase or specific snippets where the `:inherited-members:` option is handled, I will provide a hypothetical patch based on a general understanding of how Sphinx and its `autodoc` extension might implement such a feature. This patch is conceptual and aims to illustrate the approach that could be taken to address the feature request.

### Modification 1: Extending `:inherited-members:` Option Parsing

Assuming the `:inherited-members:` option is parsed in a method responsible for handling autoclass directives within the `autodoc` extension.

```python
<file>sphinx/ext/autodoc/__init__.py</file>
<original>
if 'inherited-members' in self.options:
    self.options.inherited_members = True
</original>
<patched>
if 'inherited-members' in self.options:
    value = self.options.get('inherited-members')
    if isinstance(value, str):
        # Assuming the class names are separated by commas
        self.options.inherited_members = [cls.strip() for cls in value.split(',')]
    else:
        self.options.inherited_members = True  # Fallback to True for backward compatibility
</patched>
```

### Modification 2: Filtering Inherited Members Based on the Extended Option

Assuming there's a method that iterates over inherited members to decide whether to include them in the documentation. This patch adds logic to check against the list of classes specified in the `:inherited-members:` option.

```python
<file>sphinx/ext/autodoc/__init__.py</file>
<original>
for member in inherited_members:
    # Logic to include the member in the documentation
</original>
<patched>
ignored_bases = self.options.get('inherited_members', True)
if ignored_bases is not True:  # Check if it's a list of classes to ignore
    for member in inherited_members:
        if member.__class__.__name__ not in ignored_bases:
            # Logic to include the member in the documentation
else:
    for member in inherited_members:
        # Original logic to include the member in the documentation
</patched>
```

### Note:

These modifications are hypothetical and serve to illustrate a potential approach to implementing the requested feature. Actual implementation details may vary based on the current structure and implementation of the Sphinx `autodoc` extension. Developers aiming to implement this feature should review the latest Sphinx source code for accurate context and ensure compatibility with existing features and configurations.