{
    "task_id": "django__django-15902",
    "setup_info": {
        "repo_path": "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.2",
        "env_name": "setup_django__django__4.2",
        "pre_install": [],
        "install": "python -m pip install -e .",
        "test_cmd": "./tests/runtests.py --verbosity 2 forms_tests.tests.test_formsets"
    },
    "task_info": {
        "instance_id": "django__django-15902",
        "base_commit": "44c24bf02835323d5418512ebe8e76166739ebf8",
        "hints_text": "Thanks for the report. I think it's worth changing. As far as I'm aware, it's quite often that management form is the only one that users render with {{ form }}. It should also be quite easy to workaround: django/forms/formsets.py diff --git a/django/forms/formsets.py b/django/forms/formsets.py index 3adbc6979a..2bea2987be 100644 a b class ManagementForm(Form): 3131 new forms via JavaScript, you should increment the count field of this form 3232 as well. 3333 \"\"\" 34 template_name = \"django/forms/div.html\" # RemovedInDjango50Warning. 3435 3536 TOTAL_FORMS = IntegerField(widget=HiddenInput) 3637 INITIAL_FORMS = IntegerField(widget=HiddenInput)",
        "created_at": "2022-08-02T07:35:10Z",
        "test_patch": "diff --git a/tests/forms_tests/tests/test_formsets.py b/tests/forms_tests/tests/test_formsets.py\n--- a/tests/forms_tests/tests/test_formsets.py\n+++ b/tests/forms_tests/tests/test_formsets.py\n@@ -1910,3 +1910,14 @@ def test_warning(self):\n             ChoiceFormSet = formset_factory(Choice)\n             formset = ChoiceFormSet()\n             str(formset)\n+\n+    def test_no_management_form_warning(self):\n+        \"\"\"\n+        Management forms are already rendered with the new div template.\n+        \"\"\"\n+        with isolate_lru_cache(get_default_renderer), self.settings(\n+            FORM_RENDERER=\"django.forms.renderers.DjangoTemplates\"\n+        ):\n+            ChoiceFormSet = formset_factory(Choice, formset=BaseFormSet)\n+            formset = ChoiceFormSet()\n+            str(formset.management_form)\n",
        "repo": "django/django",
        "problem_statement": "\"default.html\" deprecation warning raised for ManagementForm's\nDescription\n\t\nI have a project where I never render forms with the {{ form }} expression. However, I'm still getting the new template deprecation warning because of the formset management form production, during which the template used is insignificant (only hidden inputs are produced).\nIs it worth special-casing this and avoid producing the warning for the management forms?\n",
        "version": "4.2",
        "FAIL_TO_PASS": [
            "Management forms are already rendered with the new div template."
        ],
        "PASS_TO_PASS": [
            "A FormSet can be prefilled with existing data by providing a list of",
            "A FormSet constructor takes the same arguments as Form. Create a",
            "A custom renderer passed to a formset_factory() is passed to all forms",
            "A form that's displayed as blank may be submitted as blank.",
            "A formset has a hard limit on the number of forms instantiated.",
            "A formset's ManagementForm is validated once per FormSet.is_valid()",
            "A formsets without any forms evaluates as True.",
            "A partially completed form is invalid.",
            "A valid formset should have 0 total errors.",
            "An empty formset still calls clean()",
            "Can get ordered_forms from a valid formset even if a deleted form",
            "Can increase the built-in forms limit via a higher max_num.",
            "Custom kwargs set on the formset instance are passed to the",
            "Deleting prefilled data is an error. Removing data from form fields",
            "Form kwargs can be passed dynamically in a formset.",
            "FormSet.has_changed() is True if any data is passed to its forms, even",
            "FormSets have a clean() hook for doing extra validation that isn't tied",
            "FormSets with ordering + deletion.",
            "Formset instances are iterable.",
            "Formset works with SplitDateTimeField(initial=datetime.datetime.now).",
            "Formset's forms use the formset's error_class.",
            "Formsets call is_valid() on each form.",
            "If a form is filled with something and can_delete is also checked, that",
            "If at least one field is filled out on a blank form, it will be",
            "If max_num is 0 then no form is rendered at all, regardless of extra,",
            "If non_form_errors() is called without calling is_valid() first,",
            "If validate_max is set and max_num is less than TOTAL_FORMS in the",
            "If validate_min is set and min_num is more than TOTAL_FORMS in the",
            "Just one form may be completed.",
            "Limiting the maximum number of forms with max_num.",
            "Media is available on empty formset.",
            "More initial forms than max_num results in all initial forms being",
            "More than 1 empty form can also be displayed using formset_factory's",
            "More than 1 empty form can be displayed using formset_factory's",
            "More than 1 empty form can be displayed using min_num.",
            "One form from initial and extra=3 with max_num=2 results in the one",
            "Ordering fields are allowed to be left blank. If they are left blank,",
            "Ordering works with blank fieldsets.",
            "The extra argument works when the formset is pre-filled with initial",
            "The management form class has field names matching the constants.",
            "The management form has the correct prefix.",
            "all_valid() validates all forms, even when some are invalid.",
            "deleted_forms works on a valid formset even if a deleted form would",
            "formset_factory's can_delete argument adds a boolean \"delete\" field to",
            "formset_factory's can_order argument adds an integer field to each",
            "is_multipart() works with an empty formset.",
            "max_num has no effect when extra is less than max_num.",
            "min_num validation doesn't consider unchanged forms with initial data",
            "test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_absolute_max_invalid (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_absolute_max_with_max_num (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_as_div (forms_tests.tests.test_formsets.FormsetAsTagTests)",
            "test_as_div (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)",
            "test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)",
            "test_as_p (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)",
            "test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)",
            "test_as_table (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)",
            "test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)",
            "test_as_ul (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests)",
            "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)",
            "test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_default_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)",
            "test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)",
            "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_form_kwargs_empty_form (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formset_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_html_safe (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_limited_max_forms_two (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)",
            "test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_max_num_with_initial_data (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_max_num_zero_with_initial (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)",
            "test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_repr (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_repr (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_template_name_can_be_overridden (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_template_name_can_be_overridden (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_valid (forms_tests.tests.test_formsets.AllValidTests)",
            "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)",
            "test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase)",
            "test_warning (forms_tests.tests.test_formsets.DeprecationTests)",
            "test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)"
        ],
        "environment_setup_commit": "0fbdb9784da915fce5dcc1fe82bac9b4785749e5",
        "patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -32,6 +32,8 @@ class ManagementForm(Form):\n     as well.\n     \"\"\"\n \n+    template_name = \"django/forms/div.html\"  # RemovedInDjango50Warning.\n+\n     TOTAL_FORMS = IntegerField(widget=HiddenInput)\n     INITIAL_FORMS = IntegerField(widget=HiddenInput)\n     # MIN_NUM_FORM_COUNT and MAX_NUM_FORM_COUNT are output with the rest of the\n",
        "pr_link": "https://github.com/django/django/pull/15902"
    }
}