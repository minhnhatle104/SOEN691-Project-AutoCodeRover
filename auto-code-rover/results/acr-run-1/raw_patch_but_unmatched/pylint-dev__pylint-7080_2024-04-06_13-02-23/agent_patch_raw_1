Given the context of the issue with `--recursive=y` ignoring `ignore-paths` in pylint and based on the general understanding of how pylint might process these options, I'll propose a hypothetical patch. This patch assumes that the issue might be due to the recursive option not properly integrating the `ignore-paths` configuration during the file discovery process. Please note, without direct access to the pylint codebase or specific implementation details, this patch is speculative and aims to illustrate a potential approach to resolving the described issue.

# modification 1
```python
<file>pylint/config/arguments_manager.py</file>
<original>
# This is a speculative original code snippet. The actual implementation may vary.
def parse_arguments(self, args):
    # Parsing command-line arguments
    self.recursive = args.recursive
    self.ignore_paths = args.ignore_paths
</original>
<patched>
# This patched code snippet assumes the addition of logic to ensure that ignore_paths is considered when recursive is enabled.
def parse_arguments(self, args):
    # Parsing command-line arguments
    self.recursive = args.recursive
    self.ignore_paths = args.ignore_paths
    if self.recursive:
        self.apply_ignore_paths(self.ignore_paths)
        
def apply_ignore_paths(self, ignore_paths):
    # This method needs to be implemented to filter out paths based on the ignore_paths configuration
    # when performing recursive file discovery.
    pass
</patched>
```

# modification 2
```python
<file>pylint/utils/utils.py</file>
<original>
# Again, this is a speculative original code snippet. The actual implementation details are unknown.
def discover_files(directory, recursive):
    # Code to discover files within the directory
    if recursive:
        # Recursive file discovery logic
</original>
<patched>
import re

def discover_files(directory, recursive, ignore_paths=None):
    # Enhanced code to discover files, now considering ignore_paths when recursive is true.
    if recursive:
        # Recursive file discovery logic
        if ignore_paths:
            compiled_ignore_paths = [re.compile(path) for path in ignore_paths]
            # Filter logic to exclude files and directories matching ignore_paths
            # This requires implementation based on how files and directories are discovered and listed.
</patched>
```

Please note, these modifications are based on hypothetical code structures and logic. The actual pylint codebase may have different structures, classes, and methods for handling these functionalities. Therefore, it's crucial to review the actual pylint source code to accurately identify where and how to implement the necessary changes. Additionally, testing the changes thoroughly in various scenarios is essential to ensure that the patch does not introduce new issues.