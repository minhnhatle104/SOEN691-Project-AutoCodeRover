diff --git a/sympy/geometry/util.py b/sympy/geometry/util.py
index d32adc3066..3cf3e0cb4b 100644
--- a/sympy/geometry/util.py
+++ b/sympy/geometry/util.py
@@ -565,16 +565,20 @@ def idiff(eq, y, x, n=1):
     sympy.core.function.diff: explicitly differentiates wrt symbols
 
     """
+    from sympy.core import Eq, Function
+    from sympy.core.symbol import Symbol
+    
+    if isinstance(eq, Eq):
+        eq = eq.lhs - eq.rhs  # Convert Eq to an expression
     if is_sequence(y):
         dep = set(y)
         y = y[0]
-    elif isinstance(y, Symbol):
+    elif isinstance(y, Symbol) or (hasattr(y, 'func') and issubclass(y.func, Function)):
         dep = {y}
     else:
         raise ValueError("expecting x-dependent symbol(s) but got: %s" % y)
 
-    f = dict([(s, Function(
-        s.name)(x)) for s in eq.free_symbols if s != x and s in dep])
+    f = dict([(s, Function(s.name)(x) if not hasattr(s, 'func') or not issubclass(s.func, Function) else s) for s in eq.free_symbols if s != x and s in dep])
     dydx = Function(y.name)(x).diff(x)
     eq = eq.subs(f)
     derivs = {}
