{
    "task_id": "sympy__sympy-13647",
    "setup_info": {
        "repo_path": "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.1",
        "env_name": "setup_sympy__sympy__1.1",
        "pre_install": [],
        "install": "python -m pip install -e .",
        "test_cmd": "bin/test -C --verbose sympy/matrices/tests/test_commonmatrix.py"
    },
    "task_info": {
        "instance_id": "sympy__sympy-13647",
        "base_commit": "67e3c956083d0128a621f65ee86a7dacd4f9f19f",
        "hints_text": "It seems that `pos` shouldn't be [here](https://github.com/sympy/sympy/blob/master/sympy/matrices/common.py#L89).",
        "created_at": "2017-11-28T21:22:51Z",
        "test_patch": "diff --git a/sympy/matrices/tests/test_commonmatrix.py b/sympy/matrices/tests/test_commonmatrix.py\n--- a/sympy/matrices/tests/test_commonmatrix.py\n+++ b/sympy/matrices/tests/test_commonmatrix.py\n@@ -200,6 +200,14 @@ def test_col_insert():\n         l = [0, 0, 0]\n         l.insert(i, 4)\n         assert flatten(zeros_Shaping(3).col_insert(i, c4).row(0).tolist()) == l\n+    # issue 13643\n+    assert eye_Shaping(6).col_insert(3, Matrix([[2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]])) == \\\n+           Matrix([[1, 0, 0, 2, 2, 0, 0, 0],\n+                   [0, 1, 0, 2, 2, 0, 0, 0],\n+                   [0, 0, 1, 2, 2, 0, 0, 0],\n+                   [0, 0, 0, 2, 2, 1, 0, 0],\n+                   [0, 0, 0, 2, 2, 0, 1, 0],\n+                   [0, 0, 0, 2, 2, 0, 0, 1]])\n \n def test_extract():\n     m = ShapingOnlyMatrix(4, 3, lambda i, j: i*3 + j)\n",
        "repo": "sympy/sympy",
        "problem_statement": "Matrix.col_insert() no longer seems to work correctly.\nExample:\r\n\r\n```\r\nIn [28]: import sympy as sm\r\n\r\nIn [29]: M = sm.eye(6)\r\n\r\nIn [30]: M\r\nOut[30]: \r\n\u23a11  0  0  0  0  0\u23a4\r\n\u23a2                \u23a5\r\n\u23a20  1  0  0  0  0\u23a5\r\n\u23a2                \u23a5\r\n\u23a20  0  1  0  0  0\u23a5\r\n\u23a2                \u23a5\r\n\u23a20  0  0  1  0  0\u23a5\r\n\u23a2                \u23a5\r\n\u23a20  0  0  0  1  0\u23a5\r\n\u23a2                \u23a5\r\n\u23a30  0  0  0  0  1\u23a6\r\n\r\nIn [31]: V = 2 * sm.ones(6, 2)\r\n\r\nIn [32]: V\r\nOut[32]: \r\n\u23a12  2\u23a4\r\n\u23a2    \u23a5\r\n\u23a22  2\u23a5\r\n\u23a2    \u23a5\r\n\u23a22  2\u23a5\r\n\u23a2    \u23a5\r\n\u23a22  2\u23a5\r\n\u23a2    \u23a5\r\n\u23a22  2\u23a5\r\n\u23a2    \u23a5\r\n\u23a32  2\u23a6\r\n\r\nIn [33]: M.col_insert(3, V)\r\nOut[33]: \r\n\u23a11  0  0  2  2  1  0  0\u23a4\r\n\u23a2                      \u23a5\r\n\u23a20  1  0  2  2  0  1  0\u23a5\r\n\u23a2                      \u23a5\r\n\u23a20  0  1  2  2  0  0  1\u23a5\r\n\u23a2                      \u23a5\r\n\u23a20  0  0  2  2  0  0  0\u23a5\r\n\u23a2                      \u23a5\r\n\u23a20  0  0  2  2  0  0  0\u23a5\r\n\u23a2                      \u23a5\r\n\u23a30  0  0  2  2  0  0  0\u23a6\r\nIn [34]: sm.__version__\r\nOut[34]: '1.1.1'\r\n```\r\n\r\nThe 3 x 3 identify matrix to the right of the columns of twos is shifted from the bottom three rows to the top three rows.\r\n\r\n@siefkenj Do you think this has to do with your matrix refactor?\n",
        "version": "1.1",
        "FAIL_TO_PASS": [
            "test_col_insert"
        ],
        "PASS_TO_PASS": [
            "test__MinimalMatrix",
            "test_abs",
            "test_add",
            "test_adjoint",
            "test_adjugate",
            "test_applyfunc",
            "test_as_real_imag",
            "test_atoms",
            "test_charpoly",
            "test_cofactor_and_minors",
            "test_col_join",
            "test_col_op",
            "test_columnspace",
            "test_conjugate",
            "test_det",
            "test_diag",
            "test_diagonal_symmetrical",
            "test_diagonalize",
            "test_div",
            "test_doit",
            "test_echelon_form",
            "test_eigenvals",
            "test_eigenvects",
            "test_evalf",
            "test_expand",
            "test_extract",
            "test_eye",
            "test_free_symbols",
            "test_get_diag_blocks1",
            "test_get_diag_blocks2",
            "test_has",
            "test_hstack",
            "test_integrate",
            "test_is_Identity",
            "test_is_anti_symmetric",
            "test_is_diagonalizable",
            "test_is_echelon",
            "test_is_hermitian",
            "test_is_hessenberg",
            "test_is_lower",
            "test_is_square",
            "test_is_symbolic",
            "test_is_symmetric",
            "test_is_upper",
            "test_is_zero",
            "test_jordan_block",
            "test_jordan_form",
            "test_left_eigenvects",
            "test_multiplication",
            "test_neg",
            "test_nullspace",
            "test_ones",
            "test_permute",
            "test_power",
            "test_replace",
            "test_replace_map",
            "test_reshape",
            "test_row_col",
            "test_row_col_del",
            "test_row_insert",
            "test_row_join",
            "test_row_op",
            "test_rowspace",
            "test_rref",
            "test_shape",
            "test_simplify",
            "test_singular_values",
            "test_sub",
            "test_subs",
            "test_tolist",
            "test_trace",
            "test_values",
            "test_vec",
            "test_vstack",
            "test_xreplace",
            "test_zeros"
        ],
        "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
        "patch": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -86,7 +86,7 @@ def entry(i, j):\n                 return self[i, j]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n-            return self[i, j - pos - other.cols]\n+            return self[i, j - other.cols]\n \n         return self._new(self.rows, self.cols + other.cols,\n                          lambda i, j: entry(i, j))\n",
        "pr_link": "https://github.com/sympy/sympy/pull/13647"
    }
}