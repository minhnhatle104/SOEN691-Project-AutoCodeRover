diff --git a/django/core/exceptions.py b/django/core/exceptions.py
index dc084b8692..879e310273 100644
--- a/django/core/exceptions.py
+++ b/django/core/exceptions.py
@@ -182,6 +182,25 @@ class ValidationError(Exception):
     def __repr__(self):
         return 'ValidationError(%s)' % self
 
+    def __eq__(self, other):
+        if not isinstance(other, ValidationError):
+            return NotImplemented
+
+        # Normalize self and other to compare dicts or lists directly
+        self_normalized = self.message_dict if hasattr(self, 'error_dict') else self.messages
+        other_normalized = other.message_dict if hasattr(other, 'error_dict') else other.messages
+
+        # Direct comparison if both are dicts
+        if isinstance(self_normalized, dict) and isinstance(other_normalized, dict):
+            return self_normalized == other_normalized
+
+        # Sort lists for comparison if both are lists, ensuring order does not affect equality
+        if isinstance(self_normalized, list) and isinstance(other_normalized, list):
+            return sorted(self_normalized, key=str) == sorted(other_normalized, key=str)
+
+        # Fallback for direct comparison
+        return self_normalized == other_normalized
+
 
 class EmptyResultSet(Exception):
     """A database query predicate is impossible."""
