diff --git a/django/contrib/admin/views/autocomplete.py b/django/contrib/admin/views/autocomplete.py
index 3903e4c98c..93da51e1b1 100644
--- a/django/contrib/admin/views/autocomplete.py
+++ b/django/contrib/admin/views/autocomplete.py
@@ -25,13 +25,26 @@ class AutocompleteJsonView(BaseListView):
         self.object_list = self.get_queryset()
         context = self.get_context_data()
         return JsonResponse({
-            'results': [
-                {'id': str(getattr(obj, to_field_name)), 'text': str(obj)}
-                for obj in context['object_list']
-            ],
+            'results': self.serialize_results(context['object_list'], to_field_name),
             'pagination': {'more': context['page_obj'].has_next()},
         })
 
+    def serialize_results(self, object_list, to_field_name):
+        """
+        Serialize the queryset to a list of dictionaries. This method can be
+        overridden to add extra fields in the autocomplete response.
+        """
+        return [
+            self.serialize_result(obj, to_field_name) for obj in object_list
+        ]
+
+    def serialize_result(self, obj, to_field_name):
+        """
+        Serialize an individual object to a dictionary. This method can be
+        overridden to customize the representation of individual objects.
+        """
+        return {'id': str(getattr(obj, to_field_name)), 'text': str(obj)}
+
     def get_paginator(self, *args, **kwargs):
         """Use the ModelAdmin's paginator."""
         return self.model_admin.get_paginator(self.request, *args, **kwargs)
