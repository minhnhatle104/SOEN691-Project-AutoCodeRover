# modification 1
```python
<file>django/db/models/sql/query.py</file>
<original>        condition = self.build_lookup(lookups, col, value)
        lookup_type = condition.lookup_name
        clause.add(condition, AND)

        require_outer = lookup_type == 'isnull' and condition.rhs is True and not current_negated</original>
<patched>        condition = self.build_lookup(lookups, col, value)
        lookup_type = condition.lookup_name
        # Ensure __isnull lookup uses boolean value
        if lookup_type == 'isnull' and not isinstance(value, bool):
            raise ValueError("__isnull lookup requires a boolean value.")
        clause.add(condition, AND)

        require_outer = lookup_type == 'isnull' and condition.rhs is True and not current_negated</patched>
```

# modification 2
```python
<file>django/db/models/lookups.py</file>
<original>    def get_prep_lookup(self):
        if hasattr(self.rhs, 'resolve_expression'):
            return self.rhs
        if self.prepare_rhs and hasattr(self.lhs.output_field, 'get_prep_value'):
            return self.lhs.output_field.get_prep_value(self.rhs)
        return self.rhs</original>
<patched>    def get_prep_lookup(self):
        if self.lookup_name == 'isnull' and not isinstance(self.rhs, bool):
            raise ValueError("__isnull lookup requires a boolean value.")
        if hasattr(self.rhs, 'resolve_expression'):
            return self.rhs
        if self.prepare_rhs and hasattr(self.lhs.output_field, 'get_prep_value'):
            return self.lhs.output_field.get_prep_value(self.rhs)
        return self.rhs</patched>
```

These modifications introduce checks to ensure that the `__isnull` lookup only accepts boolean values, addressing the issue described. The first modification is made in the `build_filter` method of the `Query` class, where the lookup is constructed and added to the query. The second modification is in the `Lookup` class's `get_prep_lookup` method, which prepares the right-hand side (rhs) of the lookup for processing. This ensures that the validation is applied both at the point of lookup construction and during the preparation of the lookup value.