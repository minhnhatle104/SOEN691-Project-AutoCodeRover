# modification 1
```python
<file>lib/matplotlib/figure.py</file>
<original>if (self.get_layout_engine() is not None and
                not self.get_layout_engine().adjust_compatible):
            _api.warn_external(
                "This figure was using a layout engine that is "
                "incompatible with subplots_adjust and/or tight_layout; "
                "not calling subplots_adjust.")
            return</original>
<patched>if (self.get_layout_engine() is not None and
                not self.get_layout_engine().adjust_compatible and
                self.get_constrained_layout()):
            _api.warn_external(
                "This figure was using a layout engine that is "
                "incompatible with subplots_adjust and/or tight_layout; "
                "not calling subplots_adjust.")
            return</patched>
```

**Explanation**: The patch adds a condition to check if `constrained_layout` is enabled (`self.get_constrained_layout()`) before issuing the warning. This ensures that the warning is only issued if the layout engine is incompatible with `subplots_adjust` or `tight_layout` **and** constrained layout is actually enabled. If `constrained_layout` is explicitly set to `False`, the warning will not be issued, addressing the issue described. Note that this solution assumes the existence of a method `get_constrained_layout()` that returns the state of `constrained_layout`. If such a method does not exist, it would need to be implemented or an equivalent way to check the `constrained_layout` state would need to be used.