# modification 1
```python
<file>sympy/printing/mathematica.py</file>
<original>    def _print_Function(self, expr):
        if expr.func.__name__ in self.known_functions:
            cond_mfunc = self.known_functions[expr.func.__name__]
            for cond, mfunc in cond_mfunc:
                if cond(*expr.args):
                    return "%s[%s]" % (mfunc, self.stringify(expr.args, ", "))
        return expr.func.__name__ + "[%s]" % self.stringify(expr.args, ", ")
</original>
<patched>    def _print_Function(self, expr):
        if expr.func.__name__ in self.known_functions:
            cond_mfunc = self.known_functions[expr.func.__name__]
            for cond, mfunc in cond_mfunc:
                if cond(*expr.args):
                    return "%s[%s]" % (mfunc, self.stringify(expr.args, ", "))
        # Check if the function is 'Max' and ensure correct ordering for Mathematica
        if expr.func.__name__ == 'Max':
            args_sorted = sorted(expr.args, key=lambda arg: str(arg))
            return expr.func.__name__ + "[%s]" % self.stringify(args_sorted, ", ")
        return expr.func.__name__ + "[%s]" % self.stringify(expr.args, ", ")
</patched>
```