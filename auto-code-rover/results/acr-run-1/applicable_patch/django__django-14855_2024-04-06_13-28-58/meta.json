{
    "task_id": "django__django-14855",
    "setup_info": {
        "repo_path": "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.0",
        "env_name": "setup_django__django__4.0",
        "pre_install": [],
        "install": "python -m pip install -e .",
        "test_cmd": "./tests/runtests.py --verbosity 2 admin_views.admin admin_views.tests"
    },
    "task_info": {
        "instance_id": "django__django-14855",
        "base_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
        "hints_text": "Hey Ken, yes seems right. Good spot. Looks like this should have been part of b79088306513d5ed76d31ac40ab3c15f858946ea for #31181 (which was Django 3.2) \u200bhere. However, I don't know if there are any side effects and I have not yet run the full suite of tests on this. Mostly looking for feedback whether I'm on the right track. I ran your suggestion against most of the usual suspects admin_* tests without issue so... Would you like to prepare a patch? Looks like setting up the test case is the most of it... Thanks!\nI'll be happy to try - but I'm not likely to be able to get to it before the weekend. (I don't know how \"urgent\" you consider it.) If it can sit that long, I'll see what I can do. (First \"real patch\" and all that - want to make sure I do it reasonably right.)\nHey Ken. Super thanks! Since it's a bug in a new feature it's marked as release blocker and will be backported to Django 3.2. We'll target \u200b3.2.8, which is slated for the beginning of October. If it gets close to that and you've not had time we can pick it up. Reach out on the Forum if you'd like input at all. \ud83d\ude42 Thanks! (And Welcome Aboard! \u26f5\ufe0f)\nHeyy folks, I wanted to assign the ticket to myself and fix the issue, instead it assigned the ownership to me. Apologies\nChanges ownership again.\nI found out that changes got accepted, sorry for the inconvenience caused.\nHi Abhijith \u2014 just to confirm, according to the discussion Ken is currently working on this ticket, so let's give him a window to do that before re-assigning it. Thanks! (I think that's the conclusion you came to, but just double-checking so you don't both work on the same ticket at the same time.)",
        "created_at": "2021-09-14T01:27:01Z",
        "test_patch": "diff --git a/tests/admin_views/admin.py b/tests/admin_views/admin.py\n--- a/tests/admin_views/admin.py\n+++ b/tests/admin_views/admin.py\n@@ -1142,6 +1142,8 @@ def get_formsets_with_inlines(self, request, obj=None):\n     raw_id_fields=['parent'],\n )\n site2.register(Person, save_as_continue=False)\n+site2.register(ReadOnlyRelatedField, ReadOnlyRelatedFieldAdmin)\n+site2.register(Language)\n \n site7 = admin.AdminSite(name=\"admin7\")\n site7.register(Article, ArticleAdmin2)\ndiff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py\n--- a/tests/admin_views/tests.py\n+++ b/tests/admin_views/tests.py\n@@ -5093,7 +5093,7 @@ def test_change_form_renders_correct_null_choice_value(self):\n         response = self.client.get(reverse('admin:admin_views_choice_change', args=(choice.pk,)))\n         self.assertContains(response, '<div class=\"readonly\">No opinion</div>', html=True)\n \n-    def test_readonly_foreignkey_links(self):\n+    def _test_readonly_foreignkey_links(self, admin_site):\n         \"\"\"\n         ForeignKey readonly fields render as links if the target model is\n         registered in admin.\n@@ -5110,10 +5110,10 @@ def test_readonly_foreignkey_links(self):\n             user=self.superuser,\n         )\n         response = self.client.get(\n-            reverse('admin:admin_views_readonlyrelatedfield_change', args=(obj.pk,)),\n+            reverse(f'{admin_site}:admin_views_readonlyrelatedfield_change', args=(obj.pk,)),\n         )\n         # Related ForeignKey object registered in admin.\n-        user_url = reverse('admin:auth_user_change', args=(self.superuser.pk,))\n+        user_url = reverse(f'{admin_site}:auth_user_change', args=(self.superuser.pk,))\n         self.assertContains(\n             response,\n             '<div class=\"readonly\"><a href=\"%s\">super</a></div>' % user_url,\n@@ -5121,7 +5121,7 @@ def test_readonly_foreignkey_links(self):\n         )\n         # Related ForeignKey with the string primary key registered in admin.\n         language_url = reverse(\n-            'admin:admin_views_language_change',\n+            f'{admin_site}:admin_views_language_change',\n             args=(quote(language.pk),),\n         )\n         self.assertContains(\n@@ -5132,6 +5132,12 @@ def test_readonly_foreignkey_links(self):\n         # Related ForeignKey object not registered in admin.\n         self.assertContains(response, '<div class=\"readonly\">Chapter 1</div>', html=True)\n \n+    def test_readonly_foreignkey_links_default_admin_site(self):\n+        self._test_readonly_foreignkey_links('admin')\n+\n+    def test_readonly_foreignkey_links_custom_admin_site(self):\n+        self._test_readonly_foreignkey_links('namespaced_admin')\n+\n     def test_readonly_manytomany_backwards_ref(self):\n         \"\"\"\n         Regression test for #16433 - backwards references for related objects\n",
        "repo": "django/django",
        "problem_statement": "Wrong URL generated by get_admin_url for readonly field in custom Admin Site\nDescription\n\t\nWhen a model containing a ForeignKey field is viewed (or edited) in a custom Admin Site, and that ForeignKey field is listed in readonly_fields, the url generated for the link is /admin/... instead of /custom-admin/....\nThis appears to be caused by the following line in django.contrib.admin.helpers get_admin_url:\nurl = reverse(url_name, args=[quote(remote_obj.pk)])\nOther parts of the admin use the current_app keyword parameter to identify the correct current name of the Admin Site. (See django.contrib.admin.options.ModelAdmin response_add as just one example)\nI have been able to correct this specific issue by replacing the above line with:\nurl = reverse(\n\turl_name,\n\targs=[quote(remote_obj.pk)],\n\tcurrent_app=self.model_admin.admin_site.name\n)\nHowever, I don't know if there are any side effects and I have not yet run the full suite of tests on this. Mostly looking for feedback whether I'm on the right track.\n",
        "version": "4.0",
        "FAIL_TO_PASS": [
            "test_readonly_foreignkey_links_custom_admin_site (admin_views.tests.ReadonlyTest)"
        ],
        "PASS_TO_PASS": [
            "#13749 - Admin should display link to front-end site 'View site'",
            "#21056 -- URL reversing shouldn't work for nonexistent apps.",
            "#8408 -- \"Show all\" should be displayed instead of the total count if",
            "'Save as new' should raise PermissionDenied for users without the 'add'",
            "'View on site should' work properly with char fields",
            "'save as' creates a new person",
            "A POST request to delete protected objects should display the page",
            "A custom template can be used to render an admin filter.",
            "A logged-in non-staff user trying to access the admin index should be",
            "A model with a character PK can be saved as inlines. Regression for #10992",
            "A model with a primary key that ends with add or is `add` should be visible",
            "A model with a primary key that ends with delete should be visible",
            "A model with a primary key that ends with history should be visible",
            "A model with an explicit autofield primary key can be saved as inlines. Regression for #8093",
            "A model with an integer PK can be saved as inlines. Regression for #10992",
            "A search that mentions sibling models",
            "A simple model can be saved as inlines",
            "A smoke test to ensure GET on the add_view works.",
            "A smoke test to ensure GET on the change_view works.",
            "A smoke test to ensure POST on add_view works.",
            "A smoke test to ensure POST on edit_view works.",
            "A test to ensure that POST on edit_view handles non-ASCII characters.",
            "Admin index views don't break when user's ModelAdmin removes standard urls",
            "An inherited model can be saved as inlines. Regression for #11042",
            "An inline with an editable ordering fields is updated correctly.",
            "As soon as an object is added using \"Save and continue editing\"",
            "AttributeErrors are allowed to bubble when raised inside a change list",
            "CSS class names are used for each app and model on the admin index",
            "Can reference a reverse OneToOneField in ModelAdmin.readonly_fields.",
            "Cells of the change list table should contain the field name in their class attribute",
            "Change view should restrict access and allow users to edit items.",
            "Changes to ManyToManyFields are included in the object's history.",
            "Check if the JavaScript i18n view returns an empty language catalog",
            "Check the never-cache status of a model add page",
            "Check the never-cache status of a model delete page",
            "Check the never-cache status of a model edit page",
            "Check the never-cache status of a model history page",
            "Check the never-cache status of a model index",
            "Check the never-cache status of an application index",
            "Check the never-cache status of login views",
            "Check the never-cache status of logout view",
            "Check the never-cache status of the JavaScript i18n view",
            "Check the never-cache status of the main index",
            "Check the never-cache status of the password change done view",
            "Check the never-cache status of the password change view",
            "Custom querysets are considered for the admin history view.",
            "Cyclic relationships should still cause each object to only be",
            "Delete view should restrict access and actually delete items.",
            "Ensure admin changelist filters do not contain objects excluded via limit_choices_to.",
            "Ensure app and model tag are correctly read by",
            "Ensure app and model tag are correctly read by app_index template",
            "Ensure app and model tag are correctly read by change_form template",
            "Ensure app and model tag are correctly read by change_list template",
            "Ensure app and model tag are correctly read by delete_confirmation",
            "Ensure http response from a popup is properly escaped.",
            "Ensure incorrect lookup parameters are handled gracefully.",
            "Ensure is_null is handled correctly.",
            "Ensure we can sort on a list_display field that is a Model method",
            "Ensure we can sort on a list_display field that is a ModelAdmin",
            "Ensure we can sort on a list_display field that is a ModelAdmin method",
            "Ensure we can sort on a list_display field that is a callable",
            "Ensures the admin changelist shows correct values in the relevant column",
            "Ensures the filter UI shows correctly when at least one named group has",
            "Fields have a CSS class name with a 'field-' prefix.",
            "Fields should not be list-editable in popups.",
            "GET on the change_view (for inherited models) redirects to the index",
            "GET on the change_view (when passing a string as the PK argument for a",
            "History view should restrict access.",
            "If a deleted object has GenericForeignKey with",
            "If a deleted object has GenericForeignKeys pointing to it,",
            "If a deleted object has two relationships from another model,",
            "If a deleted object has two relationships pointing to it from",
            "If a user has no module perms, the app list returns a 404.",
            "If has_module_permission() always returns False, the module shouldn't",
            "If no ordering is defined in `ModelAdmin.ordering` or in the query",
            "If you leave off the trailing slash, app should redirect and add it.",
            "In the case of an inherited model, if either the child or",
            "Inline file uploads correctly display prior data (#10002).",
            "Inline models which inherit from a common parent are correctly handled.",
            "InlineModelAdmin broken?",
            "Issue #20522",
            "Joins shouldn't be performed for <FK>_id fields in list display.",
            "Joins shouldn't be performed for <O2O>_id fields in list display.",
            "Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072",
            "Login redirect should be to the admin index page when going directly to",
            "Make sure only staff members can log in.",
            "Make sure that non-field readonly elements are properly autoescaped (#24461)",
            "Makes sure that the fallback language is still working properly",
            "ModelAdmin.changelist_view shouldn't result in a NoReverseMatch if url",
            "No date hierarchy links display with empty changelist.",
            "Non-field errors are displayed for each of the forms in the",
            "None is returned if model doesn't have get_absolute_url",
            "Object history button link should work and contain the pk value quoted.",
            "Objects should be nested to display the relationships that",
            "Only admin users should be able to use the admin shortcut view.",
            "Pagination works for list_editable items.",
            "Post-save message shouldn't contain a link to the change form if the",
            "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'",
            "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'. That",
            "Query expressions may be used for admin_order_field.",
            "Regression test for #13004",
            "Regression test for #15938: if USE_THOUSAND_SEPARATOR is set, make sure",
            "Regression test for #16433 - backwards references for related objects",
            "Regression test for #17911.",
            "Regression test for #19327",
            "Regression test for #22087 - ModelForm Meta overrides are ignored by",
            "Regression test for 14880",
            "Regression test for 20182",
            "Regression test for ticket 20664 - ensure the pk is properly quoted.",
            "Regressions test for ticket 15103 - filtering on fields defined in a",
            "Retrieving the history for an object using urlencoded form of primary",
            "Retrieving the object using urlencoded form of primary key should work",
            "Saving a new object using \"Save as new\" redirects to the changelist",
            "Should be able to \"Save as new\" while also deleting an inline.",
            "Should be able to use a ModelAdmin method in list_display that has the",
            "Similarly as test_pk_hidden_fields, but when the hidden pk fields are",
            "Single day-level date hierarchy appears for single object.",
            "Sort on a list_display field that is a property (column 10 is",
            "Staff_member_required decorator works with an argument",
            "Test \"save as\".",
            "Test add view restricts access and actually adds items.",
            "Test for ticket 2445 changes to admin.",
            "Test presence of reset link in search bar (\"1 result (_x total_)\").",
            "Tests if the \"change password\" link in the admin is hidden if the User",
            "The 'View on site' button is displayed if view_on_site is True",
            "The 'View on site' button is not displayed if view_on_site is False",
            "The 'show_delete' context variable in the admin's change view controls",
            "The JavaScript i18n view doesn't return localized date/time formats",
            "The admin shows default sort indicators for all kinds of 'ordering'",
            "The admin/change_form.html template uses block.super in the",
            "The admin/change_list.html' template uses block.super",
            "The admin/delete_confirmation.html template uses",
            "The admin/delete_selected_confirmation.html template uses",
            "The admin/index.html template uses block.super in the bodyclass block.",
            "The admin/login.html template uses block.super in the",
            "The behavior for setting initial form data can be overridden in the",
            "The change URL changed in Django 1.9, but the old one still redirects.",
            "The default behavior is followed if view_on_site is True",
            "The delete view allows users to delete collected objects without a",
            "The delete view uses ModelAdmin.get_deleted_objects().",
            "The delete_view handles non-ASCII characters",
            "The foreign key widget should only show the \"add related\" button if the",
            "The foreign key widget should only show the \"change related\" button if",
            "The foreign key widget should only show the \"delete related\" button if",
            "The link from the delete confirmation page referring back to the changeform of the object should be quoted",
            "The link from the recent actions list referring to the changeform of the object should be quoted",
            "The minified versions of the JS files are only used when DEBUG is False.",
            "The object should be read-only if the user has permission to view it",
            "The right link is displayed if view_on_site is a callable",
            "The to_field GET parameter is preserved when a search is performed.",
            "The view_on_site value is either a boolean or a callable",
            "User addition through a FK popup should return the appropriate JavaScript response.",
            "User change through a FK popup should return the appropriate JavaScript response.",
            "User deletion through a FK popup should return the appropriate JavaScript response.",
            "User has view and add permissions on the inline model.",
            "User has view and delete permissions on the inline model.",
            "User with add permission to a section but view-only for inlines.",
            "User with change permission to a section but view-only for inlines.",
            "Validate that a custom ChangeList class can be used (#9749)",
            "When you click \"Save as new\" and have a validation error,",
            "change_view has form_url in response.context",
            "day-level links appear for changelist within single month.",
            "has_module_permission() returns True for all users who",
            "hidden pk fields aren't displayed in the table body and their",
            "month-level links appear for changelist within single year.",
            "test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)",
            "test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)",
            "test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)",
            "test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_add_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_add_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)",
            "test_all_fields_hidden (admin_views.tests.TestLabelVisibility)",
            "test_all_fields_visible (admin_views.tests.TestLabelVisibility)",
            "test_app_index_context (admin_views.tests.AdminViewBasicTest)",
            "test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_beginning_matches (admin_views.tests.AdminSearchTest)",
            "test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)",
            "test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)",
            "test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)",
            "test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)",
            "test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)",
            "test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)",
            "test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)",
            "test_change_password_template (admin_views.tests.AdminCustomTemplateTests)",
            "test_change_view (admin_views.tests.AdminCustomQuerysetTest)",
            "test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_change_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)",
            "test_change_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_change_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_changelist_input_html (admin_views.tests.AdminViewListEditable)",
            "test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)",
            "test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)",
            "test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)",
            "test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)",
            "test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)",
            "test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)",
            "test_custom_pk (admin_views.tests.AdminViewListEditable)",
            "test_date_hierarchy_empty_queryset (admin_views.tests.AdminViewBasicTest)",
            "test_date_hierarchy_local_date_differ_from_utc (admin_views.tests.AdminViewBasicTest)",
            "test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)",
            "test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)",
            "test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)",
            "test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)",
            "test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)",
            "test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)",
            "test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)",
            "test_display_decorator_with_boolean_and_empty_value (admin_views.tests.AdminViewBasicTest)",
            "test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)",
            "test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)",
            "test_exact_matches (admin_views.tests.AdminSearchTest)",
            "test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)",
            "test_filters (admin_views.tests.AdminDocsTest)",
            "test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)",
            "test_form_url_present_in_context (admin_views.tests.UserAdminTest)",
            "test_formset_kwargs_can_be_overridden (admin_views.tests.AdminViewBasicTest)",
            "test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)",
            "test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)",
            "test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)",
            "test_group_permission_performance (admin_views.tests.GroupAdminTest)",
            "test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)",
            "test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)",
            "test_inheritance (admin_views.tests.AdminViewListEditable)",
            "test_inheritance_2 (admin_views.tests.AdminViewListEditable)",
            "test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)",
            "test_known_url_missing_slash_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_known_url_missing_slash_redirects_with_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_known_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_known_url_redirects_login_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_label_suffix_translated (admin_views.tests.ReadonlyTest)",
            "test_lang_name_present (admin_views.tests.ValidXHTMLTests)",
            "test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)",
            "test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)",
            "test_list_editable_ordering (admin_views.tests.AdminViewListEditable)",
            "test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)",
            "test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)",
            "test_logout (admin_views.tests.AdminViewLogoutTests)",
            "test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)",
            "test_message_debug (admin_views.tests.AdminUserMessageTest)",
            "test_message_error (admin_views.tests.AdminUserMessageTest)",
            "test_message_extra_tags (admin_views.tests.AdminUserMessageTest)",
            "test_message_info (admin_views.tests.AdminUserMessageTest)",
            "test_message_success (admin_views.tests.AdminUserMessageTest)",
            "test_message_warning (admin_views.tests.AdminUserMessageTest)",
            "test_missing_slash_append_slash_false (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_false_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true_force_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true_non_staff_user (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true_unknown_url (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true_unknown_url_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_missing_slash_append_slash_true_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_mixin (admin_views.tests.TestLabelVisibility)",
            "test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)",
            "test_non_admin_url_404_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_non_admin_url_shares_url_prefix (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_non_admin_url_shares_url_prefix_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_non_form_errors (admin_views.tests.AdminViewListEditable)",
            "test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)",
            "test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)",
            "test_password_mismatch (admin_views.tests.UserAdminTest)",
            "test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)",
            "test_pluggable_search (admin_views.tests.AdminSearchTest)",
            "test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)",
            "test_post_messages (admin_views.tests.AdminViewListEditable)",
            "test_post_submission (admin_views.tests.AdminViewListEditable)",
            "test_prepopulated_off (admin_views.tests.PrePopulatedTest)",
            "test_prepopulated_on (admin_views.tests.PrePopulatedTest)",
            "test_protected (admin_views.tests.AdminViewDeletedObjectsTest)",
            "test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)",
            "test_readonly_foreignkey_links_default_admin_site (admin_views.tests.ReadonlyTest)",
            "test_readonly_get (admin_views.tests.ReadonlyTest)",
            "test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)",
            "test_readonly_post (admin_views.tests.ReadonlyTest)",
            "test_readonly_text_field (admin_views.tests.ReadonlyTest)",
            "test_related_field (admin_views.tests.DateHierarchyTests)",
            "test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)",
            "test_render_views_no_subtitle (admin_views.tests.AdminViewBasicTest)",
            "test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)",
            "test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)",
            "test_save_add_another_button (admin_views.tests.UserAdminTest)",
            "test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)",
            "test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)",
            "test_save_button (admin_views.tests.GroupAdminTest)",
            "test_save_button (admin_views.tests.UserAdminTest)",
            "test_save_continue_editing_button (admin_views.tests.UserAdminTest)",
            "test_search_with_spaces (admin_views.tests.AdminSearchTest)",
            "test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)",
            "test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)",
            "test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)",
            "test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)",
            "test_single_model_no_append_slash (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)",
            "test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)",
            "test_tags (admin_views.tests.AdminDocsTest)",
            "test_unknown_url_404_if_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_unknown_url_404_if_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_unknown_url_404_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_unknown_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_unkown_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_unkown_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)",
            "test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)",
            "test_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)",
            "test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)",
            "test_user_permission_performance (admin_views.tests.UserAdminTest)",
            "test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)",
            "test_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)",
            "year-level links appear for year-spanning changelist."
        ],
        "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
        "patch": "diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py\n--- a/django/contrib/admin/helpers.py\n+++ b/django/contrib/admin/helpers.py\n@@ -209,7 +209,11 @@ def get_admin_url(self, remote_field, remote_obj):\n             remote_field.model._meta.model_name,\n         )\n         try:\n-            url = reverse(url_name, args=[quote(remote_obj.pk)])\n+            url = reverse(\n+                url_name,\n+                args=[quote(remote_obj.pk)],\n+                current_app=self.model_admin.admin_site.name,\n+            )\n             return format_html('<a href=\"{}\">{}</a>', url, remote_obj)\n         except NoReverseMatch:\n             return str(remote_obj)\n",
        "pr_link": "https://github.com/django/django/pull/14855"
    }
}