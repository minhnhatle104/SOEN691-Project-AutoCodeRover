# modification 1
```python
<file>django/db/models/sql/query.py</file>
<original>    elif isinstance(value, (list, tuple)):
            # The items of the iterable may be expressions and therefore need
            # to be resolved independently.
            return type(value)(
                self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                for sub_value in value
            )</original>
<patched>    elif isinstance(value, (list, tuple)):
            # The items of the iterable may be expressions and therefore need
            # to be resolved independently.
            # Check if the value is a named tuple by checking for the '_fields' attribute
            if hasattr(value, '_fields'):
                # For named tuples, expand the resolved items into the constructor
                return type(value)(*(
                    self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                    for sub_value in value
                ))
            else:
                # For regular tuples and lists, keep the original behavior
                return type(value)(
                    self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                    for sub_value in value
                )</patched>
```