diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index 95302a05ca..b9355dc1b1 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -162,9 +162,19 @@ def structurally_equal(self, other):
             and self.colblocksizes == other.colblocksizes)
 
     def _blockmul(self, other):
+        from sympy.matrices.expressions import ZeroMatrix
         if (isinstance(other, BlockMatrix) and
                 self.colblocksizes == other.rowblocksizes):
-            return BlockMatrix(self.blocks*other.blocks)
+            # Initialize an empty matrix for the result blocks
+            result_blocks = [[None for _ in range(len(other.colblocksizes))] for _ in range(len(self.rowblocksizes))]
+            for i in range(len(self.rowblocksizes)):
+                for j in range(len(other.colblocksizes)):
+                    # Initialize the block as a ZeroMatrix with appropriate dimensions
+                    result_blocks[i][j] = ZeroMatrix(self.rowblocksizes[i], other.colblocksizes[j])
+                    for k in range(len(self.colblocksizes)):
+                        # Perform block multiplication and add to the current block
+                        result_blocks[i][j] += self.blocks[i, k] * other.blocks[k, j]
+            return BlockMatrix(result_blocks)
 
         return self * other
 
