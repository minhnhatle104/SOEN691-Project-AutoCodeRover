# modification 1
```python
<file>requests/models.py</file>
<original>if decode_unicode:
    chunks = stream_decode_response_unicode(chunks, self)</original>
<patched>if decode_unicode:
    encoding = self.encoding if self.encoding is not None else 'utf-8'
    chunks = (chunk.decode(encoding) if isinstance(chunk, bytes) else chunk for chunk in chunks)</patched>
```

Explanation:
The original code attempts to decode the chunks using a function `stream_decode_response_unicode`, which is not detailed in the provided context. The issue reported is that `iter_content(decode_unicode=True)` is returning bytes instead of unicode strings. The patch changes the behavior to explicitly decode each chunk using the response's encoding if it is set, or default to 'utf-8'. This ensures that each chunk is indeed returned as a unicode string when `decode_unicode` is set to `True`, aligning the behavior more closely with the user's expectations and the behavior of the `text` property. This patch assumes that the encoding detection logic (similar to what is used in the `text` property) is adequately handled elsewhere in the `Response` class, specifically in setting `self.encoding`.