diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py
index 3e5e729c2..734cbd54a 100644
--- a/sklearn/neighbors/base.py
+++ b/sklearn/neighbors/base.py
@@ -327,6 +327,12 @@ class KNeighborsMixin(object):
 
         if n_neighbors is None:
             n_neighbors = self.n_neighbors
+        else:
+            # Ensure n_neighbors is an integer
+            try:
+                n_neighbors = int(n_neighbors)
+            except ValueError:
+                raise ValueError("n_neighbors must be an integer or convertible to an integer")
 
         if X is not None:
             query_is_train = False
diff --git a/sklearn/neighbors/unsupervised.py b/sklearn/neighbors/unsupervised.py
index db19e8df6..c2482998c 100644
--- a/sklearn/neighbors/unsupervised.py
+++ b/sklearn/neighbors/unsupervised.py
@@ -113,11 +113,16 @@ class NearestNeighbors(NeighborsBase, KNeighborsMixin,
     """
 
     def __init__(self, n_neighbors=5, radius=1.0,
-                 algorithm='auto', leaf_size=30, metric='minkowski',
-                 p=2, metric_params=None, n_jobs=1, **kwargs):
-        super(NearestNeighbors, self).__init__(
-              n_neighbors=n_neighbors,
-              radius=radius,
-              algorithm=algorithm,
-              leaf_size=leaf_size, metric=metric, p=p,
-              metric_params=metric_params, n_jobs=n_jobs, **kwargs)
+                     algorithm='auto', leaf_size=30, metric='minkowski',
+                     p=2, metric_params=None, n_jobs=1, **kwargs):
+            # Ensure n_neighbors is an integer
+            try:
+                n_neighbors = int(n_neighbors)
+            except ValueError:
+                raise ValueError("n_neighbors must be an integer or convertible to an integer")
+            super(NearestNeighbors, self).__init__(
+                  n_neighbors=n_neighbors,
+                  radius=radius,
+                  algorithm=algorithm,
+                  leaf_size=leaf_size, metric=metric, p=p,
+                  metric_params=metric_params, n_jobs=n_jobs, **kwargs)
