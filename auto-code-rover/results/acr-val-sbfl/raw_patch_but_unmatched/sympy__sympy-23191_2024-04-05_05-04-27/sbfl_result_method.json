[
    [
        "sympy/concrete/expr_with_limits.py",
        "",
        "_common_new",
        1.0
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "",
        "_process_limits",
        1.0
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "AddWithLimits",
        "__new__",
        1.0
    ],
    [
        "sympy/core/add.py",
        "",
        "_unevaluated_Add",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_positive",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_negative",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "fromiter",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "atoms",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_dummy",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_xreplace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has_free",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "matches",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "match",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "doit",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "rewrite",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_rewrite",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_eval_rewrite",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "xreplace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "doit",
        1.0
    ],
    [
        "sympy/core/cache.py",
        "",
        "__cacheit",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__getitem__",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "bitcount",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "pure_complex",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "iszero",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "complex_accuracy",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "add_terms",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_add",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "_create_evalf_table",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "sort_key",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rsub__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_poly",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getO",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "count_ops",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "args_cnc",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "coeff",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coefficient",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_independent",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_powers_dict",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_multiplicatively",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_rational_function",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_rational_function",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_expand_hint",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "_coeff_isneg",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_is_commutative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "__new__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_eval_is_commutative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "doit",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "expr",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "variable_count",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "count_ops",
        1.0
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_not",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "",
        "_unevaluated_Mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "class_key",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_derivative_n_times",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_matches_simple",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "matches",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_combine_inverse",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_powers_dict",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_composite",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__add__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__gt__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__add__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__add__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__sub__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Zero",
        "__neg__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "__abs__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "_eval_evalf",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Pi",
        "_as_mpf_val",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "ImaginaryUnit",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "ImaginaryUnit",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_matches_commutative",
        1.0
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_eval_evalf",
        1.0
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "doit",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_exp",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "matches",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Unequality",
        "__new__",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_neq",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Str",
        "__new__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Str",
        "_hashable_content",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sanitize",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__new__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "__new__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "__xnew__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "_hashable_content",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "matches",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "",
        "symbols",
        1.0
    ],
    [
        "sympy/core/traversal.py",
        "",
        "iterfreeargs",
        1.0
    ],
    [
        "sympy/core/traversal.py",
        "preorder_traversal",
        "_preorder_traversal",
        1.0
    ],
    [
        "sympy/core/traversal.py",
        "preorder_traversal",
        "skip",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "",
        "piecewise_fold",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_eval_is_rational",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "",
        "_peeloff_pi",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "",
        "_pi_coeff",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "fdiff",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_is_extended_real",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_is_finite",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_is_complex",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_rewrite_as_sincos",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_is_extended_real",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_is_finite",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_is_complex",
        1.0
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "components",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "_symbols",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "heurisch_wrapper",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "__init__",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "_create_table",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "diffs",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "has",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "DiffCache",
        "__init__",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "DiffCache",
        "get_diff",
        1.0
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "heurisch",
        1.0
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "__new__",
        1.0
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "doit",
        1.0
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "_eval_integral",
        1.0
    ],
    [
        "sympy/integrals/integrals.py",
        "",
        "integrate",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "Rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "evaluates",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "contains_dont_know",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "manual_diff",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "manual_subs",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "find_substitutions",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "rewriter",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "proxy_rewriter",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "multiplexer",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "alternatives",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "constant_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "power_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "exp_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "orthogonal_poly_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "special_function_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "inverse_trig_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "add_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "mul_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "_parts_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "parts_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_product_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "quadratic_denom_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "root_mul_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "make_wilds",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "sincos_pattern",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "tansec_pattern",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "cotcsc_pattern",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "heaviside_pattern",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "uncurry",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_rewriter",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_sincos_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_tansec_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_cotcsc_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_sindouble_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_powers_products_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "trig_substitution_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "heaviside_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "substitution_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "derivative_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "rewrites_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "fallback_rule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "integral_steps",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_constant",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_constanttimes",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_power",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_exp",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_add",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_u",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_parts",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_cyclicparts",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_trig",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_arctan",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_arccoth",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_arctanh",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_reciprocal",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_arcsin",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_inversehyperbolic",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_alternative",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_rewrite",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_piecewise",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_trigsubstitution",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_derivativerule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_heaviside",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_jacobi",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_gegenbauer",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_chebyshevt",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_chebyshevu",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_legendre",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_hermite",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_laguerre",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_assoclaguerre",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_ci",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_chi",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_ei",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_si",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_shi",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_erf",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_fresnelc",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_fresnels",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_li",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_polylog",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_uppergamma",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_elliptic_f",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_elliptic_e",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "eval_dontknowrule",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "_manualintegrate",
        1.0
    ],
    [
        "sympy/integrals/manualintegrate.py",
        "",
        "manualintegrate",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integer_powers",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__init__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__getattr__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_rewrite_exps_pows",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_rewrite_logs",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_auto_attrs",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_exp_part",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_log_part",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_important_attrs",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__repr__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__str__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__eq__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "reset",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "indices",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "increment_level",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "decrement_level",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "update_sets",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DecrementLevel",
        "__init__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DecrementLevel",
        "__enter__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "DecrementLevel",
        "__exit__",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "gcdex_diophantine",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "frac_in",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "as_poly_1t",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "derivation",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "get_case",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "splitfactor",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "splitfactor_sqf",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "canonical_representation",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "hermite_reduce",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "polynomial_reduce",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "laurent_series",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "recognize_derivative",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "recognize_log_derivative",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "residue_reduce",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "residue_reduce_to_basic",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "residue_reduce_derivation",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_primitive_polynomial",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_primitive",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_hyperexponential_polynomial",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_hyperexponential",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_hypertangent_polynomial",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_nonlinear_no_specials",
        1.0
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "risch_integrate",
        1.0
    ],
    [
        "sympy/integrals/trigonometry.py",
        "",
        "_integer_instance",
        1.0
    ],
    [
        "sympy/integrals/trigonometry.py",
        "",
        "_pat_sincos",
        1.0
    ],
    [
        "sympy/integrals/trigonometry.py",
        "",
        "trigintegrate",
        1.0
    ],
    [
        "sympy/matrices/common.py",
        "MatrixSpecial",
        "eye",
        1.0
    ],
    [
        "sympy/matrices/dense.py",
        "",
        "eye",
        1.0
    ],
    [
        "sympy/matrices/immutable.py",
        "ImmutableRepMatrix",
        "__new__",
        1.0
    ],
    [
        "sympy/matrices/immutable.py",
        "ImmutableDenseMatrix",
        "_new",
        1.0
    ],
    [
        "sympy/matrices/immutable.py",
        "ImmutableDenseMatrix",
        "_fromrep",
        1.0
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "_handle_creation_inputs",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "RepMatrix",
        "flat",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "RepMatrix",
        "_eval_eye",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        1.0
    ],
    [
        "sympy/polys/domains/expressionrawdomain.py",
        "ExpressionRawDomain",
        "convert_from",
        1.0
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "to_sympy",
        1.0
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "to_sympy",
        1.0
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "to_list_flat",
        1.0
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "eye",
        1.0
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "to_list_flat",
        1.0
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "eye",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "preprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__new__",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_expr",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr",
        1.0
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_Mul",
        1.0
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "stack",
        1.0
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "prettyForm",
        "__truediv__",
        1.0
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "prettyForm",
        "__mul__",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Mul",
        1.0
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_pre",
        1.0
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_post",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "signsimp",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_dups",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "iterable",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "is_sequence",
        1.0
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "__truediv__",
        1.0
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "_eval_Integral",
        1.0
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "doit",
        1.0
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependentAdd",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependentMul",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "_get_lame_coeff",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "base_scalars",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "lame_coefficients",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "__init__",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "_compose_rotation_and_translation",
        1.0
    ],
    [
        "sympy/vector/coordsysrect.py",
        "",
        "_check_strings",
        1.0
    ],
    [
        "sympy/vector/deloperator.py",
        "Del",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/deloperator.py",
        "Del",
        "cross",
        1.0
    ],
    [
        "sympy/vector/operators.py",
        "",
        "_get_coord_systems",
        1.0
    ],
    [
        "sympy/vector/operators.py",
        "",
        "curl",
        1.0
    ],
    [
        "sympy/vector/point.py",
        "Point",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/scalar.py",
        "BaseScalar",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/scalar.py",
        "BaseScalar",
        "free_symbols",
        1.0
    ],
    [
        "sympy/vector/vector.py",
        "Vector",
        "dot",
        1.0
    ],
    [
        "sympy/vector/vector.py",
        "Vector",
        "_projections",
        1.0
    ],
    [
        "sympy/vector/vector.py",
        "Vector",
        "_div_helper",
        1.0
    ],
    [
        "sympy/vector/vector.py",
        "BaseVector",
        "__new__",
        1.0
    ],
    [
        "sympy/vector/vector.py",
        "",
        "dot",
        1.0
    ],
    [
        "sympy/assumptions/wrapper.py",
        "AssumptionsWrapper",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_derivative",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_nonnegative",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_nonpositive",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "as_property",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "ManagedProperties",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "",
        "as_Basic",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "func",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "subs",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "replace",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_eval_derivative_n_times",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "",
        "_aresame",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__iter__",
        0.7071067811865475
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        0.7071067811865475
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_pow",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__pow__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__truediv__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rtruediv__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_positive_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "diff",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_derivative_n_times",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_should_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_sort_variable_count",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_get_zero_with_shape_like",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_dispatch_eval_derivative_n_times",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "_derivative_dispatch",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_real",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_hermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcd",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_as_mpf_op",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_op",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_Frel",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__lt__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__truediv__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_as_mpf_val",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__abs__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__divmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__gt__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__index__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NegativeOne",
        "__abs__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_even",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_real",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_prime",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_composite",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "Equality",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_eq",
        0.7071067811865475
    ],
    [
        "sympy/core/sorting.py",
        "",
        "_node_count",
        0.7071067811865475
    ],
    [
        "sympy/core/sorting.py",
        "",
        "_nodes",
        0.7071067811865475
    ],
    [
        "sympy/core/sorting.py",
        "",
        "ordered",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_diff_wrt",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new_stage2__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_is_numpy_instance",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        0.7071067811865475
    ],
    [
        "sympy/core/traversal.py",
        "preorder_traversal",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/traversal.py",
        "preorder_traversal",
        "__next__",
        0.7071067811865475
    ],
    [
        "sympy/core/traversal.py",
        "preorder_traversal",
        "__iter__",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "cond",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/repmatrix.py",
        "RepMatrix",
        "_dod_to_DomainMatrix",
        0.7071067811865475
    ],
    [
        "sympy/matrices/repmatrix.py",
        "RepMatrix",
        "_flat_list_to_DomainMatrix",
        0.7071067811865475
    ],
    [
        "sympy/matrices/repmatrix.py",
        "MutableRepMatrix",
        "_fromrep",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/core.py",
        "",
        "dispatch",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "__call__",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "dispatch",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "dispatch_iter",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert_from",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "from_ExpressionRawDomain",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "from_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "from_rep",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "convert_to",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "convert_to",
        0.7071067811865475
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "",
        "unop_dict",
        0.7071067811865475
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Mul",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_use_unicode",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "doprint",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_Symbol",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_BasisDependent",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_Function",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_helper_print_function",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_Pow",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "__print_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_Rational",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "PrettyPrinter",
        "_print_seq",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty.py",
        "",
        "pretty",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "pretty_use_unicode",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "xobj",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "vobj",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "hobj",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "xsym",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "pretty_symbol",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/pretty_symbology.py",
        "",
        "line_width",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "equalLengths",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "height",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "width",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "next",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "right",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "left",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "above",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "parens",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "render",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "stringPict",
        "__getitem__",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "prettyForm",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/printing/pretty/stringpict.py",
        "prettyForm",
        "__pow__",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "parenthesize",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "stringify",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Function",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Pow",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Integer",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "sift",
        0.7071067811865475
    ],
    [
        "sympy/utilities/misc.py",
        "",
        "as_int",
        0.7071067811865475
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependentMul",
        "_sympystr",
        0.7071067811865475
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependentZero",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/vector/coordsysrect.py",
        "CoordSys3D",
        "base_vectors",
        0.7071067811865475
    ],
    [
        "sympy/vector/scalar.py",
        "BaseScalar",
        "_pretty",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.5773502691896258
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        0.5773502691896258
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_positive",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_negative",
        0.5773502691896258
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_bool",
        0.5773502691896258
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_and",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "class_key",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "__neg__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.5773502691896258
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "ExpMeta",
        "__instancecheck__",
        0.5773502691896258
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/printing/conventions.py",
        "",
        "split_super_sub",
        0.5773502691896258
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Integer",
        0.5773502691896258
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence",
        0.5773502691896258
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Symbol",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "_infimum_key",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "__contains__",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_contains",
        0.5773502691896258
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependentZero",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/vector/scalar.py",
        "BaseScalar",
        "_sympystr",
        0.5773502691896258
    ],
    [
        "conftest.py",
        "",
        "pytest_runtest_setup",
        0.5
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "function",
        0.5
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "limits",
        0.5
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "free_symbols",
        0.5
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "is_number",
        0.5
    ],
    [
        "sympy/core/_print_helpers.py",
        "Printable",
        "__str__",
        0.5
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_do_eq_sympify",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "free_symbols",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "xreplace",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_exec_constructor_postprocessors",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "class_key",
        0.5
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__len__",
        0.5
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.5
    ],
    [
        "sympy/core/decorators.py",
        "_SympifyWrapper",
        "make_wrapped",
        0.5
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf",
        0.5
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "evalf",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_hashable_content",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__radd__",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__mul__",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_number",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_base_exp",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_Mul",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        0.5
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "__init__",
        0.5
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "nargs",
        0.5
    ],
    [
        "sympy/core/function.py",
        "Application",
        "func",
        0.5
    ],
    [
        "sympy/core/function.py",
        "Function",
        "class_key",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "could_extract_minus_sign",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "__neg__",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_ordered_factors",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mpf_norm",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__mul__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__new__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_new",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_hashable_content",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__eq__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mul__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_coeff_Mul",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_as_mpf_val",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__neg__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__radd__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Zero",
        "__bool__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "NegativeOne",
        "__neg__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__eq__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__eq__",
        0.5
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "make_args",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "base",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "exp",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        0.5
    ],
    [
        "sympy/core/sorting.py",
        "",
        "default_sort_key",
        0.5
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "free_symbols",
        0.5
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.5
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_sympify",
        0.5
    ],
    [
        "sympy/core/traversal.py",
        "",
        "iterargs",
        0.5
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "free_symbols",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_get_initial_settings",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "order",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "_PrintFunction",
        "__call__",
        0.5
    ],
    [
        "sympy/printing/str.py",
        "",
        "sstr",
        0.5
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "__add__",
        0.5
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "__mul__",
        0.5
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependent",
        "as_coeff_Mul",
        0.5
    ],
    [
        "sympy/vector/basisdependent.py",
        "BasisDependentZero",
        "__add__",
        0.5
    ],
    [
        "sympy/vector/vector.py",
        "Vector",
        "components",
        0.5
    ],
    [
        "sympy/vector/vector.py",
        "Vector",
        "separate",
        0.5
    ],
    [
        "sympy/vector/vector.py",
        "BaseVector",
        "system",
        0.5
    ],
    [
        "sympy/vector/vector.py",
        "BaseVector",
        "_sympystr",
        0.5
    ],
    [
        "sympy/vector/vector.py",
        "VectorAdd",
        "__new__",
        0.5
    ],
    [
        "sympy/vector/vector.py",
        "VectorMul",
        "__new__",
        0.5
    ]
]