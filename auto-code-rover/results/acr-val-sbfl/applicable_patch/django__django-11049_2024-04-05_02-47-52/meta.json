{
    "task_id": "django__django-11049",
    "setup_info": {
        "repo_path": "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.0",
        "env_name": "setup_django__django__3.0",
        "pre_install": [],
        "install": "python -m pip install -e .",
        "test_cmd": "./tests/runtests.py --verbosity 2 model_fields.test_durationfield"
    },
    "task_info": {
        "instance_id": "django__django-11049",
        "base_commit": "17455e924e243e7a55e8a38f45966d8cbb27c273",
        "hints_text": "",
        "created_at": "2019-03-03T09:56:16Z",
        "test_patch": "diff --git a/tests/model_fields/test_durationfield.py b/tests/model_fields/test_durationfield.py\n--- a/tests/model_fields/test_durationfield.py\n+++ b/tests/model_fields/test_durationfield.py\n@@ -75,7 +75,7 @@ def test_invalid_string(self):\n         self.assertEqual(\n             cm.exception.message % cm.exception.params,\n             \"'not a datetime' value has an invalid format. \"\n-            \"It must be in [DD] [HH:[MM:]]ss[.uuuuuu] format.\"\n+            \"It must be in [DD] [[HH:]MM:]ss[.uuuuuu] format.\"\n         )\n \n \n",
        "repo": "django/django",
        "problem_statement": "Correct expected format in invalid DurationField error message\nDescription\n\t\nIf you enter a duration \"14:00\" into a duration field, it translates to \"00:14:00\" which is 14 minutes.\nThe current error message for invalid DurationField says that this should be the format of durations: \"[DD] [HH:[MM:]]ss[.uuuuuu]\". But according to the actual behaviour, it should be: \"[DD] [[HH:]MM:]ss[.uuuuuu]\", because seconds are mandatory, minutes are optional, and hours are optional if minutes are provided.\nThis seems to be a mistake in all Django versions that support the DurationField.\nAlso the duration fields could have a default help_text with the requested format, because the syntax is not self-explanatory.\n",
        "version": "3.0",
        "FAIL_TO_PASS": [
            "test_invalid_string (model_fields.test_durationfield.TestValidation)"
        ],
        "PASS_TO_PASS": [
            "test_create_empty (model_fields.test_durationfield.TestSaveLoad)",
            "test_dumping (model_fields.test_durationfield.TestSerialization)",
            "test_exact (model_fields.test_durationfield.TestQuerying)",
            "test_formfield (model_fields.test_durationfield.TestFormField)",
            "test_fractional_seconds (model_fields.test_durationfield.TestSaveLoad)",
            "test_gt (model_fields.test_durationfield.TestQuerying)",
            "test_loading (model_fields.test_durationfield.TestSerialization)",
            "test_simple_roundtrip (model_fields.test_durationfield.TestSaveLoad)"
        ],
        "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
        "patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1587,7 +1587,7 @@ class DurationField(Field):\n     empty_strings_allowed = False\n     default_error_messages = {\n         'invalid': _(\"'%(value)s' value has an invalid format. It must be in \"\n-                     \"[DD] [HH:[MM:]]ss[.uuuuuu] format.\")\n+                     \"[DD] [[HH:]MM:]ss[.uuuuuu] format.\")\n     }\n     description = _(\"Duration\")\n \n",
        "pr_link": "https://github.com/django/django/pull/11049"
    }
}