diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 978fd5df8..59d26f040 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1240,8 +1240,8 @@ class FunctionDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # typ
 
     def format_signature(self, **kwargs: Any) -> str:
         sigs = []
-        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads:
-            # Use signatures for overloaded functions instead of the implementation function.
+        if self.analyzer and '.'.join(self.objpath) in self.analyzer.overloads and self.env.config.autodoc_typehints != 'none':
+            # Use signatures for overloaded functions instead of the implementation function, respecting the autodoc_typehints setting.
             overloaded = True
         else:
             overloaded = False
diff --git a/sphinx/ext/autodoc/typehints.py b/sphinx/ext/autodoc/typehints.py
index 4f81a6eae..f93e75f7a 100644
--- a/sphinx/ext/autodoc/typehints.py
+++ b/sphinx/ext/autodoc/typehints.py
@@ -41,8 +41,13 @@ def record_typehints(app: Sphinx, objtype: str, name: str, obj: Any,
 def merge_typehints(app: Sphinx, domain: str, objtype: str, contentnode: Element) -> None:
     if domain != 'py':
         return
-    if app.config.autodoc_typehints != 'description':
+    if app.config.autodoc_typehints == 'none':
+        # Skip processing typehints if autodoc_typehints is set to 'none'
         return
+    elif app.config.autodoc_typehints != 'description':
+        # Additional logic here to handle overloaded functions when autodoc_typehints is not 'none'
+        # This is a placeholder for potential logic adjustment
+        pass
     if objtype == 'class' and app.config.autoclass_content not in ('init', 'both'):
         return
 
