diff --git a/src/_pytest/mark/evaluate.py b/src/_pytest/mark/evaluate.py
index 759191668..1cedf6d6d 100644
--- a/src/_pytest/mark/evaluate.py
+++ b/src/_pytest/mark/evaluate.py
@@ -21,13 +21,17 @@ evalcache_key = StoreKey[Dict[str, Any]]()
 def cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any:
     default = {}  # type: Dict[str, object]
     evalcache = config._store.setdefault(evalcache_key, default)
+    # Generate a unique key based on the expression and the globals dict
+    import hashlib
+    d_hash = hashlib.md5(str(sorted(d.items())).encode()).hexdigest()
+    cache_key = f"{expr}:{d_hash}"
     try:
-        return evalcache[expr]
+        return evalcache[cache_key]
     except KeyError:
         import _pytest._code
 
         exprcode = _pytest._code.compile(expr, mode="eval")
-        evalcache[expr] = x = eval(exprcode, d)
+        evalcache[cache_key] = x = eval(exprcode, d)
         return x
 
 
