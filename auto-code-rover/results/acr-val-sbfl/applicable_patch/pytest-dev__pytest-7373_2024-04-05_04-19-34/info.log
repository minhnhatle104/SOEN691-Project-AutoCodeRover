2024-04-05 04:19:34 ========== Running task pytest-dev__pytest-7373 (relative counter in this run: 179/300) ==========
2024-04-05 04:19:34 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; python -m pip install -e . ; conda deactivate
2024-04-05 04:19:37 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; python -m pip install xmlrunner coverage pytest pytest-cov ; conda deactivate
2024-04-05 04:19:46 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; python -m pytest --cov --cov-context=test  -rA testing/test_mark.py ; conda deactivate
2024-04-05 04:19:56 SBFL result (lines): [('src/_pytest/_code/source.py', 195, 196, 1.0), ('src/_pytest/_code/source.py', 198, 202, 1.0), ('src/_pytest/_code/source.py', 205, 207, 1.0), ('src/_pytest/_code/source.py', 220, 220, 1.0), ('src/_pytest/_code/source.py', 223, 224, 1.0), ('src/_pytest/_code/source.py', 226, 227, 1.0), ('src/_pytest/_code/source.py', 269, 269, 1.0), ('src/_pytest/_code/source.py', 275, 277, 1.0), ('src/_pytest/assertion/__init__.py', 145, 152, 1.0), ('src/_pytest/assertion/rewrite.py', 439, 442, 1.0), ('src/_pytest/assertion/rewrite.py', 444, 445, 1.0), ('src/_pytest/assertion/rewrite.py', 447, 447, 1.0), ('src/_pytest/assertion/rewrite.py', 479, 484, 1.0), ('src/_pytest/assertion/truncate.py', 25, 26, 1.0), ('src/_pytest/assertion/truncate.py', 34, 35, 1.0), ('src/_pytest/assertion/truncate.py', 40, 41, 1.0), ('src/_pytest/assertion/truncate.py', 56, 59, 1.0), ('src/_pytest/assertion/truncate.py', 62, 64, 1.0), ('src/_pytest/assertion/util.py', 54, 58, 1.0), ('src/_pytest/assertion/util.py', 73, 77, 1.0), ('src/_pytest/assertion/util.py', 86, 86, 1.0), ('src/_pytest/assertion/util.py', 91, 96, 1.0), ('src/_pytest/assertion/util.py', 124, 126, 1.0), ('src/_pytest/assertion/util.py', 168, 168, 1.0), ('src/_pytest/assertion/util.py', 180, 181, 1.0), ('src/_pytest/assertion/util.py', 187, 190, 1.0), ('src/_pytest/assertion/util.py', 268, 269, 1.0), ('src/_pytest/assertion/util.py', 373, 379, 1.0), ('src/_pytest/assertion/util.py', 383, 390, 1.0), ('src/_pytest/assertion/util.py', 398, 400, 1.0), ('src/_pytest/assertion/util.py', 408, 408, 1.0), ('src/_pytest/faulthandler.py', 114, 114, 1.0), ('src/_pytest/faulthandler.py', 116, 116, 1.0), ('src/_pytest/mark/evaluate.py', 22, 27, 1.0), ('src/_pytest/mark/evaluate.py', 29, 31, 1.0), ('src/_pytest/mark/evaluate.py', 77, 80, 1.0), ('src/_pytest/mark/evaluate.py', 97, 101, 1.0), ('src/_pytest/mark/evaluate.py', 129, 131, 1.0), ('src/_pytest/mark/evaluate.py', 134, 134, 1.0), ('src/_pytest/pytester.py', 594, 594, 1.0), ('src/_pytest/reports.py', 286, 287, 1.0), ('src/_pytest/store.py', 110, 114, 1.0), ('src/_pytest/terminal.py', 401, 408, 1.0), ('src/_pytest/assertion/__init__.py', 142, 143, 0.7071067811865475), ('src/_pytest/assertion/__init__.py', 182, 182, 0.7071067811865475), ('src/_pytest/assertion/rewrite.py', 474, 476, 0.7071067811865475), ('src/_pytest/assertion/util.py', 100, 100, 0.7071067811865475), ('src/_pytest/assertion/util.py', 104, 104, 0.7071067811865475), ('src/_pytest/assertion/util.py', 108, 108, 0.7071067811865475), ('src/_pytest/assertion/util.py', 112, 112, 0.7071067811865475), ('src/_pytest/assertion/util.py', 133, 134, 0.7071067811865475), ('src/_pytest/assertion/util.py', 140, 144, 0.7071067811865475), ('src/_pytest/assertion/util.py', 146, 146, 0.7071067811865475), ('src/_pytest/assertion/util.py', 148, 151, 0.7071067811865475), ('src/_pytest/assertion/util.py', 165, 165, 0.7071067811865475), ('src/_pytest/assertion/util.py', 172, 173, 0.7071067811865475), ('src/_pytest/assertion/util.py', 176, 176, 0.7071067811865475), ('src/_pytest/assertion/util.py', 178, 178, 0.7071067811865475), ('src/_pytest/mark/evaluate.py', 111, 115, 0.7071067811865475), ('src/_pytest/mark/evaluate.py', 124, 124, 0.7071067811865475), ('src/_pytest/mark/evaluate.py', 126, 126, 0.7071067811865475), ('src/_pytest/outcomes.py', 65, 66, 0.7071067811865475), ('src/_pytest/outcomes.py', 142, 143, 0.7071067811865475), ('src/_pytest/pytester.py', 335, 336, 0.7071067811865475), ('src/_pytest/reports.py', 310, 313, 0.7071067811865475), ('src/_pytest/runner.py', 192, 193, 0.7071067811865475), ('src/_pytest/skipping.py', 86, 90, 0.7071067811865475), ('src/_pytest/skipping.py', 172, 175, 0.7071067811865475), ('src/_pytest/skipping.py', 180, 183, 0.7071067811865475), ('src/_pytest/terminal.py', 538, 541, 0.7071067811865475), ('src/_pytest/_io/wcwidth.py', 12, 12, 0.6030226891555273), ('src/_pytest/_io/wcwidth.py', 15, 16, 0.6030226891555273), ('src/_pytest/_code/code.py', 449, 454, 0.5773502691896258), ('src/_pytest/assertion/rewrite.py', 424, 424, 0.5773502691896258), ('src/_pytest/assertion/util.py', 42, 44, 0.5773502691896258), ('src/_pytest/assertion/util.py', 61, 61, 0.5773502691896258), ('src/_pytest/cacheprovider.py', 276, 279, 0.5773502691896258), ('src/_pytest/mark/evaluate.py', 88, 93, 0.5773502691896258), ('src/_pytest/python.py', 1568, 1573, 0.5773502691896258), ('src/_pytest/python.py', 1580, 1580, 0.5773502691896258), ('src/_pytest/python.py', 1583, 1584, 0.5773502691896258), ('src/_pytest/python.py', 1592, 1596, 0.5773502691896258), ('src/_pytest/reports.py', 315, 317, 0.5773502691896258), ('src/_pytest/runner.py', 149, 153, 0.5773502691896258), ('src/_pytest/runner.py', 155, 157, 0.5773502691896258), ('src/_pytest/runner.py', 159, 160, 0.5773502691896258), ('src/_pytest/runner.py', 206, 213, 0.5773502691896258), ('src/pytest/collect.py', 32, 33, 0.5773502691896258), ('src/_pytest/reports.py', 307, 307, 0.5), ('src/_pytest/terminal.py', 536, 536, 0.5), ('src/_pytest/unittest.py', 301, 306, 0.5), ('src/_pytest/outcomes.py', 33, 33, 0.4472135954999579), ('src/_pytest/outcomes.py', 39, 41, 0.4472135954999579), ('src/_pytest/outcomes.py', 44, 45, 0.4472135954999579), ('src/_pytest/_code/code.py', 337, 338, 0.4082482904638631), ('src/_pytest/_code/code.py', 340, 340, 0.4082482904638631), ('src/_pytest/_code/source.py', 371, 371, 0.4082482904638631), ('src/_pytest/_code/source.py', 373, 379, 0.4082482904638631), ('src/_pytest/_io/saferepr.py', 31, 35, 0.4082482904638631), ('src/_pytest/_code/code.py', 173, 176, 0.3779644730092272), ('src/_pytest/_code/code.py', 327, 331, 0.3779644730092272), ('src/_pytest/_code/code.py', 333, 333, 0.3779644730092272), ('src/_pytest/_code/code.py', 533, 533, 0.3779644730092272), ('src/_pytest/_code/code.py', 683, 687, 0.3779644730092272), ('src/_pytest/nodes.py', 361, 361, 0.3779644730092272), ('src/_pytest/nodes.py', 363, 363, 0.3779644730092272), ('src/_pytest/nodes.py', 366, 366, 0.3779644730092272), ('src/_pytest/nodes.py', 368, 368, 0.3779644730092272), ('src/_pytest/nodes.py', 371, 373, 0.3779644730092272), ('src/_pytest/nodes.py', 375, 375, 0.3779644730092272), ('src/_pytest/nodes.py', 378, 378, 0.3779644730092272), ('src/_pytest/nodes.py', 384, 384, 0.3779644730092272), ('src/_pytest/nodes.py', 387, 387, 0.3779644730092272), ('src/_pytest/nodes.py', 395, 396, 0.3779644730092272), ('src/_pytest/nodes.py', 400, 406, 0.3779644730092272), ('src/_pytest/_code/code.py', 97, 98, 0.35355339059327373), ('src/_pytest/_code/code.py', 113, 118, 0.35355339059327373), ('src/_pytest/_code/code.py', 179, 179, 0.35355339059327373), ('src/_pytest/_code/code.py', 218, 218, 0.35355339059327373), ('src/_pytest/_code/code.py', 223, 223, 0.35355339059327373), ('src/_pytest/_code/code.py', 226, 226, 0.35355339059327373), ('src/_pytest/_code/code.py', 232, 233, 0.35355339059327373), ('src/_pytest/_code/code.py', 235, 243, 0.35355339059327373), ('src/_pytest/_code/code.py', 248, 250, 0.35355339059327373), ('src/_pytest/_code/code.py', 309, 309, 0.35355339059327373), ('src/_pytest/_code/code.py', 360, 360, 0.35355339059327373), ('src/_pytest/_code/code.py', 371, 371, 0.35355339059327373), ('src/_pytest/_code/code.py', 519, 520, 0.35355339059327373), ('src/_pytest/_code/code.py', 522, 522, 0.35355339059327373), ('src/_pytest/_code/code.py', 608, 608, 0.35355339059327373), ('src/_pytest/_code/code.py', 618, 625, 0.35355339059327373), ('src/_pytest/_code/code.py', 627, 627, 0.35355339059327373), ('src/_pytest/_code/code.py', 663, 664, 0.35355339059327373), ('src/_pytest/_code/code.py', 674, 674, 0.35355339059327373), ('src/_pytest/_code/code.py', 677, 680, 0.35355339059327373), ('src/_pytest/_code/code.py', 698, 699, 0.35355339059327373), ('src/_pytest/_code/code.py', 702, 702, 0.35355339059327373), ('src/_pytest/_code/code.py', 704, 705, 0.35355339059327373), ('src/_pytest/_code/code.py', 708, 711, 0.35355339059327373), ('src/_pytest/_code/code.py', 713, 716, 0.35355339059327373), ('src/_pytest/_code/code.py', 721, 722, 0.35355339059327373), ('src/_pytest/_code/code.py', 724, 728, 0.35355339059327373), ('src/_pytest/_code/code.py', 730, 730, 0.35355339059327373), ('src/_pytest/_code/code.py', 733, 733, 0.35355339059327373), ('src/_pytest/_code/code.py', 757, 757, 0.35355339059327373), ('src/_pytest/_code/code.py', 762, 766, 0.35355339059327373), ('src/_pytest/_code/code.py', 770, 775, 0.35355339059327373), ('src/_pytest/_code/code.py', 778, 782, 0.35355339059327373), ('src/_pytest/_code/code.py', 793, 793, 0.35355339059327373), ('src/_pytest/_code/code.py', 800, 800, 0.35355339059327373), ('src/_pytest/_code/code.py', 803, 804, 0.35355339059327373), ('src/_pytest/_code/code.py', 807, 807, 0.35355339059327373), ('src/_pytest/_code/code.py', 810, 810, 0.35355339059327373), ('src/_pytest/_code/code.py', 812, 814, 0.35355339059327373), ('src/_pytest/_code/code.py', 819, 823, 0.35355339059327373), ('src/_pytest/_code/code.py', 867, 868, 0.35355339059327373), ('src/_pytest/_code/code.py', 870, 879, 0.35355339059327373), ('src/_pytest/_code/code.py', 889, 890, 0.35355339059327373), ('src/_pytest/_code/code.py', 898, 899, 0.35355339059327373), ('src/_pytest/_code/code.py', 909, 911, 0.35355339059327373), ('src/_pytest/_code/code.py', 939, 939, 0.35355339059327373), ('src/_pytest/_code/code.py', 959, 959, 0.35355339059327373), ('src/_pytest/_code/code.py', 962, 963, 0.35355339059327373), ('src/_pytest/_code/source.py', 72, 72, 0.35355339059327373), ('src/_pytest/_code/source.py', 75, 75, 0.35355339059327373), ('src/_pytest/_code/source.py', 77, 79, 0.35355339059327373), ('src/_pytest/_code/source.py', 85, 85, 0.35355339059327373), ('src/_pytest/_code/source.py', 125, 126, 0.35355339059327373), ('src/_pytest/_code/source.py', 132, 132, 0.35355339059327373), ('src/_pytest/_code/source.py', 134, 135, 0.35355339059327373), ('src/_pytest/_code/source.py', 139, 141, 0.35355339059327373), ('src/_pytest/_code/source.py', 159, 159, 0.35355339059327373), ('src/_pytest/_code/source.py', 327, 333, 0.35355339059327373), ('src/_pytest/_code/source.py', 336, 340, 0.35355339059327373), ('src/_pytest/_code/source.py', 342, 343, 0.35355339059327373), ('src/_pytest/_code/source.py', 352, 353, 0.35355339059327373), ('src/_pytest/_code/source.py', 356, 358, 0.35355339059327373), ('src/_pytest/_code/source.py', 360, 360, 0.35355339059327373), ('src/_pytest/_code/source.py', 365, 366, 0.35355339059327373), ('src/_pytest/_code/source.py', 368, 368, 0.35355339059327373), ('src/_pytest/_code/source.py', 384, 386, 0.35355339059327373), ('src/_pytest/_code/source.py', 390, 390, 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 44, 46, 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 49, 50, 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 55, 55, 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 58, 59, 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 64, 64, 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 85, 85, 0.35355339059327373), ('src/_pytest/main.py', 487, 490, 0.35355339059327373), ('src/_pytest/runner.py', 217, 220, 0.35355339059327373), ('src/_pytest/terminal.py', 261, 261, 0.35355339059327373), ('src/_pytest/_code/code.py', 126, 130, 0.3333333333333333), ('src/_pytest/_code/code.py', 189, 191, 0.3333333333333333), ('src/_pytest/_code/code.py', 199, 199, 0.3333333333333333), ('src/_pytest/_code/code.py', 263, 265, 0.3333333333333333), ('src/_pytest/_code/code.py', 267, 267, 0.3333333333333333), ('src/_pytest/_code/code.py', 269, 269, 0.3333333333333333), ('src/_pytest/_code/code.py', 298, 299, 0.3333333333333333), ('src/_pytest/_code/code.py', 301, 305, 0.3333333333333333), ('src/_pytest/_code/code.py', 307, 307, 0.3333333333333333), ('src/_pytest/_code/code.py', 354, 354, 0.3333333333333333), ('src/_pytest/_code/code.py', 357, 357, 0.3333333333333333), ('src/_pytest/_code/code.py', 377, 380, 0.3333333333333333), ('src/_pytest/_code/code.py', 474, 479, 0.3333333333333333), ('src/_pytest/_code/code.py', 495, 496, 0.3333333333333333), ('src/_pytest/_code/code.py', 498, 498, 0.3333333333333333), ('src/_pytest/_code/code.py', 511, 512, 0.3333333333333333), ('src/_pytest/_code/code.py', 514, 514, 0.3333333333333333), ('src/_pytest/_code/code.py', 527, 529, 0.3333333333333333), ('src/_pytest/_code/code.py', 550, 556, 0.3333333333333333), ('src/_pytest/_code/code.py', 562, 562, 0.3333333333333333), ('src/_pytest/_code/code.py', 565, 568, 0.3333333333333333), ('src/_pytest/pytester.py', 346, 346, 0.3333333333333333), ('src/_pytest/pytester.py', 348, 353, 0.3333333333333333), ('src/_pytest/pytester.py', 355, 356, 0.3333333333333333), ('src/_pytest/runner.py', 282, 289, 0.3333333333333333), ('src/_pytest/runner.py', 291, 291, 0.3333333333333333), ('src/_pytest/terminal.py', 1153, 1156, 0.3333333333333333), ('src/_pytest/_code/code.py', 457, 457, 0.31622776601683794), ('src/_pytest/_code/code.py', 503, 504, 0.31622776601683794), ('src/_pytest/_code/code.py', 506, 506, 0.31622776601683794), ('src/_pytest/assertion/rewrite.py', 531, 537, 0.25), ('src/_pytest/assertion/rewrite.py', 539, 540, 0.25), ('src/_pytest/assertion/rewrite.py', 720, 720, 0.25), ('src/_pytest/assertion/rewrite.py', 741, 743, 0.25), ('src/_pytest/assertion/rewrite.py', 747, 749, 0.25), ('src/_pytest/assertion/rewrite.py', 753, 753, 0.25), ('src/_pytest/assertion/rewrite.py', 757, 759, 0.25), ('src/_pytest/assertion/rewrite.py', 775, 777, 0.25), ('src/_pytest/assertion/rewrite.py', 790, 791, 0.25), ('src/_pytest/assertion/rewrite.py', 802, 803, 0.25), ('src/_pytest/assertion/rewrite.py', 805, 809, 0.25), ('src/_pytest/assertion/rewrite.py', 811, 812, 0.25), ('src/_pytest/assertion/rewrite.py', 816, 818, 0.25), ('src/_pytest/assertion/rewrite.py', 829, 829, 0.25), ('src/_pytest/assertion/rewrite.py', 844, 846, 0.25), ('src/_pytest/assertion/rewrite.py', 848, 848, 0.25), ('src/_pytest/assertion/rewrite.py', 851, 853, 0.25), ('src/_pytest/assertion/rewrite.py', 855, 855, 0.25), ('src/_pytest/assertion/rewrite.py', 857, 857, 0.25), ('src/_pytest/assertion/rewrite.py', 859, 859, 0.25), ('src/_pytest/assertion/rewrite.py', 910, 912, 0.25), ('src/_pytest/assertion/rewrite.py', 916, 923, 0.25), ('src/_pytest/assertion/rewrite.py', 925, 925, 0.25), ('src/_pytest/assertion/rewrite.py', 928, 931, 0.25), ('src/_pytest/assertion/rewrite.py', 933, 935, 0.25), ('src/_pytest/python.py', 1543, 1544, 0.24806946917841693), ('src/_pytest/_code/source.py', 286, 287, 0.24253562503633297), ('src/_pytest/_code/source.py', 290, 292, 0.24253562503633297), ('src/_pytest/capture.py', 738, 739, 0.2342606428329091), ('src/_pytest/logging.py', 680, 682, 0.2342606428329091), ('src/_pytest/runner.py', 110, 113, 0.2342606428329091), ('src/_pytest/runner.py', 188, 189, 0.23354968324845687), ('src/_pytest/runner.py', 195, 196, 0.23354968324845687), ('src/_pytest/terminal.py', 530, 534, 0.23354968324845687), ('src/_pytest/terminal.py', 586, 589, 0.23249527748763857), ('src/_pytest/python.py', 298, 298, 0.23094010767585027), ('src/_pytest/nodes.py', 242, 242, 0.22237479499833035), ('src/_pytest/reports.py', 138, 140, 0.22237479499833035), ('src/_pytest/assertion/rewrite.py', 217, 220, 0.2182178902359924), ('src/_pytest/assertion/rewrite.py', 222, 222, 0.2182178902359924), ('src/_pytest/config/findpaths.py', 144, 144, 0.2182178902359924), ('src/_pytest/main.py', 647, 647, 0.2182178902359924), ('src/_pytest/main.py', 649, 649, 0.2182178902359924), ('src/_pytest/main.py', 652, 656, 0.2182178902359924), ('src/_pytest/main.py', 661, 661, 0.2182178902359924), ('src/_pytest/main.py', 671, 671, 0.2182178902359924), ('src/_pytest/main.py', 712, 718, 0.2182178902359924), ('src/_pytest/main.py', 720, 720, 0.2182178902359924), ('src/_pytest/main.py', 725, 726, 0.2182178902359924), ('src/_pytest/mark/structures.py', 336, 342, 0.2182178902359924), ('src/_pytest/nodes.py', 302, 305, 0.21821789023599236), ('src/_pytest/mark/structures.py', 226, 226, 0.21320071635561041), ('src/_pytest/mark/structures.py', 229, 230, 0.21320071635561041), ('src/_pytest/mark/structures.py', 236, 240, 0.21320071635561041), ('src/_pytest/mark/structures.py', 318, 319, 0.21320071635561041), ('src/_pytest/terminal.py', 1161, 1162, 0.21320071635561041), ('src/_pytest/capture.py', 321, 322, 0.21055872190307892), ('src/_pytest/capture.py', 324, 325, 0.21055872190307892), ('src/_pytest/capture.py', 456, 457, 0.21055872190307892), ('src/_pytest/capture.py', 459, 461, 0.21055872190307892), ('src/_pytest/capture.py', 539, 544, 0.21055872190307892), ('src/_pytest/capture.py', 638, 639, 0.21055872190307892), ('src/_pytest/capture.py', 678, 678, 0.21055872190307892), ('src/_pytest/capture.py', 707, 710, 0.21055872190307892), ('src/_pytest/logging.py', 291, 292, 0.21055872190307892), ('src/_pytest/logging.py', 295, 296, 0.21055872190307892), ('src/_pytest/logging.py', 298, 299, 0.21055872190307892), ('src/_pytest/logging.py', 302, 302, 0.21055872190307892), ('src/_pytest/logging.py', 327, 328, 0.21055872190307892), ('src/_pytest/logging.py', 666, 669, 0.21055872190307892), ('src/_pytest/runner.py', 227, 232, 0.21055872190307892), ('src/_pytest/runner.py', 235, 239, 0.21055872190307892), ('src/_pytest/store.py', 90, 90, 0.21055872190307892), ('src/_pytest/capture.py', 287, 288, 0.21004201260420147), ('src/_pytest/capture.py', 316, 318, 0.21004201260420147), ('src/_pytest/capture.py', 410, 411, 0.21004201260420147), ('src/_pytest/capture.py', 448, 449, 0.21004201260420147), ('src/_pytest/capture.py', 451, 453, 0.21004201260420147), ('src/_pytest/capture.py', 479, 484, 0.21004201260420147), ('src/_pytest/capture.py', 529, 534, 0.21004201260420147), ('src/_pytest/capture.py', 561, 562, 0.21004201260420147), ('src/_pytest/capture.py', 565, 566, 0.21004201260420147), ('src/_pytest/capture.py', 569, 569, 0.21004201260420147), ('src/_pytest/capture.py', 642, 643, 0.21004201260420147), ('src/_pytest/capture.py', 655, 656, 0.21004201260420147), ('src/_pytest/capture.py', 683, 683, 0.21004201260420147), ('src/_pytest/capture.py', 712, 713, 0.21004201260420147), ('src/_pytest/capture.py', 715, 717, 0.21004201260420147), ('src/_pytest/config/__init__.py', 1270, 1273, 0.21004201260420147), ('src/_pytest/config/__init__.py', 1275, 1275, 0.21004201260420147), ('src/_pytest/logging.py', 305, 306, 0.21004201260420147), ('src/_pytest/logging.py', 308, 308, 0.21004201260420147), ('src/_pytest/logging.py', 662, 662, 0.21004201260420147), ('src/_pytest/logging.py', 671, 671, 0.21004201260420147), ('src/_pytest/logging.py', 673, 674, 0.21004201260420147), ('src/_pytest/logging.py', 797, 797, 0.21004201260420147), ('src/_pytest/main.py', 499, 499, 0.21004201260420147), ('src/_pytest/mark/evaluate.py', 43, 43, 0.21004201260420147), ('src/_pytest/mark/evaluate.py', 49, 49, 0.21004201260420147), ('src/_pytest/mark/structures.py', 465, 466, 0.21004201260420147), ('src/_pytest/mark/structures.py', 469, 472, 0.21004201260420147), ('src/_pytest/nodes.py', 200, 200, 0.21004201260420147), ('src/_pytest/nodes.py', 239, 239, 0.21004201260420147), ('src/_pytest/nodes.py', 253, 259, 0.21004201260420147), ('src/_pytest/nodes.py', 291, 291, 0.21004201260420147), ('src/_pytest/nodes.py', 549, 551, 0.21004201260420147), ('src/_pytest/nodes.py', 553, 554, 0.21004201260420147), ('src/_pytest/nodes.py', 559, 560, 0.21004201260420147), ('src/_pytest/nodes.py', 651, 652, 0.21004201260420147), ('src/_pytest/python.py', 287, 289, 0.21004201260420147), ('src/_pytest/python.py', 292, 294, 0.21004201260420147), ('src/_pytest/reports.py', 250, 250, 0.21004201260420147), ('src/_pytest/reports.py', 255, 255, 0.21004201260420147), ('src/_pytest/reports.py', 259, 259, 0.21004201260420147), ('src/_pytest/reports.py', 262, 262, 0.21004201260420147), ('src/_pytest/reports.py', 265, 265, 0.21004201260420147), ('src/_pytest/reports.py', 268, 268, 0.21004201260420147), ('src/_pytest/reports.py', 272, 272, 0.21004201260420147), ('src/_pytest/reports.py', 278, 278, 0.21004201260420147), ('src/_pytest/reports.py', 281, 281, 0.21004201260420147), ('src/_pytest/reports.py', 283, 283, 0.21004201260420147), ('src/_pytest/reports.py', 295, 295, 0.21004201260420147), ('src/_pytest/reports.py', 297, 303, 0.21004201260420147), ('src/_pytest/reports.py', 305, 305, 0.21004201260420147), ('src/_pytest/reports.py', 322, 333, 0.21004201260420147), ('src/_pytest/runner.py', 177, 179, 0.21004201260420147), ('src/_pytest/runner.py', 181, 182, 0.21004201260420147), ('src/_pytest/runner.py', 293, 302, 0.21004201260420147), ('src/_pytest/runner.py', 312, 312, 0.21004201260420147), ('src/_pytest/skipping.py', 137, 139, 0.21004201260420147), ('src/_pytest/skipping.py', 141, 141, 0.21004201260420147), ('src/_pytest/skipping.py', 149, 149, 0.21004201260420147), ('src/_pytest/skipping.py', 151, 151, 0.21004201260420147), ('src/_pytest/skipping.py', 155, 155, 0.21004201260420147), ('src/_pytest/skipping.py', 190, 190, 0.21004201260420147), ('src/_pytest/skipping.py', 195, 195, 0.21004201260420147), ('src/_pytest/stepwise.py', 85, 86, 0.21004201260420147), ('src/_pytest/store.py', 97, 97, 0.21004201260420147), ('src/_pytest/store.py', 102, 105, 0.21004201260420147), ('src/_pytest/store.py', 125, 125, 0.21004201260420147), ('src/_pytest/terminal.py', 471, 474, 0.21004201260420147), ('src/_pytest/terminal.py', 517, 520, 0.21004201260420147), ('src/_pytest/terminal.py', 522, 523, 0.21004201260420147), ('src/_pytest/terminal.py', 526, 528, 0.21004201260420147), ('src/_pytest/unittest.py', 293, 293, 0.21004201260420147), ('src/_pytest/config/__init__.py', 453, 458, 0.20851441405707477), ('src/_pytest/config/__init__.py', 460, 461, 0.20851441405707477), ('src/_pytest/config/__init__.py', 463, 467, 0.20851441405707477), ('src/_pytest/config/findpaths.py', 135, 136, 0.20851441405707477), ('src/_pytest/config/findpaths.py', 138, 139, 0.20851441405707477), ('src/_pytest/config/findpaths.py', 141, 142, 0.20851441405707477), ('src/_pytest/config/findpaths.py', 147, 150, 0.20851441405707477), ('src/_pytest/terminal.py', 573, 575, 0.20628424925175867), ('src/_pytest/terminal.py', 579, 579, 0.20628424925175867), ('src/_pytest/terminal.py', 581, 581, 0.20628424925175867), ('src/_pytest/terminal.py', 583, 584, 0.20628424925175867), ('src/_pytest/assertion/__init__.py', 127, 127, 0.20412414523193154), ('src/_pytest/assertion/__init__.py', 155, 156, 0.20412414523193154), ('src/_pytest/assertion/__init__.py', 158, 158, 0.20412414523193154), ('src/_pytest/config/findpaths.py', 182, 186, 0.20412414523193154), ('src/_pytest/logging.py', 657, 658, 0.20412414523193154), ('src/_pytest/logging.py', 678, 678, 0.20412414523193154), ('src/_pytest/logging.py', 794, 794, 0.20412414523193154), ('src/_pytest/main.py', 319, 322, 0.20412414523193154), ('src/_pytest/main.py', 474, 474, 0.20412414523193154), ('src/_pytest/mark/evaluate.py', 36, 39, 0.20412414523193154), ('src/_pytest/nodes.py', 347, 351, 0.20412414523193154), ('src/_pytest/nodes.py', 659, 661, 0.20412414523193154), ('src/_pytest/nodes.py', 664, 666, 0.20412414523193154), ('src/_pytest/runner.py', 98, 101, 0.20412414523193154), ('src/_pytest/runner.py', 107, 108, 0.20412414523193154), ('src/_pytest/terminal.py', 398, 398, 0.20412414523193154), ('src/_pytest/terminal.py', 508, 508, 0.20412414523193154), ('src/_pytest/terminal.py', 512, 514, 0.20412414523193154), ('src/_pytest/unittest.py', 322, 322, 0.20412414523193154), ('src/_pytest/warnings.py', 116, 118, 0.20412414523193154), ('src/_pytest/warnings.py', 158, 159, 0.20412414523193154), ('src/_pytest/assertion/__init__.py', 167, 167, 0.20306923302672383), ('src/_pytest/assertion/__init__.py', 169, 169, 0.20306923302672383), ('src/_pytest/logging.py', 694, 696, 0.20306923302672383), ('src/_pytest/logging.py', 700, 700, 0.20306923302672383), ('src/_pytest/main.py', 324, 324, 0.20306923302672383), ('src/_pytest/runner.py', 120, 123, 0.20306923302672383), ('src/_pytest/runner.py', 164, 166, 0.20306923302672383), ('src/_pytest/runner.py', 184, 184, 0.20306923302672383), ('src/_pytest/runner.py', 393, 394, 0.20306923302672383), ('src/_pytest/runner.py', 397, 402, 0.20306923302672383), ('src/_pytest/runner.py', 408, 408, 0.20306923302672383), ('src/_pytest/store.py', 121, 121, 0.20306923302672383), ('src/_pytest/unittest.py', 347, 347, 0.20306923302672383), ('src/_pytest/warnings.py', 161, 161, 0.20306923302672383), ('src/_pytest/_io/wcwidth.py', 49, 52, 0.2), ('src/_pytest/_io/wcwidth.py', 54, 55, 0.2), ('src/_pytest/monkeypatch.py', 118, 120, 0.19900743804199783), ('src/_pytest/monkeypatch.py', 122, 123, 0.19900743804199783), ('src/_pytest/monkeypatch.py', 348, 349, 0.19900743804199783), ('src/_pytest/monkeypatch.py', 352, 357, 0.19900743804199783), ('src/_pytest/monkeypatch.py', 361, 363, 0.19900743804199783), ('src/_pytest/monkeypatch.py', 367, 367, 0.19900743804199783), ('src/_pytest/pytester.py', 515, 516, 0.19900743804199783), ('src/_pytest/pytester.py', 519, 521, 0.19900743804199783), ('src/_pytest/pytester.py', 523, 524, 0.19900743804199783), ('src/_pytest/pytester.py', 529, 529, 0.19900743804199783), ('src/_pytest/pytester.py', 532, 532, 0.19900743804199783), ('src/_pytest/pytester.py', 616, 617, 0.19900743804199783), ('src/_pytest/pytester.py', 619, 619, 0.19900743804199783), ('src/_pytest/_io/terminalwriter.py', 150, 152, 0.19611613513818404), ('src/_pytest/mark/structures.py', 38, 40, 0.19611613513818404), ('src/_pytest/mark/structures.py', 291, 291, 0.19611613513818404), ('src/_pytest/mark/structures.py', 376, 376, 0.19611613513818404), ('src/_pytest/mark/structures.py', 379, 379, 0.19611613513818404), ('src/_pytest/terminal.py', 425, 425, 0.19611613513818404), ('src/_pytest/terminal.py', 594, 596, 0.19611613513818404), ('src/_pytest/terminal.py', 604, 606, 0.19611613513818404), ('src/_pytest/terminal.py', 611, 615, 0.19611613513818404), ('src/_pytest/python.py', 309, 319, 0.1933472978091327), ('src/_pytest/python.py', 321, 324, 0.1933472978091327), ('src/_pytest/python.py', 328, 330, 0.1933472978091327), ('src/_pytest/python.py', 338, 341, 0.1933472978091327), ('src/_pytest/_code/code.py', 1190, 1190, 0.19245008972987526), ('src/_pytest/python.py', 1510, 1514, 0.19245008972987526), ('src/_pytest/compat.py', 86, 87, 0.19069251784911848), ('src/_pytest/_code/code.py', 57, 59, 0.1889822365046136), ('src/_pytest/_code/code.py', 61, 64, 0.1889822365046136), ('src/_pytest/_code/code.py', 80, 80, 0.1889822365046136), ('src/_pytest/_code/code.py', 82, 83, 0.1889822365046136), ('src/_pytest/_code/code.py', 85, 85, 0.1889822365046136), ('src/_pytest/_code/code.py', 87, 87, 0.1889822365046136), ('src/_pytest/_code/code.py', 1169, 1170, 0.1889822365046136), ('src/_pytest/_code/code.py', 1173, 1174, 0.1889822365046136), ('src/_pytest/_code/source.py', 297, 298, 0.1889822365046136), ('src/_pytest/compat.py', 290, 296, 0.1889822365046136), ('src/_pytest/mark/structures.py', 365, 366, 0.1889822365046136), ('src/_pytest/mark/structures.py', 451, 456, 0.1889822365046136), ('src/_pytest/terminal.py', 381, 382, 0.18814417367671946), ('src/_pytest/terminal.py', 391, 391, 0.18814417367671946), ('src/_pytest/warnings.py', 97, 99, 0.18814417367671946), ('src/_pytest/warnings.py', 101, 101, 0.18814417367671946), ('src/_pytest/warnings.py', 103, 103, 0.18814417367671946), ('src/_pytest/warnings.py', 105, 106, 0.18814417367671946), ('src/_pytest/warnings.py', 110, 111, 0.18814417367671946), ('src/_pytest/warnings.py', 113, 113, 0.18814417367671946), ('src/_pytest/_io/terminalwriter.py', 91, 91, 0.1873171623163388), ('src/_pytest/terminal.py', 620, 620, 0.1873171623163388), ('src/_pytest/terminal.py', 1146, 1150, 0.1873171623163388), ('src/_pytest/warnings.py', 122, 122, 0.1873171623163388), ('src/_pytest/warnings.py', 124, 124, 0.1873171623163388), ('src/_pytest/faulthandler.py', 84, 84, 0.18650096164806276), ('src/_pytest/terminal.py', 569, 570, 0.18650096164806276), ('src/_pytest/assertion/rewrite.py', 190, 192, 0.18569533817705186), ('src/_pytest/main.py', 412, 414, 0.18569533817705186), ('src/_pytest/pytester.py', 328, 333, 0.18569533817705186), ('src/_pytest/pytester.py', 340, 340, 0.18569533817705186), ('src/_pytest/terminal.py', 420, 422, 0.18569533817705186), ('src/_pytest/compat.py', 285, 286, 0.1849000654084097), ('src/_pytest/compat.py', 304, 304, 0.1849000654084097), ('src/_pytest/compat.py', 306, 306, 0.1849000654084097), ('src/_pytest/config/__init__.py', 1170, 1174, 0.18257418583505536), ('src/_pytest/pytester.py', 281, 281, 0.18257418583505536), ('src/_pytest/fixtures.py', 770, 770, 0.18181818181818182), ('src/_pytest/fixtures.py', 1001, 1001, 0.18181818181818182), ('src/_pytest/fixtures.py', 249, 253, 0.1796053020267749), ('src/_pytest/python.py', 457, 458, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 178, 180, 0.17677669529663687), ('src/_pytest/mark/structures.py', 459, 459, 0.17677669529663687), ('src/_pytest/main.py', 302, 302, 0.17407765595569785), ('src/_pytest/mark/evaluate.py', 58, 59, 0.17213259316477408), ('src/_pytest/mark/evaluate.py', 83, 83, 0.17213259316477408), ('src/_pytest/mark/evaluate.py', 86, 86, 0.17213259316477408), ('src/_pytest/mark/evaluate.py', 121, 121, 0.17213259316477408), ('src/_pytest/skipping.py', 116, 118, 0.17213259316477408), ('src/_pytest/terminal.py', 428, 428, 0.17213259316477408), ('src/_pytest/_io/terminalwriter.py', 141, 144, 0.17149858514250882), ('src/_pytest/_io/terminalwriter.py', 159, 159, 0.17149858514250882), ('src/_pytest/capture.py', 743, 744, 0.17149858514250882), ('src/_pytest/capture.py', 748, 749, 0.17149858514250882), ('src/_pytest/compat.py', 100, 100, 0.17149858514250882), ('src/_pytest/fixtures.py', 1085, 1085, 0.17149858514250882), ('src/_pytest/fixtures.py', 1089, 1090, 0.17149858514250882), ('src/_pytest/logging.py', 688, 688, 0.17149858514250882), ('src/_pytest/reports.py', 159, 159, 0.17149858514250882), ('src/_pytest/runner.py', 115, 117, 0.17149858514250882), ('src/_pytest/terminal.py', 364, 365, 0.17149858514250882), ('src/_pytest/terminal.py', 1277, 1278, 0.17149858514250882), ('testing/conftest.py', 17, 19, 0.17149858514250882), ('src/_pytest/main.py', 326, 326, 0.1690308509457033), ('src/_pytest/terminal.py', 1158, 1159, 0.16666666666666666), ('src/_pytest/fixtures.py', 722, 723, 0.1638463841038081), ('src/_pytest/fixtures.py', 467, 467, 0.16329931618554522), ('src/_pytest/fixtures.py', 720, 720, 0.16329931618554522), ('src/_pytest/main.py', 300, 300, 0.16222142113076254), ('src/_pytest/mark/__init__.py', 234, 236, 0.16222142113076254), ('src/_pytest/mark/structures.py', 438, 438, 0.16222142113076254), ('src/_pytest/python.py', 795, 796, 0.16222142113076254), ('src/_pytest/python.py', 1562, 1565, 0.16222142113076254), ('src/_pytest/logging.py', 647, 647, 0.16012815380508713), ('src/_pytest/logging.py', 651, 653, 0.16012815380508713), ('src/_pytest/main.py', 769, 774, 0.16012815380508713), ('src/_pytest/terminal.py', 1176, 1181, 0.16012815380508713), ('src/_pytest/terminal.py', 1183, 1185, 0.16012815380508713), ('src/_pytest/cacheprovider.py', 395, 396, 0.15811388300841897), ('src/_pytest/fixtures.py', 290, 293, 0.15811388300841897), ('src/_pytest/fixtures.py', 296, 296, 0.15811388300841897), ('src/_pytest/main.py', 298, 298, 0.15811388300841897), ('src/_pytest/main.py', 316, 316, 0.15811388300841897), ('src/_pytest/main.py', 764, 767, 0.15811388300841897), ('src/_pytest/mark/structures.py', 404, 404, 0.15811388300841897), ('src/_pytest/mark/structures.py', 408, 408, 0.15811388300841897), ('src/_pytest/mark/structures.py', 418, 418, 0.15811388300841897), ('src/_pytest/pytester.py', 233, 235, 0.15811388300841897), ('src/_pytest/python.py', 247, 248, 0.15811388300841897), ('src/_pytest/python.py', 406, 413, 0.15811388300841897), ('src/_pytest/python.py', 415, 415, 0.15811388300841897), ('src/_pytest/python.py', 417, 419, 0.15811388300841897), ('src/_pytest/python.py', 421, 422, 0.15811388300841897), ('src/_pytest/nose.py', 15, 15, 0.15665208999759148), ('src/_pytest/nose.py', 27, 28, 0.15665208999759148), ('src/_pytest/nose.py', 33, 35, 0.15665208999759148), ('src/_pytest/cacheprovider.py', 143, 146, 0.15617376188860607), ('src/_pytest/pathlib.py', 195, 201, 0.15617376188860607), ('src/_pytest/terminal.py', 813, 813, 0.15617376188860607), ('src/_pytest/terminal.py', 1012, 1015, 0.15617376188860607), ('src/_pytest/terminal.py', 1165, 1168, 0.15617376188860607), ('src/_pytest/compat.py', 347, 348, 0.1543033499620919), ('src/_pytest/fixtures.py', 438, 438, 0.1543033499620919), ('src/_pytest/fixtures.py', 440, 440, 0.1543033499620919), ('src/_pytest/fixtures.py', 442, 448, 0.1543033499620919), ('src/_pytest/fixtures.py', 1468, 1469, 0.1543033499620919), ('src/_pytest/fixtures.py', 1476, 1476, 0.1543033499620919), ('src/_pytest/fixtures.py', 1481, 1482, 0.1543033499620919), ('src/_pytest/fixtures.py', 1486, 1487, 0.1543033499620919), ('src/_pytest/fixtures.py', 1489, 1492, 0.1543033499620919), ('src/_pytest/fixtures.py', 1494, 1494, 0.1543033499620919), ('src/_pytest/fixtures.py', 1517, 1520, 0.1543033499620919), ('src/_pytest/fixtures.py', 1525, 1526, 0.1543033499620919), ('src/_pytest/fixtures.py', 1538, 1539, 0.1543033499620919), ('src/_pytest/fixtures.py', 1541, 1542, 0.1543033499620919), ('src/_pytest/fixtures.py', 1546, 1546, 0.1543033499620919), ('src/_pytest/fixtures.py', 1551, 1551, 0.1543033499620919), ('src/_pytest/fixtures.py', 1553, 1557, 0.1543033499620919), ('src/_pytest/fixtures.py', 1567, 1567, 0.1543033499620919), ('src/_pytest/fixtures.py', 1575, 1576, 0.1543033499620919), ('src/_pytest/fixtures.py', 1579, 1579, 0.1543033499620919), ('src/_pytest/fixtures.py', 1618, 1620, 0.1543033499620919), ('src/_pytest/nodes.py', 625, 626, 0.1543033499620919), ('src/_pytest/nodes.py', 630, 630, 0.1543033499620919), ('src/_pytest/python.py', 132, 132, 0.1543033499620919), ('src/_pytest/python.py', 214, 216, 0.1543033499620919), ('src/_pytest/python.py', 219, 219, 0.1543033499620919), ('src/_pytest/python.py', 222, 222, 0.1543033499620919), ('src/_pytest/python.py', 224, 224, 0.1543033499620919), ('src/_pytest/python.py', 228, 228, 0.1543033499620919), ('src/_pytest/python.py', 238, 239, 0.1543033499620919), ('src/_pytest/python.py', 275, 276, 0.1543033499620919), ('src/_pytest/python.py', 346, 346, 0.1543033499620919), ('src/_pytest/python.py', 355, 355, 0.1543033499620919), ('src/_pytest/python.py', 361, 362, 0.1543033499620919), ('src/_pytest/python.py', 365, 367, 0.1543033499620919), ('src/_pytest/python.py', 370, 370, 0.1543033499620919), ('src/_pytest/python.py', 380, 382, 0.1543033499620919), ('src/_pytest/python.py', 386, 386, 0.1543033499620919), ('src/_pytest/python.py', 390, 390, 0.1543033499620919), ('src/_pytest/python.py', 393, 393, 0.1543033499620919), ('src/_pytest/python.py', 398, 403, 0.1543033499620919), ('src/_pytest/python.py', 430, 431, 0.1543033499620919), ('src/_pytest/python.py', 433, 433, 0.1543033499620919), ('src/_pytest/python.py', 436, 441, 0.1543033499620919), ('src/_pytest/python.py', 443, 444, 0.1543033499620919), ('src/_pytest/python.py', 446, 447, 0.1543033499620919), ('src/_pytest/python.py', 449, 450, 0.1543033499620919), ('src/_pytest/python.py', 452, 452, 0.1543033499620919), ('src/_pytest/python.py', 455, 455, 0.1543033499620919), ('src/_pytest/python.py', 488, 491, 0.1543033499620919), ('src/_pytest/python.py', 503, 504, 0.1543033499620919), ('src/_pytest/python.py', 507, 508, 0.1543033499620919), ('src/_pytest/python.py', 527, 529, 0.1543033499620919), ('src/_pytest/python.py', 531, 532, 0.1543033499620919), ('src/_pytest/python.py', 683, 685, 0.1543033499620919), ('src/_pytest/python.py', 887, 887, 0.1543033499620919), ('src/_pytest/python.py', 890, 890, 0.1543033499620919), ('src/_pytest/python.py', 893, 893, 0.1543033499620919), ('src/_pytest/python.py', 896, 896, 0.1543033499620919), ('src/_pytest/python.py', 899, 899, 0.1543033499620919), ('src/_pytest/python.py', 902, 902, 0.1543033499620919), ('src/_pytest/python.py', 904, 905, 0.1543033499620919), ('src/_pytest/python.py', 1476, 1476, 0.1543033499620919), ('src/_pytest/python.py', 1478, 1479, 0.1543033499620919), ('src/_pytest/python.py', 1487, 1487, 0.1543033499620919), ('src/_pytest/python.py', 1492, 1494, 0.1543033499620919), ('src/_pytest/python.py', 1504, 1504, 0.1543033499620919), ('src/_pytest/python.py', 1518, 1520, 0.1543033499620919), ('src/_pytest/python.py', 1522, 1524, 0.1543033499620919), ('src/_pytest/python.py', 1531, 1531, 0.1543033499620919), ('src/_pytest/python.py', 1534, 1535, 0.1543033499620919), ('src/_pytest/unittest.py', 50, 51, 0.1543033499620919), ('src/_pytest/unittest.py', 53, 53, 0.1543033499620919), ('src/_pytest/unittest.py', 55, 56, 0.1543033499620919), ('src/_pytest/mark/structures.py', 368, 368, 0.15249857033260467), ('src/_pytest/nodes.py', 146, 146, 0.15249857033260467), ('src/_pytest/nodes.py', 148, 148, 0.15249857033260467), ('src/_pytest/nodes.py', 169, 169, 0.15249857033260467), ('src/_pytest/nodes.py', 171, 173, 0.15249857033260467), ('src/_pytest/python.py', 591, 592, 0.15249857033260467), ('src/_pytest/python.py', 786, 788, 0.15249857033260467), ('src/_pytest/config/__init__.py', 447, 451, 0.15075567228888181), ('src/_pytest/config/findpaths.py', 108, 108, 0.15075567228888181), ('src/_pytest/config/findpaths.py', 119, 120, 0.15075567228888181), ('src/_pytest/config/findpaths.py', 174, 178, 0.15075567228888181), ('src/_pytest/config/findpaths.py', 189, 191, 0.15075567228888181), ('src/_pytest/mark/structures.py', 349, 350, 0.15075567228888181), ('src/_pytest/mark/structures.py', 352, 352, 0.15075567228888181), ('src/_pytest/mark/structures.py', 362, 363, 0.15075567228888181), ('src/_pytest/terminal.py', 995, 998, 0.15075567228888181), ('src/_pytest/capture.py', 723, 729, 0.14907119849998599), ('src/_pytest/capture.py', 731, 731, 0.14907119849998599), ('src/_pytest/config/findpaths.py', 112, 114, 0.14907119849998599), ('src/_pytest/config/findpaths.py', 116, 117, 0.14907119849998599), ('src/_pytest/config/findpaths.py', 129, 129, 0.14907119849998599), ('src/_pytest/logging.py', 643, 643, 0.14907119849998599), ('src/_pytest/main.py', 284, 285, 0.14907119849998599), ('src/_pytest/main.py', 295, 296, 0.14907119849998599), ('src/_pytest/main.py', 310, 310, 0.14907119849998599), ('src/_pytest/main.py', 524, 526, 0.14907119849998599), ('src/_pytest/main.py', 568, 571, 0.14907119849998599), ('src/_pytest/nodes.py', 517, 523, 0.14907119849998599), ('src/_pytest/nodes.py', 527, 528, 0.14907119849998599), ('src/_pytest/nodes.py', 530, 530, 0.14907119849998599), ('src/_pytest/nodes.py', 532, 532, 0.14907119849998599), ('src/_pytest/nodes.py', 544, 544, 0.14907119849998599), ('src/_pytest/pathlib.py', 517, 518, 0.14907119849998599), ('src/_pytest/pathlib.py', 521, 524, 0.14907119849998599), ('src/_pytest/pathlib.py', 526, 526, 0.14907119849998599), ('src/_pytest/pathlib.py', 529, 530, 0.14907119849998599), ('src/_pytest/pathlib.py', 534, 534, 0.14907119849998599), ('src/_pytest/pathlib.py', 537, 537, 0.14907119849998599), ('src/_pytest/python.py', 191, 193, 0.14907119849998599), ('src/_pytest/python.py', 195, 195, 0.14907119849998599), ('src/_pytest/python.py', 205, 205, 0.14907119849998599), ('src/_pytest/python.py', 208, 209, 0.14907119849998599), ('src/_pytest/python.py', 485, 485, 0.14907119849998599), ('src/_pytest/python.py', 500, 501, 0.14907119849998599), ('src/_pytest/python.py', 551, 553, 0.14907119849998599), ('src/_pytest/terminal.py', 352, 352, 0.14907119849998599), ('src/_pytest/terminal.py', 354, 356, 0.14907119849998599), ('src/_pytest/terminal.py', 903, 904, 0.14907119849998599), ('src/_pytest/_io/terminalwriter.py', 110, 111, 0.14744195615489714), ('src/_pytest/_io/terminalwriter.py', 114, 114, 0.14744195615489714), ('src/_pytest/_io/terminalwriter.py', 120, 120, 0.14744195615489714), ('src/_pytest/_io/terminalwriter.py', 125, 127, 0.14744195615489714), ('src/_pytest/_io/terminalwriter.py', 135, 136, 0.14744195615489714), ('src/_pytest/_io/terminalwriter.py', 138, 138, 0.14744195615489714), ('src/_pytest/assertion/__init__.py', 111, 114, 0.14744195615489714), ('src/_pytest/assertion/__init__.py', 173, 176, 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 76, 77, 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 180, 182, 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 185, 185, 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 187, 187, 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 732, 732, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 148, 149, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 153, 157, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 161, 162, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 166, 167, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 169, 171, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 173, 174, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 271, 271, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 273, 273, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 282, 284, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 294, 294, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 296, 297, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 343, 344, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 347, 349, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 366, 366, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 368, 368, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 382, 382, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 388, 389, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 392, 392, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 458, 458, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 462, 462, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 491, 491, 0.14744195615489714), ('src/_pytest/cacheprovider.py', 502, 502, 0.14744195615489714), ('src/_pytest/capture.py', 734, 734, 0.14744195615489714), ('src/_pytest/compat.py', 170, 171, 0.14744195615489714), ('src/_pytest/compat.py', 178, 180, 0.14744195615489714), ('src/_pytest/compat.py', 182, 182, 0.14744195615489714), ('src/_pytest/compat.py', 185, 185, 0.14744195615489714), ('src/_pytest/compat.py', 187, 187, 0.14744195615489714), ('src/_pytest/compat.py', 193, 194, 0.14744195615489714), ('src/_pytest/compat.py', 198, 198, 0.14744195615489714), ('src/_pytest/compat.py', 200, 200, 0.14744195615489714), ('src/_pytest/compat.py', 314, 316, 0.14744195615489714), ('src/_pytest/compat.py', 319, 319, 0.14744195615489714), ('src/_pytest/compat.py', 321, 321, 0.14744195615489714), ('src/_pytest/compat.py', 339, 342, 0.14744195615489714), ('src/_pytest/config/__init__.py', 483, 484, 0.14744195615489714), ('src/_pytest/doctest.py', 123, 125, 0.14744195615489714), ('src/_pytest/doctest.py', 131, 131, 0.14744195615489714), ('src/_pytest/fixtures.py', 105, 106, 0.14744195615489714), ('src/_pytest/fixtures.py', 108, 114, 0.14744195615489714), ('src/_pytest/fixtures.py', 117, 117, 0.14744195615489714), ('src/_pytest/fixtures.py', 231, 233, 0.14744195615489714), ('src/_pytest/fixtures.py', 239, 239, 0.14744195615489714), ('src/_pytest/fixtures.py', 281, 288, 0.14744195615489714), ('src/_pytest/fixtures.py', 301, 302, 0.14744195615489714), ('src/_pytest/fixtures.py', 304, 304, 0.14744195615489714), ('src/_pytest/fixtures.py', 323, 324, 0.14744195615489714), ('src/_pytest/fixtures.py', 797, 799, 0.14744195615489714), ('src/_pytest/fixtures.py', 976, 981, 0.14744195615489714), ('src/_pytest/fixtures.py', 984, 988, 0.14744195615489714), ('src/_pytest/fixtures.py', 990, 993, 0.14744195615489714), ('src/_pytest/fixtures.py', 995, 998, 0.14744195615489714), ('src/_pytest/fixtures.py', 1450, 1455, 0.14744195615489714), ('src/_pytest/fixtures.py', 1457, 1457, 0.14744195615489714), ('src/_pytest/fixtures.py', 1497, 1501, 0.14744195615489714), ('src/_pytest/fixtures.py', 1503, 1503, 0.14744195615489714), ('src/_pytest/fixtures.py', 1508, 1508, 0.14744195615489714), ('src/_pytest/fixtures.py', 1513, 1513, 0.14744195615489714), ('src/_pytest/fixtures.py', 1610, 1610, 0.14744195615489714), ('src/_pytest/fixtures.py', 1615, 1616, 0.14744195615489714), ('src/_pytest/fixtures.py', 1623, 1625, 0.14744195615489714), ('src/_pytest/fixtures.py', 1628, 1630, 0.14744195615489714), ('src/_pytest/fixtures.py', 1633, 1633, 0.14744195615489714), ('src/_pytest/fixtures.py', 1635, 1635, 0.14744195615489714), ('src/_pytest/fixtures.py', 1641, 1641, 0.14744195615489714), ('src/_pytest/fixtures.py', 1643, 1651, 0.14744195615489714), ('src/_pytest/fixtures.py', 1654, 1655, 0.14744195615489714), ('src/_pytest/fixtures.py', 1662, 1664, 0.14744195615489714), ('src/_pytest/fixtures.py', 1667, 1667, 0.14744195615489714), ('src/_pytest/helpconfig.py', 143, 143, 0.14744195615489714), ('src/_pytest/helpconfig.py', 146, 146, 0.14744195615489714), ('src/_pytest/helpconfig.py', 151, 151, 0.14744195615489714), ('src/_pytest/helpconfig.py', 240, 241, 0.14744195615489714), ('src/_pytest/helpconfig.py', 250, 250, 0.14744195615489714), ('src/_pytest/helpconfig.py', 259, 259, 0.14744195615489714), ('src/_pytest/logging.py', 625, 625, 0.14744195615489714), ('src/_pytest/logging.py', 627, 629, 0.14744195615489714), ('src/_pytest/logging.py', 633, 633, 0.14744195615489714), ('src/_pytest/logging.py', 635, 637, 0.14744195615489714), ('src/_pytest/logging.py', 704, 704, 0.14744195615489714), ('src/_pytest/logging.py', 706, 708, 0.14744195615489714), ('src/_pytest/main.py', 231, 240, 0.14744195615489714), ('src/_pytest/main.py', 273, 278, 0.14744195615489714), ('src/_pytest/main.py', 289, 289, 0.14744195615489714), ('src/_pytest/main.py', 306, 306, 0.14744195615489714), ('src/_pytest/main.py', 376, 378, 0.14744195615489714), ('src/_pytest/main.py', 427, 428, 0.14744195615489714), ('src/_pytest/main.py', 430, 436, 0.14744195615489714), ('src/_pytest/main.py', 439, 440, 0.14744195615489714), ('src/_pytest/main.py', 442, 443, 0.14744195615489714), ('src/_pytest/main.py', 445, 446, 0.14744195615489714), ('src/_pytest/main.py', 450, 450, 0.14744195615489714), ('src/_pytest/main.py', 452, 453, 0.14744195615489714), ('src/_pytest/main.py', 456, 456, 0.14744195615489714), ('src/_pytest/main.py', 460, 461, 0.14744195615489714), ('src/_pytest/main.py', 478, 478, 0.14744195615489714), ('src/_pytest/main.py', 480, 480, 0.14744195615489714), ('src/_pytest/main.py', 516, 521, 0.14744195615489714), ('src/_pytest/main.py', 543, 559, 0.14744195615489714), ('src/_pytest/main.py', 565, 565, 0.14744195615489714), ('src/_pytest/main.py', 574, 578, 0.14744195615489714), ('src/_pytest/main.py', 585, 589, 0.14744195615489714), ('src/_pytest/main.py', 594, 594, 0.14744195615489714), ('src/_pytest/main.py', 599, 602, 0.14744195615489714), ('src/_pytest/main.py', 605, 607, 0.14744195615489714), ('src/_pytest/main.py', 618, 618, 0.14744195615489714), ('src/_pytest/main.py', 696, 697, 0.14744195615489714), ('src/_pytest/main.py', 699, 701, 0.14744195615489714), ('src/_pytest/main.py', 707, 707, 0.14744195615489714), ('src/_pytest/mark/__init__.py', 123, 123, 0.14744195615489714), ('src/_pytest/mark/__init__.py', 259, 260, 0.14744195615489714), ('src/_pytest/nodes.py', 135, 136, 0.14744195615489714), ('src/_pytest/nodes.py', 138, 138, 0.14744195615489714), ('src/_pytest/nodes.py', 140, 140, 0.14744195615489714), ('src/_pytest/nodes.py', 143, 144, 0.14744195615489714), ('src/_pytest/nodes.py', 165, 167, 0.14744195615489714), ('src/_pytest/nodes.py', 191, 191, 0.14744195615489714), ('src/_pytest/nodes.py', 193, 193, 0.14744195615489714), ('src/_pytest/nodes.py', 195, 195, 0.14744195615489714), ('src/_pytest/nodes.py', 525, 525, 0.14744195615489714), ('src/_pytest/nodes.py', 535, 535, 0.14744195615489714), ('src/_pytest/nodes.py', 537, 537, 0.14744195615489714), ('src/_pytest/nodes.py', 584, 585, 0.14744195615489714), ('src/_pytest/nodes.py', 589, 590, 0.14744195615489714), ('src/_pytest/nodes.py', 594, 594, 0.14744195615489714), ('src/_pytest/nodes.py', 603, 603, 0.14744195615489714), ('src/_pytest/pastebin.py', 96, 97, 0.14744195615489714), ('src/_pytest/pathlib.py', 500, 501, 0.14744195615489714), ('src/_pytest/pytester.py', 715, 715, 0.14744195615489714), ('src/_pytest/python.py', 122, 122, 0.14744195615489714), ('src/_pytest/python.py', 125, 125, 0.14744195615489714), ('src/_pytest/python.py', 128, 128, 0.14744195615489714), ('src/_pytest/python.py', 184, 186, 0.14744195615489714), ('src/_pytest/reports.py', 349, 354, 0.14744195615489714), ('src/_pytest/runner.py', 58, 61, 0.14744195615489714), ('src/_pytest/runner.py', 90, 90, 0.14744195615489714), ('src/_pytest/runner.py', 94, 94, 0.14744195615489714), ('src/_pytest/runner.py', 268, 268, 0.14744195615489714), ('src/_pytest/runner.py', 273, 273, 0.14744195615489714), ('src/_pytest/runner.py', 316, 316, 0.14744195615489714), ('src/_pytest/runner.py', 318, 320, 0.14744195615489714), ('src/_pytest/runner.py', 340, 343, 0.14744195615489714), ('src/_pytest/runner.py', 350, 351, 0.14744195615489714), ('src/_pytest/runner.py', 386, 386, 0.14744195615489714), ('src/_pytest/runner.py', 388, 388, 0.14744195615489714), ('src/_pytest/runner.py', 390, 390, 0.14744195615489714), ('src/_pytest/runner.py', 431, 435, 0.14744195615489714), ('src/_pytest/runner.py', 437, 437, 0.14744195615489714), ('src/_pytest/stepwise.py', 47, 47, 0.14744195615489714), ('src/_pytest/stepwise.py', 52, 53, 0.14744195615489714), ('src/_pytest/stepwise.py', 112, 112, 0.14744195615489714), ('src/_pytest/stepwise.py', 114, 114, 0.14744195615489714), ('src/_pytest/stepwise.py', 117, 118, 0.14744195615489714), ('src/_pytest/stepwise.py', 122, 122, 0.14744195615489714), ('src/_pytest/terminal.py', 338, 338, 0.14744195615489714), ('src/_pytest/terminal.py', 369, 369, 0.14744195615489714), ('src/_pytest/terminal.py', 373, 373, 0.14744195615489714), ('src/_pytest/terminal.py', 377, 377, 0.14744195615489714), ('src/_pytest/terminal.py', 394, 395, 0.14744195615489714), ('src/_pytest/terminal.py', 431, 431, 0.14744195615489714), ('src/_pytest/terminal.py', 433, 434, 0.14744195615489714), ('src/_pytest/terminal.py', 461, 462, 0.14744195615489714), ('src/_pytest/terminal.py', 623, 623, 0.14744195615489714), ('src/_pytest/terminal.py', 627, 627, 0.14744195615489714), ('src/_pytest/terminal.py', 631, 631, 0.14744195615489714), ('src/_pytest/terminal.py', 633, 633, 0.14744195615489714), ('src/_pytest/terminal.py', 635, 637, 0.14744195615489714), ('src/_pytest/terminal.py', 641, 641, 0.14744195615489714), ('src/_pytest/terminal.py', 644, 644, 0.14744195615489714), ('src/_pytest/terminal.py', 654, 659, 0.14744195615489714), ('src/_pytest/terminal.py', 662, 663, 0.14744195615489714), ('src/_pytest/terminal.py', 665, 665, 0.14744195615489714), ('src/_pytest/terminal.py', 667, 667, 0.14744195615489714), ('src/_pytest/terminal.py', 669, 669, 0.14744195615489714), ('src/_pytest/terminal.py', 671, 671, 0.14744195615489714), ('src/_pytest/terminal.py', 673, 673, 0.14744195615489714), ('src/_pytest/terminal.py', 678, 678, 0.14744195615489714), ('src/_pytest/terminal.py', 682, 684, 0.14744195615489714), ('src/_pytest/terminal.py', 686, 691, 0.14744195615489714), ('src/_pytest/terminal.py', 694, 695, 0.14744195615489714), ('src/_pytest/terminal.py', 697, 700, 0.14744195615489714), ('src/_pytest/terminal.py', 703, 705, 0.14744195615489714), ('src/_pytest/terminal.py', 707, 707, 0.14744195615489714), ('src/_pytest/terminal.py', 712, 714, 0.14744195615489714), ('src/_pytest/terminal.py', 717, 717, 0.14744195615489714), ('src/_pytest/terminal.py', 719, 719, 0.14744195615489714), ('src/_pytest/terminal.py', 722, 723, 0.14744195615489714), ('src/_pytest/terminal.py', 726, 726, 0.14744195615489714), ('src/_pytest/terminal.py', 728, 729, 0.14744195615489714), ('src/_pytest/terminal.py', 731, 731, 0.14744195615489714), ('src/_pytest/terminal.py', 734, 734, 0.14744195615489714), ('src/_pytest/terminal.py', 736, 737, 0.14744195615489714), ('src/_pytest/terminal.py', 739, 739, 0.14744195615489714), ('src/_pytest/terminal.py', 741, 741, 0.14744195615489714), ('src/_pytest/terminal.py', 794, 802, 0.14744195615489714), ('src/_pytest/terminal.py', 804, 806, 0.14744195615489714), ('src/_pytest/terminal.py', 808, 808, 0.14744195615489714), ('src/_pytest/terminal.py', 810, 810, 0.14744195615489714), ('src/_pytest/terminal.py', 815, 815, 0.14744195615489714), ('src/_pytest/terminal.py', 819, 824, 0.14744195615489714), ('src/_pytest/terminal.py', 826, 826, 0.14744195615489714), ('src/_pytest/terminal.py', 892, 893, 0.14744195615489714), ('src/_pytest/terminal.py', 896, 896, 0.14744195615489714), ('src/_pytest/terminal.py', 899, 901, 0.14744195615489714), ('src/_pytest/terminal.py', 956, 957, 0.14744195615489714), ('src/_pytest/terminal.py', 1040, 1040, 0.14744195615489714), ('src/_pytest/terminal.py', 1043, 1045, 0.14744195615489714), ('src/_pytest/terminal.py', 1047, 1055, 0.14744195615489714), ('src/_pytest/terminal.py', 1057, 1062, 0.14744195615489714), ('src/_pytest/terminal.py', 1064, 1066, 0.14744195615489714), ('src/_pytest/terminal.py', 1068, 1069, 0.14744195615489714), ('src/_pytest/terminal.py', 1071, 1072, 0.14744195615489714), ('src/_pytest/terminal.py', 1077, 1077, 0.14744195615489714), ('src/_pytest/terminal.py', 1080, 1083, 0.14744195615489714), ('src/_pytest/terminal.py', 1090, 1090, 0.14744195615489714), ('src/_pytest/terminal.py', 1100, 1100, 0.14744195615489714), ('src/_pytest/terminal.py', 1108, 1108, 0.14744195615489714), ('src/_pytest/terminal.py', 1125, 1131, 0.14744195615489714), ('src/_pytest/terminal.py', 1134, 1138, 0.14744195615489714), ('src/_pytest/terminal.py', 1140, 1140, 0.14744195615489714), ('src/_pytest/terminal.py', 1174, 1174, 0.14744195615489714), ('src/_pytest/terminal.py', 1187, 1187, 0.14744195615489714), ('src/_pytest/terminal.py', 1190, 1190, 0.14744195615489714), ('src/_pytest/terminal.py', 1305, 1306, 0.14744195615489714), ('src/_pytest/warnings.py', 166, 168, 0.14744195615489714), ('src/_pytest/warnings.py', 170, 170, 0.14744195615489714), ('src/_pytest/warnings.py', 177, 179, 0.14744195615489714), ('src/_pytest/warnings.py', 181, 181, 0.14744195615489714), ('src/_pytest/warnings.py', 186, 188, 0.14744195615489714), ('src/_pytest/warnings.py', 190, 190, 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 118, 122, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 128, 128, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 131, 134, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 136, 136, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 146, 150, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 154, 155, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 158, 165, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 167, 167, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 170, 170, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 291, 291, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 293, 294, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 296, 297, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 329, 331, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 338, 340, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 348, 349, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 354, 361, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 371, 374, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 410, 410, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 654, 659, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 663, 663, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 671, 671, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 676, 678, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 680, 682, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 684, 689, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 696, 697, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 701, 702, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 706, 707, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 709, 709, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 711, 718, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 722, 727, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 730, 730, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 1081, 1082, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 1095, 1095, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 1100, 1100, 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 1109, 1109, 0.14586499149789456), ('src/_pytest/config/__init__.py', 145, 146, 0.14586499149789456), ('src/_pytest/config/__init__.py', 568, 574, 0.14586499149789456), ('src/_pytest/config/__init__.py', 580, 580, 0.14586499149789456), ('src/_pytest/main.py', 496, 496, 0.14586499149789456), ('src/_pytest/mark/structures.py', 401, 402, 0.14586499149789456), ('src/_pytest/mark/structures.py', 446, 448, 0.14586499149789456), ('src/_pytest/nodes.py', 99, 99, 0.14586499149789456), ('src/_pytest/nodes.py', 129, 129, 0.14586499149789456), ('src/_pytest/nodes.py', 132, 132, 0.14586499149789456), ('src/_pytest/nodes.py', 151, 151, 0.14586499149789456), ('src/_pytest/nodes.py', 154, 154, 0.14586499149789456), ('src/_pytest/nodes.py', 157, 157, 0.14586499149789456), ('src/_pytest/nodes.py', 160, 160, 0.14586499149789456), ('src/_pytest/nodes.py', 163, 163, 0.14586499149789456), ('src/_pytest/nodes.py', 177, 177, 0.14586499149789456), ('src/_pytest/pathlib.py', 467, 467, 0.14586499149789456), ('src/_pytest/pathlib.py', 469, 469, 0.14586499149789456), ('src/_pytest/pathlib.py', 471, 471, 0.14586499149789456), ('src/_pytest/pathlib.py', 474, 474, 0.14586499149789456), ('src/_pytest/pathlib.py', 492, 493, 0.14586499149789456), ('src/_pytest/pathlib.py', 506, 506, 0.14586499149789456), ('src/_pytest/pathlib.py', 509, 511, 0.14586499149789456), ('src/_pytest/pathlib.py', 515, 515, 0.14586499149789456), ('src/_pytest/pathlib.py', 545, 549, 0.14586499149789456), ('src/_pytest/pathlib.py', 553, 553, 0.14586499149789456), ('src/_pytest/_io/terminalwriter.py', 26, 26, 0.14433756729740646), ('src/_pytest/_io/terminalwriter.py', 28, 29, 0.14433756729740646), ('src/_pytest/_io/terminalwriter.py', 63, 65, 0.14433756729740646), ('src/_pytest/_io/terminalwriter.py', 73, 76, 0.14433756729740646), ('src/_pytest/_io/terminalwriter.py', 155, 156, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 88, 88, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 90, 91, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 93, 93, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 96, 97, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 99, 99, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 104, 105, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 107, 107, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 109, 109, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 113, 113, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 115, 115, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 213, 213, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 69, 70, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 72, 72, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 84, 84, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 114, 114, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 127, 129, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 131, 132, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 247, 252, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 254, 256, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 258, 258, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 357, 360, 0.14433756729740646), ('src/_pytest/cacheprovider.py', 467, 469, 0.14433756729740646), ('src/_pytest/config/__init__.py', 119, 121, 0.14433756729740646), ('src/_pytest/config/__init__.py', 141, 143, 0.14433756729740646), ('src/_pytest/config/__init__.py', 150, 150, 0.14433756729740646), ('src/_pytest/config/__init__.py', 284, 289, 0.14433756729740646), ('src/_pytest/config/__init__.py', 292, 294, 0.14433756729740646), ('src/_pytest/config/__init__.py', 424, 426, 0.14433756729740646), ('src/_pytest/config/__init__.py', 429, 431, 0.14433756729740646), ('src/_pytest/config/__init__.py', 434, 434, 0.14433756729740646), ('src/_pytest/config/__init__.py', 864, 868, 0.14433756729740646), ('src/_pytest/config/__init__.py', 871, 877, 0.14433756729740646), ('src/_pytest/config/__init__.py', 1161, 1163, 0.14433756729740646), ('src/_pytest/config/__init__.py', 1287, 1287, 0.14433756729740646), ('src/_pytest/config/__init__.py', 1326, 1327, 0.14433756729740646), ('src/_pytest/config/__init__.py', 1329, 1329, 0.14433756729740646), ('src/_pytest/config/__init__.py', 1331, 1331, 0.14433756729740646), ('src/_pytest/debugging.py', 63, 63, 0.14433756729740646), ('src/_pytest/debugging.py', 65, 65, 0.14433756729740646), ('src/_pytest/debugging.py', 67, 67, 0.14433756729740646), ('src/_pytest/debugging.py', 70, 71, 0.14433756729740646), ('src/_pytest/debugging.py', 73, 75, 0.14433756729740646), ('src/_pytest/debugging.py', 79, 84, 0.14433756729740646), ('src/_pytest/debugging.py', 86, 86, 0.14433756729740646), ('src/_pytest/doctest.py', 117, 117, 0.14433756729740646), ('src/_pytest/faulthandler.py', 26, 26, 0.14433756729740646), ('src/_pytest/faulthandler.py', 28, 28, 0.14433756729740646), ('src/_pytest/faulthandler.py', 33, 33, 0.14433756729740646), ('src/_pytest/faulthandler.py', 37, 38, 0.14433756729740646), ('src/_pytest/junitxml.py', 430, 430, 0.14433756729740646), ('src/_pytest/junitxml.py', 432, 432, 0.14433756729740646), ('src/_pytest/junitxml.py', 450, 451, 0.14433756729740646), ('src/_pytest/logging.py', 62, 64, 0.14433756729740646), ('src/_pytest/logging.py', 66, 68, 0.14433756729740646), ('src/_pytest/logging.py', 70, 70, 0.14433756729740646), ('src/_pytest/logging.py', 72, 74, 0.14433756729740646), ('src/_pytest/logging.py', 78, 80, 0.14433756729740646), ('src/_pytest/logging.py', 82, 83, 0.14433756729740646), ('src/_pytest/logging.py', 100, 101, 0.14433756729740646), ('src/_pytest/logging.py', 142, 143, 0.14433756729740646), ('src/_pytest/logging.py', 187, 192, 0.14433756729740646), ('src/_pytest/logging.py', 318, 319, 0.14433756729740646), ('src/_pytest/logging.py', 477, 481, 0.14433756729740646), ('src/_pytest/logging.py', 484, 484, 0.14433756729740646), ('src/_pytest/logging.py', 502, 502, 0.14433756729740646), ('src/_pytest/logging.py', 515, 515, 0.14433756729740646), ('src/_pytest/logging.py', 518, 521, 0.14433756729740646), ('src/_pytest/logging.py', 523, 525, 0.14433756729740646), ('src/_pytest/logging.py', 528, 533, 0.14433756729740646), ('src/_pytest/logging.py', 535, 536, 0.14433756729740646), ('src/_pytest/logging.py', 538, 538, 0.14433756729740646), ('src/_pytest/logging.py', 541, 542, 0.14433756729740646), ('src/_pytest/logging.py', 544, 544, 0.14433756729740646), ('src/_pytest/logging.py', 552, 556, 0.14433756729740646), ('src/_pytest/logging.py', 558, 558, 0.14433756729740646), ('src/_pytest/logging.py', 562, 564, 0.14433756729740646), ('src/_pytest/logging.py', 566, 567, 0.14433756729740646), ('src/_pytest/logging.py', 572, 573, 0.14433756729740646), ('src/_pytest/logging.py', 576, 576, 0.14433756729740646), ('src/_pytest/logging.py', 610, 614, 0.14433756729740646), ('src/_pytest/logging.py', 714, 714, 0.14433756729740646), ('src/_pytest/mark/__init__.py', 108, 108, 0.14433756729740646), ('src/_pytest/mark/__init__.py', 110, 110, 0.14433756729740646), ('src/_pytest/mark/__init__.py', 277, 277, 0.14433756729740646), ('src/_pytest/monkeypatch.py', 182, 183, 0.14433756729740646), ('src/_pytest/monkeypatch.py', 185, 185, 0.14433756729740646), ('src/_pytest/monkeypatch.py', 195, 195, 0.14433756729740646), ('src/_pytest/monkeypatch.py', 202, 203, 0.14433756729740646), ('src/_pytest/monkeypatch.py', 207, 207, 0.14433756729740646), ('src/_pytest/monkeypatch.py', 209, 210, 0.14433756729740646), ('src/_pytest/pastebin.py', 33, 33, 0.14433756729740646), ('src/_pytest/pastebin.py', 53, 53, 0.14433756729740646), ('src/_pytest/pathlib.py', 367, 371, 0.14433756729740646), ('src/_pytest/pathlib.py', 374, 374, 0.14433756729740646), ('src/_pytest/pytester.py', 195, 196, 0.14433756729740646), ('src/_pytest/pytester.py', 218, 219, 0.14433756729740646), ('src/_pytest/pytester.py', 221, 222, 0.14433756729740646), ('src/_pytest/pytester.py', 224, 225, 0.14433756729740646), ('src/_pytest/pytester.py', 227, 227, 0.14433756729740646), ('src/_pytest/pytester.py', 230, 230, 0.14433756729740646), ('src/_pytest/pytester.py', 623, 625, 0.14433756729740646), ('src/_pytest/pytester.py', 929, 929, 0.14433756729740646), ('src/_pytest/pytester.py', 931, 933, 0.14433756729740646), ('src/_pytest/pytester.py', 938, 939, 0.14433756729740646), ('src/_pytest/pytester.py', 947, 947, 0.14433756729740646), ('src/_pytest/pytester.py', 949, 951, 0.14433756729740646), ('src/_pytest/pytester.py', 953, 956, 0.14433756729740646), ('src/_pytest/pytester.py', 962, 962, 0.14433756729740646), ('src/_pytest/pytester.py', 966, 966, 0.14433756729740646), ('src/_pytest/pytester.py', 970, 970, 0.14433756729740646), ('src/_pytest/pytester.py', 972, 973, 0.14433756729740646), ('src/_pytest/python.py', 138, 140, 0.14433756729740646), ('src/_pytest/python.py', 149, 151, 0.14433756729740646), ('src/_pytest/resultlog.py', 32, 32, 0.14433756729740646), ('src/_pytest/resultlog.py', 34, 34, 0.14433756729740646), ('src/_pytest/resultlog.py', 49, 50, 0.14433756729740646), ('src/_pytest/setuponly.py', 92, 92, 0.14433756729740646), ('src/_pytest/setuponly.py', 94, 94, 0.14433756729740646), ('src/_pytest/setupplan.py', 37, 37, 0.14433756729740646), ('src/_pytest/setupplan.py', 40, 40, 0.14433756729740646), ('src/_pytest/skipping.py', 44, 44, 0.14433756729740646), ('src/_pytest/skipping.py', 57, 59, 0.14433756729740646), ('src/_pytest/skipping.py', 63, 65, 0.14433756729740646), ('src/_pytest/skipping.py', 71, 73, 0.14433756729740646), ('src/_pytest/stepwise.py', 31, 31, 0.14433756729740646), ('src/_pytest/stepwise.py', 36, 39, 0.14433756729740646), ('src/_pytest/stepwise.py', 41, 41, 0.14433756729740646), ('src/_pytest/terminal.py', 220, 222, 0.14433756729740646), ('src/_pytest/terminal.py', 232, 232, 0.14433756729740646), ('src/_pytest/terminal.py', 234, 237, 0.14433756729740646), ('src/_pytest/terminal.py', 239, 239, 0.14433756729740646), ('src/_pytest/terminal.py', 241, 241, 0.14433756729740646), ('src/_pytest/terminal.py', 243, 243, 0.14433756729740646), ('src/_pytest/terminal.py', 245, 246, 0.14433756729740646), ('src/_pytest/terminal.py', 248, 249, 0.14433756729740646), ('src/_pytest/terminal.py', 253, 253, 0.14433756729740646), ('src/_pytest/terminal.py', 311, 311, 0.14433756729740646), ('src/_pytest/terminal.py', 313, 316, 0.14433756729740646), ('src/_pytest/terminal.py', 318, 322, 0.14433756729740646), ('src/_pytest/terminal.py', 324, 334, 0.14433756729740646), ('src/_pytest/terminal.py', 349, 349, 0.14433756729740646), ('src/_pytest/terminal.py', 495, 495, 0.14433756729740646), ('src/_pytest/terminal.py', 832, 832, 0.14433756729740646), ('src/_pytest/tmpdir.py', 44, 45, 0.14433756729740646), ('src/_pytest/tmpdir.py', 145, 150, 0.14433756729740646), ('src/_pytest/warnings.py', 76, 78, 0.14433756729740646), ('src/_pytest/_io/terminalwriter.py', 80, 80, 0.14285714285714285), ('src/_pytest/_io/terminalwriter.py', 82, 82, 0.14285714285714285), ('src/_pytest/compat.py', 325, 328, 0.14285714285714285), ('src/_pytest/config/__init__.py', 1181, 1190, 0.14285714285714285), ('src/_pytest/terminal.py', 1170, 1171, 0.14285714285714285), ('src/_pytest/capture.py', 114, 115, 0.1414213562373095), ('src/_pytest/capture.py', 119, 119, 0.1414213562373095), ('src/_pytest/capture.py', 152, 159, 0.1414213562373095), ('src/_pytest/capture.py', 257, 262, 0.1414213562373095), ('src/_pytest/capture.py', 265, 266, 0.1414213562373095), ('src/_pytest/capture.py', 294, 296, 0.1414213562373095), ('src/_pytest/capture.py', 358, 358, 0.1414213562373095), ('src/_pytest/capture.py', 360, 361, 0.1414213562373095), ('src/_pytest/capture.py', 379, 380, 0.1414213562373095), ('src/_pytest/capture.py', 382, 384, 0.1414213562373095), ('src/_pytest/capture.py', 386, 386, 0.1414213562373095), ('src/_pytest/capture.py', 388, 391, 0.1414213562373095), ('src/_pytest/capture.py', 393, 394, 0.1414213562373095), ('src/_pytest/capture.py', 398, 398, 0.1414213562373095), ('src/_pytest/capture.py', 418, 421, 0.1414213562373095), ('src/_pytest/capture.py', 511, 517, 0.1414213562373095), ('src/_pytest/capture.py', 573, 574, 0.1414213562373095), ('src/_pytest/_code/source.py', 35, 38, 0.14002800840280097), ('src/_pytest/_code/source.py', 40, 40, 0.14002800840280097), ('src/_pytest/_code/source.py', 42, 42, 0.14002800840280097), ('src/_pytest/_code/source.py', 44, 45, 0.14002800840280097), ('src/_pytest/_code/source.py', 48, 50, 0.14002800840280097), ('src/_pytest/_code/source.py', 321, 321, 0.14002800840280097), ('src/_pytest/capture.py', 234, 234, 0.14002800840280097), ('src/_pytest/capture.py', 307, 308, 0.14002800840280097), ('src/_pytest/capture.py', 310, 313, 0.14002800840280097), ('src/_pytest/capture.py', 434, 435, 0.14002800840280097), ('src/_pytest/capture.py', 437, 439, 0.14002800840280097), ('src/_pytest/capture.py', 443, 445, 0.14002800840280097), ('src/_pytest/capture.py', 552, 558, 0.14002800840280097), ('src/_pytest/pytester.py', 636, 636, 0.14002800840280097), ('src/_pytest/pytester.py', 638, 639, 0.14002800840280097), ('src/_pytest/pytester.py', 641, 641, 0.14002800840280097), ('src/_pytest/pytester.py', 646, 655, 0.14002800840280097), ('src/_pytest/fixtures.py', 1041, 1043, 0.1386750490563073), ('src/_pytest/fixtures.py', 1047, 1048, 0.1386750490563073), ('src/_pytest/_argcomplete.py', 107, 107, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 25, 32, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 34, 34, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 40, 44, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 79, 79, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 86, 88, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 93, 96, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 98, 101, 0.13736056394868904), ('src/_pytest/assertion/__init__.py', 103, 104, 0.13736056394868904), ('src/_pytest/assertion/rewrite.py', 60, 62, 0.13736056394868904), ('src/_pytest/assertion/rewrite.py', 65, 67, 0.13736056394868904), ('src/_pytest/assertion/rewrite.py', 70, 73, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 400, 406, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 409, 414, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 418, 423, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 426, 430, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 432, 432, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 436, 440, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 442, 443, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 445, 453, 0.13736056394868904), ('src/_pytest/capture.py', 33, 40, 0.13736056394868904), ('src/_pytest/capture.py', 42, 47, 0.13736056394868904), ('src/_pytest/capture.py', 60, 60, 0.13736056394868904), ('src/_pytest/capture.py', 85, 85, 0.13736056394868904), ('src/_pytest/capture.py', 162, 162, 0.13736056394868904), ('src/_pytest/capture.py', 165, 168, 0.13736056394868904), ('src/_pytest/capture.py', 501, 503, 0.13736056394868904), ('src/_pytest/capture.py', 603, 605, 0.13736056394868904), ('src/_pytest/capture.py', 625, 627, 0.13736056394868904), ('src/_pytest/config/__init__.py', 244, 248, 0.13736056394868904), ('src/_pytest/config/__init__.py', 252, 252, 0.13736056394868904), ('src/_pytest/config/__init__.py', 254, 254, 0.13736056394868904), ('src/_pytest/config/__init__.py', 256, 258, 0.13736056394868904), ('src/_pytest/config/__init__.py', 276, 276, 0.13736056394868904), ('src/_pytest/config/__init__.py', 278, 278, 0.13736056394868904), ('src/_pytest/config/__init__.py', 280, 280, 0.13736056394868904), ('src/_pytest/config/__init__.py', 312, 312, 0.13736056394868904), ('src/_pytest/config/__init__.py', 314, 314, 0.13736056394868904), ('src/_pytest/config/__init__.py', 316, 316, 0.13736056394868904), ('src/_pytest/config/__init__.py', 320, 320, 0.13736056394868904), ('src/_pytest/config/__init__.py', 322, 325, 0.13736056394868904), ('src/_pytest/config/__init__.py', 327, 329, 0.13736056394868904), ('src/_pytest/config/__init__.py', 342, 342, 0.13736056394868904), ('src/_pytest/config/__init__.py', 344, 344, 0.13736056394868904), ('src/_pytest/config/__init__.py', 350, 351, 0.13736056394868904), ('src/_pytest/config/__init__.py', 353, 353, 0.13736056394868904), ('src/_pytest/config/__init__.py', 356, 357, 0.13736056394868904), ('src/_pytest/config/__init__.py', 360, 360, 0.13736056394868904), ('src/_pytest/config/__init__.py', 364, 366, 0.13736056394868904), ('src/_pytest/config/__init__.py', 369, 369, 0.13736056394868904), ('src/_pytest/config/__init__.py', 371, 373, 0.13736056394868904), ('src/_pytest/config/__init__.py', 376, 378, 0.13736056394868904), ('src/_pytest/config/__init__.py', 380, 380, 0.13736056394868904), ('src/_pytest/config/__init__.py', 383, 388, 0.13736056394868904), ('src/_pytest/config/__init__.py', 390, 390, 0.13736056394868904), ('src/_pytest/config/__init__.py', 393, 393, 0.13736056394868904), ('src/_pytest/config/__init__.py', 403, 406, 0.13736056394868904), ('src/_pytest/config/__init__.py', 409, 411, 0.13736056394868904), ('src/_pytest/config/__init__.py', 471, 471, 0.13736056394868904), ('src/_pytest/config/__init__.py', 473, 473, 0.13736056394868904), ('src/_pytest/config/__init__.py', 617, 617, 0.13736056394868904), ('src/_pytest/config/__init__.py', 620, 620, 0.13736056394868904), ('src/_pytest/config/__init__.py', 623, 624, 0.13736056394868904), ('src/_pytest/config/__init__.py', 636, 636, 0.13736056394868904), ('src/_pytest/config/__init__.py', 639, 640, 0.13736056394868904), ('src/_pytest/config/__init__.py', 643, 644, 0.13736056394868904), ('src/_pytest/config/__init__.py', 646, 646, 0.13736056394868904), ('src/_pytest/config/__init__.py', 651, 652, 0.13736056394868904), ('src/_pytest/config/__init__.py', 667, 668, 0.13736056394868904), ('src/_pytest/config/__init__.py', 679, 680, 0.13736056394868904), ('src/_pytest/config/__init__.py', 682, 682, 0.13736056394868904), ('src/_pytest/config/__init__.py', 687, 688, 0.13736056394868904), ('src/_pytest/config/__init__.py', 809, 809, 0.13736056394868904), ('src/_pytest/config/__init__.py', 811, 811, 0.13736056394868904), ('src/_pytest/config/__init__.py', 816, 816, 0.13736056394868904), ('src/_pytest/config/__init__.py', 821, 821, 0.13736056394868904), ('src/_pytest/config/__init__.py', 823, 826, 0.13736056394868904), ('src/_pytest/config/__init__.py', 828, 828, 0.13736056394868904), ('src/_pytest/config/__init__.py', 833, 838, 0.13736056394868904), ('src/_pytest/config/__init__.py', 841, 845, 0.13736056394868904), ('src/_pytest/config/__init__.py', 848, 848, 0.13736056394868904), ('src/_pytest/config/__init__.py', 856, 856, 0.13736056394868904), ('src/_pytest/config/__init__.py', 861, 861, 0.13736056394868904), ('src/_pytest/config/__init__.py', 885, 886, 0.13736056394868904), ('src/_pytest/config/__init__.py', 906, 906, 0.13736056394868904), ('src/_pytest/config/__init__.py', 944, 945, 0.13736056394868904), ('src/_pytest/config/__init__.py', 947, 949, 0.13736056394868904), ('src/_pytest/config/__init__.py', 953, 953, 0.13736056394868904), ('src/_pytest/config/__init__.py', 956, 957, 0.13736056394868904), ('src/_pytest/config/__init__.py', 959, 963, 0.13736056394868904), ('src/_pytest/config/__init__.py', 965, 973, 0.13736056394868904), ('src/_pytest/config/__init__.py', 975, 975, 0.13736056394868904), ('src/_pytest/config/__init__.py', 984, 987, 0.13736056394868904), ('src/_pytest/config/__init__.py', 989, 990, 0.13736056394868904), ('src/_pytest/config/__init__.py', 994, 995, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1003, 1003, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1005, 1005, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1007, 1007, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1021, 1024, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1027, 1027, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1029, 1029, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1032, 1034, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1039, 1042, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1045, 1048, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1052, 1054, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1056, 1058, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1061, 1063, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1082, 1082, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1084, 1085, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1101, 1101, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1105, 1107, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1129, 1130, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1134, 1135, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1137, 1138, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1140, 1140, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1142, 1146, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1148, 1148, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1153, 1153, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1177, 1178, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1243, 1243, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1247, 1247, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1259, 1259, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1295, 1298, 0.13736056394868904), ('src/_pytest/config/__init__.py', 1304, 1304, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 43, 49, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 52, 54, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 70, 79, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 102, 102, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 104, 107, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 110, 110, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 112, 122, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 125, 126, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 134, 137, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 147, 147, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 157, 159, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 178, 180, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 212, 215, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 222, 225, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 228, 228, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 253, 254, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 256, 264, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 273, 273, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 277, 286, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 288, 289, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 295, 296, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 302, 303, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 309, 309, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 311, 311, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 317, 317, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 337, 340, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 350, 351, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 353, 353, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 355, 356, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 359, 360, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 363, 365, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 367, 369, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 379, 386, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 390, 390, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 409, 410, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 418, 418, 0.13736056394868904), ('src/_pytest/config/argparsing.py', 469, 471, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 90, 90, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 96, 97, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 99, 104, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 127, 127, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 131, 131, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 153, 153, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 165, 167, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 193, 193, 0.13736056394868904), ('src/_pytest/config/findpaths.py', 201, 202, 0.13736056394868904), ('src/_pytest/debugging.py', 39, 44, 0.13736056394868904), ('src/_pytest/debugging.py', 46, 51, 0.13736056394868904), ('src/_pytest/debugging.py', 54, 58, 0.13736056394868904), ('src/_pytest/doctest.py', 65, 69, 0.13736056394868904), ('src/_pytest/doctest.py', 71, 72, 0.13736056394868904), ('src/_pytest/doctest.py', 74, 80, 0.13736056394868904), ('src/_pytest/doctest.py', 82, 88, 0.13736056394868904), ('src/_pytest/doctest.py', 90, 96, 0.13736056394868904), ('src/_pytest/doctest.py', 98, 103, 0.13736056394868904), ('src/_pytest/doctest.py', 105, 110, 0.13736056394868904), ('src/_pytest/faulthandler.py', 18, 19, 0.13736056394868904), ('src/_pytest/faulthandler.py', 22, 22, 0.13736056394868904), ('src/_pytest/fixtures.py', 778, 780, 0.13736056394868904), ('src/_pytest/fixtures.py', 782, 782, 0.13736056394868904), ('src/_pytest/fixtures.py', 1034, 1035, 0.13736056394868904), ('src/_pytest/fixtures.py', 1406, 1410, 0.13736056394868904), ('src/_pytest/helpconfig.py', 28, 34, 0.13736056394868904), ('src/_pytest/helpconfig.py', 46, 53, 0.13736056394868904), ('src/_pytest/helpconfig.py', 56, 61, 0.13736056394868904), ('src/_pytest/helpconfig.py', 63, 69, 0.13736056394868904), ('src/_pytest/helpconfig.py', 73, 78, 0.13736056394868904), ('src/_pytest/helpconfig.py', 80, 85, 0.13736056394868904), ('src/_pytest/helpconfig.py', 87, 92, 0.13736056394868904), ('src/_pytest/helpconfig.py', 98, 100, 0.13736056394868904), ('src/_pytest/junitxml.py', 385, 394, 0.13736056394868904), ('src/_pytest/junitxml.py', 396, 402, 0.13736056394868904), ('src/_pytest/junitxml.py', 404, 405, 0.13736056394868904), ('src/_pytest/junitxml.py', 407, 409, 0.13736056394868904), ('src/_pytest/junitxml.py', 411, 411, 0.13736056394868904), ('src/_pytest/junitxml.py', 413, 417, 0.13736056394868904), ('src/_pytest/junitxml.py', 419, 422, 0.13736056394868904), ('src/_pytest/junitxml.py', 424, 425, 0.13736056394868904), ('src/_pytest/logging.py', 197, 197, 0.13736056394868904), ('src/_pytest/logging.py', 199, 201, 0.13736056394868904), ('src/_pytest/logging.py', 203, 203, 0.13736056394868904), ('src/_pytest/logging.py', 205, 209, 0.13736056394868904), ('src/_pytest/logging.py', 211, 211, 0.13736056394868904), ('src/_pytest/logging.py', 216, 220, 0.13736056394868904), ('src/_pytest/logging.py', 222, 226, 0.13736056394868904), ('src/_pytest/logging.py', 228, 232, 0.13736056394868904), ('src/_pytest/logging.py', 234, 235, 0.13736056394868904), ('src/_pytest/logging.py', 237, 241, 0.13736056394868904), ('src/_pytest/logging.py', 243, 247, 0.13736056394868904), ('src/_pytest/logging.py', 249, 253, 0.13736056394868904), ('src/_pytest/logging.py', 255, 259, 0.13736056394868904), ('src/_pytest/logging.py', 261, 265, 0.13736056394868904), ('src/_pytest/logging.py', 267, 271, 0.13736056394868904), ('src/_pytest/logging.py', 273, 277, 0.13736056394868904), ('src/_pytest/main.py', 49, 53, 0.13736056394868904), ('src/_pytest/main.py', 55, 57, 0.13736056394868904), ('src/_pytest/main.py', 59, 60, 0.13736056394868904), ('src/_pytest/main.py', 62, 69, 0.13736056394868904), ('src/_pytest/main.py', 71, 78, 0.13736056394868904), ('src/_pytest/main.py', 80, 83, 0.13736056394868904), ('src/_pytest/main.py', 85, 89, 0.13736056394868904), ('src/_pytest/main.py', 91, 96, 0.13736056394868904), ('src/_pytest/main.py', 99, 104, 0.13736056394868904), ('src/_pytest/main.py', 106, 110, 0.13736056394868904), ('src/_pytest/main.py', 115, 121, 0.13736056394868904), ('src/_pytest/main.py', 123, 126, 0.13736056394868904), ('src/_pytest/main.py', 128, 132, 0.13736056394868904), ('src/_pytest/main.py', 134, 138, 0.13736056394868904), ('src/_pytest/main.py', 140, 144, 0.13736056394868904), ('src/_pytest/main.py', 146, 152, 0.13736056394868904), ('src/_pytest/main.py', 154, 159, 0.13736056394868904), ('src/_pytest/main.py', 161, 167, 0.13736056394868904), ('src/_pytest/main.py', 169, 174, 0.13736056394868904), ('src/_pytest/main.py', 176, 181, 0.13736056394868904), ('src/_pytest/main.py', 185, 191, 0.13736056394868904), ('src/_pytest/main.py', 193, 193, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 65, 72, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 86, 92, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 96, 99, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 102, 103, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 264, 265, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 267, 267, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 269, 269, 0.13736056394868904), ('src/_pytest/monkeypatch.py', 253, 254, 0.13736056394868904), ('src/_pytest/monkeypatch.py', 262, 263, 0.13736056394868904), ('src/_pytest/monkeypatch.py', 273, 273, 0.13736056394868904), ('src/_pytest/monkeypatch.py', 284, 284, 0.13736056394868904), ('src/_pytest/monkeypatch.py', 286, 286, 0.13736056394868904), ('src/_pytest/monkeypatch.py', 295, 296, 0.13736056394868904), ('src/_pytest/pastebin.py', 19, 27, 0.13736056394868904), ('src/_pytest/pathlib.py', 153, 155, 0.13736056394868904), ('src/_pytest/pathlib.py', 165, 166, 0.13736056394868904), ('src/_pytest/pathlib.py', 173, 173, 0.13736056394868904), ('src/_pytest/pathlib.py', 208, 208, 0.13736056394868904), ('src/_pytest/pathlib.py', 210, 214, 0.13736056394868904), ('src/_pytest/pathlib.py', 218, 219, 0.13736056394868904), ('src/_pytest/pytester.py', 391, 391, 0.13736056394868904), ('src/_pytest/pytester.py', 507, 507, 0.13736056394868904), ('src/_pytest/pytester.py', 510, 510, 0.13736056394868904), ('src/_pytest/pytester.py', 561, 563, 0.13736056394868904), ('src/_pytest/pytester.py', 565, 566, 0.13736056394868904), ('src/_pytest/pytester.py', 569, 578, 0.13736056394868904), ('src/_pytest/pytester.py', 580, 581, 0.13736056394868904), ('src/_pytest/pytester.py', 583, 583, 0.13736056394868904), ('src/_pytest/pytester.py', 585, 585, 0.13736056394868904), ('src/_pytest/pytester.py', 587, 589, 0.13736056394868904), ('src/_pytest/pytester.py', 591, 591, 0.13736056394868904), ('src/_pytest/pytester.py', 607, 610, 0.13736056394868904), ('src/_pytest/pytester.py', 633, 633, 0.13736056394868904), ('src/_pytest/python.py', 76, 83, 0.13736056394868904), ('src/_pytest/python.py', 86, 91, 0.13736056394868904), ('src/_pytest/python.py', 93, 95, 0.13736056394868904), ('src/_pytest/python.py', 97, 98, 0.13736056394868904), ('src/_pytest/python.py', 100, 104, 0.13736056394868904), ('src/_pytest/python.py', 106, 110, 0.13736056394868904), ('src/_pytest/python.py', 112, 116, 0.13736056394868904), ('src/_pytest/resultlog.py', 20, 27, 0.13736056394868904), ('src/_pytest/runner.py', 46, 53, 0.13736056394868904), ('src/_pytest/setuponly.py', 15, 20, 0.13736056394868904), ('src/_pytest/setuponly.py', 22, 26, 0.13736056394868904), ('src/_pytest/setupplan.py', 13, 18, 0.13736056394868904), ('src/_pytest/skipping.py', 25, 31, 0.13736056394868904), ('src/_pytest/skipping.py', 34, 36, 0.13736056394868904), ('src/_pytest/skipping.py', 38, 39, 0.13736056394868904), ('src/_pytest/stepwise.py', 13, 19, 0.13736056394868904), ('src/_pytest/stepwise.py', 21, 25, 0.13736056394868904), ('src/_pytest/terminal.py', 88, 94, 0.13736056394868904), ('src/_pytest/terminal.py', 111, 118, 0.13736056394868904), ('src/_pytest/terminal.py', 120, 125, 0.13736056394868904), ('src/_pytest/terminal.py', 127, 132, 0.13736056394868904), ('src/_pytest/terminal.py', 134, 140, 0.13736056394868904), ('src/_pytest/terminal.py', 142, 147, 0.13736056394868904), ('src/_pytest/terminal.py', 149, 155, 0.13736056394868904), ('src/_pytest/terminal.py', 161, 167, 0.13736056394868904), ('src/_pytest/terminal.py', 169, 175, 0.13736056394868904), ('src/_pytest/terminal.py', 177, 184, 0.13736056394868904), ('src/_pytest/terminal.py', 186, 192, 0.13736056394868904), ('src/_pytest/terminal.py', 195, 200, 0.13736056394868904), ('src/_pytest/terminal.py', 202, 209, 0.13736056394868904), ('src/_pytest/terminal.py', 212, 215, 0.13736056394868904), ('src/_pytest/tmpdir.py', 49, 50, 0.13736056394868904), ('src/_pytest/tmpdir.py', 54, 54, 0.13736056394868904), ('src/_pytest/tmpdir.py', 71, 72, 0.13736056394868904), ('src/_pytest/tmpdir.py', 76, 78, 0.13736056394868904), ('src/_pytest/tmpdir.py', 82, 83, 0.13736056394868904), ('src/_pytest/tmpdir.py', 119, 119, 0.13736056394868904), ('src/_pytest/warnings.py', 59, 64, 0.13736056394868904), ('src/_pytest/warnings.py', 66, 69, 0.13736056394868904), ('testing/conftest.py', 135, 136, 0.13736056394868904), ('src/_pytest/_io/terminalwriter.py', 16, 16, 0.13608276348795434), ('src/_pytest/_io/terminalwriter.py', 19, 19, 0.13608276348795434), ('src/_pytest/_io/terminalwriter.py', 22, 22, 0.13608276348795434), ('src/_pytest/capture.py', 521, 522, 0.13608276348795434), ('src/_pytest/capture.py', 524, 524, 0.13608276348795434), ('src/_pytest/capture.py', 526, 526, 0.13608276348795434), ('src/_pytest/capture.py', 550, 550, 0.13608276348795434), ('src/_pytest/capture.py', 630, 633, 0.13608276348795434), ('src/_pytest/config/__init__.py', 480, 480, 0.13608276348795434), ('src/_pytest/config/__init__.py', 486, 486, 0.13608276348795434), ('src/_pytest/config/__init__.py', 491, 493, 0.13608276348795434), ('src/_pytest/config/__init__.py', 495, 496, 0.13608276348795434), ('src/_pytest/config/__init__.py', 499, 500, 0.13608276348795434), ('src/_pytest/store.py', 86, 86, 0.13608276348795434), ('src/_pytest/runner.py', 380, 383, 0.13483997249264842), ('src/_pytest/fixtures.py', 162, 163, 0.1336306209562122), ('src/_pytest/fixtures.py', 165, 165, 0.1336306209562122), ('src/_pytest/fixtures.py', 728, 729, 0.1336306209562122), ('src/_pytest/fixtures.py', 732, 732, 0.1336306209562122), ('src/_pytest/fixtures.py', 735, 735, 0.1336306209562122), ('src/_pytest/fixtures.py', 1680, 1684, 0.13018891098082389), ('src/_pytest/fixtures.py', 1689, 1689, 0.13018891098082389), ('src/_pytest/fixtures.py', 1691, 1693, 0.13018891098082389), ('src/_pytest/nodes.py', 83, 85, 0.13018891098082389), ('src/_pytest/nodes.py', 87, 87, 0.13018891098082389), ('src/_pytest/faulthandler.py', 88, 90, 0.12216944435630522), ('src/_pytest/compat.py', 105, 106, 0.12126781251816648), ('src/_pytest/faulthandler.py', 99, 99, 0.12126781251816648), ('src/_pytest/fixtures.py', 900, 902, 0.12126781251816648), ('src/_pytest/fixtures.py', 904, 906, 0.12126781251816648), ('src/_pytest/fixtures.py', 911, 912, 0.12126781251816648), ('src/_pytest/fixtures.py', 922, 925, 0.12126781251816648), ('src/_pytest/fixtures.py', 1004, 1009, 0.12126781251816648), ('src/_pytest/logging.py', 692, 692, 0.12126781251816648), ('src/_pytest/python.py', 172, 173, 0.12126781251816648), ('src/_pytest/python.py', 175, 177, 0.12126781251816648), ('src/_pytest/python.py', 1559, 1559, 0.12126781251816648), ('src/_pytest/runner.py', 144, 146, 0.12126781251816648), ('src/_pytest/skipping.py', 107, 110, 0.12126781251816648), ('src/_pytest/terminal.py', 258, 259, 0.12126781251816648), ('src/_pytest/terminal.py', 264, 265, 0.12126781251816648), ('src/_pytest/terminal.py', 269, 269, 0.12126781251816648), ('src/_pytest/terminal.py', 544, 545, 0.12126781251816648), ('src/_pytest/terminal.py', 565, 565, 0.12126781251816648), ('src/_pytest/_io/terminalwriter.py', 94, 95, 0.1203858530857692), ('src/_pytest/_io/terminalwriter.py', 97, 97, 0.1203858530857692), ('src/_pytest/_io/terminalwriter.py', 101, 101, 0.1203858530857692), ('src/_pytest/_io/terminalwriter.py', 146, 146, 0.1203858530857692), ('src/_pytest/_io/terminalwriter.py', 148, 148, 0.1203858530857692), ('src/_pytest/nodes.py', 324, 324, 0.11952286093343936), ('src/_pytest/fixtures.py', 625, 635, 0.11785113019775793), ('src/_pytest/fixtures.py', 646, 646, 0.11785113019775793), ('src/_pytest/runner.py', 415, 416, 0.11704114719613057), ('src/_pytest/fixtures.py', 609, 615, 0.11624763874381928), ('src/_pytest/fixtures.py', 696, 698, 0.11624763874381928), ('src/_pytest/fixtures.py', 914, 916, 0.11624763874381928), ('src/_pytest/fixtures.py', 1030, 1032, 0.11624763874381928), ('src/_pytest/fixtures.py', 1099, 1105, 0.11624763874381928), ('src/_pytest/fixtures.py', 475, 477, 0.11547005383792514), ('src/_pytest/fixtures.py', 480, 480, 0.11547005383792514), ('src/_pytest/fixtures.py', 482, 486, 0.11547005383792514), ('src/_pytest/fixtures.py', 588, 597, 0.11547005383792514), ('src/_pytest/fixtures.py', 606, 607, 0.11547005383792514), ('src/_pytest/fixtures.py', 813, 816, 0.11547005383792514), ('src/_pytest/fixtures.py', 135, 136, 0.1125087900926024), ('src/_pytest/fixtures.py', 496, 496, 0.1125087900926024), ('src/_pytest/fixtures.py', 509, 513, 0.11180339887498948), ('src/_pytest/fixtures.py', 534, 534, 0.11180339887498948), ('src/_pytest/fixtures.py', 601, 603, 0.11180339887498948), ('src/_pytest/fixtures.py', 677, 677, 0.11180339887498948), ('src/_pytest/fixtures.py', 680, 681, 0.11180339887498948), ('src/_pytest/fixtures.py', 683, 683, 0.11180339887498948), ('src/_pytest/fixtures.py', 685, 685, 0.11180339887498948), ('src/_pytest/fixtures.py', 691, 692, 0.11180339887498948), ('src/_pytest/fixtures.py', 753, 755, 0.11180339887498948), ('src/_pytest/fixtures.py', 757, 764, 0.11180339887498948), ('src/_pytest/fixtures.py', 790, 790, 0.11180339887498948), ('src/_pytest/fixtures.py', 1015, 1015, 0.11180339887498948), ('src/_pytest/fixtures.py', 1018, 1019, 0.11180339887498948), ('src/_pytest/fixtures.py', 1024, 1025, 0.11180339887498948), ('src/_pytest/fixtures.py', 1037, 1038, 0.11180339887498948), ('src/_pytest/fixtures.py', 1054, 1056, 0.11180339887498948), ('src/_pytest/fixtures.py', 1059, 1059, 0.11180339887498948), ('src/_pytest/fixtures.py', 1073, 1074, 0.11180339887498948), ('src/_pytest/fixtures.py', 1082, 1082, 0.11180339887498948), ('src/_pytest/fixtures.py', 1092, 1092, 0.11180339887498948), ('src/_pytest/fixtures.py', 1107, 1110, 0.11180339887498948), ('src/_pytest/fixtures.py', 1116, 1117, 0.11180339887498948), ('src/_pytest/setuponly.py', 34, 35, 0.11180339887498948), ('src/_pytest/setuponly.py', 51, 53, 0.11180339887498948), ('src/_pytest/setupplan.py', 28, 28, 0.11180339887498948), ('src/_pytest/setupplan.py', 32, 32, 0.11180339887498948), ('src/_pytest/fixtures.py', 470, 471, 0.1111111111111111), ('src/_pytest/fixtures.py', 491, 491, 0.1111111111111111), ('src/_pytest/fixtures.py', 564, 568, 0.1111111111111111), ('src/_pytest/fixtures.py', 581, 583, 0.1111111111111111), ('src/_pytest/skipping.py', 92, 92, 0.10314212462587934), ('src/_pytest/skipping.py', 101, 102, 0.10314212462587934), ('src/_pytest/fixtures.py', 454, 456, 0.10259783520851541), ('src/_pytest/logging.py', 686, 686, 0.10259783520851541), ('src/_pytest/nodes.py', 248, 248, 0.10259783520851541), ('src/_pytest/nose.py', 10, 11, 0.10259783520851541), ('src/_pytest/nose.py', 13, 13, 0.10259783520851541), ('src/_pytest/nose.py', 19, 21, 0.10259783520851541), ('src/_pytest/runner.py', 139, 140, 0.10259783520851541), ('src/_pytest/runner.py', 355, 356, 0.10259783520851541), ('src/_pytest/runner.py', 358, 358, 0.10259783520851541), ('src/_pytest/runner.py', 361, 362, 0.10259783520851541), ('src/_pytest/runner.py', 365, 370, 0.10259783520851541), ('src/_pytest/runner.py', 376, 376, 0.10259783520851541), ('src/_pytest/runner.py', 420, 424, 0.10259783520851541)]
2024-04-05 04:19:56 SBFL result (methods): [('src/_pytest/_code/source.py', 'Source', 'compile', 1.0), ('src/_pytest/_code/source.py', '', 'compile_', 1.0), ('src/_pytest/assertion/__init__.py', '', 'pytest_runtest_protocol', 1.0), ('src/_pytest/assertion/rewrite.py', '', '_call_reprcompare', 1.0), ('src/_pytest/assertion/rewrite.py', '', '_call_assertion_pass', 1.0), ('src/_pytest/assertion/truncate.py', '', 'truncate_if_required', 1.0), ('src/_pytest/assertion/truncate.py', '', '_should_truncate_item', 1.0), ('src/_pytest/assertion/truncate.py', '', '_running_on_ci', 1.0), ('src/_pytest/assertion/truncate.py', '', '_truncate_explanation', 1.0), ('src/_pytest/assertion/util.py', '', '_split_explanation', 1.0), ('src/_pytest/assertion/util.py', '', '_format_lines', 1.0), ('src/_pytest/assertion/util.py', '', 'isiterable', 1.0), ('src/_pytest/assertion/util.py', '', 'assertrepr_compare', 1.0), ('src/_pytest/assertion/util.py', '', '_diff_text', 1.0), ('src/_pytest/assertion/util.py', '', '_compare_eq_iterable', 1.0), ('src/_pytest/assertion/util.py', '', '_compare_eq_dict', 1.0), ('src/_pytest/assertion/util.py', '', '_compare_eq_cls', 1.0), ('src/_pytest/mark/evaluate.py', '', 'cached_eval', 1.0), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '__init__', 1.0), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '_istrue', 1.0), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', 'getexplanation', 1.0), ('src/_pytest/pytester.py', '', '__str__', 1.0), ('src/_pytest/reports.py', 'TestReport', 'from_item_and_call', 1.0), ('src/_pytest/store.py', 'Store', 'setdefault', 1.0), ('src/_pytest/terminal.py', 'TerminalReporter', '_add_stats', 1.0), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_internalerror', 1.0), ('src/_pytest/assertion/util.py', '', 'issequence', 0.7071067811865475), ('src/_pytest/assertion/util.py', '', 'istext', 0.7071067811865475), ('src/_pytest/assertion/util.py', '', 'isdict', 0.7071067811865475), ('src/_pytest/assertion/util.py', '', 'isset', 0.7071067811865475), ('src/_pytest/outcomes.py', 'Skipped', '__init__', 0.7071067811865475), ('src/_pytest/outcomes.py', '', 'skip', 0.7071067811865475), ('src/_pytest/pytester.py', 'HookRecorder', 'listoutcomes', 0.7071067811865475), ('src/_pytest/runner.py', '', 'call_and_report', 0.7071067811865475), ('src/_pytest/skipping.py', '', 'pytest_runtest_setup', 0.7071067811865475), ('src/_pytest/skipping.py', '', 'pytest_runtest_makereport', 0.7071067811865475), ('src/_pytest/skipping.py', '', 'pytest_report_teststatus', 0.7071067811865475), ('src/_pytest/terminal.py', 'TerminalReporter', '_write_progress_information_filling_space', 0.7071067811865475), ('src/_pytest/_io/wcwidth.py', '', 'wcwidth', 0.6030226891555273), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'from_exc_info', 0.5773502691896258), ('src/_pytest/assertion/rewrite.py', '', '_format_boolop', 0.5773502691896258), ('src/_pytest/assertion/util.py', '', 'format_explanation', 0.5773502691896258), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_collection_modifyitems', 0.5773502691896258), ('src/_pytest/reports.py', 'CollectReport', '__init__', 0.5773502691896258), ('src/_pytest/runner.py', '', 'pytest_runtest_teardown', 0.5773502691896258), ('src/_pytest/runner.py', '', '_update_current_test_var', 0.5773502691896258), ('src/_pytest/runner.py', '', 'call_runtest_hook', 0.5773502691896258), ('src/pytest/collect.py', 'FakeCollectModule', '__getattr__', 0.5773502691896258), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_progress_information_message', 0.5), ('src/_pytest/unittest.py', '', 'check_testcase_implements_trial_reporter', 0.5), ('src/_pytest/outcomes.py', 'OutcomeException', '__init__', 0.4472135954999579), ('src/_pytest/outcomes.py', 'OutcomeException', '__repr__', 0.4472135954999579), ('src/_pytest/_code/code.py', 'Traceback', 'cut', 0.4082482904638631), ('src/_pytest/_code/source.py', '', 'getstatementrange_ast', 0.4082482904638631), ('src/_pytest/_io/saferepr.py', '', '_ellipsize', 0.4082482904638631), ('src/_pytest/_code/code.py', 'Frame', 'getargs', 0.3779644730092272), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_getentrysource', 0.3779644730092272), ('src/_pytest/nodes.py', 'Node', '_repr_failure_py', 0.3779644730092272), ('src/_pytest/nodes.py', 'Node', 'repr_failure', 0.3779644730092272), ('src/_pytest/nodes.py', '', 'get_fslocation_from_item', 0.3779644730092272), ('src/_pytest/nodes.py', '', 'collect', 0.3779644730092272), ('src/_pytest/_code/code.py', 'Code', 'source', 0.35355339059327373), ('src/_pytest/_code/code.py', 'Code', 'getargs', 0.35355339059327373), ('src/_pytest/_code/code.py', 'TracebackEntry', 'path', 0.35355339059327373), ('src/_pytest/_code/code.py', 'TracebackEntry', 'locals', 0.35355339059327373), ('src/_pytest/_code/code.py', 'TracebackEntry', 'getsource', 0.35355339059327373), ('src/_pytest/_code/code.py', 'Traceback', '__init__', 0.35355339059327373), ('src/_pytest/_code/code.py', 'Traceback', '__getitem__', 0.35355339059327373), ('src/_pytest/_code/code.py', 'Traceback', 'filter', 0.35355339059327373), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'tb', 0.35355339059327373), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'getrepr', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_getindent', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'get_source', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'get_exconly', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_locals', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_traceback_entry', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_makepath', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_traceback', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_truncate_recursive_traceback', 0.35355339059327373), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_excinfo', 0.35355339059327373), ('src/_pytest/_code/code.py', 'ExceptionChainRepr', '__attrs_post_init__', 0.35355339059327373), ('src/_pytest/_code/code.py', 'ExceptionChainRepr', 'toterminal', 0.35355339059327373), ('src/_pytest/_code/source.py', 'Source', '__getitem__', 0.35355339059327373), ('src/_pytest/_code/source.py', 'Source', 'getstatement', 0.35355339059327373), ('src/_pytest/_code/source.py', 'Source', 'getstatementrange', 0.35355339059327373), ('src/_pytest/_code/source.py', 'Source', 'deindent', 0.35355339059327373), ('src/_pytest/_code/source.py', '', 'findsource', 0.35355339059327373), ('src/_pytest/_code/source.py', '', 'getsource', 0.35355339059327373), ('src/_pytest/_code/source.py', '', 'get_statement_startend2', 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 'SafeRepr', 'repr', 0.35355339059327373), ('src/_pytest/_io/saferepr.py', 'SafeRepr', 'repr_instance', 0.35355339059327373), ('src/_pytest/_io/saferepr.py', '', 'safeformat', 0.35355339059327373), ('src/_pytest/main.py', 'Session', '_perform_collect', 0.35355339059327373), ('src/_pytest/_code/code.py', 'Frame', '__init__', 0.3333333333333333), ('src/_pytest/_code/code.py', 'TracebackEntry', '__init__', 0.3333333333333333), ('src/_pytest/_code/code.py', 'TracebackEntry', 'ishidden', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'from_current', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'fill_unfilled', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'value', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'typename', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'exconly', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'errisinstance', 0.3333333333333333), ('src/_pytest/pytester.py', 'HookRecorder', 'assertoutcome', 0.3333333333333333), ('src/_pytest/pytester.py', 'HookRecorder', 'clear', 0.3333333333333333), ('src/_pytest/runner.py', '', 'pytest_runtest_makereport', 0.3333333333333333), ('src/_pytest/runner.py', '', 'pytest_make_collect_report', 0.3333333333333333), ('src/_pytest/terminal.py', '', '_get_line_with_reprcrash_message', 0.3333333333333333), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'type', 0.31622776601683794), ('src/_pytest/assertion/rewrite.py', '', '_get_assertion_exprs', 0.25), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'builtin', 0.25), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'push_format_context', 0.25), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'pop_format_context', 0.25), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'generic_visit', 0.25), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'visit_Assert', 0.25), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'visit_BoolOp', 0.25), ('src/_pytest/python.py', 'Function', 'repr_failure', 0.24806946917841693), ('src/_pytest/_code/source.py', '', 'getfslineno', 0.24253562503633297), ('src/_pytest/capture.py', '', '_colorama_workaround', 0.2342606428329091), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logfinish', 0.2342606428329091), ('src/_pytest/runner.py', '', 'runtestprotocol', 0.2342606428329091), ('src/_pytest/terminal.py', 'TerminalReporter', 'report_collect', 0.23249527748763857), ('src/_pytest/python.py', 'PyobjMixin', 'reportinfo', 0.23094010767585027), ('src/_pytest/nodes.py', 'Node', 'add_marker', 0.22237479499833035), ('src/_pytest/reports.py', 'BaseReport', 'count_towards_summary', 0.22237479499833035), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_is_marked_for_rewrite', 0.2182178902359924), ('src/_pytest/config/findpaths.py', '', 'determine_setup', 0.2182178902359924), ('src/_pytest/main.py', 'Session', '_matchnodes', 0.2182178902359924), ('src/_pytest/mark/structures.py', 'MarkGenerator', '__getattr__', 0.2182178902359924), ('src/_pytest/nodes.py', 'Node', 'addfinalizer', 0.21821789023599236), ('src/_pytest/mark/structures.py', 'MarkDecorator', 'args', 0.21320071635561041), ('src/_pytest/capture.py', 'CaptureIO', '__init__', 0.21055872190307892), ('src/_pytest/capture.py', 'MultiCapture', 'suspend_capturing', 0.21055872190307892), ('src/_pytest/capture.py', 'FDCaptureBinary', '__init__', 0.21055872190307892), ('src/_pytest/capture.py', 'FDCaptureBinary', '__repr__', 0.21055872190307892), ('src/_pytest/capture.py', 'SysCaptureBinary', '__repr__', 0.21055872190307892), ('src/_pytest/capture.py', 'SysCapture', 'snap', 0.21055872190307892), ('src/_pytest/capture.py', 'DontReadFromInput', 'read', 0.21055872190307892), ('src/_pytest/logging.py', '', 'catching_logs', 0.21055872190307892), ('src/_pytest/logging.py', 'LogCaptureHandler', '__init__', 0.21055872190307892), ('src/_pytest/logging.py', 'LogCaptureFixture', '_finalize', 0.21055872190307892), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_call', 0.21055872190307892), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_teardown', 0.21055872190307892), ('src/_pytest/store.py', 'Store', '__setitem__', 0.21055872190307892), ('src/_pytest/capture.py', '', 'capsysbinary', 0.21004201260420147), ('src/_pytest/capture.py', '', 'capfdbinary', 0.21004201260420147), ('src/_pytest/capture.py', 'EncodedFile', 'mode', 0.21004201260420147), ('src/_pytest/capture.py', 'MultiCapture', 'pop_outerr_to_orig', 0.21004201260420147), ('src/_pytest/capture.py', 'MultiCapture', 'stop_capturing', 0.21004201260420147), ('src/_pytest/capture.py', 'FDCaptureBinary', 'snap', 0.21004201260420147), ('src/_pytest/capture.py', 'FDCaptureBinary', '_done', 0.21004201260420147), ('src/_pytest/capture.py', 'SysCaptureBinary', 'start', 0.21004201260420147), ('src/_pytest/capture.py', 'SysCaptureBinary', 'done', 0.21004201260420147), ('src/_pytest/logging.py', 'LogCaptureHandler', 'emit', 0.21004201260420147), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logstart', 0.21004201260420147), ('src/_pytest/main.py', 'Session', 'collect', 0.21004201260420147), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', 'invalidraise', 0.21004201260420147), ('src/_pytest/nodes.py', 'Node', 'warn', 0.21004201260420147), ('src/_pytest/nodes.py', 'Node', 'listextrakeywords', 0.21004201260420147), ('src/_pytest/nodes.py', 'Item', '__init__', 0.21004201260420147), ('src/_pytest/python.py', 'PyobjMixin', 'getmodpath', 0.21004201260420147), ('src/_pytest/reports.py', 'TestReport', '__init__', 0.21004201260420147), ('src/_pytest/reports.py', 'TestReport', '__repr__', 0.21004201260420147), ('src/_pytest/reports.py', 'CollectReport', 'location', 0.21004201260420147), ('src/_pytest/reports.py', 'CollectReport', '__repr__', 0.21004201260420147), ('src/_pytest/runner.py', '', 'pytest_report_teststatus', 0.21004201260420147), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_runtest_logreport', 0.21004201260420147), ('src/_pytest/store.py', 'Store', '__getitem__', 0.21004201260420147), ('src/_pytest/store.py', 'Store', 'get', 0.21004201260420147), ('src/_pytest/store.py', 'Store', '__contains__', 0.21004201260420147), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logreport', 0.21004201260420147), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logfinish', 0.21004201260420147), ('src/_pytest/unittest.py', '', 'pytest_runtest_protocol', 0.21004201260420147), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_try_load_conftest', 0.20851441405707477), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_getconftestmodules', 0.20851441405707477), ('src/_pytest/main.py', '', 'pytest_ignore_collect', 0.20412414523193154), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '__bool__', 0.20412414523193154), ('src/_pytest/terminal.py', 'TerminalReporter', 'line', 0.20412414523193154), ('src/_pytest/warnings.py', '', 'pytest_runtest_protocol', 0.20412414523193154), ('src/_pytest/warnings.py', '', '_issue_warning_captured', 0.20412414523193154), ('src/_pytest/assertion/__init__.py', '', 'pytest_sessionfinish', 0.20306923302672383), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_sessionfinish', 0.20306923302672383), ('src/_pytest/runner.py', '', 'show_test_item', 0.20306923302672383), ('src/_pytest/runner.py', 'SetupState', 'prepare', 0.20306923302672383), ('src/_pytest/runner.py', '', 'collect_one_node', 0.20306923302672383), ('src/_pytest/store.py', 'Store', '__delitem__', 0.20306923302672383), ('src/_pytest/_io/wcwidth.py', '', 'wcswidth', 0.2), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'context', 0.19900743804199783), ('src/_pytest/pytester.py', 'SysModulesSnapshot', 'restore', 0.19900743804199783), ('src/_pytest/pytester.py', 'SysPathsSnapshot', 'restore', 0.19900743804199783), ('src/_pytest/pytester.py', '', '__take_sys_modules_snapshot', 0.19900743804199783), ('src/_pytest/pytester.py', '', 'make_hook_recorder', 0.19900743804199783), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'write', 0.19611613513818404), ('src/_pytest/mark/structures.py', '', 'get_empty_parameterset_mark', 0.19611613513818404), ('src/_pytest/mark/structures.py', '', 'normalize_mark_list', 0.19611613513818404), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__init__', 0.19611613513818404), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__getitem__', 0.19611613513818404), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_plugin_registered', 0.19611613513818404), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_sessionstart', 0.19611613513818404), ('src/_pytest/python.py', 'PyCollector', 'funcnamefilter', 0.1933472978091327), ('src/_pytest/python.py', 'PyCollector', 'isnosetest', 0.1933472978091327), ('src/_pytest/python.py', 'PyCollector', 'istestfunction', 0.1933472978091327), ('src/_pytest/python.py', 'PyCollector', 'istestclass', 0.1933472978091327), ('src/_pytest/_code/code.py', '', 'filter_traceback', 0.19245008972987526), ('src/_pytest/python.py', 'Function', 'runtest', 0.19245008972987526), ('src/_pytest/python.py', 'Function', 'setup', 0.19245008972987526), ('src/_pytest/compat.py', '', 'iscoroutinefunction', 0.19069251784911848), ('src/_pytest/_code/code.py', 'Code', '__init__', 0.1889822365046136), ('src/_pytest/_code/code.py', 'Code', '__eq__', 0.1889822365046136), ('src/_pytest/_code/code.py', 'Code', 'path', 0.1889822365046136), ('src/_pytest/compat.py', '', 'get_real_func', 0.1889822365046136), ('src/_pytest/terminal.py', 'TerminalReporter', 'rewrite', 0.18814417367671946), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_sep', 0.18814417367671946), ('src/_pytest/warnings.py', '', 'catch_warnings_for_item', 0.18814417367671946), ('src/_pytest/warnings.py', '', 'warning_record_to_str', 0.18814417367671946), ('src/_pytest/warnings.py', '', 'pytest_collection', 0.1873171623163388), ('src/_pytest/faulthandler.py', 'FaultHandlerHooks', 'pytest_runtest_protocol', 0.18650096164806276), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_collectreport', 0.18650096164806276), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_early_rewrite_bailout', 0.18569533817705186), ('src/_pytest/main.py', 'Session', '__repr__', 0.18569533817705186), ('src/_pytest/pytester.py', 'HookRecorder', 'countoutcomes', 0.18569533817705186), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_warning_captured', 0.18569533817705186), ('src/_pytest/compat.py', '', 'get_real_method', 0.1849000654084097), ('src/_pytest/config/__init__.py', '', 'getoption', 0.18257418583505536), ('src/_pytest/pytester.py', 'HookRecorder', 'matchreport', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureLookupErrorRepr', 'toterminal', 0.18181818181818182), ('src/_pytest/fixtures.py', '', 'wrap_function_to_error_out_if_called_directly', 0.18181818181818182), ('src/_pytest/fixtures.py', '', 'reorder_items_atscope', 0.1796053020267749), ('src/_pytest/python.py', 'Module', '_inject_setup_module_fixture', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'deselect_by_keyword', 0.17677669529663687), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', 'istrue', 0.17213259316477408), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', 'get', 0.17213259316477408), ('src/_pytest/skipping.py', '', 'check_strict_xfail', 0.17213259316477408), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'sep', 0.17149858514250882), ('src/_pytest/fixtures.py', '', 'fixture', 0.17149858514250882), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logreport', 0.17149858514250882), ('src/_pytest/reports.py', 'BaseReport', 'head_line', 0.17149858514250882), ('src/_pytest/terminal.py', 'TerminalReporter', 'write', 0.17149858514250882), ('testing/conftest.py', '', 'restore_tracing', 0.17149858514250882), ('src/_pytest/main.py', '', 'pytest_collection_modifyitems', 0.1690308509457033), ('src/_pytest/fixtures.py', 'FixtureLookupError', 'formatrepr', 0.1638463841038081), ('src/_pytest/fixtures.py', 'FixtureRequest', 'applymarker', 0.16329931618554522), ('src/_pytest/mark/__init__.py', '', 'deselect_by_mark', 0.16222142113076254), ('src/_pytest/python.py', 'CallSpec2', 'id', 0.16222142113076254), ('src/_pytest/logging.py', 'LoggingPlugin', '_runtest_for_main', 0.16012815380508713), ('src/_pytest/terminal.py', '', '_folded_skips', 0.16012815380508713), ('src/_pytest/cacheprovider.py', '', 'pytest_addoption', 0.15811388300841897), ('src/_pytest/fixtures.py', '', 'fillfixtures', 0.15811388300841897), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__len__', 0.15811388300841897), ('src/_pytest/pytester.py', 'HookRecorder', 'assert_contains', 0.15811388300841897), ('src/_pytest/python.py', '', 'pytest_pycollect_makeitem', 0.15811388300841897), ('src/_pytest/python.py', 'PyCollector', '_genfunctions', 0.15811388300841897), ('src/_pytest/nose.py', '', 'is_potential_nosetest', 0.15665208999759148), ('src/_pytest/nose.py', '', 'call_optional', 0.15665208999759148), ('src/_pytest/cacheprovider.py', 'Cache', 'set', 0.15617376188860607), ('src/_pytest/pathlib.py', '', 'create_cleanup_lock', 0.15617376188860607), ('src/_pytest/terminal.py', 'TerminalReporter', 'short_test_summary', 0.15617376188860607), ('src/_pytest/compat.py', '', 'overload', 0.1543033499620919), ('src/_pytest/fixtures.py', 'FixtureRequest', 'keywords', 0.1543033499620919), ('src/_pytest/fixtures.py', 'FixtureRequest', 'session', 0.1543033499620919), ('src/_pytest/fixtures.py', 'FixtureRequest', 'addfinalizer', 0.1543033499620919), ('src/_pytest/fixtures.py', 'FixtureManager', 'getfixturedefs', 0.1543033499620919), ('src/_pytest/fixtures.py', 'FixtureManager', '_matchfactories', 0.1543033499620919), ('src/_pytest/fixtures.py', '', 'get_use_fixtures_for_node', 0.1543033499620919), ('src/_pytest/python.py', '', 'pytest_cmdline_main', 0.1543033499620919), ('src/_pytest/python.py', 'PyCollector', '_matches_prefix_or_glob_option', 0.1543033499620919), ('src/_pytest/python.py', 'PyCollector', 'collect', 0.1543033499620919), ('src/_pytest/python.py', 'PyCollector', '_makeitem', 0.1543033499620919), ('src/_pytest/python.py', 'Module', '_getobj', 0.1543033499620919), ('src/_pytest/python.py', 'Module', 'collect', 0.1543033499620919), ('src/_pytest/python.py', 'Module', '_inject_setup_function_fixture', 0.1543033499620919), ('src/_pytest/python.py', 'Module', '_importtestmodule', 0.1543033499620919), ('src/_pytest/python.py', 'Class', 'collect', 0.1543033499620919), ('src/_pytest/python.py', 'Class', '_inject_setup_class_fixture', 0.1543033499620919), ('src/_pytest/python.py', 'Metafunc', 'parametrize', 0.1543033499620919), ('src/_pytest/python.py', 'Function', 'from_parent', 0.1543033499620919), ('src/_pytest/python.py', 'Function', '_getobj', 0.1543033499620919), ('src/_pytest/python.py', 'Function', '_prunetraceback', 0.1543033499620919), ('src/_pytest/unittest.py', 'UnitTestCase', 'collect', 0.1543033499620919), ('src/_pytest/nodes.py', 'Node', '__init__', 0.15249857033260467), ('src/_pytest/nodes.py', 'Node', 'from_parent', 0.15249857033260467), ('src/_pytest/nodes.py', 'Node', 'ihook', 0.15249857033260467), ('src/_pytest/python.py', 'Package', 'isinitpath', 0.15249857033260467), ('src/_pytest/python.py', 'CallSpec2', '_checkargnotcontained', 0.15249857033260467), ('src/_pytest/config/findpaths.py', '', 'get_dirs_from_args', 0.15075567228888181), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_stats', 0.15075567228888181), ('src/_pytest/capture.py', 'DontReadFromInput', 'isatty', 0.14907119849998599), ('src/_pytest/capture.py', 'DontReadFromInput', 'close', 0.14907119849998599), ('src/_pytest/capture.py', 'DontReadFromInput', 'buffer', 0.14907119849998599), ('src/_pytest/main.py', '', '_in_venv', 0.14907119849998599), ('src/_pytest/main.py', 'Session', '_collect', 0.14907119849998599), ('src/_pytest/nodes.py', 'FSCollector', '_recurse', 0.14907119849998599), ('src/_pytest/nodes.py', 'FSCollector', '_collectfile', 0.14907119849998599), ('src/_pytest/python.py', '', 'pytest_collect_file', 0.14907119849998599), ('src/_pytest/python.py', '', 'pytest_pycollect_makemodule', 0.14907119849998599), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_ensure_prefix', 0.14907119849998599), ('src/_pytest/terminal.py', 'TerminalReporter', '_handle_teardown_sections', 0.14907119849998599), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'markup', 0.14744195615489714), ('src/_pytest/assertion/__init__.py', '', 'pytest_assertrepr_compare', 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'find_spec', 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'explanation_param', 0.14744195615489714), ('src/_pytest/cacheprovider.py', 'Cache', '_ensure_supporting_files', 0.14744195615489714), ('src/_pytest/cacheprovider.py', 'LFPluginCollWrapper', '__init__', 0.14744195615489714), ('src/_pytest/cacheprovider.py', 'NFPlugin', 'pytest_collection_modifyitems', 0.14744195615489714), ('src/_pytest/cacheprovider.py', '', 'pytest_report_header', 0.14744195615489714), ('src/_pytest/cacheprovider.py', '', 'cacheshow', 0.14744195615489714), ('src/_pytest/compat.py', '', 'getfuncargnames', 0.14744195615489714), ('src/_pytest/compat.py', '', 'nullcontext', 0.14744195615489714), ('src/_pytest/compat.py', '', 'getimfunc', 0.14744195615489714), ('src/_pytest/compat.py', '', 'safe_isclass', 0.14744195615489714), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_rget_with_confmod', 0.14744195615489714), ('src/_pytest/doctest.py', '', '_is_setup_py', 0.14744195615489714), ('src/_pytest/doctest.py', '', '_is_doctest', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'get_scope_package', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'get_scope_node', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'add_funcarg_pseudo_fixture_def', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'fix_cache_order', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'get_direct_param_fixture_func', 0.14744195615489714), ('src/_pytest/fixtures.py', 'FuncFixtureInfo', 'prune_dependency_tree', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'call_fixture_func', 0.14744195615489714), ('src/_pytest/fixtures.py', '', 'pytest_fixture_setup', 0.14744195615489714), ('src/_pytest/fixtures.py', '', '_ensure_immutable_ids', 0.14744195615489714), ('src/_pytest/fixtures.py', 'FixtureManager', 'parsefactories', 0.14744195615489714), ('src/_pytest/helpconfig.py', '', 'pytest_cmdline_main', 0.14744195615489714), ('src/_pytest/helpconfig.py', '', 'showhelp', 0.14744195615489714), ('src/_pytest/helpconfig.py', '', 'pytest_report_header', 0.14744195615489714), ('src/_pytest/logging.py', 'LoggingPlugin', '_runtest_for', 0.14744195615489714), ('src/_pytest/main.py', '', 'wrap_session', 0.14744195615489714), ('src/_pytest/main.py', '', 'pytest_cmdline_main', 0.14744195615489714), ('src/_pytest/main.py', '', 'pytest_runtestloop', 0.14744195615489714), ('src/_pytest/main.py', 'Session', '__init__', 0.14744195615489714), ('src/_pytest/main.py', 'Session', 'pytest_collectstart', 0.14744195615489714), ('src/_pytest/main.py', 'Session', 'pytest_runtest_logreport', 0.14744195615489714), ('src/_pytest/main.py', 'Session', 'isinitpath', 0.14744195615489714), ('src/_pytest/main.py', 'Session', 'gethookproxy', 0.14744195615489714), ('src/_pytest/main.py', 'Session', 'perform_collect', 0.14744195615489714), ('src/_pytest/main.py', 'Session', '_tryconvertpyarg', 0.14744195615489714), ('src/_pytest/main.py', 'Session', '_parsearg', 0.14744195615489714), ('src/_pytest/mark/__init__.py', '', 'pytest_configure', 0.14744195615489714), ('src/_pytest/nodes.py', 'Item', 'reportinfo', 0.14744195615489714), ('src/_pytest/nodes.py', 'Item', 'location', 0.14744195615489714), ('src/_pytest/pastebin.py', '', 'pytest_terminal_summary', 0.14744195615489714), ('src/_pytest/pytester.py', '', 'maketxtfile', 0.14744195615489714), ('src/_pytest/python.py', '', 'pytest_addoption', 0.14744195615489714), ('src/_pytest/python.py', '', 'pytest_pyfunc_call', 0.14744195615489714), ('src/_pytest/reports.py', '', 'pytest_report_to_serializable', 0.14744195615489714), ('src/_pytest/reports.py', '', 'pytest_report_from_serializable', 0.14744195615489714), ('src/_pytest/runner.py', '', 'pytest_terminal_summary', 0.14744195615489714), ('src/_pytest/runner.py', '', 'pytest_runtest_protocol', 0.14744195615489714), ('src/_pytest/runner.py', 'CallInfo', 'from_call', 0.14744195615489714), ('src/_pytest/runner.py', 'SetupState', '_callfinalizers', 0.14744195615489714), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_collection_modifyitems', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_fspath_result', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_line', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'section', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_deselected', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_write_report_lines_from_hooks', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_report_header', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_collection_finish', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_printcollecteditems', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_sessionfinish', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_locationline', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_getfailureheadline', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_getcrashline', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'getreports', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_warnings', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_passes', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_teardown_reports', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_outrep_summary', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_main_color', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', '_determine_main_color', 0.14744195615489714), ('src/_pytest/terminal.py', 'TerminalReporter', 'build_summary_stats_line', 0.14744195615489714), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'exec_module', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', '', '_rewrite_test', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', '', '_read_pyc', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', '', 'rewrite_asserts', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', '', '_format_assertmsg', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'run', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'variable', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'assign', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'display', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'helper', 0.14586499149789456), ('src/_pytest/config/__init__.py', '', 'filename_arg', 0.14586499149789456), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'consider_pluginarg', 0.14586499149789456), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'consider_env', 0.14586499149789456), ('src/_pytest/mark/structures.py', 'NodeKeywords', '_seen', 0.14586499149789456), ('src/_pytest/nodes.py', 'Node', '__repr__', 0.14586499149789456), ('src/_pytest/_io/terminalwriter.py', '', 'char_width', 0.14433756729740646), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', '__init__', 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_should_rewrite', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'Cache', 'clear_cache', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'Cache', 'warn', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'Cache', 'get', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'get_last_failed_paths', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_report_collectionfinish', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_runtest_logreport', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'NFPlugin', '_get_increasing_order', 0.14433756729740646), ('src/_pytest/cacheprovider.py', 'NFPlugin', 'pytest_sessionfinish', 0.14433756729740646), ('src/_pytest/config/__init__.py', '', 'main', 0.14433756729740646), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '__init__', 0.14433756729740646), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_set_initial_conftests', 0.14433756729740646), ('src/_pytest/config/__init__.py', '', 'pytest_cmdline_parse', 0.14433756729740646), ('src/_pytest/config/__init__.py', '', 'notify_exception', 0.14433756729740646), ('src/_pytest/debugging.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/debugging.py', 'pytestPDB', '_is_capturing', 0.14433756729740646), ('src/_pytest/doctest.py', '', 'pytest_collect_file', 0.14433756729740646), ('src/_pytest/faulthandler.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/junitxml.py', '', 'pytest_unconfigure', 0.14433756729740646), ('src/_pytest/logging.py', 'ColoredLevelFormatter', '__init__', 0.14433756729740646), ('src/_pytest/logging.py', 'ColoredLevelFormatter', 'format', 0.14433756729740646), ('src/_pytest/logging.py', 'PercentStyleMultiline', '_get_auto_indent', 0.14433756729740646), ('src/_pytest/logging.py', 'PercentStyleMultiline', 'format', 0.14433756729740646), ('src/_pytest/logging.py', '', 'pytest_addoption', 0.14433756729740646), ('src/_pytest/logging.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/logging.py', 'LoggingPlugin', '__init__', 0.14433756729740646), ('src/_pytest/logging.py', 'LoggingPlugin', '_create_formatter', 0.14433756729740646), ('src/_pytest/logging.py', 'LoggingPlugin', '_setup_cli_logging', 0.14433756729740646), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_collection', 0.14433756729740646), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_sessionstart', 0.14433756729740646), ('src/_pytest/mark/__init__.py', '', 'pytest_cmdline_main', 0.14433756729740646), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'delattr', 0.14433756729740646), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'setitem', 0.14433756729740646), ('src/_pytest/pastebin.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/pastebin.py', '', 'pytest_unconfigure', 0.14433756729740646), ('src/_pytest/pathlib.py', '', 'parts', 0.14433756729740646), ('src/_pytest/pytester.py', 'ParsedCall', '__repr__', 0.14433756729740646), ('src/_pytest/pytester.py', 'HookRecorder', '__init__', 0.14433756729740646), ('src/_pytest/pytester.py', 'HookRecorder', 'finish_recording', 0.14433756729740646), ('src/_pytest/pytester.py', 'HookRecorder', 'getcalls', 0.14433756729740646), ('src/_pytest/pytester.py', '', 'chdir', 0.14433756729740646), ('src/_pytest/pytester.py', '', 'inline_run', 0.14433756729740646), ('src/_pytest/pytester.py', '', 'runpytest_inprocess', 0.14433756729740646), ('src/_pytest/python.py', '', 'pytest_generate_tests', 0.14433756729740646), ('src/_pytest/python.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/resultlog.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/skipping.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/stepwise.py', 'StepwisePlugin', '__init__', 0.14433756729740646), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_sessionstart', 0.14433756729740646), ('src/_pytest/terminal.py', '', 'pytest_report_teststatus', 0.14433756729740646), ('src/_pytest/terminal.py', 'WarningReport', 'get_location', 0.14433756729740646), ('src/_pytest/terminal.py', 'TerminalReporter', 'verbosity', 0.14433756729740646), ('src/_pytest/terminal.py', 'TerminalReporter', 'showheader', 0.14433756729740646), ('src/_pytest/terminal.py', 'TerminalReporter', 'showfspath', 0.14433756729740646), ('src/_pytest/terminal.py', 'TerminalReporter', 'showlongtestinfo', 0.14433756729740646), ('src/_pytest/terminal.py', 'TerminalReporter', 'hasopt', 0.14433756729740646), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'from_config', 0.14433756729740646), ('src/_pytest/tmpdir.py', '', 'pytest_configure', 0.14433756729740646), ('src/_pytest/compat.py', '', 'safe_getattr', 0.14285714285714285), ('src/_pytest/config/__init__.py', '', 'getvalue', 0.14285714285714285), ('src/_pytest/config/__init__.py', '', 'getvalueorskip', 0.14285714285714285), ('src/_pytest/config/__init__.py', '', '_assertion_supported', 0.14285714285714285), ('src/_pytest/capture.py', 'CaptureManager', 'start_global_capturing', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureManager', '_capturing_for_request', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_runtest_teardown', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_keyboard_interrupt', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_internalerror', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureFixture', '_start', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureFixture', 'close', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureFixture', 'readouterr', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureFixture', '_suspend', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureFixture', '_resume', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureFixture', 'disabled', 0.1414213562373095), ('src/_pytest/_code/source.py', 'Source', '__init__', 0.14002800840280097), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_make_collect_report', 0.14002800840280097), ('src/_pytest/capture.py', 'MultiCapture', '__repr__', 0.14002800840280097), ('src/_pytest/capture.py', 'MultiCapture', 'start_capturing', 0.14002800840280097), ('src/_pytest/capture.py', 'FDCaptureBinary', '_start', 0.14002800840280097), ('src/_pytest/pytester.py', '', '_makefile', 0.14002800840280097), ('src/_pytest/pytester.py', '', 'makefile', 0.14002800840280097), ('src/_pytest/fixtures.py', 'FixtureFunctionMarker', '__call__', 0.1386750490563073), ('src/_pytest/fixtures.py', '', '_parse_fixture_args', 0.1386750490563073), ('src/_pytest/_argcomplete.py', '', 'try_argcomplete', 0.13736056394868904), ('src/_pytest/assertion/__init__.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/assertion/__init__.py', '', 'install_importhook', 0.13736056394868904), ('src/_pytest/assertion/__init__.py', '', 'pytest_collection', 0.13736056394868904), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '__init__', 0.13736056394868904), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'set_session', 0.13736056394868904), ('src/_pytest/cacheprovider.py', '', 'pytest_cmdline_main', 0.13736056394868904), ('src/_pytest/cacheprovider.py', '', 'pytest_configure', 0.13736056394868904), ('src/_pytest/cacheprovider.py', '', 'cache', 0.13736056394868904), ('src/_pytest/capture.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/capture.py', '', 'pytest_load_initial_conftests', 0.13736056394868904), ('src/_pytest/capture.py', 'FDCapture', 'snap', 0.13736056394868904), ('src/_pytest/capture.py', 'SysCaptureBinary', '__init__', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_prepareconfig', 0.13736056394868904), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'parse_hookimpl_opts', 0.13736056394868904), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'parse_hookspec_opts', 0.13736056394868904), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'register', 0.13736056394868904), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'getplugin', 0.13736056394868904), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'pytest_configure', 0.13736056394868904), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'import_plugin', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_get_plugin_specs_as_list', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_iter_rewritable_modules', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '__init__', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', 'add_cleanup', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_do_configure', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_ensure_unconfigure', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', 'get_terminal_writer', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', 'cwd_relative_nodeid', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_processopt', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_consider_importhook', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_mark_plugins_for_rewrite', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_validate_args', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_preparse', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_checkversion', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', 'parse', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', 'getini', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_getini', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_getconftest_pathlist', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_get_override_ini_value', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', '_strtobool', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', '__init__', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'processoption', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'getgroup', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'parse', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', '_getparser', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_setoption', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_known_args', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_known_and_unknown_args', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Parser', 'addini', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Argument', '__init__', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Argument', 'names', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Argument', 'attrs', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'Argument', '_set_opt_strings', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'OptionGroup', '__init__', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'OptionGroup', 'addoption', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'OptionGroup', '_addoption', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'OptionGroup', '_addoption_instance', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'MyOptionParser', '__init__', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'MyOptionParser', 'parse_args', 0.13736056394868904), ('src/_pytest/config/argparsing.py', 'DropShorterLongHelpFormatter', '__init__', 0.13736056394868904), ('src/_pytest/debugging.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/doctest.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/doctest.py', '', 'pytest_unconfigure', 0.13736056394868904), ('src/_pytest/faulthandler.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/fixtures.py', '', 'fail_fixturefunc', 0.13736056394868904), ('src/_pytest/fixtures.py', 'FixtureManager', 'pytest_collection_modifyitems', 0.13736056394868904), ('src/_pytest/helpconfig.py', 'HelpAction', '__init__', 0.13736056394868904), ('src/_pytest/helpconfig.py', 'HelpAction', '__call__', 0.13736056394868904), ('src/_pytest/helpconfig.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/helpconfig.py', '', 'pytest_cmdline_parse', 0.13736056394868904), ('src/_pytest/junitxml.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/junitxml.py', '', 'pytest_configure', 0.13736056394868904), ('src/_pytest/main.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/mark/__init__.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/mark/__init__.py', '', 'pytest_unconfigure', 0.13736056394868904), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'syspath_prepend', 0.13736056394868904), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'chdir', 0.13736056394868904), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'undo', 0.13736056394868904), ('src/_pytest/pastebin.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/pathlib.py', '', '_force_symlink', 0.13736056394868904), ('src/_pytest/pathlib.py', '', 'make_numbered_dir', 0.13736056394868904), ('src/_pytest/pathlib.py', '', 'register_cleanup_lock_removal', 0.13736056394868904), ('src/_pytest/pytester.py', 'CwdSnapshot', 'restore', 0.13736056394868904), ('src/_pytest/pytester.py', '', '__init__', 0.13736056394868904), ('src/_pytest/pytester.py', '', '__repr__', 0.13736056394868904), ('src/_pytest/pytester.py', '', 'finalize', 0.13736056394868904), ('src/_pytest/resultlog.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/setuponly.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/setuponly.py', '', 'pytest_fixture_setup', 0.13736056394868904), ('src/_pytest/setupplan.py', '', 'pytest_fixture_setup', 0.13736056394868904), ('src/_pytest/skipping.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/stepwise.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/stepwise.py', '', 'pytest_configure', 0.13736056394868904), ('src/_pytest/terminal.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/terminal.py', '', 'pytest_configure', 0.13736056394868904), ('src/_pytest/terminal.py', '', 'getreportopt', 0.13736056394868904), ('src/_pytest/tmpdir.py', 'TempPathFactory', '_ensure_relative_to_basetemp', 0.13736056394868904), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'mktemp', 0.13736056394868904), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'getbasetemp', 0.13736056394868904), ('src/_pytest/tmpdir.py', 'TempdirFactory', 'mktemp', 0.13736056394868904), ('testing/conftest.py', '', 'testdir', 0.13736056394868904), ('src/_pytest/_io/terminalwriter.py', '', 'get_terminal_width', 0.13608276348795434), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_importconftest', 0.13608276348795434), ('src/_pytest/store.py', 'Store', '__init__', 0.13608276348795434), ('src/_pytest/runner.py', 'SetupState', '_teardown_towards', 0.13483997249264842), ('src/_pytest/nodes.py', 'NodeMeta', '__call__', 0.13018891098082389), ('src/_pytest/nodes.py', 'NodeMeta', '_create', 0.13018891098082389), ('src/_pytest/compat.py', '', 'getlocation', 0.12126781251816648), ('src/_pytest/faulthandler.py', 'FaultHandlerHooks', 'pytest_enter_pdb', 0.12126781251816648), ('src/_pytest/fixtures.py', 'FixtureDef', 'execute', 0.12126781251816648), ('src/_pytest/fixtures.py', 'FixtureDef', 'cache_key', 0.12126781251816648), ('src/_pytest/python.py', '', 'async_warn_and_skip', 0.12126781251816648), ('src/_pytest/runner.py', '', 'pytest_runtest_call', 0.12126781251816648), ('src/_pytest/skipping.py', '', 'check_xfail_no_run', 0.12126781251816648), ('src/_pytest/terminal.py', 'TerminalReporter', '__init__', 0.12126781251816648), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'fullwidth', 0.1203858530857692), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'width_of_current_line', 0.1203858530857692), ('src/_pytest/fixtures.py', 'FixtureRequest', '_getscopeitem', 0.11785113019775793), ('src/_pytest/fixtures.py', 'SubRequest', '__init__', 0.11785113019775793), ('src/_pytest/fixtures.py', 'FixtureRequest', '_check_scope', 0.11624763874381928), ('src/_pytest/fixtures.py', 'FixtureRequest', '_factorytraceback', 0.11624763874381928), ('src/_pytest/fixtures.py', '', 'scope2index', 0.11624763874381928), ('src/_pytest/fixtures.py', 'FixtureRequest', '_fillfixtures', 0.11547005383792514), ('src/_pytest/fixtures.py', 'FixtureRequest', 'getfixturevalue', 0.11547005383792514), ('src/_pytest/fixtures.py', 'FixtureRequest', '_compute_fixture_value', 0.11547005383792514), ('src/_pytest/fixtures.py', 'FixtureRequest', '_schedule_finalizers', 0.11547005383792514), ('src/_pytest/fixtures.py', '', '_teardown_yield_fixture', 0.11547005383792514), ('src/_pytest/fixtures.py', 'FixtureRequest', '_get_active_fixturedef', 0.1125087900926024), ('src/_pytest/fixtures.py', 'FixtureRequest', '_get_fixturestack', 0.11180339887498948), ('src/_pytest/fixtures.py', '', 'scopemismatch', 0.11180339887498948), ('src/_pytest/fixtures.py', 'FixtureLookupErrorRepr', '__init__', 0.11180339887498948), ('src/_pytest/setuponly.py', '', '_show_fixture_action', 0.11180339887498948), ('src/_pytest/setupplan.py', '', 'pytest_cmdline_main', 0.11180339887498948), ('src/_pytest/fixtures.py', 'FixtureRequest', 'raiseerror', 0.1111111111111111), ('src/_pytest/skipping.py', '', 'pytest_pyfunc_call', 0.10314212462587934), ('src/_pytest/fixtures.py', 'FixtureRequest', '_addfinalizer', 0.10259783520851541), ('src/_pytest/nose.py', '', 'pytest_runtest_setup', 0.10259783520851541), ('src/_pytest/nose.py', '', 'teardown_nose', 0.10259783520851541), ('src/_pytest/runner.py', 'SetupState', '_teardown_with_finalization', 0.10259783520851541), ('src/_pytest/runner.py', 'SetupState', 'teardown_all', 0.10259783520851541), ('src/_pytest/runner.py', 'SetupState', 'teardown_exact', 0.10259783520851541)]
2024-04-05 04:19:56 
========== Conversation Round 0 ==========
2024-04-05 04:19:56 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Incorrect caching of skipif/xfail string condition evaluation\n'
             'Version: pytest 5.4.3, current master\n'
             'pytest caches the evaluation of the string in e.g. `@pytest.mark.skipif("sys.platform == \'win32\'")`. The caching key is only the string itself '
             "(see `cached_eval` in `_pytest/mark/evaluate.py`). However, the evaluation also depends on the item's globals, so the caching can lead to "
             'incorrect results. Example:\n'
             '```py\n'
             '# test_module_1.py\n'
             'import pytest\n'
             'skip = True\n'
             '@pytest.mark.skipif("skip")\n'
             'def test_should_skip():\n'
             'assert False\n'
             '```\n'
             '```py\n'
             '# test_module_2.py\n'
             'import pytest\n'
             'skip = False\n'
             '@pytest.mark.skipif("skip")\n'
             'def test_should_not_skip():\n'
             'assert False\n'
             '```\n'
             'Running `pytest test_module_1.py test_module_2.py`.\n'
             'Expected: `test_should_skip` is skipped, `test_should_not_skip` is not skipped.\n'
             'Actual: both are skipped.\n'
             '---\n'
             "I think the most appropriate fix is to simply remove the caching, which I don't think is necessary really, and inline `cached_eval` into "
             '`MarkEvaluator._istrue`.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/_code/source.py</file> <class>Source</class> <func>compile</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/_code/source.py</file> <func>compile_</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/assertion/__init__.py</file> <func>pytest_runtest_protocol</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_reprcompare</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_assertion_pass</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '}]
2024-04-05 04:20:07 Model API request cost info: input_tokens=725, output_tokens=249, cost=0.014720
2024-04-05 04:20:07 Raw model response: ChatCompletionMessage(content='To address the issue described, we need to focus on the caching mechanism of the `skipif`/`xfail` string condition evaluation in pytest. The issue points out that the caching key is only the string itself, which leads to incorrect behavior when the evaluation depends on the item\'s globals. The relevant code seems to be in `_pytest/mark/evaluate.py`, specifically in the `cached_eval` function and its usage within `MarkEvaluator._istrue`. \n\nGiven the information from the issue, we should start by looking into the `cached_eval` function and `MarkEvaluator._istrue` method to understand how caching is currently implemented and how it\'s used. Since the external analysis tool did not directly point to the relevant files or methods for this specific issue, we\'ll focus on the information provided in the issue description.\n\nLet\'s use the following search APIs to gather more context:\n\n1. `search_code("cached_eval")`: This will help us find where `cached_eval` is defined and used.\n2. `search_method("MarkEvaluator._istrue")`: Since the method might be part of a class, this search will help us locate the `MarkEvaluator` class and the `_istrue` method within it.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:20:07 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 04:20:12 Model API request cost info: input_tokens=569, output_tokens=98, cost=0.008630
2024-04-05 04:20:12 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [\n        "search_code(\\"cached_eval\\")",\n        "search_method(\\"MarkEvaluator._istrue\\")"\n    ],\n    "bug_locations": [\n        {\n            "file": "_pytest/mark/evaluate.py",\n            "class": "",\n            "method": "cached_eval"\n        },\n        {\n            "file": "_pytest/mark/evaluate.py",\n            "class": "MarkEvaluator",\n            "method": "_istrue"\n        }\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:20:12 Raw issue json produced. Writing issue json into file.
2024-04-05 04:20:12 Extracted a valid json. Congratulations!
2024-04-05 04:20:12 Refactored invocation argument parsing failed on 'search_code("cached_eval")': malformed node or string on line 1: <ast.Name object at 0x7f0e3a329360>
2024-04-05 04:20:12 Result of dispatch_intent: ('Found 2 snippets containing `cached_eval` in the codebase.\nSearch result 1: <file>src/_pytest/mark/evaluate.py</file> <func>cached_eval</func> <code>\n\n\ndef cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any:\n    default = {}  # type: Dict[str, object]\n    evalcache = config._store.setdefault(evalcache_key, default)</code>\n\nSearch result 2: <file>src/_pytest/mark/evaluate.py</file> <class>MarkEvaluator</class> <func>_istrue</func> <code>\n                    if isinstance(expr, str):\n                        d = self._getglobals()\n                        result = cached_eval(self.item.config, expr, d)\n                    else:\n                        if "reason" not in mark.kwargs:</code>\n\n', 'Found 2 snippets containing `cached_eval` in the codebase.\n', True)
2024-04-05 04:20:12 Refactored invocation argument parsing failed on 'search_method("MarkEvaluator._istrue")': malformed node or string on line 1: <ast.Attribute object at 0x7f0e3a329720>
2024-04-05 04:20:12 Result of dispatch_intent: ('Could not find method MarkEvaluator._istrue in the codebase.', 'Could not find method MarkEvaluator._istrue in the codebase.', False)
2024-04-05 04:20:25 Model API request cost info: input_tokens=1198, output_tokens=478, cost=0.026320
2024-04-05 04:20:25 Raw model response: ChatCompletionMessage(content='Based on the search results, we have identified key pieces of code in `src/_pytest/mark/evaluate.py` that are directly related to the issue at hand. The `cached_eval` function and its usage within the `MarkEvaluator` class, specifically in the `_istrue` method, are central to understanding the caching mechanism that leads to the reported bug. Here\'s a summary of the findings:\n\n1. **`cached_eval` Function**: This function is responsible for evaluating the expression given as a string and caching the result. The caching mechanism uses `config._store` to keep the results, with `evalcache_key` presumably acting as the key. However, the issue description suggests that the caching key does not account for the item\'s globals, which can lead to incorrect behavior when different tests have different global contexts but use the same condition string.\n\n2. **Usage of `cached_eval` in `MarkEvaluator._istrue`**: The `_istrue` method in the `MarkEvaluator` class uses `cached_eval` to evaluate string expressions. It passes the item\'s configuration (`self.item.config`), the expression itself, and a dictionary of globals (`d = self._getglobals()`) to `cached_eval`. This is where the evaluation of conditions like `@pytest.mark.skipif("skip")` happens.\n\nGiven this context, the issue arises because the caching mechanism in `cached_eval` does not consider the globals (`d`) that might affect the evaluation outcome. This leads to a situation where, if two tests use the same condition string but expect different outcomes based on their globals, the caching mechanism fails to distinguish between these scenarios, resulting in both tests being treated the same way.\n\nTo address this issue, a patch needs to ensure that the caching mechanism takes into account not just the condition string but also the relevant globals that could affect the evaluation. This could mean modifying the caching key to include some representation of the globals or rethinking the caching strategy to ensure it correctly handles different contexts in which the same condition string might be evaluated.\n\nGiven the information at hand, the next steps would involve drafting a patch that addresses these concerns. This would likely involve changes to how `cached_eval` generates its caching key and how it\'s used within the `MarkEvaluator._istrue` method to ensure that test conditions are evaluated correctly in the context of their respective globals.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:20:25 
========== Conversation Round 1 ==========
2024-04-05 04:20:25 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Incorrect caching of skipif/xfail string condition evaluation\n'
             'Version: pytest 5.4.3, current master\n'
             'pytest caches the evaluation of the string in e.g. `@pytest.mark.skipif("sys.platform == \'win32\'")`. The caching key is only the string itself '
             "(see `cached_eval` in `_pytest/mark/evaluate.py`). However, the evaluation also depends on the item's globals, so the caching can lead to "
             'incorrect results. Example:\n'
             '```py\n'
             '# test_module_1.py\n'
             'import pytest\n'
             'skip = True\n'
             '@pytest.mark.skipif("skip")\n'
             'def test_should_skip():\n'
             'assert False\n'
             '```\n'
             '```py\n'
             '# test_module_2.py\n'
             'import pytest\n'
             'skip = False\n'
             '@pytest.mark.skipif("skip")\n'
             'def test_should_not_skip():\n'
             'assert False\n'
             '```\n'
             'Running `pytest test_module_1.py test_module_2.py`.\n'
             'Expected: `test_should_skip` is skipped, `test_should_not_skip` is not skipped.\n'
             'Actual: both are skipped.\n'
             '---\n'
             "I think the most appropriate fix is to simply remove the caching, which I don't think is necessary really, and inline `cached_eval` into "
             '`MarkEvaluator._istrue`.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/_code/source.py</file> <class>Source</class> <func>compile</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/_code/source.py</file> <func>compile_</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/assertion/__init__.py</file> <func>pytest_runtest_protocol</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_reprcompare</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_assertion_pass</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'To address the issue described, we need to focus on the caching mechanism of the `skipif`/`xfail` string condition evaluation in pytest. The '
             "issue points out that the caching key is only the string itself, which leads to incorrect behavior when the evaluation depends on the item's "
             'globals. The relevant code seems to be in `_pytest/mark/evaluate.py`, specifically in the `cached_eval` function and its usage within '
             '`MarkEvaluator._istrue`. \n'
             '\n'
             'Given the information from the issue, we should start by looking into the `cached_eval` function and `MarkEvaluator._istrue` method to '
             "understand how caching is currently implemented and how it's used. Since the external analysis tool did not directly point to the relevant files "
             "or methods for this specific issue, we'll focus on the information provided in the issue description.\n"
             '\n'
             "Let's use the following search APIs to gather more context:\n"
             '\n'
             '1. `search_code("cached_eval")`: This will help us find where `cached_eval` is defined and used.\n'
             '2. `search_method("MarkEvaluator._istrue")`: Since the method might be part of a class, this search will help us locate the `MarkEvaluator` '
             'class and the `_istrue` method within it.'},
 {'role': 'user',
  'content': 'Result of search_code("cached_eval"):\n'
             'Found 2 snippets containing `cached_eval` in the codebase.\n'
             'Search result 1: <file>src/_pytest/mark/evaluate.py</file> <func>cached_eval</func> <code>\n'
             '\n'
             '\n'
             'def cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any:\n'
             '    default = {}  # type: Dict[str, object]\n'
             '    evalcache = config._store.setdefault(evalcache_key, default)</code>\n'
             '\n'
             'Search result 2: <file>src/_pytest/mark/evaluate.py</file> <class>MarkEvaluator</class> <func>_istrue</func> <code>\n'
             '                    if isinstance(expr, str):\n'
             '                        d = self._getglobals()\n'
             '                        result = cached_eval(self.item.config, expr, d)\n'
             '                    else:\n'
             '                        if "reason" not in mark.kwargs:</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method("MarkEvaluator._istrue"):\n'
             'Could not find method MarkEvaluator._istrue in the codebase.\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': 'Based on the search results, we have identified key pieces of code in `src/_pytest/mark/evaluate.py` that are directly related to the issue at '
             'hand. The `cached_eval` function and its usage within the `MarkEvaluator` class, specifically in the `_istrue` method, are central to '
             "understanding the caching mechanism that leads to the reported bug. Here's a summary of the findings:\n"
             '\n'
             '1. **`cached_eval` Function**: This function is responsible for evaluating the expression given as a string and caching the result. The caching '
             'mechanism uses `config._store` to keep the results, with `evalcache_key` presumably acting as the key. However, the issue description suggests '
             "that the caching key does not account for the item's globals, which can lead to incorrect behavior when different tests have different global "
             'contexts but use the same condition string.\n'
             '\n'
             '2. **Usage of `cached_eval` in `MarkEvaluator._istrue`**: The `_istrue` method in the `MarkEvaluator` class uses `cached_eval` to evaluate '
             "string expressions. It passes the item's configuration (`self.item.config`), the expression itself, and a dictionary of globals (`d = "
             'self._getglobals()`) to `cached_eval`. This is where the evaluation of conditions like `@pytest.mark.skipif("skip")` happens.\n'
             '\n'
             'Given this context, the issue arises because the caching mechanism in `cached_eval` does not consider the globals (`d`) that might affect the '
             'evaluation outcome. This leads to a situation where, if two tests use the same condition string but expect different outcomes based on their '
             'globals, the caching mechanism fails to distinguish between these scenarios, resulting in both tests being treated the same way.\n'
             '\n'
             'To address this issue, a patch needs to ensure that the caching mechanism takes into account not just the condition string but also the relevant '
             'globals that could affect the evaluation. This could mean modifying the caching key to include some representation of the globals or rethinking '
             'the caching strategy to ensure it correctly handles different contexts in which the same condition string might be evaluated.\n'
             '\n'
             'Given the information at hand, the next steps would involve drafting a patch that addresses these concerns. This would likely involve changes to '
             "how `cached_eval` generates its caching key and how it's used within the `MarkEvaluator._istrue` method to ensure that test conditions are "
             'evaluated correctly in the context of their respective globals.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'}]
2024-04-05 04:20:27 Model API request cost info: input_tokens=1749, output_tokens=57, cost=0.019200
2024-04-05 04:20:27 Raw model response: ChatCompletionMessage(content='- do we need more context: \n\n- where are bug locations: \n  - Buggy file: `src/_pytest/mark/evaluate.py`\n  - Buggy methods: \n    - `cached_eval`\n    - `_istrue` method within the `MarkEvaluator` class', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:20:27 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 04:20:30 Model API request cost info: input_tokens=377, output_tokens=63, cost=0.005660
2024-04-05 04:20:30 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [],\n    "bug_locations":[\n        {"file": "src/_pytest/mark/evaluate.py", "method": "cached_eval"},\n        {"file": "src/_pytest/mark/evaluate.py", "class": "MarkEvaluator", "method": "_istrue"}\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:20:30 Raw issue json produced. Writing issue json into file.
2024-04-05 04:20:30 Extracted a valid json. Congratulations!
2024-04-05 04:20:30 Result of dispatch_intent: ('Found 1 methods with name `cached_eval` in file src/_pytest/mark/evaluate.py.\nSearch result 1: <file>src/_pytest/mark/evaluate.py</file> <func>cached_eval</func> <code>def cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any:\n    default = {}  # type: Dict[str, object]\n    evalcache = config._store.setdefault(evalcache_key, default)\n    try:\n        return evalcache[expr]\n    except KeyError:\n        import _pytest._code\n\n        exprcode = _pytest._code.compile(expr, mode="eval")\n        evalcache[expr] = x = eval(exprcode, d)\n        return x\n</code>\n\n', 'Found 1 methods with name `cached_eval` in file src/_pytest/mark/evaluate.py.\n', True)
2024-04-05 04:20:30 Result of dispatch_intent: ('Found 1 methods with name _istrue in class MarkEvaluator.\nSearch result 1: <file>src/_pytest/mark/evaluate.py</file> <class>MarkEvaluator</class> <func>_istrue</func> <code>    def _istrue(self) -> bool:\n        if hasattr(self, "result"):\n            result = getattr(self, "result")  # type: bool\n            return result\n        self._marks = self._get_marks()\n\n        if self._marks:\n            self.result = False\n            for mark in self._marks:\n                self._mark = mark\n                if "condition" not in mark.kwargs:\n                    args = mark.args\n                else:\n                    args = (mark.kwargs["condition"],)\n\n                for expr in args:\n                    self.expr = expr\n                    if isinstance(expr, str):\n                        d = self._getglobals()\n                        result = cached_eval(self.item.config, expr, d)\n                    else:\n                        if "reason" not in mark.kwargs:\n                            # XXX better be checked at collection time\n                            msg = (\n                                "you need to specify reason=STRING "\n                                "when using booleans as conditions."\n                            )\n                            fail(msg)\n                        result = bool(expr)\n                    if result:\n                        self.result = True\n                        self.reason = mark.kwargs.get("reason", None)\n                        self.expr = expr\n                        return self.result\n\n                if not args:\n                    self.result = True\n                    self.reason = mark.kwargs.get("reason", None)\n                    return self.result\n        return False\n</code>\n\nOther results are in these files:\n', 'Found 1 methods with name _istrue in class MarkEvaluator.\n', True)
2024-04-05 04:20:30 Gathered enough information. Invoking write_patch.
2024-04-05 04:20:30 Trying to write a patch. Try 1 of 3.
2024-04-05 04:20:43 Model API request cost info: input_tokens=2472, output_tokens=367, cost=0.035730
2024-04-05 04:20:43 Raw model response: ChatCompletionMessage(content='# modification 1\n```python\n<file>src/_pytest/mark/evaluate.py</file>\n<original>def cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any:\n    default = {}  # type: Dict[str, object]\n    evalcache = config._store.setdefault(evalcache_key, default)\n    try:\n        return evalcache[expr]\n    except KeyError:\n        import _pytest._code\n\n        exprcode = _pytest._code.compile(expr, mode="eval")\n        evalcache[expr] = x = eval(exprcode, d)\n        return x\n</original>\n<patched>def cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any:\n    default = {}  # type: Dict[str, object]\n    evalcache = config._store.setdefault(evalcache_key, default)\n    # Generate a unique key based on the expression and the globals dict\n    import hashlib\n    d_hash = hashlib.md5(str(sorted(d.items())).encode()).hexdigest()\n    cache_key = f"{expr}:{d_hash}"\n    try:\n        return evalcache[cache_key]\n    except KeyError:\n        import _pytest._code\n\n        exprcode = _pytest._code.compile(expr, mode="eval")\n        evalcache[cache_key] = x = eval(exprcode, d)\n        return x\n</patched>\n```\n\nThis modification addresses the issue by incorporating the globals dictionary (`d`) into the caching mechanism. It does so by creating a unique `cache_key` that combines the expression string and a hash of the sorted items of the globals dictionary. This ensures that the cache takes into account both the condition expression and the context in which it is evaluated, thus preventing incorrect caching across different test environments.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:20:43 Raw patch produced in try 1. Writing patch into file.
2024-04-05 04:20:43 [Validation] Applied patch. Going to run test suite.
2024-04-05 04:20:43 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; pytest -rA testing/test_mark.py ; conda deactivate
2024-04-05 04:20:45 [Run test-suite] Result of parsing test log: True
2024-04-05 04:20:45 [Run test-suite] Eval status: {'test_strict_prohibits_unregistered_markers.py': 'ERROR', 'test_parametrized_collect_with_wrong_args.py': 'ERROR', 'test_mark_with_wrong_marker.py': 'ERROR', 'test_select_simple.py::test_one': 'FAILED', 'test_select_simple.py::TestClass::test_method_one': 'FAILED', 'test_keyword_extra.py::test_one': 'FAILED', 'test_parameterset_for_fail_at_collect.py': 'ERROR', 'Wrong': 'ERROR:', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[py.test-mark]': 'PASSED', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[py.test-param]': 'PASSED', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[pytest-mark]': 'PASSED', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[pytest-param]': 'PASSED', 'testing/test_mark.py::TestMark::test_pytest_mark_notcallable': 'PASSED', 'testing/test_mark.py::TestMark::test_mark_with_param': 'PASSED', 'testing/test_mark.py::TestMark::test_pytest_mark_name_starts_with_underscore': 'PASSED', 'testing/test_mark.py::TestMarkDecorator::test__eq__[lhs0-rhs0-True]': 'PASSED', 'testing/test_mark.py::TestMarkDecorator::test__eq__[lhs1-rhs1-False]': 'PASSED', 'testing/test_mark.py::TestMarkDecorator::test__eq__[lhs2-bar-False]': 'PASSED', 'testing/test_mark.py::TestMarkDecorator::test__eq__[foo-rhs3-False]': 'PASSED', 'testing/test_mark.py::TestMarkDecorator::test_aliases': 'PASSED', 'testing/test_mark.py::test_addmarker_order': 'PASSED', 'testing/test_mark.py::test_pytest_param_id_requires_string': 'PASSED', 'testing/test_mark.py::test_pytest_param_id_allows_none_or_string[None]': 'PASSED', 'testing/test_mark.py::test_pytest_param_id_allows_none_or_string[hello': 'PASSED', 'testing/test_mark.py::test_marked_class_run_twice': 'PASSED', 'testing/test_mark.py::test_ini_markers': 'PASSED', 'testing/test_mark.py::test_markers_option': 'PASSED', 'testing/test_mark.py::test_ini_markers_whitespace': 'PASSED', 'testing/test_mark.py::test_marker_without_description': 'PASSED', 'testing/test_mark.py::test_markers_option_with_plugin_in_current_dir': 'PASSED', 'testing/test_mark.py::test_mark_on_pseudo_function': 'PASSED', 'testing/test_mark.py::test_strict_prohibits_unregistered_markers[--strict-markers]': 'PASSED', 'testing/test_mark.py::test_strict_prohibits_unregistered_markers[--strict]': 'PASSED', 'testing/test_mark.py::test_mark_option[xyz-expected_passed0]': 'PASSED', 'testing/test_mark.py::test_mark_option[(((': 'PASSED', 'testing/test_mark.py::test_mark_option[not': 'PASSED', 'testing/test_mark.py::test_mark_option[xyz': 'PASSED', 'testing/test_mark.py::test_mark_option[xyz2-expected_passed4]': 'PASSED', 'testing/test_mark.py::test_mark_option_custom[interface-expected_passed0]': 'PASSED', 'testing/test_mark.py::test_mark_option_custom[not': 'PASSED', 'testing/test_mark.py::test_keyword_option_custom[interface-expected_passed0]': 'PASSED', 'testing/test_mark.py::test_keyword_option_custom[not': 'PASSED', 'testing/test_mark.py::test_keyword_option_custom[pass-expected_passed2]': 'PASSED', 'testing/test_mark.py::test_keyword_option_custom[1': 'PASSED', 'testing/test_mark.py::test_keyword_option_considers_mark': 'PASSED', 'testing/test_mark.py::test_keyword_option_parametrize[None-expected_passed0]': 'PASSED', 'testing/test_mark.py::test_keyword_option_parametrize[[1.3]-expected_passed1]': 'PASSED', 'testing/test_mark.py::test_keyword_option_parametrize[2-3-expected_passed2]': 'PASSED', 'testing/test_mark.py::test_parametrize_with_module': 'PASSED', 'testing/test_mark.py::test_keyword_option_wrong_arguments[foo': 'PASSED', 'testing/test_mark.py::test_keyword_option_wrong_arguments[(foo-at': 'PASSED', 'testing/test_mark.py::test_keyword_option_wrong_arguments[or': 'PASSED', 'testing/test_mark.py::test_keyword_option_wrong_arguments[not': 'PASSED', 'testing/test_mark.py::test_parametrized_collected_from_command_line': 'PASSED', 'testing/test_mark.py::test_parametrized_collect_with_wrong_args': 'PASSED', 'testing/test_mark.py::test_parametrized_with_kwargs': 'PASSED', 'testing/test_mark.py::test_parametrize_iterator': 'PASSED', 'testing/test_mark.py::TestFunctional::test_merging_markers_deep': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_decorator_subclass_does_not_propagate_to_base': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_should_not_pass_to_siebling_class': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_decorator_baseclasses_merged': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_closest': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_with_wrong_marker': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_dynamically_in_funcarg': 'PASSED', 'testing/test_mark.py::TestFunctional::test_no_marker_match_on_unmarked_names': 'PASSED', 'testing/test_mark.py::TestFunctional::test_keywords_at_node_level': 'PASSED', 'testing/test_mark.py::TestFunctional::test_keyword_added_for_session': 'PASSED', 'testing/test_mark.py::TestFunctional::test_mark_from_parameters': 'PASSED', 'testing/test_mark.py::TestFunctional::test_reevaluate_dynamic_expr': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_select_simple': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[xxx]': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[xxx': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[TestClass]': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[TestClass': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_select_starton': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_keyword_extra': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_no_magic_values[__]': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_no_magic_values[+]': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_no_magic_values[..]': 'PASSED', 'testing/test_mark.py::TestKeywordSelection::test_no_match_directories_outside_the_suite': 'PASSED', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[None]': 'PASSED', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[]': 'PASSED', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[skip]': 'PASSED', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[xfail]': 'PASSED', 'testing/test_mark.py::test_parameterset_for_fail_at_collect': 'PASSED', 'testing/test_mark.py::test_parameterset_for_parametrize_bad_markname': 'PASSED', 'testing/test_mark.py::test_mark_expressions_no_smear': 'PASSED', 'testing/test_mark.py::test_markers_from_parametrize': 'PASSED', 'testing/test_mark.py::test_marker_expr_eval_failure_handling[NOT': 'PASSED', 'testing/test_mark.py::test_marker_expr_eval_failure_handling[bogus/]': 'PASSED'}
2024-04-05 04:20:45 [Run test-suite] Eval result: {'FAIL_TO_PASS': {'success': ['testing/test_mark.py::TestFunctional::test_reevaluate_dynamic_expr'], 'failure': []}, 'PASS_TO_PASS': {'success': ['testing/test_mark.py::TestFunctional::test_keyword_added_for_session', 'testing/test_mark.py::TestFunctional::test_keywords_at_node_level', 'testing/test_mark.py::TestFunctional::test_mark_closest', 'testing/test_mark.py::TestFunctional::test_mark_decorator_baseclasses_merged', 'testing/test_mark.py::TestFunctional::test_mark_decorator_subclass_does_not_propagate_to_base', 'testing/test_mark.py::TestFunctional::test_mark_dynamically_in_funcarg', 'testing/test_mark.py::TestFunctional::test_mark_from_parameters', 'testing/test_mark.py::TestFunctional::test_mark_should_not_pass_to_siebling_class', 'testing/test_mark.py::TestFunctional::test_mark_with_wrong_marker', 'testing/test_mark.py::TestFunctional::test_merging_markers_deep', 'testing/test_mark.py::TestFunctional::test_no_marker_match_on_unmarked_names', 'testing/test_mark.py::TestKeywordSelection::test_keyword_extra', 'testing/test_mark.py::TestKeywordSelection::test_no_magic_values[+]', 'testing/test_mark.py::TestKeywordSelection::test_no_magic_values[..]', 'testing/test_mark.py::TestKeywordSelection::test_no_magic_values[__]', 'testing/test_mark.py::TestKeywordSelection::test_no_match_directories_outside_the_suite', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[TestClass', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[TestClass]', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[xxx', 'testing/test_mark.py::TestKeywordSelection::test_select_extra_keywords[xxx]', 'testing/test_mark.py::TestKeywordSelection::test_select_simple', 'testing/test_mark.py::TestKeywordSelection::test_select_starton', 'testing/test_mark.py::TestMark::test_mark_with_param', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[py.test-mark]', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[py.test-param]', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[pytest-mark]', 'testing/test_mark.py::TestMark::test_pytest_exists_in_namespace_all[pytest-param]', 'testing/test_mark.py::TestMark::test_pytest_mark_name_starts_with_underscore', 'testing/test_mark.py::TestMark::test_pytest_mark_notcallable', 'testing/test_mark.py::TestMarkDecorator::test__eq__[foo-rhs3-False]', 'testing/test_mark.py::TestMarkDecorator::test__eq__[lhs0-rhs0-True]', 'testing/test_mark.py::TestMarkDecorator::test__eq__[lhs1-rhs1-False]', 'testing/test_mark.py::TestMarkDecorator::test__eq__[lhs2-bar-False]', 'testing/test_mark.py::TestMarkDecorator::test_aliases', 'testing/test_mark.py::test_addmarker_order', 'testing/test_mark.py::test_ini_markers', 'testing/test_mark.py::test_ini_markers_whitespace', 'testing/test_mark.py::test_keyword_option_considers_mark', 'testing/test_mark.py::test_keyword_option_custom[1', 'testing/test_mark.py::test_keyword_option_custom[interface-expected_passed0]', 'testing/test_mark.py::test_keyword_option_custom[not', 'testing/test_mark.py::test_keyword_option_custom[pass-expected_passed2]', 'testing/test_mark.py::test_keyword_option_parametrize[2-3-expected_passed2]', 'testing/test_mark.py::test_keyword_option_parametrize[None-expected_passed0]', 'testing/test_mark.py::test_keyword_option_parametrize[[1.3]-expected_passed1]', 'testing/test_mark.py::test_keyword_option_wrong_arguments[(foo-at', 'testing/test_mark.py::test_keyword_option_wrong_arguments[foo', 'testing/test_mark.py::test_keyword_option_wrong_arguments[not', 'testing/test_mark.py::test_keyword_option_wrong_arguments[or', 'testing/test_mark.py::test_mark_expressions_no_smear', 'testing/test_mark.py::test_mark_on_pseudo_function', 'testing/test_mark.py::test_mark_option[(((', 'testing/test_mark.py::test_mark_option[not', 'testing/test_mark.py::test_mark_option[xyz', 'testing/test_mark.py::test_mark_option[xyz-expected_passed0]', 'testing/test_mark.py::test_mark_option[xyz2-expected_passed4]', 'testing/test_mark.py::test_mark_option_custom[interface-expected_passed0]', 'testing/test_mark.py::test_mark_option_custom[not', 'testing/test_mark.py::test_marked_class_run_twice', 'testing/test_mark.py::test_marker_expr_eval_failure_handling[NOT', 'testing/test_mark.py::test_marker_expr_eval_failure_handling[bogus/]', 'testing/test_mark.py::test_marker_without_description', 'testing/test_mark.py::test_markers_from_parametrize', 'testing/test_mark.py::test_markers_option', 'testing/test_mark.py::test_markers_option_with_plugin_in_current_dir', 'testing/test_mark.py::test_parameterset_for_fail_at_collect', 'testing/test_mark.py::test_parameterset_for_parametrize_bad_markname', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[None]', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[]', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[skip]', 'testing/test_mark.py::test_parameterset_for_parametrize_marks[xfail]', 'testing/test_mark.py::test_parametrize_iterator', 'testing/test_mark.py::test_parametrize_with_module', 'testing/test_mark.py::test_parametrized_collect_with_wrong_args', 'testing/test_mark.py::test_parametrized_collected_from_command_line', 'testing/test_mark.py::test_parametrized_with_kwargs', 'testing/test_mark.py::test_pytest_param_id_allows_none_or_string[None]', 'testing/test_mark.py::test_pytest_param_id_allows_none_or_string[hello', 'testing/test_mark.py::test_pytest_param_id_requires_string', 'testing/test_mark.py::test_strict_prohibits_unregistered_markers[--strict-markers]', 'testing/test_mark.py::test_strict_prohibits_unregistered_markers[--strict]'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}
2024-04-05 04:20:45 [Run test-suite] Resolution status: ResolvedStatus.FULL
2024-04-05 04:20:45 [Run test-suite] Returning True since all resolved.
2024-04-05 04:20:45 [Validation] Finishing. Result is True. Message: .
2024-04-05 04:20:45 Result of dispatch_intent: ('Written a patch that resolves the issue. Congratulations!', 'The tool returned the patch written by another agent.', True)
2024-04-05 04:20:45 Invoked write_patch. Ending workflow.
2024-04-05 04:20:45 Task pytest-dev__pytest-7373 completed successfully.
