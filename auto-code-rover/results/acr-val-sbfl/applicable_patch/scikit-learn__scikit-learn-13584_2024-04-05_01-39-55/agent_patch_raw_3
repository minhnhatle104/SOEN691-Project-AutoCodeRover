# modification 1
```python
<file>sklearn/utils/_pprint.py</file>
<original>if (v != init_params[k] and
                not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):</original>
<patched>import numpy as np
if (not np.array_equal(np.atleast_1d(v), np.atleast_1d(init_params[k])) and
                not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):</patched>
```

Explanation:
The modification involves using `numpy.array_equal` with `numpy.atleast_1d` to ensure that both `v` (the parameter value) and `init_params[k]` (the initial parameter value) are compared as arrays. This approach correctly handles the comparison of both scalar values and arrays, including numpy arrays, by converting scalars to 1-dimensional arrays for a consistent comparison. The use of `numpy.atleast_1d` ensures that the comparison logic works for both numpy arrays and scalar values without raising an error when comparing arrays. This solution assumes the availability of numpy as `np`, which is a common convention in scikit-learn's codebase.