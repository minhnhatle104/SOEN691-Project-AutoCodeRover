```python
<file>sympy/matrices/matrices.py</file>
<original>
class Derivative(Expr):
    ...
    def _get_zero_with_shape_like(self, expr):
        return S.Zero
</original>
<patched>
class Derivative(Expr):
    ...
    def _get_zero_with_shape_like(self, expr):
        if expr.is_Matrix:
            return expr.zeros(expr.shape)
        return S.Zero
</patched>
```

```python
<file>sympy/matrices/matrices.py</file>
<original>
def _as_finite_diff(self, points, x0=None, wrt=None):
    ...
</original>
<patched>
def _as_finite_diff(self, points, x0=None, wrt=None):
    ...
    if self.is_Matrix:
        return self.applyfunc(lambda x: x.as_finite_diff(points, x0, wrt))
</patched>
```

```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
    def _get_zero_with_shape_like(self, expr):
        return S.Zero
</original>
<patched>
class MatrixBase:
    ...
    def _get_zero_with_shape_like(self, expr):
        if expr.is_Matrix:
            return expr.zeros(expr.shape)
        return S.Zero
</patched>
```

```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
    def kind(self):
        elem_kinds = set(e.kind for e in self._mat)
        if len(elem_kinds) == 1:
            return self._kind
</original>
<patched>
class MatrixBase:
    ...
    def kind(self):
        elem_kinds = set(e.kind for e in self._mat)
        if len(elem_kinds) == 1:
            return self._kind
        else:
            return self._kind
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
def _as_finite_diff(self, points, x0=None, wrt=None):
    ...
</original>
<patched>
def _as_finite_diff(self, points, x0=None, wrt=None):
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
def kind(self):
    ...
</original>
<patched>
def kind(self):
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</
```original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
```
```python
<file>sympy/matrices/matrices.py</file>
<original>
class MatrixBase:
    ...
</original>
<patched>
class MatrixBase:
    ...
</patched>
