[
    [
        "sympy/conftest.py",
        "",
        "file_clear_cache",
        1.0
    ],
    [
        "sympy/conftest.py",
        "",
        "check_disabled",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_numer_denom",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_polynomial",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonnegative",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonpositive",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_negative",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_conjugate",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "primitive",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_content_primitive",
        1.0
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "as_property",
        1.0
    ],
    [
        "sympy/core/assumptions.py",
        "ManagedProperties",
        "__init__",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "",
        "as_Basic",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "assumptions0",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "subs",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_subs",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "xreplace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_xreplace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "replace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "find",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "matches",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "rewrite",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "",
        "_atomic",
        1.0
    ],
    [
        "sympy/core/cache.py",
        "_cache",
        "clear_cache",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__getitem__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__ne__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "__new__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "__getitem__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "items",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "keys",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "__len__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "get",
        1.0
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__init__",
        1.0
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "_sympifyit",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "sort_key",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__radd__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__le__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__gt__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__trunc__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_from_mpmath",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_number",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_constant",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "equals",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_adjoint",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_terms",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_terms",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getn",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "args_cnc",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "coeff",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coefficients_dict",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_multiplicatively",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_additively",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_branch_factor",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_polynomial",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_rational_function",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_expand_hint",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "",
        "_mag",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_isnumber",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "as_expr",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "mul",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "normal",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "gcd",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "__init__",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "factor_terms",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "_getnargs_old",
        1.0
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "__init__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "__signature__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "__new__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "class_key",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "is_commutative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_evalf",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_is_commutative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_is_complex",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_aseries",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "fdiff",
        1.0
    ],
    [
        "sympy/core/function.py",
        "UndefinedFunction",
        "__new__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "__new__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_sort_variable_count",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_eval_is_commutative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_eval_derivative_n_times",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "expr",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_eval_nseries",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "as_finite_difference",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Lambda",
        "__call__",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Subs",
        "__new__",
        1.0
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_bool",
        1.0
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_not",
        1.0
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_or",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "",
        "_unevaluated_Mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "class_key",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_two_terms",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_derivative_n_times",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_numer_denom",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_polar",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_real",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_composite",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_nseries",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_ordered_factors",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "",
        "prod",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "",
        "_keep_coeff",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcd",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcdex",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_order",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_add",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__new__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_val",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_op",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_negative",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__sub__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__getnewargs__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rsub__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mul__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rmod__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_as_mpf_val",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_content_primitive",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "ceiling",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__neg__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__sub__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__index__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "approximation",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__int__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Exp1",
        "approximation_interval",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "ImaginaryUnit",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_even",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_negative",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_real",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_complex",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_polar",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_conjugate",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_derivative",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_polynomial",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "",
        "_canonical",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "__new__",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "lhs",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "rhs",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "canonical",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "_Greater",
        "gts",
        1.0
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__getitem__",
        1.0
    ],
    [
        "sympy/core/singleton.py",
        "Singleton",
        "__call__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_diff_wrt",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sanitize",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sage_",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "as_set",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "_hashable_content",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "",
        "symbols",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "conjugate",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "ExpBase",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "exp",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_rational",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_real",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_finite",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_nonnegative",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__new__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "expr",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "cond",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__iter__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "__new__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "eval",
        1.0
    ],
    [
        "sympy/geometry/util.py",
        "",
        "idiff",
        1.0
    ],
    [
        "sympy/logic/boolalg.py",
        "Boolean",
        "__rshift__",
        1.0
    ],
    [
        "sympy/logic/boolalg.py",
        "Not",
        "to_nnf",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "perfect_power",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "_factorint_small",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorint",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "nextprime",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "primerange",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "randprime",
        1.0
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "binomial_coefficients",
        1.0
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "multinomial_coefficients",
        1.0
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "multinomial_coefficients_iterator",
        1.0
    ],
    [
        "sympy/ntheory/primetest.py",
        "",
        "isprime",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_token_splittable",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_token_callable",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_add_factorial_tokens",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "AppliedFunction",
        "__init__",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "AppliedFunction",
        "expand",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "AppliedFunction",
        "__getitem__",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "AppliedFunction",
        "__repr__",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_flatten",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_group_parentheses",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_apply_functions",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_implicit_multiplication",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_implicit_application",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "function_exponentiation",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "split_symbols_custom",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "implicit_multiplication",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "implicit_application",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "implicit_multiplication_application",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_symbol",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "lambda_notation",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "factorial_notation",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "convert_xor",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "repeated_decimals",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_number",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "rationalize",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "_transform_equals_sign",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "convert_equals_signs",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "stringify_expr",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "eval_expr",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "parse_expr",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "evaluateFalse",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "EvaluateFalseTransformer",
        "flatten",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "EvaluateFalseTransformer",
        "visit_BinOp",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "msigma",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "pat_matrix",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "mgamma",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "mdft",
        1.0
    ],
    [
        "sympy/physics/units/__init__.py",
        "",
        "find_unit",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "name",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "symbol",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__hash__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__eq__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__str__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__repr__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__neg__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_register_as_base_dim",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__add__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__radd__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__sub__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__rsub__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__pow__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_eval_power",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__mul__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__rmul__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__div__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__rdiv__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "get_dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_from_dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_get_dimensional_dependencies_for_name",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "is_dimensionless",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "has_integer_powers",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "base_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "derived_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "_get_dimensional_dependencies_for_name",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "get_dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "equivalent_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "extend",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "sort_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "__getitem__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "__call__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "is_dimensionless",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "list_can_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "inv_can_transf_matrix",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "can_transf_matrix",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dim_can_vector",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dim_vector",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "print_dim_base",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dim",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "is_consistent",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "name",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "abbrev",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "base",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__str__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__mul__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__div__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__rdiv__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "",
        "prefix_unit",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "set_dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "set_scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "name",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "abbrev",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_is_constant",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_Abs",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "get_dimensional_expr",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_collect_factor_and_dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "convert_to",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "free_symbols",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "__init__",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "__str__",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "__repr__",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "extend",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "print_unit_base",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "dim",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "is_consistent",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "dim_simplify",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "_get_conversion_matrix_for_expr",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "convert_to",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "quantity_simplify",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "check_dimensions",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_composite",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add_term",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_term",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_ground",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_ground",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo_ground",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo_ground",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_neg",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_sub",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub_mul",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sqr",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_sqr",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_pow",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_rr_div",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_rr_div",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_div",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_max_norm",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_max_norm",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_l1_norm",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_TC",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_LC",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_TC",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree_in",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_strip",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_tuple",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_convert",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_convert",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero_p",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one_p",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_p",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zeros",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_dict",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_multi_deflate",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_inflate",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_inflate",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_inflate",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_terms_gcd",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_terms_gcd",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_list_terms",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_list_terms",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_diff",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_eval",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_trunc",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_trunc",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_content",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_content",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_primitive",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_primitive",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_extract",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_extract",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert_from",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "poly_ring",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_nonnegative",
        1.0
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "new",
        1.0
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "to_sympy",
        1.0
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "from_PolynomialRing",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "new",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "zero",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "one",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__eq__",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "to_sympy",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "get_field",
        1.0
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "gcd",
        1.0
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "gcdex",
        1.0
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "invert",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_rr_trivial_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_rr_trivial_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_simplify_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_zz_heu_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_zz_gcd_interpolate",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_zz_heu_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_inner_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_inner_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_content",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_trial_division",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_hensel_step",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_hensel_lift",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "_test_pl",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_zassenhaus",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_cyclotomic_factor",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_factor",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_factor_list",
        1.0
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_factor_list",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "__new__",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "_gens",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "raw_new",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "field_new",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "to_domain",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "as_expr",
        1.0
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__nonzero__",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_int",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_degree",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_strip",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_trunc",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_from_int_poly",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_to_int_poly",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_neg",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sub_ground",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_mul_ground",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_quo_ground",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_add",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sub",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_mul",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sqr",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sub_mul",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_div",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_rem",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_quo",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_frobenius_monomial_base",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_frobenius_map",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "_gf_pow_pnm1d2",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_pow_mod",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_gcd",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_gcdex",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_monic",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_diff",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_random",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sqf_p",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_ddf_zassenhaus",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_edf_zassenhaus",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_zassenhaus",
        1.0
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_factor_sqf",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "_build",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "_vars",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "mul",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "pow",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "mulpow",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "ldiv",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "div",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "gcd",
        1.0
    ],
    [
        "sympy/polys/orderings.py",
        "MonomialOrder",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_dict",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_field",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "convert",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "coeffs",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "terms",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "all_coeffs",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "terms_gcd",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "pow",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "degree",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "primitive",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "factor_list",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "is_ground",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__nonzero__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "BooleanOption",
        "preprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "preprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Order",
        "preprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "preprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "roots_quadratic",
        1.0
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "preprocess_roots",
        1.0
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "roots",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__new__",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "from_dict",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_poly",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_expr",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "gen",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "domain",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "per",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "get_domain",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "reorder",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "to_field",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "retract",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "terms",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "all_coeffs",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "length",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_dict",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "terms_gcd",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "pow",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_gen_to_level",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "degree",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "clear_denoms",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "primitive",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "factor_list",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_ground",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_univariate",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_multivariate",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_poly_from_expr",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "lcm_list",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_symbolic_factor_list",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_symbolic_factor",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "to_rational_coeffs",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "factor",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "intervals",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "cancel",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "poly",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_factors",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_no_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "parallel_dict_from_expr",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_reorder",
        1.0
    ],
    [
        "sympy/polys/rationaltools.py",
        "",
        "together",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "",
        "_parse_symbols",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__new__",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "_gens",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__eq__",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "monomial_basis",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "zero",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "one",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "domain_new",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "ground_new",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "term_new",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "ring_new",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "from_dict",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "to_field",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "set_ring",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "as_expr",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "as_expr_dict",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "clear_denoms",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__eq__",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "is_term",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "is_nonnegative",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "leading_expv",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_get_coeff",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "LC",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "iterterms",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "gcd",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "cofactors",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd_zero",
        1.0
    ],
    [
        "sympy/polys/sqfreetools.py",
        "",
        "dup_sqf_part",
        1.0
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Mul",
        1.0
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence",
        1.0
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "parenthesize",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "stringify",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Add",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Derivative",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Dummy",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Function",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_ImaginaryUnit",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Mul",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_ProductSet",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_AlgebraicNumber",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Pow",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_frozenset",
        1.0
    ],
    [
        "sympy/sets/fancysets.py",
        "Naturals0",
        "_contains",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__new__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "_latex",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__add__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__radd__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__mul__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rmul__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__sub__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rsub__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__pow__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rpow__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__div__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rdiv__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "_eval_func",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "",
        "_setexpr_apply_operation",
        1.0
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_pre",
        1.0
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "powsimp",
        1.0
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "_denest_pow",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "numer_expand",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "simplify",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "bottom_up",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "recast_to_symbols",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "_simple_dens",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "denoms",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "check_assumptions",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "solve",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "_solve",
        1.0
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "solve_linear",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "subsets",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "sift",
        1.0
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "class_key",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "class_key",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__str__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "free_symbols",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "expr_free_symbols",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "canonical_variables",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_sorted_args",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_poly",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "_sorted_args",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "",
        "_aresame",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "default_sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_nodes",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "ordered",
        0.7071067811865475
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.7071067811865475
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "pure_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "_create_evalf_table",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__pow__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_random",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_interval",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_parse_order",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_factors",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "removeO",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getO",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_independent",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_add",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "integrate",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "simplify",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "nsimplify",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "trigsimp",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "radsimp",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "round",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "div",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "quo",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "mul",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "inv",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "quo",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "ArgumentIndexError",
        "__str__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_should_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "count_ops",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "nfloat",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_and",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_expandsums",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_powers_dict",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational_function",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mpf_norm",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "",
        "ilcm",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_as_mpf_val",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__div__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "is_constant",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_new",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__getnewargs__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "ceiling",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "num",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__int__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ge__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__lt__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__le__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "limit_denominator",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__div__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "floor",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "ceiling",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "factors",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_coeff_Mul",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__abs__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rsub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__le__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_composite",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "_sage_",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "_sage_",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__lt__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "floor",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "make_args",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "base",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "exp",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_prime",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_composite",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_exp",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "Equality",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__contains__",
        0.7071067811865475
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "get",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new_stage2__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__getstate__",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_expand_log",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/integers.py",
        "RoundFunction",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "",
        "root",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "",
        "piecewise_fold",
        0.7071067811865475
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "as_set",
        0.7071067811865475
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "trailing",
        0.7071067811865475
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorrat",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_abs",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_neg",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_LC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_degree",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_to_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_eval",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "tp",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__call__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "of_type",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify_with_symbols",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_one",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_negative",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "abs",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/groundtypes.py",
        "",
        "python_sqrt",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "to_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "from_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "sqrt",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "get_ring",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "exquo",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_zz_gcd_interpolate",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_inner_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/orderings.py",
        "LexOrder",
        "__call__",
        0.7071067811865475
    ],
    [
        "sympy/polys/orderings.py",
        "",
        "monomial_key",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "unify",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "per",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_sympy_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_tuple",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyconfig.py",
        "",
        "query",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__setattr__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Sort",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "allowed_flags",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_unify",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "parallel_poly_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_parallel_poly_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "reduced",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_unify_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_no_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "expr_from_dict",
        0.7071067811865475
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Integer",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "order",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_as_ordered_terms",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Poly",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_UnevaluatedExpr",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "",
        "sstr",
        0.7071067811865475
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_post",
        0.7071067811865475
    ],
    [
        "sympy/simplify/hyperexpand.py",
        "",
        "hyperexpand",
        0.7071067811865475
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "numer",
        0.7071067811865475
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "denom",
        0.7071067811865475
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "signsimp",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_dups",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_variety",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_hashable_content",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "match",
        0.5773502691896258
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "is_sequence",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__le__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "floor",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rdivmod__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__radd__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmod__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ge__",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "",
        "integer_nthroot",
        0.5773502691896258
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "",
        "sqrt",
        0.5773502691896258
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "_new",
        0.5773502691896258
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "__setitem__",
        0.5773502691896258
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "_handle_creation_inputs",
        0.5773502691896258
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "_setitem",
        0.5773502691896258
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "uniq",
        0.5773502691896258
    ],
    [
        "conftest.py",
        "",
        "pytest_runtest_setup",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has",
        0.5
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.5
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__len__",
        0.5
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__iter__",
        0.5
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__ge__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_mpmath_",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__gt__",
        0.5
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_sympify",
        0.5
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "as_set",
        0.5
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "_infimum_key",
        0.5
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "contains",
        0.5
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "__contains__",
        0.5
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__new__",
        0.5
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_contains",
        0.5
    ]
]