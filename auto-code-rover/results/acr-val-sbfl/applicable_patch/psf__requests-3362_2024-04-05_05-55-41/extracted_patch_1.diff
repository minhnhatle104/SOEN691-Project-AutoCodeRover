diff --git a/requests/models.py b/requests/models.py
index fbb3c7e6..e8a0d173 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -694,8 +694,8 @@ class Response(object):
 
         chunks = reused_chunks if self._content_consumed else stream_chunks
 
-        if decode_unicode:
-            chunks = stream_decode_response_unicode(chunks, self)
+        if decode_unicode and self.encoding is not None:
+                    chunks = stream_decode_response_unicode(chunks, self, decode_unicode=True)
 
         return chunks
 
diff --git a/requests/utils.py b/requests/utils.py
index 8d17b6b2..16d7c1b9 100644
--- a/requests/utils.py
+++ b/requests/utils.py
@@ -359,10 +359,10 @@ def get_encoding_from_headers(headers):
 def stream_decode_response_unicode(iterator, r):
     """Stream decodes a iterator."""
 
-    if r.encoding is None:
-        for item in iterator:
-            yield item
-        return
+    if r.encoding is None or not decode_unicode:
+            for item in iterator:
+                yield item
+            return
 
     decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')
     for chunk in iterator:
