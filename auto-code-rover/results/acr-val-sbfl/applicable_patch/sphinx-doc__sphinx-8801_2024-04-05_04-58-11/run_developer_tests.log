.pkg: find interpreter for spec PythonSpec(major=3, minor=9)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=5)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python3, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.10.0.final.0-64, exe=/usr/local/bin/python3, platform=linux, version='3.10.0 (default, Feb 21 2024, 21:05:25) [GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/usr/bin/python3, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/bin/python3, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=6)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python3, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.10.0.final.0-64, exe=/usr/local/bin/python3, platform=linux, version='3.10.0 (default, Feb 21 2024, 21:05:25) [GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/usr/bin/python3, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/bin/python3, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=7)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python3, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.10.0.final.0-64, exe=/usr/local/bin/python3, platform=linux, version='3.10.0 (default, Feb 21 2024, 21:05:25) [GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/usr/bin/python3, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/bin/python3, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3, minor=8)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python3, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.10.0.final.0-64, exe=/usr/local/bin/python3, platform=linux, version='3.10.0 (default, Feb 21 2024, 21:05:25) [GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: proposed PathPythonInfo(spec=CPython3.8.10.final.0-64, exe=/usr/bin/python3.8, platform=linux, version='3.8.10 (default, Nov 22 2023, 10:22:35) \n[GCC 9.4.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(major=3)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
.pkg: find interpreter for spec PythonSpec(path=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python)
.pkg: proposed PythonInfo(spec=CPython3.9.18.final.0-64, exe=/home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/bin/python, platform=linux, version='3.9.18 (main, Sep 11 2023, 13:41:44) \n[GCC 11.2.0]', encoding_fs_io=utf-8-utf-8)
py39: install_deps> python -I -m pip install pytest pytest-cov
py39: exit 0 (0.42 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python -I -m pip install pytest pytest-cov pid=298228
.pkg: _optional_hooks> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.08 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=298236
.pkg: get_requires_for_build_editable> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.09 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=298236
.pkg: build_editable> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.15 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=298236
py39: install_package> python -I -m pip install --force-reinstall --no-deps /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/.tox/.tmp/package/63/Sphinx-3.5.0.dev20240405-0.editable-py3-none-any.whl
py39: exit 0 (0.38 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python -I -m pip install --force-reinstall --no-deps /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/.tox/.tmp/package/63/Sphinx-3.5.0.dev20240405-0.editable-py3-none-any.whl pid=298241
py39: commands[0]> python -X dev -m pytest --cov --cov-context=test -rA --durations 25 tests/roots/test-ext-autodoc/target/uninitialized_attributes.py tests/test_ext_autodoc_autoclass.py
[1m=================================================================== test session starts ====================================================================[0m
platform linux -- Python 3.9.18, pytest-8.1.1, pluggy-1.4.0
cachedir: .tox/py39/.pytest_cache
libraries: Sphinx-3.5.0+/d2117adaa, docutils-0.20.1
base tempdir: /tmp/pytest-of-yuntong/pytest-1432
rootdir: /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5
configfile: setup.cfg
plugins: cov-5.0.0
collected 9 items

tests/test_ext_autodoc_autoclass.py [31mE[0m[31mE[0m[31mE[0m[31mE[0m[31mE[0m[31mE[0m[31mE[0m[31mE[0m[31mE[0m[31m                                                                                                        [100%][0m

========================================================================== ERRORS ==========================================================================
[31m[1m______________________________________________________________ ERROR at setup of test_classes ______________________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef31410eb0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef31410be0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef31410be0>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef3133fcd0>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef3140f5f0>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef31410eb0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef31410be0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m_________________________________________________________ ERROR at setup of test_instance_variable _________________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b4f460>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b4fbe0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b4fbe0>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef309fe5f0>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30b4faf0>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b4f460>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b4fbe0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m____________________________________________________ ERROR at setup of test_inherited_instance_variable ____________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30dbc910>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30db5690>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30db5690>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef30f97870>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30bccaa0>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30dbc910>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30db5690>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m_____________________________________________________ ERROR at setup of test_uninitialized_attributes ______________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b4d410>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b4d5a0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b4d5a0>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef31b484b0>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30b4d690>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b4d410>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b4d5a0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m_______________________________________________ ERROR at setup of test_undocumented_uninitialized_attributes _______________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30d81fa0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30d816e0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30d816e0>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef31b06690>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30d81b40>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30d81fa0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30d816e0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m____________________________________________________________ ERROR at setup of test_decorators _____________________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b442d0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b86e60>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b86e60>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=[], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/root')})
make_app = <function make_app.<locals>.make at 0x7fef31aab9b0>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30b86c30>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b442d0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b86e60>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m__________________________________________________________ ERROR at setup of test_slots_attribute __________________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b9c1e0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b9ca00>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b9ca00>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef30b2ca50>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30b9c690>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30b9c1e0>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30b9ca00>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m___________________________________________ ERROR at setup of test_show_inheritance_for_subclass_of_generic_type ___________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30db0a50>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef31af3f50>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef31af3f50>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=['html'], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/ext-autodoc')})
make_app = <function make_app.<locals>.make at 0x7fef30b1c2d0>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef3095c280>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef30db0a50>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef31af3f50>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[31m[1m____________________________________________________________ ERROR at setup of test_class_alias ____________________________________________________________[0m

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef31a97640>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30946be0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
>                   metadata = setup(app)[90m[39;49;00m

[1m[31msphinx/registry.py[0m:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31m.tox/py39/lib/python3.9/site-packages/sphinxcontrib/applehelp/__init__.py[0m:230: in setup
    [0mapp.require_sphinx([33m'[39;49;00m[33m5.0[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30946be0>, version = '5.0'

    [0m[94mdef[39;49;00m [92mrequire_sphinx[39;49;00m([96mself[39;49;00m, version: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Check the Sphinx version if requested.[39;49;00m
    [33m[39;49;00m
    [33m    Compare *version* with the version of the running Sphinx, and abort the[39;49;00m
    [33m    build when it is too old.[39;49;00m
    [33m[39;49;00m
    [33m    :param version: The required version in the form of ``major.minor``.[39;49;00m
    [33m[39;49;00m
    [33m    .. versionadded:: 1.0[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m version > sphinx.__display_version__[:[94m3[39;49;00m]:[90m[39;49;00m
>           [94mraise[39;49;00m VersionRequirementError(version)[90m[39;49;00m
[1m[31mE           sphinx.errors.VersionRequirementError: 5.0[0m

[1m[31msphinx/application.py[0m:415: VersionRequirementError

[33mThe above exception was the direct cause of the following exception:[0m

test_params = {'shared_result': None}, app_params = app_params(args=[], kwargs={'srcdir': path('/tmp/pytest-of-yuntong/pytest-1432/root')})
make_app = <function make_app.<locals>.make at 0x7fef30ba47d0>, shared_result = <sphinx.testing.fixtures.SharedResult object at 0x7fef30946f00>

    [0m[37m@pytest[39;49;00m.fixture(scope=[33m'[39;49;00m[33mfunction[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
    [94mdef[39;49;00m [92mapp[39;49;00m(test_params: Dict, app_params: Tuple[Dict, Dict], make_app: Callable,[90m[39;49;00m
            shared_result: SharedResult) -> Generator[SphinxTestApp, [94mNone[39;49;00m, [94mNone[39;49;00m]:[90m[39;49;00m
    [90m    [39;49;00m[33m"""[39;49;00m
    [33m    provides sphinx.application.Sphinx object[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        args, kwargs = app_params[90m[39;49;00m
>       app_ = make_app(*args, **kwargs)[90m[39;49;00m

[1m[31msphinx/testing/fixtures.py[0m:149: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31msphinx/testing/fixtures.py[0m:195: in make
    [0mapp_ = SphinxTestApp(*args, **kwargs)  [90m# type: Any[39;49;00m[90m[39;49;00m
[1m[31msphinx/testing/util.py[0m:133: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m(srcdir, confdir, outdir, doctreedir,[90m[39;49;00m
[1m[31msphinx/application.py[0m:241: in __init__
    [0m[96mself[39;49;00m.setup_extension(extension)[90m[39;49;00m
[1m[31msphinx/application.py[0m:402: in setup_extension
    [0m[96mself[39;49;00m.registry.load_extension([96mself[39;49;00m, extname)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sphinx.registry.SphinxComponentRegistry object at 0x7fef31a97640>
app = <[AttributeError("'NoneType' object has no attribute 'name'") raised in repr()] SphinxTestApp object at 0x7fef30946be0>
extname = 'sphinxcontrib.applehelp'

    [0m[94mdef[39;49;00m [92mload_extension[39;49;00m([96mself[39;49;00m, app: [33m"[39;49;00m[33mSphinx[39;49;00m[33m"[39;49;00m, extname: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Load a Sphinx extension."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m app.extensions:  [90m# already loaded[39;49;00m[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m extname [95min[39;49;00m EXTENSION_BLACKLIST:[90m[39;49;00m
            logger.warning(__([33m'[39;49;00m[33mthe extension [39;49;00m[33m%r[39;49;00m[33m was already merged with Sphinx since [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                              [33m'[39;49;00m[33mversion [39;49;00m[33m%s[39;49;00m[33m; this extension is ignored.[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                           extname, EXTENSION_BLACKLIST[extname])[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# update loading context[39;49;00m[90m[39;49;00m
        prefix = __([33m'[39;49;00m[33mwhile setting up extension [39;49;00m[33m%s[39;49;00m[33m:[39;49;00m[33m'[39;49;00m) % extname[90m[39;49;00m
        [94mwith[39;49;00m prefixed_warnings(prefix):[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                mod = import_module(extname)[90m[39;49;00m
            [94mexcept[39;49;00m [96mImportError[39;49;00m [94mas[39;49;00m err:[90m[39;49;00m
                logger.verbose(__([33m'[39;49;00m[33mOriginal exception:[39;49;00m[33m\n[39;49;00m[33m'[39;49;00m) + traceback.format_exc())[90m[39;49;00m
                [94mraise[39;49;00m ExtensionError(__([33m'[39;49;00m[33mCould not import extension [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m) % extname,[90m[39;49;00m
                                     err) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            setup = [96mgetattr[39;49;00m(mod, [33m'[39;49;00m[33msetup[39;49;00m[33m'[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
            [94mif[39;49;00m setup [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                logger.warning(__([33m'[39;49;00m[33mextension [39;49;00m[33m%r[39;49;00m[33m has no setup() function; is it really [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                  [33m'[39;49;00m[33ma Sphinx extension module?[39;49;00m[33m'[39;49;00m), extname)[90m[39;49;00m
                metadata = {}  [90m# type: Dict[str, Any][39;49;00m[90m[39;49;00m
            [94melse[39;49;00m:[90m[39;49;00m
                [94mtry[39;49;00m:[90m[39;49;00m
                    metadata = setup(app)[90m[39;49;00m
                [94mexcept[39;49;00m VersionRequirementError [94mas[39;49;00m err:[90m[39;49;00m
                    [90m# add the extension name to the version required[39;49;00m[90m[39;49;00m
>                   [94mraise[39;49;00m VersionRequirementError([90m[39;49;00m
                        __([33m'[39;49;00m[33mThe [39;49;00m[33m%s[39;49;00m[33m extension used by this project needs at least [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mSphinx v[39;49;00m[33m%s[39;49;00m[33m; it therefore cannot be built with this [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                           [33m'[39;49;00m[33mversion.[39;49;00m[33m'[39;49;00m) % (extname, err)[90m[39;49;00m
                    ) [94mfrom[39;49;00m [04m[96merr[39;49;00m[90m[39;49;00m
[1m[31mE                   sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be built with this version.[0m

[1m[31msphinx/registry.py[0m:433: VersionRequirementError
[33m===================================================================== warnings summary =====================================================================[0m
sphinx/util/docutils.py:45
  /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/sphinx/util/docutils.py:45: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    __version_info__ = tuple(LooseVersion(docutils.__version__).version)

sphinx/registry.py:22
  /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/sphinx/registry.py:22: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    from pkg_resources import iter_entry_points

.tox/py39/lib/python3.9/site-packages/pkg_resources/__init__.py:2846
  /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/.tox/py39/lib/python3.9/site-packages/pkg_resources/__init__.py:2846: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.
  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
    declare_namespace(pkg)

sphinx/directives/patches.py:14
  /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/sphinx/directives/patches.py:14: DeprecationWarning: The `docutils.parsers.rst.directive.html` module will be removed in Docutils 2.0. Since Docutils 0.18, the "Meta" node is defined in `docutils.parsers.rst.directives.misc`.
    from docutils.parsers.rst.directives import html, images, tables

sphinx/util/rst.py:56
  /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/sphinx/util/rst.py:56: DeprecationWarning: 'environmentfilter' is renamed to 'pass_environment', the old name will be removed in Jinja 3.1.
    def heading(env: Environment, text: str, level: int = 1) -> str:

tests/test_ext_autodoc_autoclass.py::test_classes
  /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5/sphinx/jinja2glue.py:106: DeprecationWarning: 'contextfunction' is renamed to 'pass_context', the old name will be removed in Jinja 3.1.
    def warning(context: Dict, message: str, *args: Any, **kwargs: Any) -> str:

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform linux, python 3.9.18-final-0 -----------
Name                                            Stmts   Miss Branch BrPart  Cover
---------------------------------------------------------------------------------
sphinx/__init__.py                                 23      3      6      3    79%
sphinx/__main__.py                                  3      3      0      0     0%
sphinx/addnodes.py                                147     35     24      0    65%
sphinx/application.py                             346    176     96     18    43%
sphinx/builders/__init__.py                       333    262    102      0    16%
sphinx/builders/_epub_base.py                     451    364    184      0    14%
sphinx/builders/applehelp.py                       10     10      0      0     0%
sphinx/builders/changes.py                        100     74     30      0    20%
sphinx/builders/devhelp.py                         10     10      0      0     0%
sphinx/builders/dirhtml.py                         26      9      6      0    53%
sphinx/builders/dummy.py                           24      6      0      0    75%
sphinx/builders/epub3.py                          175    103     64      8    33%
sphinx/builders/gettext.py                        188    110     49      1    33%
sphinx/builders/html/__init__.py                  813    604    301      3    19%
sphinx/builders/html/transforms.py                 40     24     12      0    31%
sphinx/builders/htmlhelp.py                        10     10      0      0     0%
sphinx/builders/latex/__init__.py                 353    256    108      1    21%
sphinx/builders/latex/constants.py                  8      0      0      0   100%
sphinx/builders/latex/nodes.py                     11      0      0      0   100%
sphinx/builders/latex/theming.py                   87     62     30      0    21%
sphinx/builders/latex/transforms.py               274    179     90      0    26%
sphinx/builders/latex/util.py                      32     23     12      0    20%
sphinx/builders/linkcheck.py                      338    267    142      0    15%
sphinx/builders/manpage.py                         74     39     16      0    39%
sphinx/builders/qthelp.py                          11     11      0      0     0%
sphinx/builders/singlehtml.py                     111     75     32      1    26%
sphinx/builders/texinfo.py                        152    102     36      1    27%
sphinx/builders/text.py                            62     30      6      0    47%
sphinx/builders/xml.py                             76     38     18      0    40%
sphinx/cmd/__init__.py                              0      0      0      0   100%
sphinx/cmd/build.py                               164    164     50      0     0%
sphinx/cmd/make_mode.py                           100    100     36      0     0%
sphinx/cmd/quickstart.py                          347    347    130      0     0%
sphinx/config.py                                  255    164    141      8    26%
sphinx/deprecation.py                              49     18      4      1    60%
sphinx/directives/__init__.py                     140     80     36      0    34%
sphinx/directives/code.py                         280    217    123      0    16%
sphinx/directives/other.py                        249    160     60      0    29%
sphinx/directives/patches.py                      112     70     28      0    30%
sphinx/domains/__init__.py                        123     71     28      0    34%
sphinx/domains/c.py                              2669   2170   1006      7    14%
sphinx/domains/changeset.py                        83     48     20      0    34%
sphinx/domains/citation.py                         86     50     34      0    30%
sphinx/domains/cpp.py                            4989   4149   1970      8    12%
sphinx/domains/index.py                            75     42     16      0    36%
sphinx/domains/javascript.py                      243    174     96      0    20%
sphinx/domains/math.py                             99     60     28      0    31%
sphinx/domains/python.py                          809    644    392      1    14%
sphinx/domains/rst.py                             157    101     48      0    27%
sphinx/domains/std.py                             689    561    310      0    13%
sphinx/environment/__init__.py                    333    262    108      0    16%
sphinx/environment/adapters/__init__.py             0      0      0      0   100%
sphinx/environment/adapters/asset.py                8      4      2      0    40%
sphinx/environment/adapters/indexentries.py       113     99     54      0     8%
sphinx/environment/adapters/toctree.py            191    174    116      0     6%
sphinx/environment/collectors/__init__.py          20      6      2      0    64%
sphinx/environment/collectors/asset.py             86     57     30      0    25%
sphinx/environment/collectors/dependencies.py      30     14     10      0    40%
sphinx/environment/collectors/indexentries.py      34     34      8      0     0%
sphinx/environment/collectors/metadata.py          36     24     18      0    22%
sphinx/environment/collectors/title.py             31     18      6      0    35%
sphinx/environment/collectors/toctree.py          209    186    108      0     7%
sphinx/errors.py                                   49     17      6      0    58%
sphinx/events.py                                   59     29     24      3    40%
sphinx/ext/__init__.py                              0      0      0      0   100%
sphinx/ext/apidoc.py                              261    261    143      0     0%
sphinx/ext/autodoc/__init__.py                   1493   1209    654      0    13%
sphinx/ext/autodoc/deprecated.py                   50     14      0      0    72%
sphinx/ext/autodoc/directive.py                    89     56     16      0    31%
sphinx/ext/autodoc/importer.py                    200    178     96      0     7%
sphinx/ext/autodoc/mock.py                        106     63     18      0    35%
sphinx/ext/autodoc/type_comment.py                 79     79     44      0     0%
sphinx/ext/autodoc/typehints.py                    95     95     50      0     0%
sphinx/ext/autosectionlabel.py                     38     38     10      0     0%
sphinx/ext/autosummary/__init__.py                475    475    158      0     0%
sphinx/ext/autosummary/generate.py                386    386    136      0     0%
sphinx/ext/coverage.py                            225    225    136      0     0%
sphinx/ext/doctest.py                             342    271    132      0    15%
sphinx/ext/duration.py                             51     51      8      0     0%
sphinx/ext/extlinks.py                             31     31      6      0     0%
sphinx/ext/githubpages.py                          18     18      6      0     0%
sphinx/ext/graphviz.py                            270    270     92      0     0%
sphinx/ext/ifconfig.py                             42     42      6      0     0%
sphinx/ext/imgconverter.py                         44     44      6      0     0%
sphinx/ext/imgmath.py                             229    229     64      0     0%
sphinx/ext/inheritance_diagram.py                 229    229     86      0     0%
sphinx/ext/intersphinx.py                         239    239    121      0     0%
sphinx/ext/jsmath.py                               10     10      0      0     0%
sphinx/ext/linkcode.py                             44     44     18      0     0%
sphinx/ext/mathjax.py                              65     42     26      0    25%
sphinx/ext/napoleon/__init__.py                    75     75     28      0     0%
sphinx/ext/napoleon/docstring.py                  782    782    396      0     0%
sphinx/ext/napoleon/iterators.py                   62     62     36      0     0%
sphinx/ext/todo.py                                200    200     50      0     0%
sphinx/ext/viewcode.py                            216    216     89      0     0%
sphinx/extension.py                                27      9      8      0    51%
sphinx/highlighting.py                             90     61     34      0    23%
sphinx/io.py                                      115     67     16      0    37%
sphinx/jinja2glue.py                              132    101     44      0    18%
sphinx/locale/__init__.py                         110     43     22      6    57%
sphinx/parsers.py                                  40     19      2      0    50%
sphinx/project.py                                  47     33     22      0    20%
sphinx/pycode/__init__.py                         146    114     40      0    17%
sphinx/pycode/ast.py                              131     99     78      3    18%
sphinx/pycode/parser.py                           391    323    184      1    12%
sphinx/pygments_styles.py                          13      0      0      0   100%
sphinx/registry.py                                271    145     78     10    40%
sphinx/roles.py                                   375    300    118      0    17%
sphinx/search/__init__.py                         235    180    100      0    16%
sphinx/search/da.py                                15     15      0      0     0%
sphinx/search/de.py                                15     15      0      0     0%
sphinx/search/en.py                                14      2      0      0    86%
sphinx/search/es.py                                15     15      0      0     0%
sphinx/search/fi.py                                15     15      0      0     0%
sphinx/search/fr.py                                15     15      0      0     0%
sphinx/search/hu.py                                15     15      0      0     0%
sphinx/search/it.py                                15     15      0      0     0%
sphinx/search/ja.py                               242    242     42      0     0%
sphinx/search/jssplitter.py                         1      0      0      0   100%
sphinx/search/nl.py                                15     15      0      0     0%
sphinx/search/no.py                                15     15      0      0     0%
sphinx/search/pt.py                                15     15      0      0     0%
sphinx/search/ro.py                                14     14      0      0     0%
sphinx/search/ru.py                                15     15      0      0     0%
sphinx/search/sv.py                                15     15      0      0     0%
sphinx/search/tr.py                                14     14      0      0     0%
sphinx/search/zh.py                                39     39     10      0     0%
sphinx/setup_command.py                            89     89     40      0     0%
sphinx/testing/__init__.py                          0      0      0      0   100%
sphinx/testing/comparer.py                         33     20     12      0    29%
sphinx/testing/fixtures.py                        135     48     42      7    60%
sphinx/testing/path.py                             75     29      2      0    60%
sphinx/testing/restructuredtext.py                 17     17      2      0     0%
sphinx/testing/util.py                            119     50     43      2    48%
sphinx/theming.py                                 153    119     54      0    16%
sphinx/transforms/__init__.py                     214    112     95      0    33%
sphinx/transforms/compact_bullet_list.py           51     34     20      0    24%
sphinx/transforms/i18n.py                         255    221    156      0     8%
sphinx/transforms/post_transforms/__init__.py     132     94     57      0    20%
sphinx/transforms/post_transforms/code.py          80     47     22      0    32%
sphinx/transforms/post_transforms/images.py       159    115     56      0    20%
sphinx/transforms/references.py                    20      8      2      0    55%
sphinx/util/__init__.py                           458    357    183      0    16%
sphinx/util/build_phase.py                          7      0      0      0   100%
sphinx/util/cfamily.py                            278    186     94      0    25%
sphinx/util/compat.py                              24      9      8      0    47%
sphinx/util/console.py                             71     25     22      1    57%
sphinx/util/docfields.py                          196    154     70      0    16%
sphinx/util/docstrings.py                          57     47     38      0    11%
sphinx/util/docutils.py                           259    150     50      0    36%
sphinx/util/fileutil.py                            45     37     30      1    12%
sphinx/util/i18n.py                               182    134     80      0    18%
sphinx/util/images.py                              66     47     28      0    20%
sphinx/util/inspect.py                            516    441    263      1    10%
sphinx/util/inventory.py                          116     92     46      0    15%
sphinx/util/jsdump.py                             132    116     80      0     8%
sphinx/util/jsonimpl.py                            21     21      2      0     0%
sphinx/util/logging.py                            331    117    104     20    58%
sphinx/util/matching.py                            57     27     32      2    47%
sphinx/util/math.py                                38     34     16      0     7%
sphinx/util/nodes.py                              310    253    162      0    12%
sphinx/util/osutil.py                             141     89     38      0    29%
sphinx/util/parallel.py                            93     69     28      0    20%
sphinx/util/png.py                                 23     23      2      0     0%
sphinx/util/pycompat.py                            44     20      0      0    55%
sphinx/util/requests.py                            69     48     20      0    24%
sphinx/util/rst.py                                 66     40     26      1    29%
sphinx/util/smartypants.py                        113    105     54      1     5%
sphinx/util/stemmer/__init__.py                    20      7      2      0    59%
sphinx/util/stemmer/porter.py                     257    240    218      0     4%
sphinx/util/tags.py                                55     37     22      0    23%
sphinx/util/template.py                            85     54     14      0    31%
sphinx/util/texescape.py                           40     24     16      0    29%
sphinx/util/typing.py                             305    282    268      1     4%
sphinx/versioning.py                              104     81     46      0    15%
sphinx/writers/__init__.py                          0      0      0      0   100%
sphinx/writers/html5.py                           525    387    180      0    20%
sphinx/writers/html.py                            558    406    188      0    21%
sphinx/writers/latex.py                          1424   1110    536      1    16%
sphinx/writers/manpage.py                         295    192     59      0    29%
sphinx/writers/texinfo.py                        1014    736    261      0    22%
sphinx/writers/text.py                            763    499    177      0    28%
sphinx/writers/xml.py                              25     11      0      0    56%
---------------------------------------------------------------------------------
TOTAL                                           36993  28828  13907    122    16%

=================================================================== slowest 25 durations ===================================================================
0.19s setup    tests/test_ext_autodoc_autoclass.py::test_classes
0.02s setup    tests/test_ext_autodoc_autoclass.py::test_decorators
0.02s teardown tests/test_ext_autodoc_autoclass.py::test_classes
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_class_alias
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_instance_variable
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_show_inheritance_for_subclass_of_generic_type
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_inherited_instance_variable
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_undocumented_uninitialized_attributes
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_uninitialized_attributes
0.01s setup    tests/test_ext_autodoc_autoclass.py::test_slots_attribute

(8 durations < 0.005s hidden.  Use -vv to show these durations.)
[36m[1m================================================================= short test summary info ==================================================================[0m
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_classes[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_instance_variable[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_inherited_instance_variable[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_uninitialized_attributes[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_undocumented_uninitialized_attributes[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_decorators[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_slots_attribute[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_show_inheritance_for_subclass_of_generic_type[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31mERROR[0m tests/test_ext_autodoc_autoclass.py::[1mtest_class_alias[0m - sphinx.errors.VersionRequirementError: The sphinxcontrib.applehelp extension used by this project needs at least Sphinx v5.0; it therefore cannot be bu...
[31m============================================================== [33m6 warnings[0m, [31m[1m9 errors[0m[31m in 4.82s[0m[31m ===============================================================[0m
py39: exit 1 (5.30 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python -X dev -m pytest --cov --cov-context=test -rA --durations 25 tests/roots/test-ext-autodoc/target/uninitialized_attributes.py tests/test_ext_autodoc_autoclass.py pid=298250
.pkg: _exit> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__
.pkg: exit None (0.00 seconds) /media/media0/yuntong/SWE-bench/testbed/sphinx-doc__sphinx/setup_sphinx-doc__sphinx__3.5> python /home/yuntong/miniconda3/envs/setup_sphinx-doc__sphinx__3.5/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__ pid=298236
  py39: FAIL code 1 (6.47=setup[1.17]+cmd[5.30] seconds)
  evaluation failed :( (6.64 seconds)
