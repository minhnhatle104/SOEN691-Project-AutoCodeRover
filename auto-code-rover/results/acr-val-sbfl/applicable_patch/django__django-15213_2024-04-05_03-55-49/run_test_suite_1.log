Output:
Testing against Django installed in '/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django' with up to 256 processes
Importing application annotations
Found 77 test(s).
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: annotations, auth, contenttypes, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table annotations_author
    Creating table annotations_publisher
    Creating table annotations_book
    Creating table annotations_store
    Creating table annotations_departmentstore
    Creating table annotations_employee
    Creating table annotations_company
    Creating table annotations_ticket
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_aggregate_alias (annotations.tests.AliasTests) ... ok
test_alias_after_annotation (annotations.tests.AliasTests) ... ok
test_alias_annotate_with_aggregation (annotations.tests.AliasTests) ... ok
test_alias_annotation_expression (annotations.tests.AliasTests) ... ok
test_alias_default_alias_expression (annotations.tests.AliasTests) ... ok
test_basic_alias (annotations.tests.AliasTests) ... ok
test_basic_alias_annotation (annotations.tests.AliasTests) ... ok
test_basic_alias_f_annotation (annotations.tests.AliasTests) ... ok
test_basic_alias_f_transform_annotation (annotations.tests.AliasTests) ... ok
test_dates_alias (annotations.tests.AliasTests) ... ok
test_datetimes_alias (annotations.tests.AliasTests) ... ok
test_defer_only_alias (annotations.tests.AliasTests) ... ok
test_distinct_on_alias (annotations.tests.AliasTests) ... skipped "Database doesn't support feature(s): can_distinct_on_fields"
test_filter_alias_agg_with_double_f (annotations.tests.AliasTests) ... ok
test_filter_alias_with_double_f (annotations.tests.AliasTests) ... ok
test_filter_alias_with_f (annotations.tests.AliasTests) ... ok
test_joined_alias_annotation (annotations.tests.AliasTests) ... ok
test_order_by_alias (annotations.tests.AliasTests) ... ok
test_order_by_alias_aggregate (annotations.tests.AliasTests) ... ok
test_overwrite_alias_with_annotation (annotations.tests.AliasTests) ... ok
test_overwrite_annotation_with_alias (annotations.tests.AliasTests) ... ok
test_update_with_alias (annotations.tests.AliasTests) ... ok
test_values_alias (annotations.tests.AliasTests) ... ok
test_aggregate_over_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_aggregate_over_full_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... FAIL
test_annotate_exists (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotate_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_aggregate_with_m2o (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_exists_aggregate_values_chaining (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_filter_with_subquery (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_in_f_grouped_by_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_reverse_m2m (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_subquery_and_aggregate_values_chaining (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_subquery_outerref_transform (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_annotation_with_m2m (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_arguments_must_be_expressions (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_basic_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_basic_f_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_boolean_value_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_chaining_annotation_filter_with_m2m (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_chaining_transforms (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_column_field_ordering (annotations.tests.NonAggregateAnnotationTestCase)
Columns are aligned in the correct order for resolve_columns. This test ... ok
test_column_field_ordering_with_deferred (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_combined_annotation_commutative (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_combined_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_combined_f_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_custom_functions (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_custom_functions_can_ref_other_functions (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_custom_transform_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_decimal_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_defer_annotation (annotations.tests.NonAggregateAnnotationTestCase)
Deferred attributes can be referenced by an annotation, ... ok
test_distinct_on_with_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... skipped "Database doesn't support feature(s): can_distinct_on_fields"
test_empty_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_empty_queryset_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_filter_agg_with_double_f (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_filter_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_filter_annotation_with_double_f (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_filter_annotation_with_f (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_filter_decimal_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_filter_wrong_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_full_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... FAIL
test_full_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_grouping_by_q_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... FAIL
test_joined_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_joined_transformed_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_mixed_type_annotation_date_interval (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_mixed_type_annotation_numbers (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_mti_annotations (annotations.tests.NonAggregateAnnotationTestCase)
Fields on an inherited model can be referenced by an ... ok
test_null_annotation (annotations.tests.NonAggregateAnnotationTestCase)
Annotating None onto a model round-trips ... ok
test_order_by_aggregate (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_order_by_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_q_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase) ... FAIL
test_raw_sql_with_inherited_field (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_rawsql_group_by_collapse (annotations.tests.NonAggregateAnnotationTestCase) ... skipped "Database doesn't support feature(s): allows_group_by_pk"
test_update_with_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok
test_values_annotation (annotations.tests.NonAggregateAnnotationTestCase)
Annotations can reference fields in a values clause, ... ok
test_values_with_pk_annotation (annotations.tests.NonAggregateAnnotationTestCase) ... ok

======================================================================
FAIL: test_aggregate_over_full_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/annotations/tests.py", line 231, in test_aggregate_over_full_expression_annotation
    self.assertEqual(qs['selected__sum'], Book.objects.count())
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 837, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 830, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: False != 6

======================================================================
FAIL: test_full_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/annotations/tests.py", line 218, in test_full_expression_annotation
    self.assertTrue(all(book.selected for book in books))
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 688, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true

======================================================================
FAIL: test_grouping_by_q_expression_annotation (annotations.tests.NonAggregateAnnotationTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1313, in skip_wrapper
    return test_func(*args, **kwargs)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/annotations/tests.py", line 280, in test_grouping_by_q_expression_annotation
    self.assertCountEqual(authors, [
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 1197, in assertCountEqual
    self.fail(msg)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 676, in fail
    raise self.failureException(msg)
AssertionError: Element counts were not equal:
First has 1, Second has 0:  {'under_40': False, 'count_id': 6}
First has 1, Second has 0:  {'under_40': True, 'count_id': 3}
First has 0, Second has 1:  {'under_40': False, 'count_id': 3}
First has 0, Second has 1:  {'under_40': True, 'count_id': 6}

======================================================================
FAIL: test_q_expression_annotation_with_aggregation (annotations.tests.NonAggregateAnnotationTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1313, in skip_wrapper
    return test_func(*args, **kwargs)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/annotations/tests.py", line 270, in test_q_expression_annotation_with_aggregation
    self.assertIs(book.isnull_pubdate, False)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 1118, in assertIs
    self.fail(self._formatMessage(msg, standardMsg))
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 676, in fail
    raise self.failureException(msg)
AssertionError: True is not False

----------------------------------------------------------------------
Ran 77 tests in 0.071s

FAILED (failures=4, skipped=3)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...

>>>>> All Tests Passed
