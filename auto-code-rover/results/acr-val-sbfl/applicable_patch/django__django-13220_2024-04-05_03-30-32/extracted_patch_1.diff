diff --git a/django/core/exceptions.py b/django/core/exceptions.py
index dc084b8692..d27c7a1185 100644
--- a/django/core/exceptions.py
+++ b/django/core/exceptions.py
@@ -98,6 +98,21 @@ NON_FIELD_ERRORS = '__all__'
 
 class ValidationError(Exception):
     """An error while validating data."""
+    
+    def __eq__(self, other):
+        if not isinstance(other, ValidationError):
+            return NotImplemented
+        
+        # Compare based on error_dict if both instances have it
+        if hasattr(self, 'error_dict') and hasattr(other, 'error_dict'):
+            return dict(self) == dict(other)
+        
+        # Compare based on error_list if both instances have it
+        if hasattr(self, 'error_list') and hasattr(other, 'error_list'):
+            return set(self.error_list) == set(other.error_list)
+        
+        # Fallback to comparing messages if neither of the above match
+        return set(self.messages) == set(other.messages)
     def __init__(self, message, code=None, params=None):
         """
         The `message` argument can be a single error, a list of errors, or a
