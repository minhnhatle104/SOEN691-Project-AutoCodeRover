=================================================================== test session starts ====================================================================
collected 73 items

tests/test_relational.py ............F.........F...F..F.FFFFFFFFFFFFFFFFF.......F...F.............                                                   [100%]

========================================================================= FAILURES =========================================================================
________________________________________________________ TestRelationalPlotter.test_relplot_simple _________________________________________________________

self = <tests.test_relational.TestRelationalPlotter object at 0x7f9dd806e7f0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]

    def test_relplot_simple(self, long_df):
    
        g = relplot(data=long_df, x="x", y="y", kind="scatter")
        x, y = g.ax.collections[0].get_offsets().T
        assert_array_equal(x, long_df["x"])
        assert_array_equal(y, long_df["y"])
    
>       g = relplot(data=long_df, x="x", y="y", kind="line")

tests/test_relational.py:453: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:976: in relplot
    g.map_dataframe(func, **plot_kws)
seaborn/axisgrid.py:773: in map_dataframe
    self._facet_plot(func, ax, args, kwargs)
seaborn/axisgrid.py:802: in _facet_plot
    func(*plot_args, **plot_kwargs)
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________________ TestRelationalPlotter.test_relplot_legend _________________________________________________________

self = <tests.test_relational.TestRelationalPlotter object at 0x7f9dd813adc0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str a_like_b
0   12  0.449243... 0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8        o

[100 rows x 14 columns]

    def test_relplot_legend(self, long_df):
    
        g = relplot(data=long_df, x="x", y="y")
        assert g._legend is None
    
        g = relplot(data=long_df, x="x", y="y", hue="a")
        texts = [t.get_text() for t in g._legend.texts]
        expected_texts = long_df["a"].unique()
        assert_array_equal(texts, expected_texts)
    
        g = relplot(data=long_df, x="x", y="y", hue="s", size="s")
        texts = [t.get_text() for t in g._legend.texts]
        assert_array_equal(texts, np.sort(texts))
    
        g = relplot(data=long_df, x="x", y="y", hue="a", legend=False)
        assert g._legend is None
    
        palette = color_palette("deep", len(long_df["b"].unique()))
        a_like_b = dict(zip(long_df["a"].unique(), long_df["b"].unique()))
        long_df["a_like_b"] = long_df["a"].map(a_like_b)
>       g = relplot(
            data=long_df,
            x="x", y="y", hue="b", style="a_like_b",
            palette=palette, kind="line", estimator=None,
        )

tests/test_relational.py:615: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:976: in relplot
    g.map_dataframe(func, **plot_kws)
seaborn/axisgrid.py:773: in map_dataframe
    self._facet_plot(func, ax, args, kwargs)
seaborn/axisgrid.py:802: in _facet_plot
    func(*plot_args, **plot_kwargs)
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________________________ TestLinePlotter.test_color ________________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd813a820>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]

    def test_color(self, long_df):
    
        ax = plt.figure().subplots()
>       self.func(data=long_df, x="x", y="y", ax=ax)

tests/test_relational.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________________________________________________ TestLinePlotter.test_log_scale ______________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd813a9a0>

    def test_log_scale(self):
    
        f, ax = plt.subplots()
        ax.set_xscale("log")
    
        x = [1, 10, 100]
        y = [1, 2, 3]
    
>       lineplot(x=x, y=y)

tests/test_relational.py:1078: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________________________________________________ TestLinePlotter.test_matplotlib_kwargs __________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd816ff40>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]

    def test_matplotlib_kwargs(self, long_df):
    
        kws = {
            "linestyle": "--",
            "linewidth": 3,
            "color": (1, .5, .2),
            "markeredgecolor": (.2, .5, .2),
            "markeredgewidth": 1,
        }
>       ax = lineplot(data=long_df, x="x", y="y", **kws)

tests/test_relational.py:1125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________________________________________________ TestLinePlotter.test_nonmapped_dashes ___________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd816fac0>

    def test_nonmapped_dashes(self):
    
>       ax = lineplot(x=[1, 2], y=[1, 2], dashes=(2, 1))

tests/test_relational.py:1134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________________________________________________ TestLinePlotter.test_lineplot_axes ____________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd816f3a0>
wide_df =                    a         b         c
wide_index                              
10          1.449377  0.547052 -1.23...        -0.305246 -1.329569  0.624981
46          0.272567 -0.936631 -0.986104
48          0.813041 -1.076465  0.829330

    def test_lineplot_axes(self, wide_df):
    
        f1, ax1 = plt.subplots()
        f2, ax2 = plt.subplots()
    
>       ax = lineplot(data=wide_df)

tests/test_relational.py:1144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics0] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd816fa60>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics1] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd816fdc0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'x': 't', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics2] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a7c0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'x': 'a', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics3] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a880>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'hue': 'y', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics4] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a940>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'hue': 'a', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics5] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815aa00>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'size': 'a', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics6] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a6d0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'style': 'a', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics7] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a610>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'hue': 's', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics8] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a550>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'size': 's', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics9] _________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815a490>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'style': 's', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics10] ________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815af40>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'hue': 'a', 'style': 'a', 'x': 'x', 'y': 'y'}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________________________________ TestLinePlotter.test_lineplot_vs_relplot[long_semantics11] ________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815ae80>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]
long_semantics = {'hue': 'a', 'size': 'b', 'style': 'b', 'x': 'x', ...}

    def test_lineplot_vs_relplot(self, long_df, long_semantics):
    
>       ax = lineplot(data=long_df, **long_semantics)

tests/test_relational.py:1152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________________________________________________ TestLinePlotter.test_lineplot_smoke ____________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd815aa90>
wide_df =                    a         b         c
wide_index                              
10          1.449377  0.547052 -1.23...        -0.305246 -1.329569  0.624981
46          0.272567 -0.936631 -0.986104
48          0.813041 -1.076465  0.829330
wide_array = array([[ 1.44937693,  0.54705238, -1.23849421],
       [ 0.0042397 ,  0.96104443, -0.06555753],
       [-2.22010765,  ...2956902,  0.62498133],
       [ 0.27256657, -0.93663117, -0.9861045 ],
       [ 0.81304077, -1.07646527,  0.82932958]])
wide_list_of_series = [0    -0.462414
1    -0.663266
2     0.272339
3    -0.202488
4    -1.320671
5     2.182511
6     0.416575
7    -0.4067...2296
9    -1.253690
10   -0.611071
11   -0.127162
12    1.658410
13    0.747224
14   -0.571759
Name: b, dtype: float64]
wide_list_of_arrays = [array([-0.46241397, -0.66326575,  0.27233885, -0.20248795, -1.3206712 ,
        2.18251053,  0.41657504, -0.40679557,...94239,  1.42901482, -0.35229582, -1.25368957,
       -0.61107077, -0.12716222,  1.65840991,  0.74722355, -0.57175876])]
wide_list_of_lists = [[-0.4624139668622383, -0.6632657450083369, 0.27233885054394685, -0.2024879527524557, -1.3206712007140675, 2.182510529...64863895, 0.43494239175560634, 1.4290148188482537, -0.3522958175702248, -1.2536895712130631, -0.6110707708089032, ...]]
flat_array = array([ 0.13830514, -0.10108545,  0.35369949, -0.58809377, -1.66542662,
        1.67094557,  0.42036328,  1.78859975, ...010368, -1.14244064, -0.96140692,  0.11880587,
       -0.15018541, -1.99302747, -0.00222044,  0.76400317,  0.12336583])
flat_series = t
10    0.138305
11   -0.101085
12    0.353699
13   -0.588094
14   -1.665427
15    1.670946
16    0.420363
17    1.788...61407
24    0.118806
25   -0.150185
26   -1.993027
27   -0.002220
28    0.764003
29    0.123366
Name: s, dtype: float64
flat_list = [0.13830514195442498, -0.1010854511471884, 0.35369948934987555, -0.5880937734015119, -1.6654266179669477, 1.6709455731532739, ...]
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0    6 -0.853013  0.55171...2
99   1  0.321599  0.274270  c  n  0 2004-01-01 2004-07-30 18:25:00  2  0.3     c     2     2

[100 rows x 13 columns]
missing_df =        x         y         z  a  b    c          d                   t    s    f a_cat s_cat s_str
0    6.0 -0.853013 ... 1.0  0.321599  0.274270  c  n  NaN 2004-01-01 2004-07-30 18:25:00  2.0  NaN     c     2     2

[100 rows x 13 columns]
object_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0    6 -0.853013  0.55171...2
99   1  0.321599  0.274270  c  n  0 2004-01-01 2004-07-30 18:25:00  2  0.3     c     2     2

[100 rows x 13 columns]

    def test_lineplot_smoke(
        self,
        wide_df, wide_array,
        wide_list_of_series, wide_list_of_arrays, wide_list_of_lists,
        flat_array, flat_series, flat_list,
        long_df, missing_df, object_df
    ):
    
        f, ax = plt.subplots()
    
        lineplot(x=[], y=[])
        ax.clear()
    
>       lineplot(data=wide_df)

tests/test_relational.py:1177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________________________________________________ TestLinePlotter.test_ci_deprecation ____________________________________________________________

self = <tests.test_relational.TestLinePlotter object at 0x7f9dd816f5b0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]

    def test_ci_deprecation(self, long_df):
    
        axs = plt.figure().subplots(2)
>       lineplot(data=long_df, x="x", y="y", errorbar=("ci", 95), seed=0, ax=axs[0])

tests/test_relational.py:1255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:646: in lineplot
    p.plot(ax, kwargs)
seaborn/relational.py:422: in plot
    for sub_vars, sub_data in self.iter_data(grouping_vars, from_comp_data=True):
seaborn/_oldcore.py:1005: in iter_data
    data = self.comp_data
seaborn/_oldcore.py:1096: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:480: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________________________________________________ TestScatterPlotter.test_hue_order _____________________________________________________________

self = <seaborn._oldcore.HueMapping object at 0x7f9db16e2640>, key = 'c'

    def _lookup_single(self, key):
        """Get the color for a single value, using colormap to interpolate."""
        try:
            # Use a value that's in the original data vector
>           value = self.lookup_table[key]
E           KeyError: 'c'

seaborn/_oldcore.py:150: KeyError

During handling of the above exception, another exception occurred:

self = <seaborn._oldcore.HueMapping object at 0x7f9db16e2640>, key = 'c'

    def _lookup_single(self, key):
        """Get the color for a single value, using colormap to interpolate."""
        try:
            # Use a value that's in the original data vector
            value = self.lookup_table[key]
        except KeyError:
            # Use the colormap to interpolate between existing datapoints
            # (e.g. in the context of making a continuous legend)
            try:
>               normed = self.norm(key)
E               TypeError: 'NoneType' object is not callable

seaborn/_oldcore.py:155: TypeError

During handling of the above exception, another exception occurred:

self = <tests.test_relational.TestScatterPlotter object at 0x7f9dd8133820>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]

    def test_hue_order(self, long_df):
    
        order = categorical_order(long_df["a"])
        unused = order.pop()
    
>       ax = scatterplot(data=long_df, x="x", y="y", hue="a", hue_order=order)

tests/test_relational.py:1632: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/relational.py:768: in scatterplot
    p.plot(ax, kwargs)
seaborn/relational.py:579: in plot
    points.set_facecolors(self._hue_map(data["hue"]))
seaborn/_oldcore.py:65: in __call__
    return [self._lookup_single(k, *args, **kwargs) for k in key]
seaborn/_oldcore.py:65: in <listcomp>
    return [self._lookup_single(k, *args, **kwargs) for k in key]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <seaborn._oldcore.HueMapping object at 0x7f9db16e2640>, key = 'c'

    def _lookup_single(self, key):
        """Get the color for a single value, using colormap to interpolate."""
        try:
            # Use a value that's in the original data vector
            value = self.lookup_table[key]
        except KeyError:
            # Use the colormap to interpolate between existing datapoints
            # (e.g. in the context of making a continuous legend)
            try:
                normed = self.norm(key)
            except TypeError as err:
>               if np.isnan(key):
E               TypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

seaborn/_oldcore.py:157: TypeError
________________________________________________ TestScatterPlotter.test_unfilled_marker_edgecolor_warning _________________________________________________

self = <tests.test_relational.TestScatterPlotter object at 0x7f9dd810adc0>
long_df =      x         y         z  a  b  c          d                   t  s    f a_cat s_cat s_str
0   12  0.449243  6.61188...8
99  15  0.073484  1.036343  c  p  0 2005-01-01 2004-07-30 00:11:00  8  0.2     c     8     8

[100 rows x 13 columns]

    def test_unfilled_marker_edgecolor_warning(self, long_df):  # GH2636
    
>       with pytest.warns(None) as record:

tests/test_relational.py:1712: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = WarningsChecker(record=True), expected_warning = None, match_expr = None

    def __init__(
        self,
        expected_warning: Optional[
            Union[Type[Warning], Tuple[Type[Warning], ...]]
        ] = Warning,
        match_expr: Optional[Union[str, Pattern[str]]] = None,
        *,
        _ispytest: bool = False,
    ) -> None:
        check_ispytest(_ispytest)
        super().__init__(_ispytest=True)
    
        msg = "exceptions must be derived from Warning, not %s"
        if expected_warning is None:
>           warnings.warn(WARNS_NONE_ARG, stacklevel=4)
E           pytest.PytestRemovedIn8Warning: Passing None has been deprecated.
E           See https://docs.pytest.org/en/latest/how-to/capture-warnings.html#additional-use-cases-of-warnings-in-tests for alternatives in common use cases.

/home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/_pytest/recwarn.py:281: PytestRemovedIn8Warning
===================================================================== warnings summary =====================================================================
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/seaborn/cm.py:1582: MatplotlibDeprecationWarning: The register_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps.register(name)`` instead.
    mpl_cm.register_cmap(_name, _cmap)

seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/seaborn/cm.py:1583: MatplotlibDeprecationWarning: The register_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps.register(name)`` instead.
    mpl_cm.register_cmap(_name + "_r", _cmap_r)

tests/test_relational.py: 1443 warnings
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/seaborn/_oldcore.py:1475: DeprecationWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, pd.CategoricalDtype) instead
    if pd.api.types.is_categorical_dtype(vector):

tests/test_relational.py::TestRelationalPlotter::test_wide_df_variables
tests/test_relational.py::TestRelationalPlotter::test_wide_df_with_nonnumeric_variables
tests/test_relational.py::TestRelationalPlotter::test_wide_array_variables
tests/test_relational.py::TestRelationalPlotter::test_flat_array_variables
  /home/yuntong/miniconda3/envs/setup_mwaskom__seaborn__0.12/lib/python3.9/site-packages/_pytest/python.py:194: DeprecationWarning: `product` is deprecated as of NumPy 1.25.0, and will be removed in NumPy 2.0. Please use `prod` instead.
    result = testfunction(**testargs)

tests/test_relational.py: 20 warnings
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/seaborn/_oldcore.py:1052: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.
    data_subset = grouped_data.get_group(pd_key)

tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
tests/test_relational.py::TestLinePlotter::test_plot
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/seaborn/relational.py:437: DeprecationWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
    sub_data = grouped.apply(agg, agg_var).reset_index()

tests/test_relational.py::TestScatterPlotter::test_supplied_color_array
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/tests/test_relational.py:1605: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.
    cmap = mpl.cm.get_cmap("Blues")

tests/test_relational.py::TestScatterPlotter::test_size_norm_extrapolation
tests/test_relational.py::TestScatterPlotter::test_size_norm_extrapolation
  /media/media0/yuntong/SWE-bench/testbed/mwaskom__seaborn/setup_mwaskom__seaborn__0.12/tests/test_relational.py:1690: MatplotlibDeprecationWarning: The legendHandles attribute was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use legend_handles instead.
    for label, handle in zip(legend.get_texts(), legend.legendHandles)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
========================================================================== PASSES ==========================================================================

---------- coverage: platform linux, python 3.9.18-final-0 -----------
Name                       Stmts   Miss  Cover
----------------------------------------------
seaborn/__init__.py           16      0   100%
seaborn/_decorators.py        10      0   100%
seaborn/_docstrings.py        40      5    88%
seaborn/_oldcore.py          726    219    70%
seaborn/_statistics.py       262    190    27%
seaborn/_testing.py           52     43    17%
seaborn/algorithms.py         72     35    51%
seaborn/axisgrid.py         1039    704    32%
seaborn/categorical.py      1394   1260    10%
seaborn/distributions.py     940    878     7%
seaborn/matrix.py            550    497    10%
seaborn/miscplot.py           27     20    26%
seaborn/palettes.py          231    137    41%
seaborn/rcmod.py             108     81    25%
seaborn/regression.py        326    283    13%
seaborn/relational.py        328     12    96%
seaborn/utils.py             338    235    30%
tests/__init__.py              0      0   100%
tests/conftest.py            104     11    89%
tests/test_relational.py    1123    111    90%
----------------------------------------------
TOTAL                       7686   4721    39%

================================================================= short test summary info ==================================================================
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_df_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_df_with_nonnumeric_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_array_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_flat_array_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_flat_list_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_flat_series_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_list_of_series_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_list_of_arrays_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_list_of_list_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_dict_of_series_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_dict_of_arrays_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_wide_dict_of_lists_variables
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_complex
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_vectors[series]
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_vectors[numpy]
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_vectors[list]
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_wide
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_hues
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_sizes
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_styles
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_stringy_numerics
PASSED tests/test_relational.py::TestRelationalPlotter::test_relplot_data
PASSED tests/test_relational.py::TestRelationalPlotter::test_facet_variable_collision
PASSED tests/test_relational.py::TestRelationalPlotter::test_ax_kwarg_removal
PASSED tests/test_relational.py::TestLinePlotter::test_legend_data
PASSED tests/test_relational.py::TestLinePlotter::test_plot
PASSED tests/test_relational.py::TestLinePlotter::test_axis_labels
PASSED tests/test_relational.py::TestScatterPlotter::test_color
PASSED tests/test_relational.py::TestScatterPlotter::test_legend_data
PASSED tests/test_relational.py::TestScatterPlotter::test_plot
PASSED tests/test_relational.py::TestScatterPlotter::test_axis_labels
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_axes
PASSED tests/test_relational.py::TestScatterPlotter::test_literal_attribute_vectors
PASSED tests/test_relational.py::TestScatterPlotter::test_supplied_color_array
PASSED tests/test_relational.py::TestScatterPlotter::test_linewidths
PASSED tests/test_relational.py::TestScatterPlotter::test_size_norm_extrapolation
PASSED tests/test_relational.py::TestScatterPlotter::test_datetime_scale
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics0]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics1]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics2]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics3]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics4]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics5]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics6]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics7]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics8]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics9]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics10]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_vs_relplot[long_semantics11]
PASSED tests/test_relational.py::TestScatterPlotter::test_scatterplot_smoke
FAILED tests/test_relational.py::TestRelationalPlotter::test_relplot_simple - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestRelationalPlotter::test_relplot_legend - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_color - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_log_scale - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_matplotlib_kwargs - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_nonmapped_dashes - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_axes - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics0] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics1] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics2] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics3] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics4] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics5] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics6] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics7] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics8] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics9] - pandas._config.config.OptionError: "No such keys(s): 'mode....
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics10] - pandas._config.config.OptionError: "No such keys(s): 'mode...
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_vs_relplot[long_semantics11] - pandas._config.config.OptionError: "No such keys(s): 'mode...
FAILED tests/test_relational.py::TestLinePlotter::test_lineplot_smoke - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestLinePlotter::test_ci_deprecation - pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"
FAILED tests/test_relational.py::TestScatterPlotter::test_hue_order - TypeError: ufunc 'isnan' not supported for the input types, and the inputs could no...
FAILED tests/test_relational.py::TestScatterPlotter::test_unfilled_marker_edgecolor_warning - pytest.PytestRemovedIn8Warning: Passing None has been depre...
====================================================== 23 failed, 50 passed, 1490 warnings in 17.66s =======================================================
