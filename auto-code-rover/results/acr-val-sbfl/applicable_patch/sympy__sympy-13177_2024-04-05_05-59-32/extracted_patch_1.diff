diff --git a/sympy/core/expr.py b/sympy/core/expr.py
index 7f181789fd..68be9e0b9e 100644
--- a/sympy/core/expr.py
+++ b/sympy/core/expr.py
@@ -170,12 +170,14 @@ def __rdiv__(self, other):
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__rmod__')
     def __mod__(self, other):
-        return Mod(self, other)
+        from sympy.core.mod import Mod
+        return Mod(self, other, evaluate=True)
 
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__mod__')
     def __rmod__(self, other):
-        return Mod(other, self)
+        from sympy.core.mod import Mod
+        return Mod(other, self, evaluate=True)
 
     @_sympifyit('other', NotImplemented)
     @call_highest_priority('__rfloordiv__')
diff --git a/sympy/core/function.py b/sympy/core/function.py
index 01dc6ed277..a8f8a6eeab 100644
--- a/sympy/core/function.py
+++ b/sympy/core/function.py
@@ -583,7 +583,12 @@ def as_base_exp(self):
         """
         Returns the method as the 2-tuple (base, exponent).
         """
-        return self, S.One
+        from sympy import S
+        # Ensure that the base is treated correctly as an integer or a float
+        if self.is_integer or (self.is_Float and self.is_number):
+            return self, S.One
+        else:
+            return super(Function, self).as_base_exp()
 
     def _eval_aseries(self, n, args0, x, logx):
         """
