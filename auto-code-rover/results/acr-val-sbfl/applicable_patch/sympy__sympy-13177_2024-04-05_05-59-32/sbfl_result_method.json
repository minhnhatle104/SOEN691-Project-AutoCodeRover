[
    [
        "sympy/core/expr.py",
        "Expr",
        "sort_key",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "class_key",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_degree",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_tuple",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_content",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_extract",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "tp",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "of_type",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify_with_symbols",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__eq__",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_one",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_rr_trivial_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_zz_heu_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_inner_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_inner_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_gcd",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "unify",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "per",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_tuple",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "convert",
        1.0
    ],
    [
        "sympy/polys/polyconfig.py",
        "",
        "query",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__setattr__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_unify",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_parallel_poly_from_expr",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_unify_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_no_gens",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Function",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.8164965809277261
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "atoms",
        0.8164965809277261
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        0.8164965809277261
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rfloordiv__",
        0.8164965809277261
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__int__",
        0.8164965809277261
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_multiplicatively",
        0.8164965809277261
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "round",
        0.8164965809277261
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        0.8164965809277261
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mod__",
        0.8164965809277261
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_Mod",
        0.8164965809277261
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_even",
        0.8164965809277261
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.8164965809277261
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        0.8164965809277261
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_polynomial",
        0.8164965809277261
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.8164965809277261
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        0.8164965809277261
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        0.8164965809277261
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_to_dict",
        0.8164965809277261
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_dict",
        0.8164965809277261
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "from_sympy",
        0.8164965809277261
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "gcd",
        0.8164965809277261
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_sympy_dict",
        0.8164965809277261
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        0.8164965809277261
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_expr",
        0.8164965809277261
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "expr_from_dict",
        0.8164965809277261
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "stringify",
        0.8164965809277261
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "class_key",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__repr__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_sorted_args",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "replace",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "doit",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "xreplace",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "doit",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "is_sequence",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "default_sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_nodes",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "ordered",
        0.7071067811865475
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_add",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_trig",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_constant",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "equals",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getn",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "args_cnc",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_independent",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "could_extract_minus_sign",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "combsimp",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_is_algebraic_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_nseries",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "",
        "_mag",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "div",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "quo",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "factor_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "_coeff_isneg",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "_mexpand",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_multinomial",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_power_exp",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "count_ops",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        0.7071067811865475
    ],
    [
        "sympy/core/mod.py",
        "Mod",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "_unevaluated_Mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_two_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "_keep_coeff",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "expand_2arg",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcdex",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mod_inverse",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "invert",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__rmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ge__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rfloordiv__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational_function",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_algebraic_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__contains__",
        0.7071067811865475
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "get",
        0.7071067811865475
    ],
    [
        "sympy/core/singleton.py",
        "Singleton",
        "__call__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/hyperbolic.py",
        "sinh",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/hyperbolic.py",
        "cosh",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "",
        "root",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "",
        "piecewise_fold",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_as_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "",
        "_peeloff_pi",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "as_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "as_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "ReciprocalTrigonometricFunction",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "ReciprocalTrigonometricFunction",
        "_call_reciprocal",
        0.7071067811865475
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "nextprime",
        0.7071067811865475
    ],
    [
        "sympy/ntheory/primetest.py",
        "",
        "isprime",
        0.7071067811865475
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_symbol",
        0.7071067811865475
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_number",
        0.7071067811865475
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_exquo_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_abs",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_neg",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_sub",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub_mul",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sqr",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_rr_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_rr_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_ff_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_rem",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_max_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_max_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_LC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_TC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_LC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_TC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_degree_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_strip",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_convert",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_convert",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zeros",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_multi_deflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_exclude",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_include",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_diff",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_diff",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_eval",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_eval",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "_rec_eval_tail",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_eval_tail",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_trunc",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_trunc",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_monic",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_extract",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert_from",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_negative",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_nonnegative",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "abs",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/field.py",
        "Field",
        "exquo",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/groundtypes.py",
        "",
        "python_sqrt",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "get_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "to_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "gcdex",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "sqrt",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__div__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__nonzero__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "numer",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "denom",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrationalfield.py",
        "PythonRationalField",
        "to_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/pythonrationalfield.py",
        "PythonRationalField",
        "from_ZZ_python",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "get_ring",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "exquo",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "invert",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_half_gcdex",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_invert",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_rr_trivial_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_simplify_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_zz_gcd_interpolate",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_zz_gcd_interpolate",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_zz_heu_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_inner_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_trial_division",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_trial_division",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_zz_mignotte_bound",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_hensel_lift",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_zassenhaus",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "_dup_cyclotomic_decompose",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_cyclotomic_factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_factor_sqf",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_zz_wang_non_divisors",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_zz_wang_test_points",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_zz_wang",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_zz_factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_factor_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_factor_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_int",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_degree",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_strip",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_trunc",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_from_int_poly",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_to_int_poly",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_mul_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_quo_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_add",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sub",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_mul",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sqr",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_rem",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_frobenius_monomial_base",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_frobenius_map",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_pow_mod",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_monic",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_diff",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sqf_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_ddf_zassenhaus",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_edf_zassenhaus",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_zassenhaus",
        0.7071067811865475
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_factor_sqf",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "invert",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "sqf_list_include",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Sort",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "allowed_flags",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "per",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "invert",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "sqf_list_include",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "nth_power_roots_poly",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "PurePoly",
        "_unify",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "poly_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_poly_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "parallel_poly_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "half_gcdex",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "gcd_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "gff_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "gff",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "sqf_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "sqf_part",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_symbolic_factor_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "sqf",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "nroots",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "ground_roots",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "nth_power_roots_poly",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_factors",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_no_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/rationaltools.py",
        "",
        "together",
        0.7071067811865475
    ],
    [
        "sympy/polys/sqfreetools.py",
        "",
        "dup_sqf_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/sqfreetools.py",
        "",
        "dup_sqf_part",
        0.7071067811865475
    ],
    [
        "sympy/polys/sqfreetools.py",
        "",
        "dmp_sqf_part",
        0.7071067811865475
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Integer",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "order",
        0.7071067811865475
    ],
    [
        "sympy/sets/fancysets.py",
        "Naturals0",
        "_contains",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR1",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR2",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR2i",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR3",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "_TR56",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR5",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR6",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR8",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR10",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR10i",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR11",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR12",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TRmorrie",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR14",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR15",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR16",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR111",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "TR22",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "L",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "_roots",
        0.7071067811865475
    ],
    [
        "sympy/simplify/fu.py",
        "",
        "as_f_sign_1",
        0.7071067811865475
    ],
    [
        "sympy/simplify/hyperexpand.py",
        "",
        "hyperexpand",
        0.7071067811865475
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "powsimp",
        0.7071067811865475
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "_denest_pow",
        0.7071067811865475
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "simplify",
        0.7071067811865475
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "logcombine",
        0.7071067811865475
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "bottom_up",
        0.7071067811865475
    ],
    [
        "sympy/simplify/trigsimp.py",
        "",
        "trigsimp",
        0.7071067811865475
    ],
    [
        "sympy/simplify/trigsimp.py",
        "",
        "futrig",
        0.7071067811865475
    ],
    [
        "sympy/simplify/trigsimp.py",
        "",
        "_futrig",
        0.7071067811865475
    ],
    [
        "sympy/simplify/trigsimp.py",
        "",
        "_is_Expr",
        0.7071067811865475
    ],
    [
        "sympy/simplify/trigsimp.py",
        "",
        "_eapply",
        0.7071067811865475
    ],
    [
        "sympy/strategies/core.py",
        "",
        "chain",
        0.7071067811865475
    ],
    [
        "sympy/strategies/core.py",
        "",
        "minimize",
        0.7071067811865475
    ],
    [
        "sympy/strategies/tree.py",
        "",
        "treeapply",
        0.7071067811865475
    ],
    [
        "sympy/strategies/tree.py",
        "",
        "greedy",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_variety",
        0.7071067811865475
    ],
    [
        "sympy/utilities/misc.py",
        "",
        "filldedent",
        0.7071067811865475
    ],
    [
        "sympy/utilities/randtest.py",
        "",
        "random_complex_number",
        0.7071067811865475
    ],
    [
        "sympy/utilities/randtest.py",
        "",
        "verify_numerically",
        0.7071067811865475
    ],
    [
        "sympy/utilities/randtest.py",
        "",
        "test_derivative_numerically",
        0.7071067811865475
    ],
    [
        "sympy/utilities/randtest.py",
        "",
        "_randrange",
        0.7071067811865475
    ],
    [
        "sympy/utilities/randtest.py",
        "",
        "_randint",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonpositive",
        0.6324555320336759
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "class_key",
        0.6324555320336759
    ],
    [
        "sympy/core/function.py",
        "Application",
        "func",
        0.6324555320336759
    ],
    [
        "sympy/core/function.py",
        "Function",
        "__new__",
        0.6324555320336759
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_should_evalf",
        0.6324555320336759
    ],
    [
        "sympy/core/function.py",
        "Function",
        "is_commutative",
        0.6324555320336759
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__div__",
        0.6324555320336759
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        0.6324555320336759
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "limit_denominator",
        0.6324555320336759
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence",
        0.6324555320336759
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "parenthesize",
        0.6324555320336759
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonnegative",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_negative",
        0.5773502691896258
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.5773502691896258
    ],
    [
        "sympy/core/evalf.py",
        "",
        "_create_evalf_table",
        0.5773502691896258
    ],
    [
        "sympy/core/function.py",
        "Application",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic_expr",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_hermitian",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_positive",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_negative",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_composite",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "class_key",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__int__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_power",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_positive",
        0.5345224838248488
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.5345224838248488
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.5345224838248488
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        0.5345224838248488
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__float__",
        0.5345224838248488
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        0.5345224838248488
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new_stage2__",
        0.5345224838248488
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "class_key",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_real_imag",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "__neg__",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "is_comparable",
        0.5
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "iterable",
        0.5
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_eval_evalf",
        0.5
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_to_mpmath",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__le__",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__gt__",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__lt__",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_interval",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "coeff",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_mul",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "__init__",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "mul",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "normal",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "gcd",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "__init__",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "__repr__",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "as_expr",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "mul",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "pow",
        0.5
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_evalf",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "",
        "_as_integer_ratio",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__sub__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_mul",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__sub__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__lt__",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_negative",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_real_imag",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_derivative",
        0.5
    ],
    [
        "sympy/core/relational.py",
        "_Inequality",
        "__new__",
        0.5
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "_hashable_content",
        0.5
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "",
        "_pi_coeff",
        0.5
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "extend_to_no",
        0.5
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "__getitem__",
        0.5
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "",
        "generate_tokens",
        0.5
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_as_ordered_terms",
        0.5
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Add",
        0.5
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_PolyRing",
        0.5
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Pow",
        0.5
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_pre",
        0.5
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_post",
        0.5
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "signsimp",
        0.5
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.47140452079103173
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_polar",
        0.47140452079103173
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_real",
        0.47140452079103173
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__nonzero__",
        0.47140452079103173
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_hashable_content",
        0.47140452079103173
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        0.47140452079103173
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        0.4472135954999579
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_expand_complex",
        0.4472135954999579
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_expand_hint",
        0.4472135954999579
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_is_finite",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_infinite",
        0.4472135954999579
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__add__",
        0.42640143271122083
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_mpmath_",
        0.42640143271122083
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        0.42640143271122083
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.42640143271122083
    ],
    [
        "sympy/core/numbers.py",
        "NegativeOne",
        "_eval_power",
        0.42640143271122083
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__ne__",
        0.42640143271122083
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "xreplace",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_xreplace",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "count",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "",
        "_make_find_query",
        0.4082482904638631
    ],
    [
        "sympy/core/evalf.py",
        "",
        "pure_complex",
        0.4082482904638631
    ],
    [
        "sympy/core/evalf.py",
        "",
        "add_terms",
        0.4082482904638631
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_evalf",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__sub__",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_adjoint",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "adjoint",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_parse_order",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_factors",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_terms",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_terms",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coefficients_dict",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "class_key",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "",
        "prod",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_evalf",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__mul__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_Add",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__new__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "num",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_val",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_op",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_negative",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_power",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__eq__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mul__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_content_primitive",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__sub__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__gt__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_power",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Zero",
        "_eval_power",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__gt__",
        0.4082482904638631
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_eval_evalf",
        0.4082482904638631
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "make_args",
        0.4082482904638631
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_transpose",
        0.4082482904638631
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_exp",
        0.4082482904638631
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "search",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "new",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__call__",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/field.py",
        "Field",
        "quo",
        0.4082482904638631
    ],
    [
        "sympy/polys/orderings.py",
        "LexOrder",
        "__call__",
        0.4082482904638631
    ],
    [
        "sympy/polys/orderings.py",
        "",
        "monomial_key",
        0.4082482904638631
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "cofactors",
        0.4082482904638631
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Mul",
        0.4082482904638631
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Mul",
        0.4082482904638631
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Rational",
        0.4082482904638631
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_PythonRational",
        0.4082482904638631
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        0.4082482904638631
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.3922322702763681
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__pow__",
        0.3922322702763681
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__mul__",
        0.3922322702763681
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_sage_",
        0.3922322702763681
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__divmod__",
        0.3922322702763681
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "_eval_power",
        0.3922322702763681
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Integers",
        0.3922322702763681
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__init__",
        0.3779644730092272
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "_preorder_traversal",
        0.3779644730092272
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__next__",
        0.3779644730092272
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__iter__",
        0.3779644730092272
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__neg__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__lt__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_coeff_Add",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__ne__",
        0.3779644730092272
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "eval",
        0.3779644730092272
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "eval",
        0.3779644730092272
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "evalf",
        0.3651483716701107
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_number",
        0.3651483716701107
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_real_imag",
        0.3651483716701107
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_positive",
        0.3651483716701107
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__add__",
        0.3651483716701107
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.3651483716701107
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "base",
        0.3651483716701107
    ],
    [
        "sympy/core/add.py",
        "",
        "_unevaluated_Add",
        0.35355339059327373
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        0.35355339059327373
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "as_int",
        0.35355339059327373
    ],
    [
        "sympy/core/evalf.py",
        "",
        "fastlog",
        0.35355339059327373
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_pow",
        0.35355339059327373
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coefficient",
        0.35355339059327373
    ],
    [
        "sympy/core/expr.py",
        "UnevaluatedExpr",
        "__new__",
        0.35355339059327373
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_not",
        0.35355339059327373
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcd",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__gt__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__gt__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "_sage_",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__ne__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__ne__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Pi",
        "approximation_interval",
        0.35355339059327373
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_real",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_complex",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        0.35355339059327373
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sanitize",
        0.35355339059327373
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new__",
        0.35355339059327373
    ],
    [
        "sympy/functions/elementary/integers.py",
        "RoundFunction",
        "eval",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "lambda_notation",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "factorial_notation",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "convert_xor",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "stringify_expr",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "eval_expr",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "parse_expr",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "Untokenizer",
        "__init__",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "Untokenizer",
        "untokenize",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "Untokenizer",
        "compat",
        0.35355339059327373
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "",
        "untokenize",
        0.35355339059327373
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "sift",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_as_mpf_op",
        0.34299717028501764
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.34299717028501764
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_bool",
        0.3333333333333333
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "exp",
        0.3333333333333333
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__mul__",
        0.3244428422615251
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rmul__",
        0.3244428422615251
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "nargs",
        0.3244428422615251
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        0.3244428422615251
    ],
    [
        "sympy/core/relational.py",
        "Equality",
        "__new__",
        0.3244428422615251
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__nonzero__",
        0.3244428422615251
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__hash__",
        0.3244428422615251
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__nonzero__",
        0.3244428422615251
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "_infimum_key",
        0.3244428422615251
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "contains",
        0.3244428422615251
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "__contains__",
        0.3244428422615251
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__new__",
        0.3244428422615251
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_contains",
        0.3244428422615251
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.31622776601683794
    ],
    [
        "sympy/core/basic.py",
        "",
        "_aresame",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_pow",
        0.31622776601683794
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.31622776601683794
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_and",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_expandsums",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ne__",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__floordiv__",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__eq__",
        0.3086066999241838
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__str__",
        0.30151134457776363
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.30151134457776363
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        0.30151134457776363
    ],
    [
        "sympy/printing/str.py",
        "",
        "sstr",
        0.30151134457776363
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.29488391230979427
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.29488391230979427
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has",
        0.2886751345948129
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has_matcher",
        0.2886751345948129
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_mul",
        0.2886751345948129
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "leadterm",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__div__",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_zero",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__add__",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "gcd",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__eq__",
        0.2886751345948129
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_WildFunction",
        0.2886751345948129
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.282842712474619
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf",
        0.282842712474619
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.282842712474619
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__getnewargs__",
        0.282842712474619
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.282842712474619
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ne__",
        0.282842712474619
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_exec_constructor_postprocessors",
        0.2773500981126146
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.2721655269759087
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        0.2721655269759087
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_hashable_content",
        0.2721655269759087
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ne__",
        0.2721655269759087
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__eq__",
        0.2721655269759087
    ],
    [
        "sympy/core/evalf.py",
        "",
        "iszero",
        0.2672612419124244
    ],
    [
        "sympy/core/evalf.py",
        "",
        "complex_accuracy",
        0.2672612419124244
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rsub__",
        0.2672612419124244
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "",
        "_decimal_to_Rational_prec",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "",
        "ilcm",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_integer",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "factors",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_mpmath_",
        0.2672612419124244
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "func",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mpf_norm",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_new",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_hashable_content",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "epsilon_eq",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__div__",
        0.25
    ],
    [
        "sympy/core/power.py",
        "",
        "integer_nthroot",
        0.25
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.24253562503633297
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        0.24253562503633297
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has",
        0.23570226039551587
    ],
    [
        "sympy/core/evalf.py",
        "",
        "bitcount",
        0.23570226039551587
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__int__",
        0.23570226039551587
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_zero",
        0.22360679774997896
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__abs__",
        0.22360679774997896
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__index__",
        0.22360679774997896
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorint",
        0.22360679774997896
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "_eval_power",
        0.21320071635561041
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        0.21081851067789195
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__hash__",
        0.20628424925175867
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_sympify",
        0.19802950859533489
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__add__",
        0.19611613513818404
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "",
        "sqrt",
        0.19611613513818404
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__ne__",
        0.18257418583505536
    ],
    [
        "sympy/utilities/pytest.py",
        "",
        "raises",
        0.18257418583505536
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.1796053020267749
    ],
    [
        "sympy/core/numbers.py",
        "",
        "_literal_float",
        0.17149858514250882
    ],
    [
        "conftest.py",
        "",
        "pytest_runtest_setup",
        0.159111456835146
    ]
]