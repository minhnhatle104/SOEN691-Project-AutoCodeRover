Output:
Testing against Django installed in '/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django' with up to 256 processes
Importing application migrations
Found 120 test(s).
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, migrations, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table migrations_modelwithcustombase
    Creating table migrations_unmigratedmodel
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, migrations, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table migrations_modelwithcustombase
    Creating table migrations_unmigratedmodel
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Creating test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Cloning test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Cloning test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Cloning test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Cloning test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
test_reference_field_by_through_fields (migrations.test_operations.FieldOperationTests) ... ok
test_references_field_by_from_fields (migrations.test_operations.FieldOperationTests) ... ok
test_references_field_by_name (migrations.test_operations.FieldOperationTests) ... ok
test_references_field_by_remote_field_model (migrations.test_operations.FieldOperationTests) ... ok
test_references_field_by_through (migrations.test_operations.FieldOperationTests) ... ok
test_references_field_by_to_fields (migrations.test_operations.FieldOperationTests) ... ok
test_references_model (migrations.test_operations.FieldOperationTests) ... ok
test_references_model_mixin (migrations.test_operations.TestCreateModel) ... ok
test_add_field_ignore_swapped (migrations.test_operations.SwappableOperationTests)
Tests the AddField operation. ... ok
test_create_ignore_swapped (migrations.test_operations.SwappableOperationTests)
The CreateTable operation ignores swapped models. ... ok
test_delete_ignore_swapped (migrations.test_operations.SwappableOperationTests)
Tests the DeleteModel operation ignores swapped models. ... ok
test_indexes_ignore_swapped (migrations.test_operations.SwappableOperationTests)
Add/RemoveIndex operations ignore swapped models. ... ok
test_add_binaryfield (migrations.test_operations.OperationTests)
Tests the AddField operation on TextField/BinaryField. ... ok
test_add_charfield (migrations.test_operations.OperationTests)
Tests the AddField operation on TextField. ... ok
test_add_constraint (migrations.test_operations.OperationTests) ... ok
test_add_constraint_combinable (migrations.test_operations.OperationTests) ... ok
test_add_constraint_percent_escaping (migrations.test_operations.OperationTests) ... ok
test_add_covering_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_add_deferred_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_add_field (migrations.test_operations.OperationTests)
Tests the AddField operation. ... ok
test_add_field_m2m (migrations.test_operations.OperationTests)
Tests the AddField operation with a ManyToManyField. ... ok
test_add_field_preserve_default (migrations.test_operations.OperationTests)
Tests the AddField operation's state alteration ... ok
test_add_func_index (migrations.test_operations.OperationTests) ... ok
test_add_func_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_add_index (migrations.test_operations.OperationTests)
Test the AddIndex operation. ... ok
test_add_index_state_forwards (migrations.test_operations.OperationTests) ... ok
test_add_or_constraint (migrations.test_operations.OperationTests) ... ok
test_add_partial_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_add_textfield (migrations.test_operations.OperationTests)
Tests the AddField operation on TextField. ... ok
test_alter_field (migrations.test_operations.OperationTests)
Tests the AlterField operation. ... ok
test_alter_field_add_db_column_noop (migrations.test_operations.OperationTests)
AlterField operation is a noop when adding only a db_column and the ... ok
test_alter_field_m2m (migrations.test_operations.OperationTests) ... ok
test_alter_field_pk (migrations.test_operations.OperationTests)
Tests the AlterField operation on primary keys (for things like PostgreSQL's SERIAL weirdness) ... ok
test_alter_field_pk_fk (migrations.test_operations.OperationTests)
Tests the AlterField operation on primary keys changes any FKs pointing to it. ... ok
test_alter_field_pk_mti_fk (migrations.test_operations.OperationTests) ... ok
test_alter_field_reloads_state_on_fk_target_changes (migrations.test_operations.OperationTests)
If AlterField doesn't reload state appropriately, the second AlterField ... ok
test_alter_field_reloads_state_on_fk_with_to_field_related_name_target_type_change (migrations.test_operations.OperationTests) ... ok
test_alter_field_reloads_state_on_fk_with_to_field_target_changes (migrations.test_operations.OperationTests)
If AlterField doesn't reload state appropriately, the second AlterField ... ok
test_alter_field_reloads_state_on_fk_with_to_field_target_type_change (migrations.test_operations.OperationTests) ... ok
test_alter_field_with_func_index (migrations.test_operations.OperationTests) ... ok
test_alter_field_with_func_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_alter_field_with_index (migrations.test_operations.OperationTests)
Test AlterField operation with an index to ensure indexes created via ... ok
test_alter_fk (migrations.test_operations.OperationTests)
Creating and then altering an FK works correctly ... ok
test_alter_fk_non_fk (migrations.test_operations.OperationTests)
Altering an FK to a non-FK works (#23244) ... ok
test_alter_index_together (migrations.test_operations.OperationTests)
Tests the AlterIndexTogether operation. ... ok
test_alter_index_together_remove (migrations.test_operations.OperationTests) ... ok
test_alter_index_together_remove_with_unique_together (migrations.test_operations.OperationTests) ... ok
test_alter_model_managers (migrations.test_operations.OperationTests)
The managers on a model are set. ... ok
test_alter_model_managers_emptying (migrations.test_operations.OperationTests)
The managers on a model are set. ... ok
test_alter_model_options (migrations.test_operations.OperationTests)
Tests the AlterModelOptions operation. ... ok
test_alter_model_options_emptying (migrations.test_operations.OperationTests)
The AlterModelOptions operation removes keys from the dict (#23121) ... ok
test_alter_model_table (migrations.test_operations.OperationTests)
Tests the AlterModelTable operation. ... FAIL
test_alter_model_table_m2m (migrations.test_operations.OperationTests)
AlterModelTable should rename auto-generated M2M tables. ... FAIL
test_alter_model_table_none (migrations.test_operations.OperationTests)
Tests the AlterModelTable operation if the table name is set to None. ... ok
test_alter_model_table_noop (migrations.test_operations.OperationTests)
Tests the AlterModelTable operation if the table name is not changed. ... ok
test_alter_order_with_respect_to (migrations.test_operations.OperationTests)
Tests the AlterOrderWithRespectTo operation. ... ok
test_alter_unique_together (migrations.test_operations.OperationTests)
Tests the AlterUniqueTogether operation. ... ok
test_alter_unique_together_remove (migrations.test_operations.OperationTests) ... ok
test_autofield__bigautofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from AutoField to BigAutoField. ... ok
test_column_name_quoting (migrations.test_operations.OperationTests)
Column names that are SQL keywords shouldn't cause problems when used ... ok
test_create_model (migrations.test_operations.OperationTests)
Tests the CreateModel operation. ... ok
test_create_model_inheritance (migrations.test_operations.OperationTests)
Tests the CreateModel operation on a multi-table inheritance setup. ... ok
test_create_model_m2m (migrations.test_operations.OperationTests)
Test the creation of a model with a ManyToMany field and the ... ok
test_create_model_managers (migrations.test_operations.OperationTests)
The managers on a model are set. ... ok
test_create_model_with_constraint (migrations.test_operations.OperationTests) ... ok
test_create_model_with_covering_unique_constraint (migrations.test_operations.OperationTests) ... skipped "Database doesn't support feature(s): supports_covering_indexes"
test_create_model_with_deferred_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_create_model_with_duplicate_base (migrations.test_operations.OperationTests) ... ok
test_create_model_with_duplicate_field_name (migrations.test_operations.OperationTests) ... ok
test_create_model_with_duplicate_manager_name (migrations.test_operations.OperationTests) ... ok
test_create_model_with_partial_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_create_model_with_unique_after (migrations.test_operations.OperationTests)
Tests the CreateModel operation directly followed by an ... ok
test_create_proxy_model (migrations.test_operations.OperationTests)
CreateModel ignores proxy models. ... ok
test_create_unmanaged_model (migrations.test_operations.OperationTests)
CreateModel ignores unmanaged models. ... ok
test_delete_model (migrations.test_operations.OperationTests)
Tests the DeleteModel operation. ... ok
test_delete_mti_model (migrations.test_operations.OperationTests) ... ok
test_delete_proxy_model (migrations.test_operations.OperationTests)
Tests the DeleteModel operation ignores proxy models. ... ok
test_model_with_bigautofield (migrations.test_operations.OperationTests)
A model with BigAutoField can be created. ... ok
test_remove_constraint (migrations.test_operations.OperationTests) ... ok
test_remove_covering_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_remove_deferred_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_remove_field (migrations.test_operations.OperationTests)
Tests the RemoveField operation. ... ok
test_remove_field_m2m (migrations.test_operations.OperationTests) ... ok
test_remove_field_m2m_with_through (migrations.test_operations.OperationTests) ... ok
test_remove_fk (migrations.test_operations.OperationTests)
Tests the RemoveField operation on a foreign key. ... ok
test_remove_func_index (migrations.test_operations.OperationTests) ... ok
test_remove_func_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_remove_index (migrations.test_operations.OperationTests)
Test the RemoveIndex operation. ... ok
test_remove_index_state_forwards (migrations.test_operations.OperationTests) ... ok
test_remove_partial_unique_constraint (migrations.test_operations.OperationTests) ... ok
test_rename_field (migrations.test_operations.OperationTests)
Tests the RenameField operation. ... ok
test_rename_field_case (migrations.test_operations.OperationTests) ... ok
test_rename_field_reloads_state_on_fk_target_changes (migrations.test_operations.OperationTests)
If RenameField doesn't reload state appropriately, the AlterField ... ok
test_rename_field_with_db_column (migrations.test_operations.OperationTests) ... ok
test_rename_m2m_model_after_rename_field (migrations.test_operations.OperationTests)
RenameModel renames a many-to-many column after a RenameField. ... ERROR
test_rename_m2m_target_model (migrations.test_operations.OperationTests) ... ERROR
test_rename_m2m_through_model (migrations.test_operations.OperationTests) ... ERROR
ERROR
ERROR
test_rename_missing_field (migrations.test_operations.OperationTests) ... ERROR
ERROR
test_rename_model (migrations.test_operations.OperationTests)
Tests the RenameModel operation. ... ERROR
ERROR
ERROR
test_rename_model_state_forwards (migrations.test_operations.OperationTests)
RenameModel operations shouldn't trigger the caching of rendered apps ... ERROR
ERROR
test_rename_model_with_db_table_noop (migrations.test_operations.OperationTests) ... ERROR
ERROR
ERROR
test_rename_model_with_m2m (migrations.test_operations.OperationTests) ... ERROR
ERROR
ERROR
test_rename_model_with_self_referential_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on model with self referential FK. ... ERROR
ERROR
ERROR
test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests) ... ERROR
ERROR
ERROR
test_rename_model_with_superclass_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on a model which has a superclass that ... ERROR
ERROR
ERROR
test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests) ... ERROR
ERROR
test_repoint_field_m2m (migrations.test_operations.OperationTests) ... ERROR
ERROR
ERROR
test_run_python (migrations.test_operations.OperationTests)
Tests the RunPython operation ... ERROR
ERROR
ERROR
test_run_python_atomic (migrations.test_operations.OperationTests)
Tests the RunPython operation correctly handles the "atomic" keyword ... ERROR
ERROR
ERROR
test_run_python_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunPython operations. ... ERROR
ERROR
ERROR
test_run_python_related_assignment (migrations.test_operations.OperationTests)
#24282 - Model changes to a FK reverse side update the model ... ERROR
ERROR
ERROR
test_run_sql (migrations.test_operations.OperationTests)
Tests the RunSQL operation. ... ERROR
ERROR
ERROR
test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests) ... ERROR
ERROR
ERROR
test_run_sql_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunSQL operations. ... ERROR
ERROR
ERROR
test_run_sql_params (migrations.test_operations.OperationTests)
#23426 - RunSQL should accept parameters. ... ERROR
ERROR
ERROR
test_run_sql_params_invalid (migrations.test_operations.OperationTests)
#23426 - RunSQL should fail when a list of statements with an incorrect ... ERROR
ERROR
ERROR
test_separate_database_and_state (migrations.test_operations.OperationTests)
Tests the SeparateDatabaseAndState operation. ... ERROR
ERROR
ERROR
test_separate_database_and_state2 (migrations.test_operations.OperationTests)
A complex SeparateDatabaseAndState operation: Multiple operations both ... ERROR
ERROR
ERROR
test_smallfield_autofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to AutoField. ... ERROR
ERROR
ERROR
test_smallfield_bigautofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to BigAutoField. ... ERROR
ERROR
ERROR

======================================================================
ERROR: test_rename_m2m_model_after_rename_field (migrations.test_operations.OperationTests)
RenameModel renames a many-to-many column after a RenameField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 417, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: test_rename_multiple_jockey

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 912, in test_rename_m2m_model_after_rename_field
    jockey = Jockey.objects.create(pony=pony)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/query.py", line 459, in create
    obj.save(force_insert=True, using=self.db)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 730, in save
    self.save_base(using=using, force_insert=force_insert,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 767, in save_base
    updated = self._save_table(
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 872, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 910, in _do_insert
    return manager._insert(
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/query.py", line 1304, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/sql/compiler.py", line 1441, in execute_sql
    cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 417, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: test_rename_multiple_jockey

======================================================================
ERROR: test_rename_m2m_target_model (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 835, in test_rename_m2m_target_model
    project_state = self.apply_operations(app_label, project_state, operations=[
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 188, in apply_operations
    return migration.apply(project_state, editor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 35, in __exit__
    self.connection.check_constraints()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 347, in check_constraints
    raise IntegrityError(
django.db.utils.IntegrityError: The row in table 'test_rename_m2m_target_model_pony_riders' with primary key '1' has an invalid foreign key: test_rename_m2m_target_model_pony_riders.rider2_id contains a value '1' that does not have a corresponding value in test_rename_m2m_target_model_rider2.id.

======================================================================
ERROR: test_rename_m2m_through_model (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 417, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: test_rename_through_ponyrider2

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 882, in test_rename_m2m_through_model
    PonyRider.objects.create(pony=pony, rider=rider)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/query.py", line 459, in create
    obj.save(force_insert=True, using=self.db)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 730, in save
    self.save_base(using=using, force_insert=force_insert,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 767, in save_base
    updated = self._save_table(
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 872, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/base.py", line 910, in _do_insert
    return manager._insert(
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/query.py", line 1304, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/models/sql/compiler.py", line 1441, in execute_sql
    cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 417, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: test_rename_through_ponyrider2

======================================================================
ERROR: test_rename_m2m_through_model (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_m2m_through_model (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_missing_field (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_missing_field (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model (migrations.test_operations.OperationTests)
Tests the RenameModel operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 604, in test_rename_model
    project_state = self.set_up_test_model("test_rnmo", related_model=True)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model (migrations.test_operations.OperationTests)
Tests the RenameModel operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model (migrations.test_operations.OperationTests)
Tests the RenameModel operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_state_forwards (migrations.test_operations.OperationTests)
RenameModel operations shouldn't trigger the caching of rendered apps
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_state_forwards (migrations.test_operations.OperationTests)
RenameModel operations shouldn't trigger the caching of rendered apps
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_db_table_noop (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 798, in test_rename_model_with_db_table_noop
    project_state = self.apply_operations(app_label, ProjectState(), operations=[
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_db_table_noop (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_db_table_noop (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 769, in test_rename_model_with_m2m
    project_state = self.apply_operations(app_label, ProjectState(), operations=[
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_self_referential_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on model with self referential FK.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 678, in test_rename_model_with_self_referential_fk
    project_state = self.set_up_test_model("test_rmwsrf", related_model=True)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_self_referential_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on model with self referential FK.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_self_referential_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on model with self referential FK.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 754, in test_rename_model_with_self_referential_m2m
    project_state = self.apply_operations(app_label, ProjectState(), operations=[
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_self_referential_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_superclass_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on a model which has a superclass that
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 721, in test_rename_model_with_superclass_fk
    project_state = self.set_up_test_model("test_rmwsc", related_model=True, mti_model=True)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_superclass_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on a model which has a superclass that
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_model_with_superclass_fk (migrations.test_operations.OperationTests)
Tests the RenameModel operation on a model which has a superclass that
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_rename_referenced_field_state_forward (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_repoint_field_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 1166, in test_repoint_field_m2m
    project_state = self.set_up_test_model("test_alflmm", second_model=True, third_model=True)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_repoint_field_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_repoint_field_m2m (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python (migrations.test_operations.OperationTests)
Tests the RunPython operation
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3189, in test_run_python
    project_state = self.set_up_test_model("test_runpython", mti_model=True)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python (migrations.test_operations.OperationTests)
Tests the RunPython operation
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python (migrations.test_operations.OperationTests)
Tests the RunPython operation
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_atomic (migrations.test_operations.OperationTests)
Tests the RunPython operation correctly handles the "atomic" keyword
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3275, in test_run_python_atomic
    project_state = self.set_up_test_model("test_runpythonatomic", mti_model=True)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_atomic (migrations.test_operations.OperationTests)
Tests the RunPython operation correctly handles the "atomic" keyword
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_atomic (migrations.test_operations.OperationTests)
Tests the RunPython operation correctly handles the "atomic" keyword
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunPython operations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3569, in test_run_python_noop
    with connection.schema_editor() as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunPython operations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunPython operations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_related_assignment (migrations.test_operations.OperationTests)
#24282 - Model changes to a FK reverse side update the model
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3377, in test_run_python_related_assignment
    with connection.schema_editor() as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_related_assignment (migrations.test_operations.OperationTests)
#24282 - Model changes to a FK reverse side update the model
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_python_related_assignment (migrations.test_operations.OperationTests)
#24282 - Model changes to a FK reverse side update the model
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql (migrations.test_operations.OperationTests)
Tests the RunSQL operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3025, in test_run_sql
    project_state = self.set_up_test_model("test_runsql")
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql (migrations.test_operations.OperationTests)
Tests the RunSQL operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql (migrations.test_operations.OperationTests)
Tests the RunSQL operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3170, in test_run_sql_add_missing_semicolon_on_collect_sql
    project_state = self.set_up_test_model('test_runsql')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_add_missing_semicolon_on_collect_sql (migrations.test_operations.OperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunSQL operations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3165, in test_run_sql_noop
    with connection.schema_editor() as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunSQL operations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_noop (migrations.test_operations.OperationTests)
#24098 - Tests no-op RunSQL operations.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_params (migrations.test_operations.OperationTests)
#23426 - RunSQL should accept parameters.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3087, in test_run_sql_params
    project_state = self.set_up_test_model("test_runsql")
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_params (migrations.test_operations.OperationTests)
#23426 - RunSQL should accept parameters.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_params (migrations.test_operations.OperationTests)
#23426 - RunSQL should accept parameters.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_params_invalid (migrations.test_operations.OperationTests)
#23426 - RunSQL should fail when a list of statements with an incorrect
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3139, in test_run_sql_params_invalid
    project_state = self.set_up_test_model("test_runsql")
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_params_invalid (migrations.test_operations.OperationTests)
#23426 - RunSQL should fail when a list of statements with an incorrect
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_run_sql_params_invalid (migrations.test_operations.OperationTests)
#23426 - RunSQL should fail when a list of statements with an incorrect
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_separate_database_and_state (migrations.test_operations.OperationTests)
Tests the SeparateDatabaseAndState operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3577, in test_separate_database_and_state
    project_state = self.set_up_test_model("test_separatedatabaseandstate")
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_separate_database_and_state (migrations.test_operations.OperationTests)
Tests the SeparateDatabaseAndState operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_separate_database_and_state (migrations.test_operations.OperationTests)
Tests the SeparateDatabaseAndState operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_separate_database_and_state2 (migrations.test_operations.OperationTests)
A complex SeparateDatabaseAndState operation: Multiple operations both
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3617, in test_separate_database_and_state2
    project_state = self.set_up_test_model(app_label)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 309, in set_up_test_model
    return self.apply_operations(app_label, ProjectState(), operations)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 187, in apply_operations
    with connection.schema_editor(atomic=atomic) as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_separate_database_and_state2 (migrations.test_operations.OperationTests)
A complex SeparateDatabaseAndState operation: Multiple operations both
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_separate_database_and_state2 (migrations.test_operations.OperationTests)
A complex SeparateDatabaseAndState operation: Multiple operations both
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_smallfield_autofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to AutoField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3548, in test_smallfield_autofield_foreignfield_growth
    self._test_autofield_foreignfield_growth(
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3496, in _test_autofield_foreignfield_growth
    with connection.schema_editor() as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_smallfield_autofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to AutoField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_smallfield_autofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to AutoField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_smallfield_bigautofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to BigAutoField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3556, in test_smallfield_bigautofield_foreignfield_growth
    self._test_autofield_foreignfield_growth(
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 3496, in _test_autofield_foreignfield_growth
    with connection.schema_editor() as editor:
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/schema.py", line 24, in __enter__
    if not self.connection.disable_constraint_checking():
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/base.py", line 301, in disable_constraint_checking
    cursor.execute('PRAGMA foreign_keys = OFF')
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_smallfield_bigautofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to BigAutoField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 595, in run
    self._callTearDown()
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 553, in _callTearDown
    self.tearDown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 172, in tearDown
    self.cleanup_test_tables()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 176, in cleanup_test_tables
    table_names = frozenset(connection.introspection.table_names()) - self._initial_table_names
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
ERROR: test_smallfield_bigautofield_foreignfield_growth (migrations.test_operations.OperationTests)
A field may be migrated from SmallAutoField to BigAutoField.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 276, in _setup_and_call
    self._post_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1021, in _post_teardown
    self._fixture_teardown()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/test/testcases.py", line 1053, in _fixture_teardown
    call_command('flush', verbosity=0, interactive=False,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/__init__.py", line 187, in call_command
    return command.execute(*args, **defaults)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/base.py", line 407, in execute
    output = self.handle(*args, **options)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/commands/flush.py", line 47, in handle
    sql_list = sql_flush(self.style, connection,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/core/management/sql.py", line 11, in sql_flush
    tables = connection.introspection.django_table_names(only_existing=True, include_views=False)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 99, in django_table_names
    existing_tables = set(self.table_names(include_views=include_views))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 51, in table_names
    return get_names(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/introspection.py", line 47, in get_names
    return sorted(ti.name for ti in self.get_table_list(cursor)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/sqlite3/introspection.py", line 74, in get_table_list
    cursor.execute("""
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/utils.py", line 78, in _execute
    self.db.validate_no_broken_transaction()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/django/db/backends/base/base.py", line 458, in validate_no_broken_transaction
    raise TransactionManagementError(
django.db.transaction.TransactionManagementError: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.

======================================================================
FAIL: test_alter_model_table (migrations.test_operations.OperationTests)
Tests the AlterModelTable operation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 1281, in test_alter_model_table
    self.assertTableNotExists("test_almota_pony")
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 41, in assertTableNotExists
    self.assertNotIn(table, connections[using].introspection.table_names(cursor))
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 1111, in assertNotIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 676, in fail
    raise self.failureException(msg)
AssertionError: 'test_almota_pony' unexpectedly found in ['auth_group', 'auth_group_permissions', 'auth_permission', 'auth_user', 'auth_user_groups', 'auth_user_user_permissions', 'django_admin_log', 'django_content_type', 'django_migrations', 'django_session', 'django_site', 'migrations_modelwithcustombase', 'migrations_unmigratedmodel', 'test_almota_pony']

======================================================================
FAIL: test_alter_model_table_m2m (migrations.test_operations.OperationTests)
AlterModelTable should rename auto-generated M2M tables.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 592, in run
    self._callTestMethod(testMethod)
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 550, in _callTestMethod
    method()
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_operations.py", line 1345, in test_alter_model_table_m2m
    self.assertTableExists(new_m2m_table)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__4.1/tests/migrations/test_base.py", line 37, in assertTableExists
    self.assertIn(table, connections[using].introspection.table_names(cursor))
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 1104, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "/home/yuntong/miniconda3/envs/setup_django__django__4.1/lib/python3.9/unittest/case.py", line 676, in fail
    raise self.failureException(msg)
AssertionError: 'test_talflmltlm2m_pony_stables' not found in ['auth_group', 'auth_group_permissions', 'auth_permission', 'auth_user', 'auth_user_groups', 'auth_user_user_permissions', 'django_admin_log', 'django_content_type', 'django_migrations', 'django_session', 'django_site', 'migrations_modelwithcustombase', 'migrations_unmigratedmodel', 'pony_foo', 'pony_foo_stables', 'test_talflmltlm2m_stable']

----------------------------------------------------------------------
Ran 120 tests in 0.692s

FAILED (failures=2, errors=71, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Destroying test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Destroying test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Destroying test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...
Destroying test database for alias 'other' ('file:memorydb_other?mode=memory&cache=shared')...

>>>>> All Tests Passed
