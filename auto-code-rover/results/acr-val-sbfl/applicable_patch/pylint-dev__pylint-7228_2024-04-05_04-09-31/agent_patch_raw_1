# modification 1
```python
<file>pylint/config/argument.py</file>
<original>def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:
    """Transforms a comma separated list of regular expressions."""
    patterns: list[Pattern[str]] = []
    for pattern in _csv_transformer(value):
        patterns.append(re.compile(pattern))
    return patterns
</original>
<patched>import regex as re
def _regexp_csv_transfomer(value: str) -> Sequence[Pattern[str]]:
    """Transforms a comma separated list of regular expressions."""
    patterns: list[Pattern[str]] = []
    for pattern in _csv_transformer(value):
        # Use the regex module instead of re to support Unicode property escapes like \p{Han}
        patterns.append(re.compile(pattern, re.UNICODE))
    return patterns
</patched>
```

This patch modifies the `_regexp_csv_transfomer` function in `pylint/config/argument.py` to use the `regex` module instead of the `re` module for compiling regular expressions. This change is made to support Unicode property escapes such as `\p{Han}`. The `regex` module is more comprehensive in its support for Unicode and other advanced regular expression features compared to the built-in `re` module. Additionally, the `re.UNICODE` flag is explicitly specified when compiling the patterns to ensure that Unicode properties are correctly interpreted. This change requires the `regex` module to be installed, which can be done using pip (`pip install regex`).