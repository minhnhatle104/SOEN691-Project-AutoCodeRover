diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 0c64748ccd..2ad44c2109 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -1663,10 +1663,23 @@ class FilePathField(Field):
 
     def __init__(self, verbose_name=None, name=None, path='', match=None,
                  recursive=False, allow_files=True, allow_folders=False, **kwargs):
-        self.path, self.match, self.recursive = path, match, recursive
+        # Store path as a private attribute to handle both callable and non-callable cases
+        self._path = path
+        self.match, self.recursive = match, recursive
         self.allow_files, self.allow_folders = allow_files, allow_folders
         kwargs.setdefault('max_length', 100)
         super().__init__(verbose_name, name, **kwargs)
+    
+    @property
+    def path(self):
+        # If _path is callable, invoke it to get the dynamic path
+        if callable(self._path):
+            return self._path()
+        return self._path
+    
+    @path.setter
+    def path(self, value):
+        self._path = value
 
     def check(self, **kwargs):
         return [
@@ -1708,8 +1721,10 @@ class FilePathField(Field):
         return str(value)
 
     def formfield(self, **kwargs):
+        # Dynamically resolve the path if it's callable right before creating the form field
+        resolved_path = self.path if not callable(self.path) else self.path()
         return super().formfield(**{
-            'path': self.path,
+            'path': resolved_path,
             'match': self.match,
             'recursive': self.recursive,
             'form_class': forms.FilePathField,
