Output:
Testing against Django installed in '/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django' with up to 256 processes
Importing application sessions_tests
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, messages, sessions, sessions_tests, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table sessions_tests_customsession
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).

Subtest failed:

    test: test_decode_failure_logged_to_security (sessions_tests.tests.CacheSessionTests)
 subtest: test_decode_failure_logged_to_security (sessions_tests.tests.CacheSessionTests) (encoded='bad:encoded:value')

Unfortunately, the subtest that failed cannot be pickled, so the parallel
test runner cannot handle it cleanly. Here is the pickling error:

> can't pickle _thread.lock objects

You should re-run this test with --parallel=1 to reproduce the failure
with a cleaner failure message.

Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Cloning test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_actual_expiry (sessions_tests.tests.CookieSessionTests) ... expected failure
test_clear (sessions_tests.tests.CookieSessionTests) ... ok
test_custom_expiry_datetime (sessions_tests.tests.CookieSessionTests) ... ok
test_custom_expiry_reset (sessions_tests.tests.CookieSessionTests) ... ok
test_custom_expiry_seconds (sessions_tests.tests.CookieSessionTests) ... ok
test_custom_expiry_timedelta (sessions_tests.tests.CookieSessionTests) ... ok
test_cycle (sessions_tests.tests.CookieSessionTests) ... ok
test_cycle_with_no_session_cache (sessions_tests.tests.CookieSessionTests) ... ok
test_decode (sessions_tests.tests.CookieSessionTests) ... ok
test_decode_failure_logged_to_security (sessions_tests.tests.CookieSessionTests) ... test_decode_legacy (sessions_tests.tests.CookieSessionTests) ... ok
test_default_expiry (sessions_tests.tests.CookieSessionTests) ... ok
test_default_hashing_algorith_legacy_decode (sessions_tests.tests.CookieSessionTests) ... ok
test_delete (sessions_tests.tests.CookieSessionTests) ... ok
test_flush (sessions_tests.tests.CookieSessionTests) ... ok
test_get_empty (sessions_tests.tests.CookieSessionTests) ... ok
test_get_expire_at_browser_close (sessions_tests.tests.CookieSessionTests) ... ok
test_has_key (sessions_tests.tests.CookieSessionTests) ... ok
test_invalid_key (sessions_tests.tests.CookieSessionTests) ... ok
test_items (sessions_tests.tests.CookieSessionTests) ... ok
test_keys (sessions_tests.tests.CookieSessionTests) ... ok
test_new_session (sessions_tests.tests.CookieSessionTests) ... ok
test_pop (sessions_tests.tests.CookieSessionTests) ... ok
test_pop_default (sessions_tests.tests.CookieSessionTests) ... ok
test_pop_default_named_argument (sessions_tests.tests.CookieSessionTests) ... ok
test_pop_no_default_keyerror_raised (sessions_tests.tests.CookieSessionTests) ... ok
test_save (sessions_tests.tests.CookieSessionTests) ... ok
test_save_doesnt_clear_data (sessions_tests.tests.CookieSessionTests) ... ok
test_session_key_empty_string_invalid (sessions_tests.tests.CookieSessionTests)
Falsey values (Such as an empty string) are rejected. ... ok
test_session_key_is_read_only (sessions_tests.tests.CookieSessionTests) ... ok
test_session_key_too_short_invalid (sessions_tests.tests.CookieSessionTests)
Strings shorter than 8 characters are rejected. ... ok
test_session_key_valid_string_saved (sessions_tests.tests.CookieSessionTests)
Strings of length 8 and up are accepted and stored. ... ok
test_session_load_does_not_create_record (sessions_tests.tests.CookieSessionTests) ... skipped "Cookie backend doesn't have an external store to create records in."
test_session_save_does_not_resurrect_session_logged_out_in_other_context (sessions_tests.tests.CookieSessionTests) ... skipped 'CookieSession is stored in the client and there is no way to query it.'
test_setdefault (sessions_tests.tests.CookieSessionTests) ... ok
test_store (sessions_tests.tests.CookieSessionTests) ... ok
test_unpickling_exception (sessions_tests.tests.CookieSessionTests) ... ok
test_update (sessions_tests.tests.CookieSessionTests) ... ok
test_values (sessions_tests.tests.CookieSessionTests) ... ok
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/multiprocessing/pool.py", line 119, in worker
    result = (True, func(*args, **kwds))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 339, in _run_subsuite
    result = runner.run(subsuite)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 286, in run
    test(result)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/suite.py", line 122, in run
    test(result)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/testcases.py", line 245, in __call__
    self._setup_and_call(result)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/testcases.py", line 281, in _setup_and_call
    super().__call__(result)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/case.py", line 613, in run
    self._feedErrorsToResult(result, outcome.errors)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/case.py", line 538, in _feedErrorsToResult
    result.addSubTest(test.test_case, test, exc_info)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 243, in addSubTest
    self.check_subtest_picklable(test, subtest)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 201, in check_subtest_picklable
    self._confirm_picklable(subtest)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 134, in _confirm_picklable
    pickle.loads(pickle.dumps(obj))
TypeError: can't pickle _thread.lock objects
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "./tests/runtests.py", line 586, in <module>
    options.timing,
  File "./tests/runtests.py", line 317, in django_tests
    extra_tests=extra_tests,
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 721, in run_tests
    result = self.run_suite(suite)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 662, in run_suite
    return runner.run(suite)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/runner.py", line 176, in run
    test(result)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 403, in run
    subsuite_index, events = test_results.next(timeout=0.1)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/multiprocessing/pool.py", line 735, in next
    raise value
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/multiprocessing/pool.py", line 119, in worker
    result = (True, func(*args, **kwds))
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 339, in _run_subsuite
    result = runner.run(subsuite)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 286, in run
    test(result)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/suite.py", line 122, in run
    test(result)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/testcases.py", line 245, in __call__
    self._setup_and_call(result)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/testcases.py", line 281, in _setup_and_call
    super().__call__(result)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/case.py", line 613, in run
    self._feedErrorsToResult(result, outcome.errors)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/unittest/case.py", line 538, in _feedErrorsToResult
    result.addSubTest(test.test_case, test, exc_info)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 243, in addSubTest
    self.check_subtest_picklable(test, subtest)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 201, in check_subtest_picklable
    self._confirm_picklable(subtest)
  File "/media/media0/yuntong/SWE-bench/testbed/django__django/setup_django__django__3.2/django/test/runner.py", line 134, in _confirm_picklable
    pickle.loads(pickle.dumps(obj))
TypeError: can't pickle _thread.lock objects
Traceback (most recent call last):
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/multiprocessing/util.py", line 262, in _run_finalizers
    finalizer()
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/multiprocessing/util.py", line 186, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/shutil.py", line 477, in rmtree
    onerror(os.lstat, path, sys.exc_info())
  File "/home/yuntong/miniconda3/envs/setup_django__django__3.2/lib/python3.6/shutil.py", line 475, in rmtree
    orig_st = os.lstat(path)
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/django_szc0djjr/pymp-pcj0glzo'

>>>>> All Tests Passed
