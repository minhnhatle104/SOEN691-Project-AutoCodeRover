diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py
index a9f66740f..9fc7d89ea 100644
--- a/sklearn/mixture/base.py
+++ b/sklearn/mixture/base.py
@@ -71,10 +71,12 @@ class BaseMixture(six.with_metaclass(ABCMeta, DensityMixin, BaseEstimator)):
     provides basic common methods for mixture models.
     """
 
-    def __init__(self, n_components, tol, reg_covar,
+    def __init__(self, n_clusters, tol, reg_covar,
                  max_iter, n_init, init_params, random_state, warm_start,
                  verbose, verbose_interval):
-        self.n_components = n_components
+        self.n_clusters = n_clusters
+        # For backward compatibility, also set n_components
+        self.n_components = n_clusters
         self.tol = tol
         self.reg_covar = reg_covar
         self.max_iter = max_iter
@@ -338,7 +340,10 @@ class BaseMixture(six.with_metaclass(ABCMeta, DensityMixin, BaseEstimator)):
         """
         self._check_is_fitted()
         X = _check_X(X, None, self.means_.shape[1])
-        return self._estimate_weighted_log_prob(X).argmax(axis=1)
+        labels = self._estimate_weighted_log_prob(X).argmax(axis=1)
+        # Store labels for the training data
+        self.labels_ = labels
+        return labels
 
     def predict_proba(self, X):
         """Predict posterior probability of each component given the data.
