[
    [
        "sympy/conftest.py",
        "",
        "file_clear_cache",
        1.0
    ],
    [
        "sympy/conftest.py",
        "",
        "check_disabled",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        1.0
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__repr__",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "atoms",
        1.0
    ],
    [
        "sympy/core/cache.py",
        "_cache",
        "clear_cache",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "equals",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "diff",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_expand_complex",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_expand_hint",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_expandsums",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_is_finite",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__radd__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__floordiv__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__ne__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__ne__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__lt__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__gt__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__ne__",
        1.0
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_transpose",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_exp",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        1.0
    ],
    [
        "sympy/integrals/intpoly.py",
        "",
        "decompose",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_degree_list",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree_list",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_strip",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero_p",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "tp",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "of_type",
        1.0
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "from_sympy",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "degree_list",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__setattr__",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "preprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        1.0
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "allowed_flags",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "degree_list",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "PurePoly",
        "_unify",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "poly_from_expr",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_poly_from_expr",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "degree",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_dups",
        1.0
    ],
    [
        "conftest.py",
        "",
        "pytest_runtest_setup",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonnegative",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonpositive",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.7071067811865475
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "func",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_exec_constructor_postprocessors",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "_preorder_traversal",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "skip",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        0.7071067811865475
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.7071067811865475
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.7071067811865475
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        0.7071067811865475
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_pow",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_number",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_interval",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coefficients_dict",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "leadterm",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "_coeff_isneg",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_polar",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_hermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_composite",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_sage_",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_coeff_Add",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__getnewargs__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__divmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__index__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "base",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "exp",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_Mod",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_even",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_hashable_content",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_sympify",
        0.7071067811865475
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__nonzero__",
        0.7071067811865475
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__nonzero__",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Symbol",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "",
        "sstr",
        0.7071067811865475
    ]
]