2024-04-05 05:20:08 ========== Running task django__django-14608 (relative counter in this run: 76/300) ==========
2024-04-05 05:20:08 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_django__django__4.0 ; python -m pip install -e . ; conda deactivate
2024-04-05 05:20:11 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_django__django__4.0 ; python -m pip install xmlrunner coverage pytest pytest-cov ; conda deactivate
2024-04-05 05:22:08 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_django__django__4.0 ; python -m coverage run runtests.py --parallel 1 --verbosity 2 admin_views.tests forms_tests.tests.test_formsets ; conda deactivate
2024-04-05 05:23:37 SBFL result (lines): [('django/forms/formsets.py', 224, 224, 0.35355339059327373), ('django/forms/formsets.py', 226, 226, 0.35355339059327373), ('django/forms/formsets.py', 381, 383, 0.35355339059327373), ('django/forms/utils.py', 117, 120, 0.3333333333333333), ('django/forms/formsets.py', 309, 310, 0.2886751345948129), ('django/forms/utils.py', 139, 142, 0.2886751345948129), ('django/core/exceptions.py', 175, 175, 0.24253562503633297), ('django/core/exceptions.py', 179, 181, 0.24253562503633297), ('django/core/exceptions.py', 183, 183, 0.24253562503633297), ('django/db/models/fields/__init__.py', 641, 643, 0.22360679774997896), ('django/db/models/fields/__init__.py', 649, 650, 0.22360679774997896), ('django/forms/fields.py', 181, 184, 0.22360679774997896), ('django/forms/fields.py', 836, 836, 0.22360679774997896), ('django/forms/fields.py', 838, 839, 0.22360679774997896), ('django/forms/fields.py', 846, 846, 0.22360679774997896), ('django/forms/fields.py', 849, 850, 0.22360679774997896), ('django/core/exceptions.py', 118, 118, 0.20851441405707477), ('django/core/exceptions.py', 120, 120, 0.20851441405707477), ('django/core/exceptions.py', 128, 128, 0.20851441405707477), ('django/core/exceptions.py', 135, 135, 0.20851441405707477), ('django/core/exceptions.py', 147, 150, 0.20851441405707477), ('django/forms/formsets.py', 324, 326, 0.20412414523193154), ('django/forms/formsets.py', 357, 357, 0.20412414523193154), ('django/forms/formsets.py', 361, 362, 0.20412414523193154), ('django/forms/formsets.py', 364, 366, 0.20412414523193154), ('django/forms/formsets.py', 374, 374, 0.20412414523193154), ('django/forms/formsets.py', 144, 145, 0.19611613513818404), ('django/forms/formsets.py', 368, 368, 0.19611613513818404), ('django/forms/forms.py', 435, 435, 0.19245008972987526), ('django/forms/formsets.py', 180, 183, 0.19245008972987526), ('django/forms/formsets.py', 318, 318, 0.19245008972987526), ('django/forms/formsets.py', 321, 321, 0.19245008972987526), ('django/forms/formsets.py', 328, 328, 0.19245008972987526), ('django/forms/formsets.py', 342, 342, 0.19245008972987526), ('django/forms/formsets.py', 355, 355, 0.19245008972987526), ('django/contrib/admin/options.py', 1672, 1673, 0.1889822365046136), ('django/contrib/admin/options.py', 1675, 1675, 0.1889822365046136), ('django/contrib/admin/options.py', 1682, 1687, 0.1889822365046136), ('django/contrib/admin/options.py', 1691, 1691, 0.1889822365046136), ('django/contrib/admin/options.py', 1765, 1766, 0.1889822365046136), ('django/contrib/admin/options.py', 1768, 1771, 0.1889822365046136), ('django/forms/widgets.py', 538, 538, 0.1889822365046136), ('django/forms/widgets.py', 540, 543, 0.1889822365046136), ('django/forms/fields.py', 278, 278, 0.18257418583505536), ('django/forms/formsets.py', 130, 130, 0.18257418583505536), ('django/forms/fields.py', 268, 271, 0.1796053020267749), ('django/forms/fields.py', 274, 275, 0.1796053020267749), ('django/forms/formsets.py', 45, 45, 0.1796053020267749), ('django/forms/formsets.py', 48, 50, 0.1796053020267749), ('django/forms/formsets.py', 111, 113, 0.1796053020267749), ('django/contrib/admin/options.py', 1743, 1744, 0.17677669529663687), ('django/contrib/admin/utils.py', 385, 386, 0.17677669529663687), ('django/forms/formsets.py', 296, 296, 0.17677669529663687), ('django/forms/formsets.py', 298, 298, 0.17677669529663687), ('django/forms/models.py', 50, 52, 0.17677669529663687), ('django/forms/models.py', 588, 590, 0.17677669529663687), ('django/forms/models.py', 597, 597, 0.17677669529663687), ('django/forms/models.py', 599, 599, 0.17677669529663687), ('django/forms/models.py', 602, 607, 0.17677669529663687), ('django/forms/models.py', 613, 615, 0.17677669529663687), ('django/forms/models.py', 621, 621, 0.17677669529663687), ('django/forms/models.py', 1281, 1283, 0.17677669529663687), ('django/forms/models.py', 1285, 1285, 0.17677669529663687), ('django/forms/models.py', 1292, 1292, 0.17677669529663687), ('django/forms/widgets.py', 548, 548, 0.17677669529663687), ('django/contrib/admin/filters.py', 281, 284, 0.16666666666666666), ('django/contrib/admin/filters.py', 286, 288, 0.16666666666666666), ('django/contrib/admin/filters.py', 291, 294, 0.16666666666666666), ('django/contrib/admin/filters.py', 296, 296, 0.16666666666666666), ('django/forms/forms.py', 457, 459, 0.16666666666666666), ('django/forms/models.py', 585, 585, 0.15811388300841897), ('django/forms/utils.py', 136, 136, 0.15811388300841897), ('django/forms/formsets.py', 303, 305, 0.15617376188860607), ('django/forms/fields.py', 179, 179, 0.1543033499620919), ('django/forms/forms.py', 439, 442, 0.1543033499620919), ('django/forms/forms.py', 445, 445, 0.1543033499620919), ('django/contrib/admin/options.py', 141, 142, 0.15075567228888181), ('django/contrib/admin/options.py', 194, 194, 0.15075567228888181), ('django/contrib/admin/options.py', 205, 205, 0.15075567228888181), ('django/db/models/base.py', 531, 532, 0.15075567228888181), ('django/db/models/fields/__init__.py', 864, 870, 0.15075567228888181), ('django/db/models/fields/__init__.py', 894, 898, 0.15075567228888181), ('django/db/models/fields/__init__.py', 901, 902, 0.15075567228888181), ('django/db/models/fields/__init__.py', 923, 927, 0.15075567228888181), ('django/db/models/fields/__init__.py', 929, 929, 0.15075567228888181), ('django/db/models/fields/__init__.py', 932, 932, 0.15075567228888181), ('django/db/models/fields/__init__.py', 936, 936, 0.15075567228888181), ('django/forms/fields.py', 124, 124, 0.15075567228888181), ('django/forms/fields.py', 771, 772, 0.15075567228888181), ('django/forms/fields.py', 828, 830, 0.15075567228888181), ('django/forms/models.py', 1279, 1279, 0.15075567228888181), ('django/forms/models.py', 1295, 1295, 0.15075567228888181), ('django/contrib/admin/filters.py', 271, 275, 0.14433756729740646), ('django/contrib/admin/filters.py', 278, 278, 0.14433756729740646), ('django/forms/boundfield.py', 121, 121, 0.14433756729740646), ('django/forms/boundfield.py', 128, 131, 0.14433756729740646), ('django/forms/fields.py', 163, 163, 0.14433756729740646), ('django/forms/fields.py', 165, 165, 0.14433756729740646), ('django/forms/fields.py', 780, 780, 0.14433756729740646), ('django/forms/fields.py', 799, 799, 0.14433756729740646), ('django/forms/fields.py', 803, 804, 0.14433756729740646), ('django/forms/fields.py', 813, 815, 0.14433756729740646), ('django/forms/fields.py', 821, 822, 0.14433756729740646), ('django/forms/models.py', 38, 44, 0.14433756729740646), ('django/forms/models.py', 334, 336, 0.14433756729740646), ('django/forms/models.py', 844, 844, 0.14433756729740646), ('django/forms/models.py', 1298, 1298, 0.14433756729740646), ('django/forms/models.py', 1300, 1302, 0.14433756729740646), ('django/forms/formsets.py', 335, 337, 0.14285714285714285), ('django/forms/formsets.py', 339, 339, 0.14285714285714285), ('django/contrib/admin/views/main.py', 225, 231, 0.1386750490563073), ('django/forms/fields.py', 797, 797, 0.1386750490563073), ('django/forms/widgets.py', 655, 656, 0.1386750490563073), ('django/forms/widgets.py', 661, 661, 0.1386750490563073), ('django/forms/formsets.py', 35, 36, 0.13608276348795434), ('django/forms/formsets.py', 40, 42, 0.13608276348795434), ('django/forms/formsets.py', 121, 121, 0.13608276348795434), ('django/forms/formsets.py', 155, 157, 0.13608276348795434), ('django/forms/formsets.py', 171, 174, 0.13608276348795434), ('django/forms/formsets.py', 178, 178, 0.13608276348795434), ('django/forms/formsets.py', 190, 195, 0.13608276348795434), ('django/contrib/admin/widgets.py', 351, 351, 0.1336306209562122), ('django/db/models/fields/__init__.py', 1841, 1843, 0.1336306209562122), ('django/test/utils.py', 67, 70, 0.1336306209562122), ('django/forms/fields.py', 252, 253, 0.13245323570650439), ('django/forms/fields.py', 256, 256, 0.13245323570650439), ('django/forms/fields.py', 258, 258, 0.13245323570650439), ('django/forms/fields.py', 260, 260, 0.13245323570650439), ('django/forms/fields.py', 281, 283, 0.13245323570650439), ('django/forms/fields.py', 287, 287, 0.13245323570650439), ('django/forms/forms.py', 89, 90, 0.13245323570650439), ('django/forms/formsets.py', 69, 78, 0.13245323570650439), ('django/forms/formsets.py', 80, 83, 0.13245323570650439), ('django/forms/formsets.py', 85, 85, 0.13245323570650439), ('django/forms/formsets.py', 167, 167, 0.13245323570650439), ('django/forms/formsets.py', 400, 401, 0.13245323570650439), ('django/forms/formsets.py', 416, 416, 0.13245323570650439), ('django/forms/formsets.py', 420, 420, 0.13245323570650439), ('django/forms/formsets.py', 125, 125, 0.13130643285972254), ('django/forms/utils.py', 127, 127, 0.13130643285972254), ('django/utils/html.py', 132, 134, 0.13130643285972254), ('django/forms/fields.py', 131, 136, 0.13018891098082389), ('django/forms/fields.py', 141, 141, 0.13018891098082389), ('django/contrib/admin/options.py', 1728, 1729, 0.12909944487358055), ('django/db/models/base.py', 1011, 1011, 0.12909944487358055), ('django/forms/fields.py', 285, 285, 0.12909944487358055), ('django/forms/forms.py', 67, 74, 0.12909944487358055), ('django/forms/boundfield.py', 18, 25, 0.12803687993289598), ('django/contrib/admin/filters.py', 304, 304, 0.125), ('django/contrib/admin/templatetags/admin_list.py', 166, 167, 0.125), ('django/contrib/admin/templatetags/admin_list.py', 438, 442, 0.125), ('django/contrib/admin/utils.py', 389, 391, 0.125), ('django/forms/fields.py', 722, 722, 0.125), ('django/forms/fields.py', 726, 726, 0.125), ('django/forms/utils.py', 13, 13, 0.125), ('django/forms/utils.py', 15, 15, 0.125), ('django/forms/widgets.py', 529, 531, 0.125), ('django/forms/widgets.py', 534, 534, 0.125), ('django/template/defaultfilters.py', 186, 186, 0.125), ('django/contrib/admin/templatetags/admin_list.py', 257, 258, 0.12126781251816648), ('django/contrib/admin/templatetags/admin_list.py', 260, 263, 0.12126781251816648), ('django/contrib/admin/templatetags/admin_list.py', 279, 281, 0.12126781251816648), ('django/contrib/admin/templatetags/admin_list.py', 288, 291, 0.12126781251816648), ('django/contrib/admin/options.py', 1801, 1802, 0.11785113019775793), ('django/contrib/admin/views/main.py', 386, 386, 0.11785113019775793), ('django/forms/formsets.py', 106, 106, 0.11785113019775793), ('django/contrib/admin/filters.py', 27, 28, 0.11470786693528087), ('django/contrib/admin/filters.py', 123, 128, 0.11470786693528087), ('django/contrib/admin/filters.py', 133, 133, 0.11470786693528087), ('django/contrib/admin/filters.py', 136, 137, 0.11470786693528087), ('django/contrib/admin/filters.py', 157, 159, 0.11470786693528087), ('django/contrib/admin/filters.py', 229, 229, 0.11470786693528087), ('django/contrib/admin/filters.py', 266, 266, 0.11470786693528087), ('django/contrib/admin/views/main.py', 140, 143, 0.11470786693528087), ('django/contrib/admin/views/main.py', 147, 148, 0.11470786693528087), ('django/contrib/admin/views/main.py', 155, 158, 0.11470786693528087), ('django/contrib/admin/views/main.py', 160, 162, 0.11470786693528087), ('django/contrib/admin/views/main.py', 167, 167, 0.11470786693528087), ('django/contrib/admin/views/main.py', 171, 173, 0.11470786693528087), ('django/contrib/admin/views/main.py', 462, 466, 0.11470786693528087), ('django/forms/utils.py', 114, 115, 0.11470786693528087), ('django/forms/forms.py', 431, 431, 0.1125087900926024), ('django/forms/forms.py', 422, 422, 0.11043152607484653), ('django/forms/fields.py', 225, 231, 0.10976425998969035), ('django/forms/forms.py', 179, 179, 0.10783277320343841), ('django/contrib/admin/options.py', 779, 781, 0.10660035817780521), ('django/contrib/admin/options.py', 783, 784, 0.10660035817780521), ('django/contrib/admin/options.py', 786, 786, 0.10660035817780521), ('django/contrib/admin/options.py', 793, 795, 0.10660035817780521), ('django/contrib/admin/options.py', 797, 799, 0.10660035817780521), ('django/forms/models.py', 216, 220, 0.10660035817780521), ('django/forms/widgets.py', 509, 509, 0.10660035817780521), ('django/forms/widgets.py', 524, 526, 0.10660035817780521), ('django/forms/fields.py', 127, 127, 0.10540925533894598), ('django/forms/fields.py', 149, 152, 0.10540925533894598), ('django/forms/forms.py', 198, 198, 0.10540925533894598), ('django/forms/forms.py', 201, 201, 0.10540925533894598), ('django/forms/forms.py', 379, 379, 0.10540925533894598), ('django/forms/forms.py', 382, 382, 0.10540925533894598), ('django/forms/forms.py', 385, 387, 0.10540925533894598), ('django/forms/forms.py', 390, 391, 0.10540925533894598), ('django/forms/forms.py', 394, 396, 0.10540925533894598), ('django/forms/forms.py', 400, 402, 0.10540925533894598), ('django/forms/forms.py', 409, 410, 0.10540925533894598), ('django/forms/forms.py', 414, 415, 0.10540925533894598), ('django/forms/widgets.py', 263, 263, 0.10540925533894598), ('django/contrib/admin/views/main.py', 365, 367, 0.10425720702853739), ('django/forms/fields.py', 718, 718, 0.10425720702853739), ('django/utils/datastructures.py', 183, 184, 0.10425720702853739), ('django/contrib/admin/views/main.py', 372, 372, 0.10206207261596577), ('django/contrib/admin/views/main.py', 374, 375, 0.10206207261596577), ('django/contrib/admin/views/main.py', 382, 382, 0.10206207261596577), ('django/contrib/admin/views/main.py', 384, 384, 0.10206207261596577), ('django/forms/boundfield.py', 194, 197, 0.10206207261596577), ('django/forms/fields.py', 711, 711, 0.10206207261596577), ('django/forms/fields.py', 714, 715, 0.10206207261596577), ('django/forms/models.py', 630, 633, 0.10206207261596577), ('django/template/smartif.py', 100, 103, 0.1), ('django/forms/utils.py', 85, 85, 0.09901475429766744), ('django/forms/utils.py', 87, 88, 0.09901475429766744), ('django/contrib/admin/templatetags/admin_list.py', 115, 118, 0.09805806756909202), ('django/contrib/admin/templatetags/admin_list.py', 120, 121, 0.09805806756909202), ('django/contrib/admin/templatetags/admin_list.py', 128, 130, 0.09805806756909202), ('django/contrib/admin/templatetags/admin_list.py', 132, 133, 0.09805806756909202), ('django/contrib/admin/templatetags/admin_list.py', 135, 135, 0.09805806756909202), ('django/contrib/admin/templatetags/admin_list.py', 149, 150, 0.09805806756909202), ('django/contrib/admin/templatetags/admin_list.py', 152, 161, 0.09805806756909202), ('django/contrib/admin/utils.py', 484, 487, 0.09805806756909202), ('django/contrib/admin/utils.py', 490, 492, 0.09805806756909202), ('django/forms/formsets.py', 427, 428, 0.09805806756909202), ('django/forms/formsets.py', 436, 437, 0.09805806756909202), ('django/forms/models.py', 328, 329, 0.09805806756909202), ('django/forms/fields.py', 84, 91, 0.09759000729485333), ('django/forms/fields.py', 96, 97, 0.09759000729485333), ('django/forms/fields.py', 101, 101, 0.09759000729485333), ('django/forms/fields.py', 104, 106, 0.09759000729485333), ('django/forms/fields.py', 108, 108, 0.09759000729485333), ('django/forms/fields.py', 110, 114, 0.09759000729485333), ('django/forms/fields.py', 116, 116, 0.09759000729485333), ('django/forms/fields.py', 118, 118, 0.09759000729485333), ('django/forms/fields.py', 173, 173, 0.09759000729485333), ('django/forms/widgets.py', 206, 206, 0.09759000729485333), ('django/forms/widgets.py', 292, 295, 0.09759000729485333), ('django/contrib/admin/templatetags/admin_list.py', 213, 213, 0.09622504486493763), ('django/contrib/admin/templatetags/admin_list.py', 220, 221, 0.09622504486493763), ('django/db/models/base.py', 546, 549, 0.09622504486493763), ('django/db/models/base.py', 553, 556, 0.09622504486493763), ('django/db/models/base.py', 559, 561, 0.09622504486493763), ('django/db/models/base.py', 575, 575, 0.09622504486493763), ('django/db/models/base.py', 1072, 1077, 0.09622504486493763), ('django/db/models/base.py', 1252, 1255, 0.09622504486493763), ('django/db/models/base.py', 2169, 2170, 0.09622504486493763), ('django/db/models/base.py', 2174, 2174, 0.09622504486493763), ('django/forms/formsets.py', 96, 96, 0.09622504486493763), ('django/contrib/admin/options.py', 187, 187, 0.0944911182523068), ('django/db/models/base.py', 1018, 1018, 0.0944911182523068), ('django/db/models/base.py', 1020, 1021, 0.0944911182523068), ('django/db/models/base.py', 1023, 1023, 0.0944911182523068), ('django/db/models/base.py', 1026, 1026, 0.0944911182523068), ('django/db/models/base.py', 1037, 1037, 0.0944911182523068), ('django/db/models/base.py', 1039, 1039, 0.0944911182523068), ('django/db/models/base.py', 1041, 1043, 0.0944911182523068), ('django/db/models/base.py', 1051, 1052, 0.0944911182523068), ('django/db/models/base.py', 1057, 1058, 0.0944911182523068), ('django/db/models/base.py', 1063, 1063, 0.0944911182523068), ('django/db/models/base.py', 1068, 1069, 0.0944911182523068), ('django/db/models/base.py', 1079, 1079, 0.0944911182523068), ('django/db/models/base.py', 1081, 1081, 0.0944911182523068), ('django/db/models/base.py', 1083, 1083, 0.0944911182523068), ('django/db/models/base.py', 1085, 1085, 0.0944911182523068), ('django/db/models/base.py', 1088, 1088, 0.0944911182523068), ('django/db/models/base.py', 1090, 1090, 0.0944911182523068), ('django/db/models/base.py', 1130, 1130, 0.0944911182523068), ('django/db/models/base.py', 1133, 1134, 0.0944911182523068), ('django/db/models/base.py', 1159, 1159, 0.0944911182523068), ('django/db/models/base.py', 1213, 1214, 0.0944911182523068), ('django/db/models/base.py', 1217, 1217, 0.0944911182523068), ('django/db/models/base.py', 1219, 1220, 0.0944911182523068), ('django/db/models/base.py', 1226, 1227, 0.0944911182523068), ('django/db/models/base.py', 1232, 1232, 0.0944911182523068), ('django/db/models/base.py', 1241, 1241, 0.0944911182523068), ('django/db/models/base.py', 1249, 1249, 0.0944911182523068), ('django/db/models/base.py', 1258, 1259, 0.0944911182523068), ('django/db/models/base.py', 1261, 1262, 0.0944911182523068), ('django/db/models/base.py', 1266, 1266, 0.0944911182523068), ('django/db/models/fields/__init__.py', 617, 617, 0.0944911182523068), ('django/db/models/fields/__init__.py', 620, 621, 0.0944911182523068), ('django/db/models/fields/__init__.py', 629, 629, 0.0944911182523068), ('django/db/models/fields/__init__.py', 637, 637, 0.0944911182523068), ('django/db/models/fields/__init__.py', 657, 657, 0.0944911182523068), ('django/db/models/fields/__init__.py', 660, 660, 0.0944911182523068), ('django/db/models/fields/__init__.py', 669, 672, 0.0944911182523068), ('django/db/models/fields/__init__.py', 906, 906, 0.0944911182523068), ('django/db/models/fields/__init__.py', 915, 916, 0.0944911182523068), ('django/db/models/fields/__init__.py', 920, 921, 0.0944911182523068), ('django/forms/models.py', 35, 36, 0.0944911182523068), ('django/forms/models.py', 46, 46, 0.0944911182523068), ('django/forms/models.py', 58, 58, 0.0944911182523068), ('django/forms/models.py', 61, 61, 0.0944911182523068), ('django/forms/models.py', 63, 63, 0.0944911182523068), ('django/forms/models.py', 66, 66, 0.0944911182523068), ('django/forms/models.py', 321, 321, 0.0944911182523068), ('django/forms/models.py', 324, 325, 0.0944911182523068), ('django/forms/models.py', 341, 341, 0.0944911182523068), ('django/forms/models.py', 351, 353, 0.0944911182523068), ('django/forms/models.py', 355, 355, 0.0944911182523068), ('django/forms/models.py', 358, 359, 0.0944911182523068), ('django/forms/models.py', 390, 390, 0.0944911182523068), ('django/forms/models.py', 392, 392, 0.0944911182523068), ('django/forms/models.py', 401, 402, 0.0944911182523068), ('django/forms/models.py', 405, 406, 0.0944911182523068), ('django/forms/models.py', 410, 411, 0.0944911182523068), ('django/forms/models.py', 416, 417, 0.0944911182523068), ('django/forms/models.py', 424, 426, 0.0944911182523068), ('django/utils/html.py', 377, 377, 0.09325048082403138), ('django/forms/boundfield.py', 27, 28, 0.09166984970282113), ('django/forms/boundfield.py', 214, 214, 0.09166984970282113), ('django/forms/boundfield.py', 217, 217, 0.09166984970282113), ('django/forms/boundfield.py', 220, 220, 0.09166984970282113), ('django/forms/fields.py', 199, 199, 0.09166984970282113), ('django/forms/forms.py', 152, 163, 0.09166984970282113), ('django/forms/forms.py', 166, 168, 0.09166984970282113), ('django/forms/forms.py', 192, 192, 0.09166984970282113), ('django/forms/forms.py', 495, 496, 0.09166984970282113), ('django/forms/forms.py', 498, 498, 0.09166984970282113), ('django/contrib/admin/views/main.py', 234, 235, 0.09128709291752768), ('django/contrib/admin/views/main.py', 239, 240, 0.09128709291752768), ('django/forms/models.py', 856, 858, 0.09128709291752768), ('django/utils/html.py', 113, 115, 0.09053574604251853), ('django/contrib/admin/utils.py', 397, 397, 0.08980265101338746), ('django/contrib/admin/utils.py', 399, 399, 0.08980265101338746), ('django/contrib/admin/utils.py', 401, 401, 0.08980265101338746), ('django/contrib/admin/utils.py', 403, 403, 0.08980265101338746), ('django/contrib/admin/utils.py', 409, 409, 0.08980265101338746), ('django/core/handlers/wsgi.py', 115, 115, 0.08980265101338746), ('django/core/handlers/wsgi.py', 117, 117, 0.08980265101338746), ('django/db/models/fields/__init__.py', 985, 985, 0.08980265101338746), ('django/db/models/fields/__init__.py', 989, 989, 0.08980265101338746), ('django/db/models/fields/__init__.py', 993, 994, 0.08980265101338746), ('django/forms/forms.py', 278, 279, 0.08980265101338746), ('django/test/testcases.py', 1131, 1132, 0.08980265101338746), ('django/test/testcases.py', 1136, 1136, 0.08980265101338746), ('django/test/testcases.py', 1139, 1139, 0.08980265101338746), ('django/test/testcases.py', 1141, 1143, 0.08980265101338746), ('django/test/testcases.py', 1159, 1160, 0.08980265101338746), ('django/contrib/admin/utils.py', 383, 383, 0.08838834764831843), ('django/contrib/admin/utils.py', 393, 393, 0.08838834764831843), ('django/contrib/admin/utils.py', 395, 395, 0.08838834764831843), ('django/forms/forms.py', 173, 175, 0.08838834764831843), ('django/forms/models.py', 583, 583, 0.08838834764831843), ('django/forms/models.py', 636, 638, 0.08838834764831843), ('django/forms/models.py', 645, 645, 0.08838834764831843), ('django/forms/models.py', 651, 652, 0.08838834764831843), ('django/utils/safestring.py', 59, 61, 0.08804509063256238), ('django/forms/forms.py', 188, 188, 0.0873704056661038), ('django/forms/forms.py', 376, 377, 0.0873704056661038), ('django/contrib/admin/views/main.py', 528, 528, 0.08703882797784893), ('django/db/models/options.py', 634, 635, 0.08703882797784893), ('django/db/models/options.py', 638, 638, 0.08703882797784893), ('django/forms/fields.py', 202, 207, 0.08703882797784893), ('django/forms/widgets.py', 209, 212, 0.08703882797784893), ('django/utils/datastructures.py', 38, 38, 0.08703882797784893), ('django/forms/forms.py', 120, 121, 0.086710996952412), ('django/utils/html.py', 99, 99, 0.08638684255813601), ('django/utils/html.py', 101, 102, 0.08638684255813601), ('django/utils/html.py', 104, 104, 0.08638684255813601), ('django/utils/safestring.py', 18, 18, 0.08638684255813601), ('django/utils/safestring.py', 37, 37, 0.08638684255813601), ('django/forms/forms.py', 76, 78, 0.08606629658238704), ('django/forms/forms.py', 85, 87, 0.08606629658238704), ('django/forms/forms.py', 92, 92, 0.08606629658238704), ('django/forms/forms.py', 100, 102, 0.08606629658238704), ('django/forms/forms.py', 107, 107, 0.08606629658238704), ('django/utils/html.py', 43, 43, 0.08606629658238704), ('django/utils/safestring.py', 63, 63, 0.08606629658238704), ('django/contrib/admin/utils.py', 284, 286, 0.08574929257125441), ('django/db/models/fields/__init__.py', 2517, 2517, 0.08574929257125441), ('django/db/models/fields/__init__.py', 2520, 2520, 0.08574929257125441), ('django/forms/forms.py', 209, 214, 0.08574929257125441), ('django/forms/forms.py', 218, 218, 0.08574929257125441), ('django/forms/forms.py', 253, 255, 0.08574929257125441), ('django/forms/models.py', 577, 579, 0.08574929257125441), ('django/forms/models.py', 824, 825, 0.08574929257125441), ('django/forms/models.py', 832, 834, 0.08574929257125441), ('django/forms/models.py', 839, 840, 0.08574929257125441), ('django/forms/models.py', 853, 853, 0.08574929257125441), ('django/forms/models.py', 861, 863, 0.08574929257125441), ('django/forms/models.py', 874, 875, 0.08574929257125441), ('django/forms/models.py', 882, 892, 0.08574929257125441), ('django/forms/models.py', 1276, 1276, 0.08574929257125441), ('django/contrib/admin/utils.py', 297, 298, 0.08451542547285165), ('django/contrib/admin/utils.py', 304, 304, 0.08451542547285165), ('django/contrib/admin/utils.py', 307, 307, 0.08451542547285165), ('django/contrib/admin/utils.py', 318, 322, 0.08451542547285165), ('django/utils/functional.py', 228, 230, 0.0842151921066519), ('django/forms/forms.py', 132, 132, 0.08333333333333333), ('django/forms/forms.py', 283, 288, 0.08333333333333333), ('django/forms/fields.py', 190, 192, 0.08219949365267865), ('django/utils/http.py', 56, 57, 0.08219949365267865), ('django/core/validators.py', 569, 569, 0.08111071056538127), ('django/db/models/fields/__init__.py', 963, 963, 0.08111071056538127), ('django/db/models/fields/__init__.py', 965, 965, 0.08111071056538127), ('django/db/models/fields/__init__.py', 967, 967, 0.08111071056538127), ('django/forms/forms.py', 206, 207, 0.08111071056538127), ('django/forms/forms.py', 250, 250, 0.08111071056538127), ('django/forms/formsets.py', 284, 284, 0.08111071056538127), ('django/forms/utils.py', 96, 98, 0.08111071056538127), ('django/utils/translation/__init__.py', 74, 74, 0.08058229640253803), ('django/utils/translation/trans_real.py', 103, 106, 0.08058229640253803), ('django/utils/translation/trans_real.py', 108, 108, 0.08058229640253803), ('django/utils/translation/trans_real.py', 352, 352, 0.08058229640253803), ('django/utils/translation/trans_real.py', 354, 356, 0.08058229640253803), ('django/utils/translation/trans_real.py', 358, 358, 0.08058229640253803), ('django/utils/translation/trans_real.py', 364, 365, 0.08058229640253803), ('django/utils/translation/trans_real.py', 367, 367, 0.08058229640253803), ('django/contrib/admin/helpers.py', 32, 32, 0.08006407690254357), ('django/contrib/admin/options.py', 865, 865, 0.08006407690254357), ('django/contrib/admin/templatetags/admin_list.py', 204, 210, 0.08006407690254357), ('django/forms/widgets.py', 561, 561, 0.08006407690254357), ('django/forms/widgets.py', 565, 565, 0.08006407690254357), ('django/contrib/admin/templatetags/admin_list.py', 451, 452, 0.07905694150420949), ('django/forms/forms.py', 147, 148, 0.07905694150420949), ('django/contrib/admin/templatetags/admin_list.py', 187, 188, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 190, 190, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 192, 192, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 194, 200, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 223, 223, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 225, 227, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 231, 232, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 236, 236, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 239, 239, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 242, 247, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 249, 250, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 252, 252, 0.07808688094430304), ('django/contrib/admin/templatetags/admin_list.py', 274, 275, 0.07808688094430304), ('django/contrib/admin/utils.py', 273, 275, 0.07808688094430304), ('django/contrib/admin/views/main.py', 535, 539, 0.07808688094430304), ('django/db/models/fields/__init__.py', 853, 853, 0.07808688094430304), ('django/forms/boundfield.py', 186, 186, 0.07808688094430304), ('django/forms/models.py', 1271, 1271, 0.07808688094430304), ('django/utils/datastructures.py', 72, 72, 0.07761505257063328), ('django/utils/functional.py', 247, 249, 0.07738232325341368), ('django/core/files/uploadhandler.py', 68, 73, 0.07715167498104596), ('django/core/files/uploadhandler.py', 91, 91, 0.07715167498104596), ('django/core/files/uploadhandler.py', 128, 128, 0.07715167498104596), ('django/core/files/uploadhandler.py', 179, 179, 0.07715167498104596), ('django/core/files/uploadhandler.py', 221, 221, 0.07715167498104596), ('django/core/handlers/wsgi.py', 24, 30, 0.07715167498104596), ('django/core/handlers/wsgi.py', 33, 33, 0.07715167498104596), ('django/core/handlers/wsgi.py', 36, 36, 0.07715167498104596), ('django/core/handlers/wsgi.py', 40, 42, 0.07715167498104596), ('django/core/handlers/wsgi.py', 45, 47, 0.07715167498104596), ('django/core/handlers/wsgi.py', 51, 53, 0.07715167498104596), ('django/core/handlers/wsgi.py', 55, 56, 0.07715167498104596), ('django/core/handlers/wsgi.py', 59, 61, 0.07715167498104596), ('django/forms/models.py', 92, 93, 0.07715167498104596), ('django/forms/widgets.py', 517, 517, 0.07715167498104596), ('django/forms/widgets.py', 520, 520, 0.07715167498104596), ('django/forms/widgets.py', 667, 669, 0.07715167498104596), ('django/forms/widgets.py', 689, 690, 0.07715167498104596), ('django/forms/widgets.py', 697, 697, 0.07715167498104596), ('django/forms/widgets.py', 699, 699, 0.07715167498104596), ('django/forms/widgets.py', 702, 703, 0.07715167498104596), ('django/http/multipartparser.py', 65, 66, 0.07715167498104596), ('django/http/multipartparser.py', 70, 71, 0.07715167498104596), ('django/http/multipartparser.py', 74, 75, 0.07715167498104596), ('django/http/multipartparser.py', 80, 81, 0.07715167498104596), ('django/http/multipartparser.py', 85, 85, 0.07715167498104596), ('django/http/multipartparser.py', 89, 89, 0.07715167498104596), ('django/http/multipartparser.py', 91, 92, 0.07715167498104596), ('django/http/multipartparser.py', 96, 97, 0.07715167498104596), ('django/http/multipartparser.py', 99, 102, 0.07715167498104596), ('django/http/multipartparser.py', 111, 111, 0.07715167498104596), ('django/http/multipartparser.py', 113, 114, 0.07715167498104596), ('django/http/multipartparser.py', 118, 118, 0.07715167498104596), ('django/http/multipartparser.py', 123, 129, 0.07715167498104596), ('django/http/multipartparser.py', 132, 132, 0.07715167498104596), ('django/http/multipartparser.py', 136, 137, 0.07715167498104596), ('django/http/multipartparser.py', 140, 140, 0.07715167498104596), ('django/http/multipartparser.py', 143, 144, 0.07715167498104596), ('django/http/multipartparser.py', 147, 147, 0.07715167498104596), ('django/http/multipartparser.py', 149, 149, 0.07715167498104596), ('django/http/multipartparser.py', 151, 151, 0.07715167498104596), ('django/http/multipartparser.py', 153, 153, 0.07715167498104596), ('django/http/multipartparser.py', 155, 157, 0.07715167498104596), ('django/http/multipartparser.py', 165, 169, 0.07715167498104596), ('django/http/multipartparser.py', 171, 172, 0.07715167498104596), ('django/http/multipartparser.py', 174, 174, 0.07715167498104596), ('django/http/multipartparser.py', 176, 176, 0.07715167498104596), ('django/http/multipartparser.py', 178, 180, 0.07715167498104596), ('django/http/multipartparser.py', 187, 188, 0.07715167498104596), ('django/http/multipartparser.py', 191, 191, 0.07715167498104596), ('django/http/multipartparser.py', 199, 200, 0.07715167498104596), ('django/http/multipartparser.py', 204, 206, 0.07715167498104596), ('django/http/multipartparser.py', 209, 209, 0.07715167498104596), ('django/http/multipartparser.py', 284, 284, 0.07715167498104596), ('django/http/multipartparser.py', 288, 288, 0.07715167498104596), ('django/http/multipartparser.py', 292, 294, 0.07715167498104596), ('django/http/multipartparser.py', 354, 360, 0.07715167498104596), ('django/http/multipartparser.py', 366, 367, 0.07715167498104596), ('django/http/multipartparser.py', 369, 369, 0.07715167498104596), ('django/http/multipartparser.py', 376, 377, 0.07715167498104596), ('django/http/multipartparser.py', 379, 382, 0.07715167498104596), ('django/http/multipartparser.py', 384, 387, 0.07715167498104596), ('django/http/multipartparser.py', 389, 389, 0.07715167498104596), ('django/http/multipartparser.py', 398, 400, 0.07715167498104596), ('django/http/multipartparser.py', 402, 405, 0.07715167498104596), ('django/http/multipartparser.py', 417, 417, 0.07715167498104596), ('django/http/multipartparser.py', 426, 430, 0.07715167498104596), ('django/http/multipartparser.py', 440, 443, 0.07715167498104596), ('django/http/multipartparser.py', 446, 446, 0.07715167498104596), ('django/http/multipartparser.py', 460, 461, 0.07715167498104596), ('django/http/multipartparser.py', 464, 465, 0.07715167498104596), ('django/http/multipartparser.py', 468, 469, 0.07715167498104596), ('django/http/multipartparser.py', 471, 471, 0.07715167498104596), ('django/http/multipartparser.py', 482, 483, 0.07715167498104596), ('django/http/multipartparser.py', 486, 486, 0.07715167498104596), ('django/http/multipartparser.py', 489, 492, 0.07715167498104596), ('django/http/multipartparser.py', 508, 510, 0.07715167498104596), ('django/http/multipartparser.py', 513, 513, 0.07715167498104596), ('django/http/multipartparser.py', 517, 520, 0.07715167498104596), ('django/http/multipartparser.py', 526, 527, 0.07715167498104596), ('django/http/multipartparser.py', 529, 530, 0.07715167498104596), ('django/http/multipartparser.py', 532, 539, 0.07715167498104596), ('django/http/multipartparser.py', 542, 542, 0.07715167498104596), ('django/http/multipartparser.py', 544, 544, 0.07715167498104596), ('django/http/multipartparser.py', 547, 548, 0.07715167498104596), ('django/http/multipartparser.py', 550, 554, 0.07715167498104596), ('django/http/multipartparser.py', 558, 558, 0.07715167498104596), ('django/http/multipartparser.py', 560, 561, 0.07715167498104596), ('django/http/multipartparser.py', 575, 577, 0.07715167498104596), ('django/http/multipartparser.py', 579, 580, 0.07715167498104596), ('django/http/multipartparser.py', 582, 588, 0.07715167498104596), ('django/http/multipartparser.py', 593, 594, 0.07715167498104596), ('django/http/multipartparser.py', 597, 597, 0.07715167498104596), ('django/http/multipartparser.py', 607, 607, 0.07715167498104596), ('django/http/multipartparser.py', 612, 612, 0.07715167498104596), ('django/http/multipartparser.py', 614, 620, 0.07715167498104596), ('django/http/multipartparser.py', 622, 622, 0.07715167498104596), ('django/http/multipartparser.py', 625, 626, 0.07715167498104596), ('django/http/multipartparser.py', 628, 628, 0.07715167498104596), ('django/http/multipartparser.py', 632, 632, 0.07715167498104596), ('django/http/multipartparser.py', 634, 635, 0.07715167498104596), ('django/http/multipartparser.py', 638, 638, 0.07715167498104596), ('django/http/multipartparser.py', 641, 644, 0.07715167498104596), ('django/http/multipartparser.py', 646, 648, 0.07715167498104596), ('django/http/multipartparser.py', 651, 651, 0.07715167498104596), ('django/http/multipartparser.py', 653, 653, 0.07715167498104596), ('django/http/multipartparser.py', 656, 656, 0.07715167498104596), ('django/http/multipartparser.py', 661, 662, 0.07715167498104596), ('django/http/multipartparser.py', 665, 666, 0.07715167498104596), ('django/http/multipartparser.py', 668, 668, 0.07715167498104596), ('django/http/multipartparser.py', 678, 686, 0.07715167498104596), ('django/http/multipartparser.py', 692, 696, 0.07715167498104596), ('django/http/multipartparser.py', 699, 700, 0.07715167498104596), ('django/http/multipartparser.py', 704, 708, 0.07715167498104596), ('django/http/multipartparser.py', 710, 715, 0.07715167498104596), ('django/http/request.py', 249, 249, 0.07715167498104596), ('django/http/request.py', 265, 266, 0.07715167498104596), ('django/http/request.py', 270, 270, 0.07715167498104596), ('django/http/request.py', 272, 273, 0.07715167498104596), ('django/http/request.py', 277, 277, 0.07715167498104596), ('django/http/request.py', 279, 279, 0.07715167498104596), ('django/http/request.py', 283, 285, 0.07715167498104596), ('django/http/request.py', 287, 288, 0.07715167498104596), ('django/http/request.py', 317, 317, 0.07715167498104596), ('django/http/request.py', 321, 322, 0.07715167498104596), ('django/http/request.py', 326, 328, 0.07715167498104596), ('django/http/request.py', 355, 357, 0.07715167498104596), ('django/http/request.py', 362, 364, 0.07715167498104596), ('django/http/request.py', 369, 369, 0.07715167498104596), ('django/middleware/csrf.py', 397, 397, 0.07715167498104596), ('django/middleware/csrf.py', 402, 402, 0.07715167498104596), ('django/template/base.py', 711, 712, 0.07715167498104596), ('django/template/base.py', 717, 719, 0.07715167498104596), ('django/test/client.py', 72, 75, 0.07715167498104596), ('django/test/client.py', 77, 80, 0.07715167498104596), ('django/test/client.py', 233, 233, 0.07715167498104596), ('django/test/client.py', 235, 236, 0.07715167498104596), ('django/test/client.py', 239, 240, 0.07715167498104596), ('django/test/client.py', 245, 246, 0.07715167498104596), ('django/test/client.py', 251, 251, 0.07715167498104596), ('django/test/client.py', 253, 253, 0.07715167498104596), ('django/test/client.py', 265, 269, 0.07715167498104596), ('django/test/client.py', 272, 274, 0.07715167498104596), ('django/test/client.py', 276, 276, 0.07715167498104596), ('django/test/client.py', 363, 364, 0.07715167498104596), ('django/test/client.py', 379, 380, 0.07715167498104596), ('django/test/client.py', 404, 405, 0.07715167498104596), ('django/test/client.py', 407, 408, 0.07715167498104596), ('django/test/client.py', 461, 465, 0.07715167498104596), ('django/test/client.py', 753, 755, 0.07715167498104596), ('django/test/client.py', 757, 757, 0.07715167498104596), ('django/utils/encoding.py', 54, 54, 0.07715167498104596), ('django/utils/encoding.py', 56, 56, 0.07715167498104596), ('django/utils/encoding.py', 58, 60, 0.07715167498104596), ('django/utils/encoding.py', 65, 65, 0.07715167498104596), ('django/utils/translation/trans_real.py', 258, 259, 0.07715167498104596), ('django/forms/formsets.py', 465, 468, 0.07624928516630233), ('django/utils/functional.py', 46, 46, 0.07624928516630233), ('django/utils/functional.py', 48, 49, 0.07624928516630233), ('django/apps/config.py', 262, 263, 0.07537783614444091), ('django/apps/registry.py', 140, 140, 0.07537783614444091), ('django/apps/registry.py', 198, 199, 0.07537783614444091), ('django/contrib/admin/utils.py', 282, 282, 0.07537783614444091), ('django/db/backends/base/operations.py', 274, 274, 0.07537783614444091), ('django/db/models/base.py', 670, 671, 0.07537783614444091), ('django/db/models/base.py', 674, 674, 0.07537783614444091), ('django/db/models/lookups.py', 47, 47, 0.07537783614444091), ('django/db/models/lookups.py', 49, 49, 0.07537783614444091), ('django/db/models/lookups.py', 59, 61, 0.07537783614444091), ('django/db/models/lookups.py', 269, 270, 0.07537783614444091), ('django/db/models/lookups.py', 272, 272, 0.07537783614444091), ('django/db/models/lookups.py', 274, 274, 0.07537783614444091), ('django/db/models/lookups.py', 277, 277, 0.07537783614444091), ('django/db/models/lookups.py', 282, 284, 0.07537783614444091), ('django/db/models/lookups.py', 286, 287, 0.07537783614444091), ('django/db/models/lookups.py', 392, 393, 0.07537783614444091), ('django/db/models/lookups.py', 399, 399, 0.07537783614444091), ('django/db/models/lookups.py', 401, 403, 0.07537783614444091), ('django/db/models/lookups.py', 407, 407, 0.07537783614444091), ('django/db/models/lookups.py', 412, 414, 0.07537783614444091), ('django/db/models/lookups.py', 438, 438, 0.07537783614444091), ('django/db/models/lookups.py', 441, 442, 0.07537783614444091), ('django/db/models/lookups.py', 444, 444, 0.07537783614444091), ('django/forms/models.py', 88, 90, 0.07537783614444091), ('django/forms/widgets.py', 622, 626, 0.07537783614444091), ('django/template/defaultfilters.py', 564, 565, 0.07537783614444091), ('django/utils/datastructures.py', 17, 17, 0.07537783614444091), ('django/utils/datastructures.py', 20, 23, 0.07537783614444091), ('django/utils/datastructures.py', 35, 35, 0.07537783614444091), ('django/contrib/admin/utils.py', 264, 267, 0.07453559924999299), ('django/contrib/admin/utils.py', 270, 270, 0.07453559924999299), ('django/contrib/admin/utils.py', 413, 413, 0.07453559924999299), ('django/contrib/admin/utils.py', 415, 415, 0.07453559924999299), ('django/contrib/admin/utils.py', 417, 417, 0.07453559924999299), ('django/contrib/admin/utils.py', 419, 419, 0.07453559924999299), ('django/contrib/admin/utils.py', 421, 421, 0.07453559924999299), ('django/contrib/admin/utils.py', 423, 423, 0.07453559924999299), ('django/contrib/admin/utils.py', 425, 425, 0.07453559924999299), ('django/contrib/admin/utils.py', 427, 427, 0.07453559924999299), ('django/contrib/admin/utils.py', 430, 430, 0.07453559924999299), ('django/db/models/sql/query.py', 2349, 2352, 0.07453559924999299), ('django/forms/formsets.py', 472, 474, 0.07453559924999299), ('django/forms/models.py', 83, 86, 0.07453559924999299), ('django/forms/models.py', 299, 300, 0.07453559924999299), ('django/template/loader.py', 11, 15, 0.07453559924999299), ('django/db/models/sql/query.py', 1084, 1086, 0.07372097807744857), ('django/db/models/sql/query.py', 1088, 1089, 0.07372097807744857), ('django/db/models/sql/query.py', 1091, 1092, 0.07372097807744857), ('django/contrib/admin/views/main.py', 279, 279, 0.07293249574894728), ('django/forms/formsets.py', 478, 488, 0.07293249574894728), ('django/forms/formsets.py', 490, 490, 0.07293249574894728), ('django/forms/models.py', 1401, 1401, 0.07293249574894728), ('django/forms/widgets.py', 250, 252, 0.07293249574894728), ('django/contrib/admin/options.py', 1807, 1810, 0.07216878364870323), ('django/contrib/admin/templatetags/admin_list.py', 90, 94, 0.07216878364870323), ('django/contrib/admin/templatetags/admin_list.py', 96, 96, 0.07216878364870323), ('django/contrib/admin/views/main.py', 424, 424, 0.07216878364870323), ('django/forms/boundfield.py', 199, 199, 0.07216878364870323), ('django/forms/widgets.py', 665, 665, 0.07216878364870323), ('django/contrib/admin/options.py', 310, 313, 0.07142857142857142), ('django/contrib/admin/options.py', 922, 926, 0.07142857142857142), ('django/contrib/admin/options.py', 1843, 1847, 0.07142857142857142), ('django/contrib/admin/views/main.py', 390, 392, 0.07142857142857142), ('django/contrib/admin/views/main.py', 394, 394, 0.07142857142857142), ('django/contrib/admin/views/main.py', 397, 397, 0.07142857142857142), ('django/contrib/admin/views/main.py', 409, 410, 0.07142857142857142), ('django/contrib/admin/views/main.py', 517, 517, 0.07142857142857142), ('django/contrib/admin/views/main.py', 519, 519, 0.07142857142857142), ('django/contrib/admin/views/main.py', 532, 532, 0.07142857142857142), ('django/forms/forms.py', 474, 474, 0.07142857142857142), ('django/template/defaultfilters.py', 41, 46, 0.07142857142857142), ('django/contrib/admin/options.py', 1814, 1817, 0.07071067811865475), ('django/contrib/admin/options.py', 1820, 1838, 0.07071067811865475), ('django/contrib/admin/options.py', 1841, 1841, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 50, 59, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 77, 82, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 84, 86, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 105, 105, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 174, 174, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 179, 179, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 298, 301, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 303, 308, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 423, 427, 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', 465, 465, 0.07071067811865475), ('django/contrib/admin/utils.py', 333, 334, 0.07071067811865475), ('django/contrib/admin/utils.py', 347, 348, 0.07071067811865475), ('django/contrib/admin/utils.py', 364, 365, 0.07071067811865475), ('django/contrib/admin/views/main.py', 418, 420, 0.07071067811865475), ('django/contrib/admin/views/main.py', 450, 450, 0.07071067811865475), ('django/db/models/lookups.py', 247, 247, 0.07071067811865475), ('django/db/models/lookups.py', 249, 251, 0.07071067811865475), ('django/db/models/lookups.py', 255, 258, 0.07071067811865475), ('django/forms/models.py', 1157, 1158, 0.07071067811865475), ('django/forms/models.py', 1202, 1204, 0.07071067811865475), ('django/forms/models.py', 1206, 1208, 0.07071067811865475), ('django/forms/models.py', 1212, 1215, 0.07071067811865475), ('django/forms/models.py', 1235, 1235, 0.07071067811865475), ('django/forms/models.py', 1238, 1239, 0.07071067811865475), ('django/forms/models.py', 1256, 1256, 0.07071067811865475), ('django/forms/models.py', 1266, 1266, 0.07071067811865475), ('django/forms/widgets.py', 110, 111, 0.07071067811865475), ('django/forms/widgets.py', 589, 590, 0.07071067811865475), ('django/forms/widgets.py', 592, 593, 0.07071067811865475), ('django/forms/widgets.py', 596, 597, 0.07071067811865475), ('django/forms/widgets.py', 602, 605, 0.07071067811865475), ('django/forms/widgets.py', 607, 610, 0.07071067811865475), ('django/forms/widgets.py', 612, 615, 0.07071067811865475), ('django/forms/widgets.py', 617, 617, 0.07071067811865475), ('django/forms/widgets.py', 619, 619, 0.07071067811865475), ('django/forms/widgets.py', 628, 637, 0.07071067811865475), ('django/forms/widgets.py', 641, 643, 0.07071067811865475), ('django/forms/widgets.py', 681, 682, 0.07071067811865475), ('django/forms/widgets.py', 684, 684, 0.07071067811865475), ('django/db/models/query.py', 956, 956, 0.07001400420140048), ('django/forms/fields.py', 775, 777, 0.07001400420140048), ('django/forms/fields.py', 786, 786, 0.07001400420140048), ('django/forms/fields.py', 789, 789, 0.07001400420140048), ('django/forms/fields.py', 791, 791, 0.07001400420140048), ('django/contrib/admin/utils.py', 331, 331, 0.06933752452815364), ('django/utils/http.py', 47, 51, 0.06933752452815364), ('django/utils/http.py', 77, 78, 0.06933752452815364), ('django/utils/translation/trans_real.py', 394, 396, 0.06933752452815364), ('django/contrib/admin/options.py', 375, 375, 0.06868028197434452), ('django/contrib/admin/options.py', 739, 757, 0.06868028197434452), ('django/contrib/admin/options.py', 901, 903, 0.06868028197434452), ('django/contrib/admin/utils.py', 233, 233, 0.06868028197434452), ('django/contrib/admin/utils.py', 235, 235, 0.06868028197434452), ('django/contrib/admin/utils.py', 238, 241, 0.06868028197434452), ('django/contrib/admin/options.py', 972, 972, 0.06804138174397717), ('django/contrib/admin/options.py', 1762, 1762, 0.06804138174397717), ('django/contrib/admin/utils.py', 326, 327, 0.06804138174397717), ('django/contrib/admin/views/main.py', 104, 105, 0.06804138174397717), ('django/contrib/admin/views/main.py', 248, 249, 0.06804138174397717), ('django/contrib/admin/widgets.py', 318, 318, 0.06804138174397717), ('django/db/models/sql/query.py', 1955, 1957, 0.06804138174397717), ('django/forms/widgets.py', 226, 228, 0.06804138174397717), ('django/contrib/admin/options.py', 728, 729, 0.06741998624632421), ('django/contrib/admin/options.py', 736, 737, 0.06741998624632421), ('django/contrib/admin/options.py', 810, 810, 0.06741998624632421), ('django/contrib/admin/options.py', 869, 869, 0.06741998624632421), ('django/contrib/admin/options.py', 873, 874, 0.06741998624632421), ('django/contrib/admin/options.py', 876, 877, 0.06741998624632421), ('django/contrib/admin/options.py', 880, 881, 0.06741998624632421), ('django/contrib/admin/options.py', 883, 884, 0.06741998624632421), ('django/contrib/admin/options.py', 886, 887, 0.06741998624632421), ('django/contrib/admin/options.py', 891, 894, 0.06741998624632421), ('django/contrib/admin/options.py', 897, 899, 0.06741998624632421), ('django/contrib/admin/options.py', 912, 912, 0.06741998624632421), ('django/contrib/admin/options.py', 914, 915, 0.06741998624632421), ('django/contrib/admin/options.py', 960, 960, 0.06741998624632421), ('django/contrib/admin/options.py', 968, 968, 0.06741998624632421), ('django/contrib/admin/options.py', 979, 979, 0.06741998624632421), ('django/contrib/admin/options.py', 986, 986, 0.06741998624632421), ('django/contrib/admin/options.py', 993, 993, 0.06741998624632421), ('django/contrib/admin/options.py', 1001, 1001, 0.06741998624632421), ('django/contrib/admin/options.py', 1030, 1032, 0.06741998624632421), ('django/contrib/admin/options.py', 1045, 1045, 0.06741998624632421), ('django/contrib/admin/options.py', 1051, 1057, 0.06741998624632421), ('django/contrib/admin/options.py', 1704, 1705, 0.06741998624632421), ('django/contrib/admin/options.py', 1723, 1724, 0.06741998624632421), ('django/contrib/admin/options.py', 1726, 1726, 0.06741998624632421), ('django/contrib/admin/options.py', 1753, 1753, 0.06741998624632421), ('django/contrib/admin/sites.py', 192, 192, 0.06741998624632421), ('django/contrib/admin/views/main.py', 40, 40, 0.06741998624632421), ('django/contrib/admin/views/main.py', 42, 43, 0.06741998624632421), ('django/contrib/admin/views/main.py', 54, 72, 0.06741998624632421), ('django/contrib/admin/views/main.py', 75, 76, 0.06741998624632421), ('django/contrib/admin/views/main.py', 79, 81, 0.06741998624632421), ('django/contrib/admin/views/main.py', 84, 87, 0.06741998624632421), ('django/contrib/admin/views/main.py', 89, 91, 0.06741998624632421), ('django/contrib/admin/views/main.py', 93, 93, 0.06741998624632421), ('django/contrib/admin/views/main.py', 96, 96, 0.06741998624632421), ('django/contrib/admin/views/main.py', 99, 102, 0.06741998624632421), ('django/contrib/admin/views/main.py', 108, 109, 0.06741998624632421), ('django/contrib/admin/views/main.py', 122, 123, 0.06741998624632421), ('django/contrib/admin/views/main.py', 126, 127, 0.06741998624632421), ('django/contrib/admin/views/main.py', 129, 129, 0.06741998624632421), ('django/contrib/admin/views/main.py', 132, 134, 0.06741998624632421), ('django/contrib/admin/views/main.py', 136, 136, 0.06741998624632421), ('django/contrib/admin/views/main.py', 176, 176, 0.06741998624632421), ('django/contrib/admin/views/main.py', 213, 214, 0.06741998624632421), ('django/contrib/admin/views/main.py', 217, 219, 0.06741998624632421), ('django/contrib/admin/views/main.py', 243, 243, 0.06741998624632421), ('django/contrib/admin/views/main.py', 245, 245, 0.06741998624632421), ('django/contrib/admin/views/main.py', 252, 253, 0.06741998624632421), ('django/contrib/admin/views/main.py', 256, 257, 0.06741998624632421), ('django/contrib/admin/views/main.py', 264, 265, 0.06741998624632421), ('django/contrib/admin/views/main.py', 268, 273, 0.06741998624632421), ('django/contrib/admin/views/main.py', 276, 277, 0.06741998624632421), ('django/contrib/admin/views/main.py', 281, 281, 0.06741998624632421), ('django/contrib/admin/views/main.py', 316, 318, 0.06741998624632421), ('django/contrib/admin/views/main.py', 346, 346, 0.06741998624632421), ('django/contrib/admin/views/main.py', 348, 348, 0.06741998624632421), ('django/contrib/admin/views/main.py', 357, 361, 0.06741998624632421), ('django/contrib/admin/views/main.py', 363, 363, 0.06741998624632421), ('django/contrib/admin/views/main.py', 454, 460, 0.06741998624632421), ('django/contrib/admin/views/main.py', 468, 468, 0.06741998624632421), ('django/contrib/admin/views/main.py', 472, 472, 0.06741998624632421), ('django/contrib/admin/views/main.py', 486, 487, 0.06741998624632421), ('django/contrib/admin/views/main.py', 491, 493, 0.06741998624632421), ('django/contrib/admin/views/main.py', 496, 496, 0.06741998624632421), ('django/contrib/admin/views/main.py', 501, 502, 0.06741998624632421), ('django/contrib/admin/views/main.py', 504, 505, 0.06741998624632421), ('django/contrib/admin/views/main.py', 507, 507, 0.06741998624632421), ('django/contrib/admin/views/main.py', 510, 510, 0.06741998624632421), ('django/contrib/admin/views/main.py', 513, 514, 0.06741998624632421), ('django/contrib/admin/views/main.py', 522, 526, 0.06741998624632421), ('django/core/paginator.py', 34, 38, 0.06741998624632421), ('django/core/paginator.py', 95, 97, 0.06741998624632421), ('django/core/paginator.py', 120, 121, 0.06741998624632421), ('django/db/models/fields/__init__.py', 1076, 1076, 0.06741998624632421), ('django/db/models/fields/__init__.py', 1078, 1078, 0.06741998624632421), ('django/db/models/fields/__init__.py', 1080, 1081, 0.06741998624632421), ('django/db/models/query.py', 1258, 1259, 0.06741998624632421), ('django/forms/fields.py', 219, 221, 0.06741998624632421), ('django/forms/fields.py', 237, 238, 0.06741998624632421), ('django/forms/forms.py', 317, 317, 0.06741998624632421), ('django/forms/utils.py', 90, 90, 0.06741998624632421), ('django/http/request.py', 559, 559, 0.06741998624632421), ('django/utils/functional.py', 177, 178, 0.06741998624632421), ('django/utils/inspect.py', 14, 16, 0.06741998624632421), ('django/utils/inspect.py', 71, 72, 0.06741998624632421), ('django/utils/inspect.py', 75, 75, 0.06741998624632421), ('django/core/validators.py', 350, 351, 0.0668153104781061), ('django/db/models/fields/__init__.py', 941, 944, 0.0668153104781061), ('django/db/models/fields/__init__.py', 2495, 2495, 0.0668153104781061), ('django/forms/models.py', 192, 196, 0.0668153104781061), ('django/contrib/admin/options.py', 1698, 1701, 0.06622661785325219), ('django/db/models/fields/__init__.py', 527, 529, 0.06565321642986127), ('django/db/models/fields/__init__.py', 532, 532, 0.06565321642986127), ('django/forms/models.py', 257, 257, 0.06565321642986127), ('django/contrib/admin/options.py', 145, 145, 0.06509445549041194), ('django/contrib/admin/options.py', 181, 184, 0.06509445549041194), ('django/db/models/fields/__init__.py', 910, 913, 0.06509445549041194), ('django/forms/models.py', 182, 182, 0.06509445549041194), ('django/forms/models.py', 185, 185, 0.06509445549041194), ('django/forms/models.py', 187, 188, 0.06509445549041194), ('django/forms/models.py', 190, 190, 0.06509445549041194), ('django/utils/datastructures.py', 122, 126, 0.06509445549041194), ('django/utils/datastructures.py', 128, 128, 0.06509445549041194), ('django/utils/translation/__init__.py', 78, 78, 0.06509445549041194), ('django/utils/translation/trans_real.py', 111, 113, 0.06509445549041194), ('django/utils/translation/trans_real.py', 115, 115, 0.06509445549041194), ('django/utils/translation/trans_real.py', 250, 253, 0.06509445549041194), ('django/utils/translation/trans_real.py', 255, 255, 0.06509445549041194), ('django/utils/translation/trans_real.py', 407, 407, 0.06509445549041194), ('django/forms/models.py', 161, 163, 0.06454972243679027), ('django/forms/models.py', 166, 167, 0.06454972243679027), ('django/forms/models.py', 169, 169, 0.06454972243679027), ('django/forms/models.py', 171, 171, 0.06454972243679027), ('django/forms/models.py', 173, 173, 0.06454972243679027), ('django/forms/models.py', 175, 175, 0.06454972243679027), ('django/forms/models.py', 177, 177, 0.06454972243679027), ('django/forms/models.py', 180, 180, 0.06454972243679027), ('django/utils/numberformat.py', 25, 26, 0.06454972243679027), ('django/db/backends/sqlite3/operations.py', 61, 63, 0.06401843996644799), ('django/db/models/aggregates.py', 26, 26, 0.06401843996644799), ('django/db/models/aggregates.py', 28, 30, 0.06401843996644799), ('django/db/models/aggregates.py', 48, 50, 0.06401843996644799), ('django/db/models/aggregates.py', 59, 59, 0.06401843996644799), ('django/db/models/aggregates.py', 72, 73, 0.06401843996644799), ('django/db/models/aggregates.py', 89, 89, 0.06401843996644799), ('django/db/models/aggregates.py', 114, 116, 0.06401843996644799), ('django/db/models/aggregates.py', 118, 118, 0.06401843996644799), ('django/db/models/expressions.py', 24, 26, 0.06401843996644799), ('django/db/models/expressions.py', 30, 30, 0.06401843996644799), ('django/db/models/expressions.py', 172, 176, 0.06401843996644799), ('django/db/models/expressions.py', 185, 186, 0.06401843996644799), ('django/db/models/expressions.py', 188, 188, 0.06401843996644799), ('django/db/models/expressions.py', 322, 324, 0.06401843996644799), ('django/db/models/expressions.py', 326, 327, 0.06401843996644799), ('django/db/models/expressions.py', 662, 662, 0.06401843996644799), ('django/db/models/expressions.py', 671, 673, 0.06401843996644799), ('django/db/models/expressions.py', 694, 698, 0.06401843996644799), ('django/db/models/expressions.py', 701, 708, 0.06401843996644799), ('django/db/models/expressions.py', 712, 712, 0.06401843996644799), ('django/db/models/expressions.py', 715, 719, 0.06401843996644799), ('django/db/models/expressions.py', 722, 725, 0.06401843996644799), ('django/db/models/expressions.py', 836, 836, 0.06401843996644799), ('django/db/models/query.py', 409, 409, 0.06401843996644799), ('django/db/models/query.py', 412, 412, 0.06401843996644799), ('django/db/models/sql/compiler.py', 247, 250, 0.06401843996644799), ('django/db/models/sql/compiler.py', 455, 457, 0.06401843996644799), ('django/db/models/sql/query.py', 423, 423, 0.06401843996644799), ('django/db/models/sql/query.py', 425, 428, 0.06401843996644799), ('django/db/models/sql/query.py', 441, 442, 0.06401843996644799), ('django/db/models/sql/query.py', 488, 491, 0.06401843996644799), ('django/db/models/sql/query.py', 493, 495, 0.06401843996644799), ('django/db/models/sql/query.py', 497, 504, 0.06401843996644799), ('django/db/models/sql/query.py', 507, 508, 0.06401843996644799), ('django/db/models/sql/query.py', 510, 510, 0.06401843996644799), ('django/db/models/sql/query.py', 516, 519, 0.06401843996644799), ('django/db/models/sql/query.py', 521, 521, 0.06401843996644799), ('django/db/models/sql/query.py', 1029, 1032, 0.06401843996644799), ('django/db/models/sql/query.py', 1035, 1035, 0.06401843996644799), ('django/db/models/sql/query.py', 1849, 1849, 0.06401843996644799), ('django/db/models/sql/query.py', 2151, 2151, 0.06401843996644799), ('django/db/models/sql/query.py', 2222, 2224, 0.06401843996644799), ('django/db/models/sql/query.py', 2231, 2231, 0.06401843996644799), ('django/forms/models.py', 98, 99, 0.06401843996644799), ('django/forms/models.py', 313, 314, 0.06401843996644799), ('django/template/smartif.py', 94, 97, 0.06401843996644799), ('django/utils/formats.py', 174, 183, 0.06401843996644799), ('django/utils/formats.py', 199, 200, 0.06401843996644799), ('django/utils/formats.py', 202, 203, 0.06401843996644799), ('django/utils/numberformat.py', 21, 23, 0.06401843996644799), ('django/db/models/sql/compiler.py', 1207, 1211, 0.06350006350009525), ('django/forms/models.py', 146, 148, 0.0629940788348712), ('django/forms/models.py', 150, 153, 0.0629940788348712), ('django/forms/models.py', 198, 198, 0.0629940788348712), ('django/forms/models.py', 203, 211, 0.0629940788348712), ('django/forms/models.py', 222, 222, 0.0629940788348712), ('django/forms/models.py', 224, 224, 0.0629940788348712), ('django/forms/models.py', 226, 226, 0.0629940788348712), ('django/forms/models.py', 229, 229, 0.0629940788348712), ('django/forms/models.py', 234, 236, 0.0629940788348712), ('django/forms/models.py', 245, 245, 0.0629940788348712), ('django/forms/models.py', 247, 247, 0.0629940788348712), ('django/forms/models.py', 254, 254, 0.0629940788348712), ('django/forms/models.py', 259, 262, 0.0629940788348712), ('django/forms/models.py', 264, 264, 0.0629940788348712), ('django/forms/models.py', 268, 270, 0.0629940788348712), ('django/forms/models.py', 277, 277, 0.0629940788348712), ('django/forms/models.py', 281, 281, 0.0629940788348712), ('django/forms/models.py', 283, 283, 0.0629940788348712), ('django/forms/models.py', 291, 292, 0.0629940788348712), ('django/forms/models.py', 294, 294, 0.0629940788348712), ('django/forms/models.py', 302, 302, 0.0629940788348712), ('django/forms/models.py', 307, 311, 0.0629940788348712), ('django/forms/models.py', 520, 523, 0.0629940788348712), ('django/forms/models.py', 525, 525, 0.0629940788348712), ('django/forms/models.py', 527, 527, 0.0629940788348712), ('django/forms/models.py', 529, 529, 0.0629940788348712), ('django/forms/models.py', 531, 531, 0.0629940788348712), ('django/forms/models.py', 533, 533, 0.0629940788348712), ('django/forms/models.py', 535, 535, 0.0629940788348712), ('django/forms/models.py', 540, 543, 0.0629940788348712), ('django/forms/models.py', 545, 545, 0.0629940788348712), ('django/forms/models.py', 548, 550, 0.0629940788348712), ('django/forms/models.py', 553, 553, 0.0629940788348712), ('django/forms/models.py', 561, 561, 0.0629940788348712), ('django/forms/forms.py', 26, 28, 0.0625), ('django/forms/forms.py', 31, 31, 0.0625), ('django/forms/forms.py', 34, 35, 0.0625), ('django/forms/forms.py', 37, 38, 0.0625), ('django/forms/forms.py', 41, 42, 0.0625), ('django/forms/forms.py', 45, 46, 0.0625), ('django/forms/forms.py', 48, 48, 0.0625), ('django/forms/widgets.py', 161, 161, 0.0625), ('django/forms/widgets.py', 182, 183, 0.0625), ('django/forms/widgets.py', 191, 191, 0.0625), ('django/forms/widgets.py', 193, 194, 0.0625), ('django/forms/widgets.py', 196, 196, 0.0625), ('django/db/models/query.py', 1256, 1256, 0.062017367294604234), ('django/db/models/query.py', 1427, 1427, 0.062017367294604234), ('django/db/models/sql/query.py', 1822, 1822, 0.062017367294604234), ('django/db/models/options.py', 608, 610, 0.06154574548966636), ('django/template/defaulttags.py', 165, 171, 0.06154574548966636), ('django/template/library.py', 191, 193, 0.06154574548966636), ('django/template/library.py', 196, 198, 0.06154574548966636), ('django/utils/datastructures.py', 82, 87, 0.06154574548966636), ('django/db/models/fields/__init__.py', 842, 842, 0.06108472217815261), ('django/template/context.py', 93, 96, 0.06108472217815261), ('django/db/models/fields/__init__.py', 948, 948, 0.06063390625908324), ('django/db/models/sql/compiler.py', 279, 282, 0.06063390625908324), ('django/forms/widgets.py', 230, 230, 0.06063390625908324), ('django/forms/widgets.py', 568, 572, 0.06063390625908324), ('django/http/request.py', 475, 475, 0.06063390625908324), ('django/http/request.py', 502, 505, 0.06063390625908324), ('django/http/request.py', 508, 509, 0.06063390625908324), ('django/http/request.py', 512, 515, 0.06063390625908324), ('django/http/request.py', 614, 614, 0.06063390625908324), ('django/http/request.py', 617, 617, 0.06063390625908324), ('django/db/models/base.py', 387, 387, 0.0601929265428846), ('django/db/models/base.py', 389, 390, 0.0601929265428846), ('django/template/engine.py', 191, 198, 0.05976143046671968), ('django/http/request.py', 552, 553, 0.05892556509887897), ('django/http/request.py', 561, 561, 0.05892556509887897), ('django/http/request.py', 566, 566, 0.05892556509887897), ('django/db/models/sql/compiler.py', 48, 51, 0.058520573598065284), ('django/forms/boundfield.py', 89, 97, 0.058520573598065284), ('django/template/loader_tags.py', 52, 56, 0.05812381937190964), ('django/utils/datastructures.py', 235, 237, 0.05812381937190964), ('django/utils/safestring.py', 31, 33, 0.05812381937190964), ('django/contrib/admin/utils.py', 74, 74, 0.05773502691896257), ('django/contrib/admin/templatetags/base.py', 23, 25, 0.057353933467640436), ('django/contrib/admin/templatetags/base.py', 28, 31, 0.057353933467640436), ('django/contrib/admin/templatetags/base.py', 33, 33, 0.057353933467640436), ('django/db/models/sql/query.py', 1950, 1953, 0.057353933467640436), ('django/db/models/sql/query.py', 1959, 1959, 0.057353933467640436), ('django/db/models/sql/query.py', 1963, 1963, 0.057353933467640436), ('django/db/models/sql/query.py', 1966, 1966, 0.057353933467640436), ('django/db/models/sql/query.py', 1973, 1974, 0.057353933467640436), ('django/template/context.py', 110, 112, 0.057353933467640436), ('django/template/context.py', 255, 255, 0.057353933467640436), ('django/template/context.py', 258, 260, 0.057353933467640436), ('django/template/library.py', 177, 181, 0.057353933467640436), ('django/template/library.py', 213, 214, 0.057353933467640436), ('django/template/library.py', 216, 217, 0.057353933467640436), ('django/template/library.py', 227, 227, 0.057353933467640436), ('django/template/library.py', 231, 234, 0.057353933467640436), ('django/db/models/expressions.py', 246, 251, 0.05698028822981897), ('django/db/models/expressions.py', 1205, 1205, 0.05698028822981897), ('django/db/models/expressions.py', 1207, 1210, 0.05698028822981897), ('django/db/models/expressions.py', 1212, 1212, 0.05698028822981897), ('django/db/models/expressions.py', 1219, 1219, 0.05698028822981897), ('django/db/models/expressions.py', 1222, 1222, 0.05698028822981897), ('django/db/models/expressions.py', 1225, 1227, 0.05698028822981897), ('django/db/models/expressions.py', 1229, 1229, 0.05698028822981897), ('django/db/models/expressions.py', 1240, 1245, 0.05698028822981897), ('django/db/models/expressions.py', 1247, 1248, 0.05698028822981897), ('django/db/models/sql/compiler.py', 293, 294, 0.05698028822981897), ('django/db/models/sql/compiler.py', 305, 305, 0.05698028822981897), ('django/db/models/sql/compiler.py', 309, 310, 0.05698028822981897), ('django/db/models/sql/compiler.py', 312, 312, 0.05698028822981897), ('django/db/models/sql/compiler.py', 322, 322, 0.05698028822981897), ('django/db/models/sql/compiler.py', 337, 337, 0.05698028822981897), ('django/db/models/sql/compiler.py', 350, 350, 0.05698028822981897), ('django/db/models/sql/compiler.py', 362, 362, 0.05698028822981897), ('django/db/models/sql/compiler.py', 369, 370, 0.05698028822981897), ('django/db/models/sql/compiler.py', 385, 387, 0.05698028822981897), ('django/db/models/sql/compiler.py', 414, 414, 0.05698028822981897), ('django/db/models/sql/compiler.py', 419, 421, 0.05698028822981897), ('django/db/models/sql/compiler.py', 423, 425, 0.05698028822981897), ('django/db/models/sql/compiler.py', 640, 645, 0.05698028822981897), ('django/db/models/sql/compiler.py', 760, 763, 0.05698028822981897), ('django/db/models/sql/compiler.py', 768, 769, 0.05698028822981897), ('django/db/models/sql/compiler.py', 791, 792, 0.05698028822981897), ('django/db/models/sql/compiler.py', 802, 805, 0.05698028822981897), ('django/utils/encoding.py', 125, 125, 0.05698028822981897), ('django/utils/encoding.py', 127, 127, 0.05698028822981897), ('django/utils/encoding.py', 129, 129, 0.05698028822981897), ('django/utils/hashable.py', 10, 10, 0.05698028822981897), ('django/utils/hashable.py', 17, 21, 0.05698028822981897), ('django/forms/boundfield.py', 78, 78, 0.05661385170722978), ('django/utils/itercompat.py', 8, 8, 0.05661385170722978), ('django/db/backends/sqlite3/operations.py', 44, 46, 0.0562543950463012), ('django/db/models/options.py', 594, 595, 0.05590169943749474), ('django/db/models/options.py', 598, 598, 0.05590169943749474), ('django/db/models/options.py', 605, 605, 0.05590169943749474), ('django/template/loader.py', 37, 44, 0.05590169943749474), ('django/utils/itercompat.py', 3, 4, 0.05590169943749474), ('django/contrib/admin/sites.py', 473, 483, 0.05555555555555555), ('django/core/validators.py', 563, 563, 0.05555555555555555), ('django/core/validators.py', 565, 565, 0.05555555555555555), ('django/db/models/fields/__init__.py', 1826, 1826, 0.05555555555555555), ('django/forms/fields.py', 212, 217, 0.05555555555555555), ('django/forms/fields.py', 234, 235, 0.05555555555555555), ('django/forms/fields.py', 241, 241, 0.05555555555555555), ('django/contrib/admin/options.py', 647, 656, 0.05521576303742327), ('django/contrib/admin/options.py', 658, 658, 0.05521576303742327), ('django/contrib/admin/options.py', 1063, 1063, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 23, 24, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 26, 28, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 30, 30, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 46, 46, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 49, 49, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 53, 53, 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', 55, 56, 0.05521576303742327), ('django/db/models/sql/query.py', 1597, 1598, 0.05521576303742327), ('django/db/models/sql/query.py', 1600, 1600, 0.05521576303742327), ('django/forms/widgets.py', 80, 84, 0.05521576303742327), ('django/forms/widgets.py', 134, 138, 0.05521576303742327), ('django/urls/converters.py', 22, 22, 0.05521576303742327), ('django/urls/resolvers.py', 671, 676, 0.05521576303742327), ('django/db/models/fields/__init__.py', 846, 846, 0.05488212999484517), ('django/contrib/admin/options.py', 535, 535, 0.0545544725589981), ('django/contrib/admin/templatetags/admin_urls.py', 13, 13, 0.0545544725589981), ('django/forms/boundfield.py', 223, 227, 0.0545544725589981), ('django/forms/widgets.py', 104, 104, 0.0545544725589981), ('django/forms/widgets.py', 106, 106, 0.0545544725589981), ('django/forms/widgets.py', 124, 127, 0.0545544725589981), ('django/forms/widgets.py', 130, 132, 0.0545544725589981), ('django/template/smartif.py', 57, 59, 0.0545544725589981), ('django/template/smartif.py', 63, 63, 0.0545544725589981), ('django/templatetags/static.py', 172, 172, 0.0545544725589981), ('django/utils/datastructures.py', 14, 14, 0.0545544725589981), ('django/utils/topological_sort.py', 15, 17, 0.0545544725589981), ('django/utils/topological_sort.py', 19, 19, 0.0545544725589981), ('django/utils/topological_sort.py', 23, 23, 0.0545544725589981), ('django/utils/topological_sort.py', 26, 27, 0.0545544725589981), ('django/utils/topological_sort.py', 31, 36, 0.0545544725589981), ('django/db/models/options.py', 142, 142, 0.05423261445466404), ('django/db/models/query.py', 1242, 1244, 0.05423261445466404), ('django/forms/boundfield.py', 66, 69, 0.05423261445466404), ('django/urls/resolvers.py', 658, 661, 0.05423261445466404), ('django/urls/resolvers.py', 663, 663, 0.05423261445466404), ('django/utils/datastructures.py', 156, 156, 0.053916386601719206), ('django/utils/datastructures.py', 166, 169, 0.053916386601719206), ('django/utils/datastructures.py', 172, 172, 0.053916386601719206), ('django/utils/datastructures.py', 176, 176, 0.053916386601719206), ('django/template/loaders/cached.py', 48, 53, 0.05360562674188974), ('django/db/models/query.py', 280, 281, 0.053300179088902604), ('django/db/models/sql/compiler.py', 561, 566, 0.053300179088902604), ('django/db/models/sql/compiler.py', 1215, 1216, 0.053300179088902604), ('django/db/models/sql/compiler.py', 236, 245, 0.052999894000318), ('django/db/models/sql/query.py', 1987, 1990, 0.052999894000318), ('django/forms/forms.py', 464, 467, 0.052999894000318), ('django/forms/widgets.py', 163, 167, 0.052999894000318), ('django/template/defaultfilters.py', 75, 75, 0.052999894000318), ('django/forms/widgets.py', 148, 152, 0.052414241836095915), ('django/forms/widgets.py', 154, 155, 0.052414241836095915), ('django/forms/widgets.py', 157, 157, 0.052414241836095915), ('django/forms/widgets.py', 51, 56, 0.05212860351426869), ('django/template/backends/django.py', 33, 36, 0.05212860351426869), ('django/template/backends/django.py', 72, 74, 0.05212860351426869), ('django/template/backends/django.py', 76, 76, 0.05212860351426869), ('django/template/backends/django.py', 83, 84, 0.05212860351426869), ('django/contrib/admin/options.py', 366, 366, 0.05184758473652126), ('django/contrib/admin/options.py', 368, 369, 0.05184758473652126), ('django/contrib/admin/options.py', 371, 371, 0.05184758473652126), ('django/contrib/admin/options.py', 1061, 1061, 0.05184758473652126), ('django/contrib/admin/options.py', 347, 347, 0.05157106231293967), ('django/contrib/auth/models.py', 315, 316, 0.05157106231293967), ('django/template/defaulttags.py', 193, 194, 0.05157106231293967), ('django/template/defaulttags.py', 198, 198, 0.05157106231293967), ('django/template/defaulttags.py', 203, 205, 0.05157106231293967), ('django/template/defaulttags.py', 216, 217, 0.05157106231293967), ('django/forms/widgets.py', 170, 171, 0.051298917604257706), ('django/template/defaulttags.py', 288, 288, 0.051298917604257706), ('django/forms/boundfield.py', 32, 32, 0.051031036307982884), ('django/forms/boundfield.py', 34, 34, 0.051031036307982884), ('django/forms/boundfield.py', 86, 87, 0.051031036307982884), ('django/forms/boundfield.py', 229, 229, 0.051031036307982884), ('django/forms/renderers.py', 22, 23, 0.051031036307982884), ('django/forms/renderers.py', 28, 28, 0.051031036307982884), ('django/forms/widgets.py', 233, 240, 0.051031036307982884), ('django/forms/widgets.py', 246, 247, 0.051031036307982884), ('django/forms/widgets.py', 256, 256, 0.051031036307982884), ('django/forms/widgets.py', 281, 281, 0.051031036307982884), ('django/forms/widgets.py', 298, 300, 0.051031036307982884), ('django/template/context.py', 269, 270, 0.051031036307982884), ('django/template/defaultfilters.py', 247, 247, 0.051031036307982884), ('django/template/defaultfilters.py', 249, 250, 0.051031036307982884), ('django/template/engine.py', 142, 149, 0.051031036307982884), ('django/urls/resolvers.py', 697, 699, 0.051031036307982884), ('django/urls/resolvers.py', 702, 702, 0.051031036307982884), ('django/urls/resolvers.py', 704, 705, 0.051031036307982884), ('django/urls/resolvers.py', 717, 719, 0.051031036307982884), ('django/urls/resolvers.py', 721, 721, 0.051031036307982884), ('django/contrib/auth/base_user.py', 121, 121, 0.05076730825668096), ('django/contrib/auth/hashers.py', 28, 28, 0.05076730825668096), ('django/db/models/fields/__init__.py', 753, 753, 0.05076730825668096), ('django/forms/widgets.py', 47, 47, 0.050507627227610534), ('django/forms/widgets.py', 62, 62, 0.050507627227610534), ('django/forms/widgets.py', 66, 68, 0.050507627227610534), ('django/forms/widgets.py', 70, 70, 0.050507627227610534), ('django/forms/widgets.py', 74, 74, 0.050507627227610534), ('django/forms/widgets.py', 77, 77, 0.050507627227610534), ('django/forms/widgets.py', 90, 91, 0.050507627227610534), ('django/forms/widgets.py', 96, 96, 0.050507627227610534), ('django/middleware/csrf.py', 95, 97, 0.050251890762960605), ('django/middleware/csrf.py', 100, 101, 0.050251890762960605), ('django/middleware/csrf.py', 440, 442, 0.050251890762960605), ('django/template/context_processors.py', 22, 24, 0.050251890762960605), ('django/template/context_processors.py', 30, 30, 0.050251890762960605), ('django/template/defaulttags.py', 53, 55, 0.050251890762960605), ('django/template/defaulttags.py', 58, 58, 0.050251890762960605), ('django/contrib/admin/options.py', 623, 623, 0.05), ('django/contrib/auth/models.py', 382, 382, 0.05), ('django/http/response.py', 223, 227, 0.05), ('django/middleware/csrf.py', 230, 230, 0.05), ('django/middleware/csrf.py', 234, 242, 0.05), ('django/middleware/csrf.py', 245, 245, 0.05), ('django/middleware/csrf.py', 449, 451, 0.05), ('django/template/defaultfilters.py', 210, 210, 0.05), ('django/template/defaulttags.py', 122, 128, 0.05), ('django/template/defaulttags.py', 131, 131, 0.05), ('django/template/defaulttags.py', 157, 158, 0.05), ('django/template/defaulttags.py', 207, 207, 0.05), ('django/template/loader_tags.py', 194, 196, 0.05), ('django/utils/cache.py', 288, 289, 0.05), ('django/contrib/admin/sites.py', 485, 486, 0.04975185951049946), ('django/utils/functional.py', 151, 151, 0.04975185951049946), ('django/utils/functional.py', 153, 154, 0.04975185951049946), ('django/utils/functional.py', 169, 171, 0.04975185951049946), ('django/contrib/auth/base_user.py', 73, 73, 0.04950737714883372), ('django/templatetags/i18n.py', 123, 132, 0.04950737714883372), ('django/templatetags/i18n.py', 134, 134, 0.04950737714883372), ('django/templatetags/i18n.py', 137, 137, 0.04950737714883372), ('django/templatetags/i18n.py', 140, 140, 0.04950737714883372), ('django/templatetags/i18n.py', 143, 145, 0.04950737714883372), ('django/templatetags/i18n.py', 161, 161, 0.04950737714883372), ('django/templatetags/i18n.py', 164, 165, 0.04950737714883372), ('django/templatetags/i18n.py', 167, 169, 0.04950737714883372), ('django/templatetags/i18n.py', 172, 172, 0.04950737714883372), ('django/templatetags/i18n.py', 174, 177, 0.04950737714883372), ('django/templatetags/i18n.py', 187, 187, 0.04950737714883372), ('django/templatetags/i18n.py', 191, 191, 0.04950737714883372), ('django/contrib/admin/options.py', 666, 670, 0.04926646390821466), ('django/contrib/admin/sites.py', 457, 457, 0.04926646390821466), ('django/contrib/admin/sites.py', 461, 461, 0.04926646390821466), ('django/contrib/admin/sites.py', 464, 471, 0.04926646390821466), ('django/contrib/admin/sites.py', 488, 494, 0.04926646390821466), ('django/contrib/admin/sites.py', 496, 497, 0.04926646390821466), ('django/contrib/admin/sites.py', 515, 516, 0.04926646390821466), ('django/forms/fields.py', 121, 121, 0.04926646390821466), ('django/urls/resolvers.py', 681, 682, 0.04926646390821466), ('django/utils/text.py', 413, 413, 0.04902903378454601), ('django/contrib/auth/models.py', 296, 297, 0.048795003647426664), ('django/template/loader.py', 30, 30, 0.048795003647426664), ('django/template/response.py', 62, 63, 0.048795003647426664), ('django/forms/widgets.py', 216, 216, 0.04856429311786321), ('django/http/response.py', 219, 221, 0.04856429311786321), ('django/template/exceptions.py', 28, 35, 0.04856429311786321), ('django/utils/datastructures.py', 137, 141, 0.04856429311786321), ('django/template/context.py', 148, 148, 0.04833682445228318), ('django/template/context.py', 150, 152, 0.04833682445228318), ('django/template/context.py', 154, 154, 0.04833682445228318), ('django/template/context_processors.py', 39, 40, 0.04833682445228318), ('django/template/context_processors.py', 50, 50, 0.04833682445228318), ('django/contrib/admin/options.py', 481, 483, 0.04789131426105757), ('django/db/models/expressions.py', 163, 163, 0.04767312946227962), ('django/urls/base.py', 59, 60, 0.04767312946227962), ('django/contrib/admin/options.py', 511, 513, 0.04745789978762495), ('django/utils/translation/trans_real.py', 247, 247, 0.0472455591261534), ('django/utils/translation/trans_real.py', 303, 306, 0.0472455591261534), ('django/urls/resolvers.py', 595, 608, 0.047036043419179864), ('django/template/loader_tags.py', 38, 39, 0.0468292905790847), ('django/template/loader_tags.py', 71, 71, 0.0468292905790847), ('django/template/loader_tags.py', 76, 79, 0.0468292905790847), ('django/utils/datastructures.py', 26, 26, 0.0468292905790847), ('django/contrib/admin/options.py', 526, 530, 0.04662524041201569), ('django/db/models/base.py', 578, 579, 0.04662524041201569), ('django/template/defaulttags.py', 439, 441, 0.04662524041201569), ('django/template/response.py', 91, 91, 0.04662524041201569), ('django/template/response.py', 94, 94, 0.04662524041201569), ('django/template/response.py', 103, 110, 0.04662524041201569), ('django/utils/dateformat.py', 56, 58, 0.04662524041201569), ('django/utils/decorators.py', 137, 138, 0.04662524041201569), ('django/utils/decorators.py', 142, 145, 0.04662524041201569), ('django/utils/decorators.py', 149, 150, 0.04662524041201569), ('django/contrib/admin/options.py', 496, 498, 0.046423834544262965), ('django/contrib/auth/__init__.py', 203, 203, 0.046423834544262965), ('django/http/response.py', 203, 204, 0.046423834544262965), ('django/http/response.py', 229, 229, 0.046423834544262965), ('django/http/response.py', 231, 231, 0.046423834544262965), ('django/http/response.py', 233, 234, 0.046423834544262965), ('django/http/response.py', 236, 236, 0.046423834544262965), ('django/test/client.py', 738, 740, 0.046423834544262965), ('django/apps/registry.py', 241, 242, 0.046225016352102424), ('django/contrib/admin/options.py', 548, 548, 0.046225016352102424), ('django/contrib/admin/sites.py', 313, 322, 0.046225016352102424), ('django/contrib/admin/sites.py', 440, 440, 0.046225016352102424), ('django/contrib/admin/sites.py', 442, 442, 0.046225016352102424), ('django/contrib/admin/sites.py', 448, 448, 0.046225016352102424), ('django/contrib/admin/sites.py', 450, 451, 0.046225016352102424), ('django/contrib/admin/sites.py', 453, 454, 0.046225016352102424), ('django/contrib/admin/sites.py', 500, 500, 0.046225016352102424), ('django/contrib/admin/sites.py', 502, 502, 0.046225016352102424), ('django/contrib/admin/sites.py', 509, 509, 0.046225016352102424), ('django/contrib/admin/sites.py', 512, 512, 0.046225016352102424), ('django/contrib/admin/sites.py', 518, 518, 0.046225016352102424), ('django/contrib/auth/context_processors.py', 26, 26, 0.046225016352102424), ('django/contrib/auth/context_processors.py', 57, 58, 0.046225016352102424), ('django/contrib/auth/context_processors.py', 63, 65, 0.046225016352102424), ('django/contrib/messages/api.py', 42, 42, 0.046225016352102424), ('django/contrib/messages/context_processors.py', 10, 12, 0.046225016352102424), ('django/contrib/messages/storage/base.py', 60, 60, 0.046225016352102424), ('django/core/files/storage.py', 339, 339, 0.046225016352102424), ('django/core/files/storage.py', 341, 344, 0.046225016352102424), ('django/core/handlers/base.py', 192, 193, 0.046225016352102424), ('django/core/handlers/base.py', 203, 204, 0.046225016352102424), ('django/core/handlers/wsgi.py', 97, 98, 0.046225016352102424), ('django/core/handlers/wsgi.py', 101, 103, 0.046225016352102424), ('django/http/request.py', 314, 314, 0.046225016352102424), ('django/http/request.py', 342, 343, 0.046225016352102424), ('django/template/base.py', 821, 826, 0.046225016352102424), ('django/template/base.py', 829, 830, 0.046225016352102424), ('django/template/base.py', 950, 957, 0.046225016352102424), ('django/template/base.py', 972, 975, 0.046225016352102424), ('django/template/base.py', 1004, 1009, 0.046225016352102424), ('django/template/context.py', 49, 51, 0.046225016352102424), ('django/template/context.py', 54, 55, 0.046225016352102424), ('django/template/context.py', 99, 103, 0.046225016352102424), ('django/template/context.py', 191, 191, 0.046225016352102424), ('django/template/context.py', 194, 194, 0.046225016352102424), ('django/template/context.py', 197, 197, 0.046225016352102424), ('django/template/context.py', 221, 224, 0.046225016352102424), ('django/template/context.py', 227, 227, 0.046225016352102424), ('django/template/context.py', 231, 231, 0.046225016352102424), ('django/template/context.py', 235, 235, 0.046225016352102424), ('django/template/context.py', 238, 238, 0.046225016352102424), ('django/template/context.py', 240, 245, 0.046225016352102424), ('django/template/context.py', 247, 248, 0.046225016352102424), ('django/template/context.py', 250, 250, 0.046225016352102424), ('django/template/context.py', 252, 252, 0.046225016352102424), ('django/template/context.py', 274, 278, 0.046225016352102424), ('django/template/context_processors.py', 32, 32, 0.046225016352102424), ('django/template/context_processors.py', 82, 82, 0.046225016352102424), ('django/template/defaultfilters.py', 714, 714, 0.046225016352102424), ('django/template/defaultfilters.py', 716, 717, 0.046225016352102424), ('django/template/defaultfilters.py', 770, 770, 0.046225016352102424), ('django/template/defaultfilters.py', 803, 803, 0.046225016352102424), ('django/template/defaultfilters.py', 806, 807, 0.046225016352102424), ('django/template/defaultfilters.py', 809, 810, 0.046225016352102424), ('django/template/defaultfilters.py', 814, 814, 0.046225016352102424), ('django/template/defaultfilters.py', 816, 816, 0.046225016352102424), ('django/template/defaultfilters.py', 818, 818, 0.046225016352102424), ('django/template/defaulttags.py', 272, 273, 0.046225016352102424), ('django/template/defaulttags.py', 277, 277, 0.046225016352102424), ('django/template/defaulttags.py', 346, 346, 0.046225016352102424), ('django/template/defaulttags.py', 355, 356, 0.046225016352102424), ('django/template/defaulttags.py', 358, 358, 0.046225016352102424), ('django/template/defaulttags.py', 362, 362, 0.046225016352102424), ('django/template/defaulttags.py', 419, 424, 0.046225016352102424), ('django/template/defaulttags.py', 432, 434, 0.046225016352102424), ('django/template/defaulttags.py', 443, 445, 0.046225016352102424), ('django/template/loader_tags.py', 19, 19, 0.046225016352102424), ('django/template/loader_tags.py', 25, 26, 0.046225016352102424), ('django/template/loader_tags.py', 29, 30, 0.046225016352102424), ('django/template/loader_tags.py', 35, 35, 0.046225016352102424), ('django/template/loader_tags.py', 46, 46, 0.046225016352102424), ('django/template/loader_tags.py', 58, 59, 0.046225016352102424), ('django/template/loader_tags.py', 62, 68, 0.046225016352102424), ('django/template/loader_tags.py', 103, 104, 0.046225016352102424), ('django/template/loader_tags.py', 106, 107, 0.046225016352102424), ('django/template/loader_tags.py', 109, 110, 0.046225016352102424), ('django/template/loader_tags.py', 113, 114, 0.046225016352102424), ('django/template/loader_tags.py', 121, 121, 0.046225016352102424), ('django/template/loader_tags.py', 124, 124, 0.046225016352102424), ('django/template/loader_tags.py', 127, 127, 0.046225016352102424), ('django/template/loader_tags.py', 130, 130, 0.046225016352102424), ('django/template/loader_tags.py', 132, 134, 0.046225016352102424), ('django/template/loader_tags.py', 137, 137, 0.046225016352102424), ('django/template/loader_tags.py', 141, 141, 0.046225016352102424), ('django/template/loader_tags.py', 143, 148, 0.046225016352102424), ('django/template/loader_tags.py', 152, 153, 0.046225016352102424), ('django/template/loaders/cached.py', 85, 87, 0.046225016352102424), ('django/template/response.py', 18, 19, 0.046225016352102424), ('django/template/response.py', 21, 21, 0.046225016352102424), ('django/template/response.py', 23, 23, 0.046225016352102424), ('django/template/response.py', 31, 31, 0.046225016352102424), ('django/template/response.py', 36, 36, 0.046225016352102424), ('django/template/response.py', 43, 43, 0.046225016352102424), ('django/template/response.py', 70, 70, 0.046225016352102424), ('django/template/response.py', 81, 83, 0.046225016352102424), ('django/template/response.py', 125, 125, 0.046225016352102424), ('django/template/response.py', 129, 129, 0.046225016352102424), ('django/template/response.py', 134, 135, 0.046225016352102424), ('django/template/response.py', 143, 144, 0.046225016352102424), ('django/template/smartif.py', 82, 83, 0.046225016352102424), ('django/templatetags/i18n.py', 57, 58, 0.046225016352102424), ('django/templatetags/i18n.py', 66, 67, 0.046225016352102424), ('django/templatetags/i18n.py', 82, 83, 0.046225016352102424), ('django/templatetags/i18n.py', 86, 87, 0.046225016352102424), ('django/templatetags/i18n.py', 90, 93, 0.046225016352102424), ('django/templatetags/i18n.py', 97, 97, 0.046225016352102424), ('django/templatetags/static.py', 107, 108, 0.046225016352102424), ('django/templatetags/static.py', 111, 115, 0.046225016352102424), ('django/templatetags/static.py', 121, 123, 0.046225016352102424), ('django/utils/dateformat.py', 33, 36, 0.046225016352102424), ('django/utils/dateformat.py', 41, 42, 0.046225016352102424), ('django/utils/dateformat.py', 44, 44, 0.046225016352102424), ('django/utils/dateformat.py', 50, 51, 0.046225016352102424), ('django/utils/dateformat.py', 64, 66, 0.046225016352102424), ('django/utils/dateformat.py', 182, 182, 0.046225016352102424), ('django/utils/dateformat.py', 185, 185, 0.046225016352102424), ('django/utils/dateformat.py', 191, 191, 0.046225016352102424), ('django/utils/dateformat.py', 320, 321, 0.046225016352102424), ('django/utils/encoding.py', 234, 234, 0.046225016352102424), ('django/utils/encoding.py', 238, 238, 0.046225016352102424), ('django/utils/formats.py', 113, 117, 0.046225016352102424), ('django/utils/formats.py', 122, 123, 0.046225016352102424), ('django/utils/formats.py', 128, 130, 0.046225016352102424), ('django/utils/formats.py', 154, 154, 0.046225016352102424), ('django/utils/formats.py', 195, 197, 0.046225016352102424), ('django/utils/formats.py', 205, 205, 0.046225016352102424), ('django/utils/formats.py', 207, 207, 0.046225016352102424), ('django/utils/formats.py', 209, 209, 0.046225016352102424), ('django/utils/text.py', 18, 20, 0.046225016352102424), ('django/utils/timezone.py', 226, 226, 0.046225016352102424), ('django/utils/timezone.py', 257, 257, 0.046225016352102424), ('django/utils/timezone.py', 261, 263, 0.046225016352102424), ('django/utils/timezone.py', 267, 267, 0.046225016352102424), ('django/utils/translation/__init__.py', 186, 186, 0.046225016352102424), ('django/utils/translation/trans_real.py', 320, 321, 0.046225016352102424), ('django/utils/translation/trans_real.py', 324, 325, 0.046225016352102424), ('django/middleware/csrf.py', 53, 53, 0.04602873089491617), ('django/middleware/csrf.py', 61, 65, 0.04602873089491617), ('django/utils/crypto.py', 61, 61, 0.04602873089491617), ('django/http/response.py', 147, 148, 0.045834924851410566), ('django/template/context.py', 32, 35, 0.045834924851410566), ('django/contrib/admin/sites.py', 236, 238, 0.045454545454545456), ('django/utils/datastructures.py', 188, 188, 0.045454545454545456), ('django/utils/formats.py', 110, 111, 0.045454545454545456), ('django/template/defaulttags.py', 173, 174, 0.045267873021259265), ('django/template/defaulttags.py', 177, 178, 0.045267873021259265), ('django/template/defaulttags.py', 180, 181, 0.045267873021259265), ('django/template/defaulttags.py', 183, 184, 0.045267873021259265), ('django/template/defaulttags.py', 186, 187, 0.045267873021259265), ('django/template/defaulttags.py', 189, 190, 0.045267873021259265), ('django/template/defaulttags.py', 209, 210, 0.045267873021259265), ('django/template/defaulttags.py', 212, 212, 0.045267873021259265), ('django/urls/base.py', 41, 43, 0.045083481733371615), ('django/template/context.py', 64, 64, 0.04490132550669373), ('django/template/context.py', 163, 163, 0.04490132550669373), ('django/template/context.py', 165, 165, 0.04490132550669373), ('django/template/context.py', 167, 167, 0.04490132550669373), ('django/utils/datastructures.py', 11, 11, 0.04490132550669373), ('django/template/defaulttags.py', 293, 293, 0.044721359549995794), ('django/template/loaders/cached.py', 55, 55, 0.044721359549995794), ('django/utils/decorators.py', 40, 43, 0.044721359549995794), ('django/template/base.py', 181, 181, 0.0445435403187374), ('django/template/defaulttags.py', 160, 163, 0.0445435403187374), ('django/template/engine.py', 189, 189, 0.0445435403187374), ('django/template/loader_tags.py', 174, 174, 0.0445435403187374), ('django/template/loader_tags.py', 176, 176, 0.0445435403187374), ('django/template/loader_tags.py', 178, 182, 0.0445435403187374), ('django/template/loader_tags.py', 186, 190, 0.0445435403187374), ('django/template/loader_tags.py', 198, 198, 0.0445435403187374), ('django/template/loader_tags.py', 200, 201, 0.0445435403187374), ('django/template/loader_tags.py', 238, 240, 0.0445435403187374), ('django/utils/cache.py', 49, 52, 0.0445435403187374), ('django/utils/cache.py', 56, 58, 0.0445435403187374), ('django/utils/cache.py', 60, 60, 0.0445435403187374), ('django/utils/cache.py', 62, 66, 0.0445435403187374), ('django/utils/cache.py', 70, 70, 0.0445435403187374), ('django/utils/cache.py', 75, 75, 0.0445435403187374), ('django/utils/cache.py', 79, 79, 0.0445435403187374), ('django/utils/cache.py', 81, 81, 0.0445435403187374), ('django/utils/cache.py', 84, 86, 0.0445435403187374), ('django/utils/cache.py', 88, 88, 0.0445435403187374), ('django/utils/cache.py', 90, 90, 0.0445435403187374), ('django/utils/cache.py', 92, 95, 0.0445435403187374), ('django/utils/cache.py', 97, 98, 0.0445435403187374), ('django/utils/cache.py', 100, 102, 0.0445435403187374), ('django/utils/cache.py', 261, 261, 0.0445435403187374), ('django/utils/cache.py', 263, 267, 0.0445435403187374), ('django/utils/cache.py', 274, 275, 0.0445435403187374), ('django/utils/functional.py', 142, 142, 0.0445435403187374), ('django/views/decorators/cache.py', 56, 59, 0.0445435403187374), ('django/contrib/auth/__init__.py', 186, 190, 0.04436782547080569), ('django/contrib/auth/__init__.py', 192, 192, 0.04436782547080569), ('django/contrib/messages/storage/base.py', 81, 84, 0.04436782547080569), ('django/contrib/messages/storage/cookie.py', 85, 88, 0.04436782547080569), ('django/contrib/messages/storage/cookie.py', 91, 91, 0.04436782547080569), ('django/contrib/messages/storage/cookie.py', 160, 161, 0.04436782547080569), ('django/contrib/messages/storage/fallback.py', 23, 25, 0.04436782547080569), ('django/contrib/messages/storage/fallback.py', 27, 28, 0.04436782547080569), ('django/contrib/messages/storage/fallback.py', 36, 36, 0.04436782547080569), ('django/template/base.py', 859, 859, 0.04436782547080569), ('django/template/base.py', 873, 874, 0.04436782547080569), ('django/template/base.py', 876, 876, 0.04436782547080569), ('django/template/base.py', 879, 880, 0.04436782547080569), ('django/template/context.py', 90, 90, 0.04436782547080569), ('django/utils/functional.py', 137, 138, 0.04436782547080569), ('django/utils/text.py', 16, 16, 0.04436782547080569), ('django/views/decorators/cache.py', 49, 51, 0.04436782547080569), ('django/contrib/admin/sites.py', 224, 225, 0.044194173824159216), ('django/contrib/admin/sites.py', 241, 243, 0.044194173824159216), ('django/contrib/auth/__init__.py', 174, 178, 0.044194173824159216), ('django/contrib/auth/__init__.py', 182, 184, 0.044194173824159216), ('django/contrib/auth/backends.py', 56, 57, 0.044194173824159216), ('django/contrib/auth/backends.py', 156, 157, 0.044194173824159216), ('django/contrib/auth/backends.py', 160, 160, 0.044194173824159216), ('django/core/signing.py', 205, 209, 0.044194173824159216), ('django/db/backends/sqlite3/operations.py', 290, 292, 0.044194173824159216), ('django/db/backends/sqlite3/operations.py', 336, 336, 0.044194173824159216), ('django/db/models/base.py', 382, 382, 0.044194173824159216), ('django/db/models/fields/__init__.py', 960, 960, 0.044194173824159216), ('django/db/models/fields/__init__.py', 1829, 1829, 0.044194173824159216), ('django/db/models/fields/__init__.py', 1831, 1832, 0.044194173824159216), ('django/template/backends/django.py', 51, 52, 0.044194173824159216), ('django/template/backends/django.py', 59, 61, 0.044194173824159216), ('django/template/base.py', 704, 709, 0.044194173824159216), ('django/template/base.py', 714, 714, 0.044194173824159216), ('django/template/base.py', 721, 722, 0.044194173824159216), ('django/template/base.py', 854, 855, 0.044194173824159216), ('django/template/base.py', 857, 857, 0.044194173824159216), ('django/template/context.py', 21, 21, 0.044194173824159216), ('django/template/context.py', 24, 24, 0.044194173824159216), ('django/template/context.py', 38, 40, 0.044194173824159216), ('django/template/context.py', 157, 159, 0.044194173824159216), ('django/template/context.py', 267, 267, 0.044194173824159216), ('django/template/engine.py', 163, 164, 0.044194173824159216), ('django/template/engine.py', 167, 167, 0.044194173824159216), ('django/template/loader_tags.py', 242, 243, 0.044194173824159216), ('django/template/loader_tags.py', 246, 246, 0.044194173824159216), ('django/test/client.py', 219, 222, 0.044194173824159216), ('django/utils/http.py', 92, 92, 0.044194173824159216), ('django/template/base.py', 688, 690, 0.04402254531628119), ('django/template/base.py', 816, 816, 0.04402254531628119), ('django/template/base.py', 818, 818, 0.04402254531628119), ('django/template/base.py', 847, 851, 0.04402254531628119), ('django/template/base.py', 903, 903, 0.04402254531628119), ('django/template/base.py', 926, 927, 0.04402254531628119), ('django/template/base.py', 1022, 1023, 0.04402254531628119), ('django/template/base.py', 1029, 1029, 0.04402254531628119), ('django/template/context.py', 80, 82, 0.04402254531628119), ('django/template/defaulttags.py', 280, 280, 0.04402254531628119), ('django/template/defaulttags.py', 282, 284, 0.04402254531628119), ('django/template/defaulttags.py', 290, 291, 0.04402254531628119), ('django/template/defaulttags.py', 821, 821, 0.04402254531628119), ('django/template/loader.py', 66, 66, 0.04402254531628119), ('django/template/utils.py', 65, 66, 0.04402254531628119), ('django/template/utils.py', 87, 87, 0.04402254531628119), ('django/template/utils.py', 90, 90, 0.04402254531628119), ('django/utils/timezone.py', 149, 150, 0.04402254531628119), ('django/utils/timezone.py', 155, 155, 0.04402254531628119), ('django/contrib/auth/base_user.py', 127, 131, 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 62, 62, 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 65, 65, 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 97, 98, 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 165, 166, 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 185, 186, 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 23, 24, 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 28, 28, 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 31, 34, 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 43, 44, 0.0436852028330519), ('django/core/signing.py', 75, 75, 0.0436852028330519), ('django/core/signing.py', 77, 78, 0.0436852028330519), ('django/core/signing.py', 81, 84, 0.0436852028330519), ('django/core/signing.py', 88, 88, 0.0436852028330519), ('django/core/signing.py', 92, 93, 0.0436852028330519), ('django/core/signing.py', 97, 97, 0.0436852028330519), ('django/core/signing.py', 115, 115, 0.0436852028330519), ('django/core/signing.py', 144, 144, 0.0436852028330519), ('django/core/signing.py', 160, 160, 0.0436852028330519), ('django/core/signing.py', 166, 166, 0.0436852028330519), ('django/core/signing.py', 168, 170, 0.0436852028330519), ('django/core/signing.py', 201, 203, 0.0436852028330519), ('django/core/signing.py', 226, 229, 0.0436852028330519), ('django/core/signing.py', 237, 237, 0.0436852028330519), ('django/db/backends/base/base.py', 154, 154, 0.0436852028330519), ('django/db/backends/base/base.py', 217, 217, 0.0436852028330519), ('django/db/backends/base/base.py', 227, 228, 0.0436852028330519), ('django/db/backends/base/base.py', 231, 232, 0.0436852028330519), ('django/db/backends/base/base.py', 235, 237, 0.0436852028330519), ('django/db/backends/base/base.py', 259, 259, 0.0436852028330519), ('django/db/backends/base/base.py', 446, 446, 0.0436852028330519), ('django/db/backends/base/base.py', 531, 532, 0.0436852028330519), ('django/db/backends/base/base.py', 551, 551, 0.0436852028330519), ('django/db/backends/base/base.py', 590, 590, 0.0436852028330519), ('django/db/backends/base/operations.py', 194, 194, 0.0436852028330519), ('django/db/backends/base/operations.py', 215, 217, 0.0436852028330519), ('django/db/backends/base/operations.py', 224, 228, 0.0436852028330519), ('django/db/backends/base/operations.py', 267, 267, 0.0436852028330519), ('django/db/backends/base/operations.py', 332, 332, 0.0436852028330519), ('django/db/backends/base/operations.py', 334, 334, 0.0436852028330519), ('django/db/backends/base/operations.py', 584, 584, 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 41, 41, 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 267, 267, 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 413, 413, 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 415, 416, 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 423, 423, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 181, 181, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 183, 183, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 247, 247, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 251, 251, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 255, 255, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 261, 261, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 278, 282, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 284, 284, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 286, 286, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 288, 288, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 295, 296, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 298, 298, 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 300, 300, 0.0436852028330519), ('django/db/backends/utils.py', 16, 17, 0.0436852028330519), ('django/db/backends/utils.py', 22, 24, 0.0436852028330519), ('django/db/backends/utils.py', 26, 26, 0.0436852028330519), ('django/db/backends/utils.py', 66, 66, 0.0436852028330519), ('django/db/backends/utils.py', 72, 73, 0.0436852028330519), ('django/db/backends/utils.py', 75, 75, 0.0436852028330519), ('django/db/backends/utils.py', 78, 80, 0.0436852028330519), ('django/db/backends/utils.py', 84, 84, 0.0436852028330519), ('django/db/models/base.py', 408, 412, 0.0436852028330519), ('django/db/models/base.py', 415, 415, 0.0436852028330519), ('django/db/models/base.py', 418, 418, 0.0436852028330519), ('django/db/models/base.py', 424, 424, 0.0436852028330519), ('django/db/models/base.py', 428, 429, 0.0436852028330519), ('django/db/models/base.py', 434, 435, 0.0436852028330519), ('django/db/models/base.py', 437, 437, 0.0436852028330519), ('django/db/models/base.py', 454, 454, 0.0436852028330519), ('django/db/models/base.py', 494, 494, 0.0436852028330519), ('django/db/models/base.py', 508, 509, 0.0436852028330519), ('django/db/models/base.py', 513, 513, 0.0436852028330519), ('django/db/models/base.py', 519, 522, 0.0436852028330519), ('django/db/models/expressions.py', 167, 169, 0.0436852028330519), ('django/db/models/expressions.py', 179, 179, 0.0436852028330519), ('django/db/models/expressions.py', 182, 182, 0.0436852028330519), ('django/db/models/expressions.py', 221, 221, 0.0436852028330519), ('django/db/models/expressions.py', 253, 253, 0.0436852028330519), ('django/db/models/expressions.py', 333, 333, 0.0436852028330519), ('django/db/models/expressions.py', 347, 347, 0.0436852028330519), ('django/db/models/expressions.py', 388, 389, 0.0436852028330519), ('django/db/models/expressions.py', 856, 859, 0.0436852028330519), ('django/db/models/expressions.py', 870, 871, 0.0436852028330519), ('django/db/models/fields/__init__.py', 395, 397, 0.0436852028330519), ('django/db/models/fields/__init__.py', 399, 399, 0.0436852028330519), ('django/db/models/fields/__init__.py', 414, 414, 0.0436852028330519), ('django/db/models/fields/__init__.py', 517, 520, 0.0436852028330519), ('django/db/models/fields/__init__.py', 675, 675, 0.0436852028330519), ('django/db/models/fields/__init__.py', 709, 711, 0.0436852028330519), ('django/db/models/fields/__init__.py', 747, 747, 0.0436852028330519), ('django/db/models/fields/__init__.py', 749, 749, 0.0436852028330519), ('django/db/models/fields/__init__.py', 822, 822, 0.0436852028330519), ('django/db/models/fields/__init__.py', 824, 824, 0.0436852028330519), ('django/db/models/fields/__init__.py', 832, 832, 0.0436852028330519), ('django/db/models/fields/__init__.py', 834, 834, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1061, 1061, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1064, 1065, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1069, 1070, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1261, 1262, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1340, 1340, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1343, 1343, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1345, 1346, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1402, 1404, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1418, 1418, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1422, 1422, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1424, 1424, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1815, 1816, 0.0436852028330519), ('django/db/models/fields/__init__.py', 1818, 1819, 0.0436852028330519), ('django/db/models/fields/__init__.py', 2146, 2146, 0.0436852028330519), ('django/db/models/fields/__init__.py', 2481, 2481, 0.0436852028330519), ('django/db/models/fields/__init__.py', 2484, 2484, 0.0436852028330519), ('django/db/models/fields/__init__.py', 2529, 2529, 0.0436852028330519), ('django/db/models/lookups.py', 21, 24, 0.0436852028330519), ('django/db/models/lookups.py', 27, 28, 0.0436852028330519), ('django/db/models/lookups.py', 36, 36, 0.0436852028330519), ('django/db/models/lookups.py', 64, 65, 0.0436852028330519), ('django/db/models/lookups.py', 75, 75, 0.0436852028330519), ('django/db/models/lookups.py', 77, 79, 0.0436852028330519), ('django/db/models/lookups.py', 85, 86, 0.0436852028330519), ('django/db/models/lookups.py', 93, 97, 0.0436852028330519), ('django/db/models/lookups.py', 100, 100, 0.0436852028330519), ('django/db/models/lookups.py', 103, 104, 0.0436852028330519), ('django/db/models/lookups.py', 111, 111, 0.0436852028330519), ('django/db/models/lookups.py', 120, 120, 0.0436852028330519), ('django/db/models/lookups.py', 123, 123, 0.0436852028330519), ('django/db/models/lookups.py', 200, 206, 0.0436852028330519), ('django/db/models/lookups.py', 209, 213, 0.0436852028330519), ('django/db/models/lookups.py', 216, 216, 0.0436852028330519), ('django/db/models/lookups.py', 229, 235, 0.0436852028330519), ('django/db/models/lookups.py', 306, 307, 0.0436852028330519), ('django/db/models/lookups.py', 317, 317, 0.0436852028330519), ('django/db/models/lookups.py', 323, 324, 0.0436852028330519), ('django/db/models/lookups.py', 331, 331, 0.0436852028330519), ('django/db/models/manager.py', 85, 85, 0.0436852028330519), ('django/db/models/manager.py', 147, 147, 0.0436852028330519), ('django/db/models/query.py', 37, 39, 0.0436852028330519), ('django/db/models/query.py', 46, 48, 0.0436852028330519), ('django/db/models/query.py', 51, 60, 0.0436852028330519), ('django/db/models/query.py', 66, 66, 0.0436852028330519), ('django/db/models/query.py', 68, 70, 0.0436852028330519), ('django/db/models/query.py', 72, 72, 0.0436852028330519), ('django/db/models/query.py', 77, 77, 0.0436852028330519), ('django/db/models/query.py', 89, 89, 0.0436852028330519), ('django/db/models/query.py', 179, 192, 0.0436852028330519), ('django/db/models/query.py', 196, 196, 0.0436852028330519), ('django/db/models/query.py', 200, 200, 0.0436852028330519), ('django/db/models/query.py', 262, 263, 0.0436852028330519), ('django/db/models/query.py', 419, 419, 0.0436852028330519), ('django/db/models/query.py', 424, 433, 0.0436852028330519), ('django/db/models/query.py', 963, 964, 0.0436852028330519), ('django/db/models/query.py', 975, 975, 0.0436852028330519), ('django/db/models/query.py', 977, 978, 0.0436852028330519), ('django/db/models/query.py', 982, 983, 0.0436852028330519), ('django/db/models/query.py', 986, 986, 0.0436852028330519), ('django/db/models/query.py', 989, 989, 0.0436852028330519), ('django/db/models/query.py', 1166, 1166, 0.0436852028330519), ('django/db/models/query.py', 1168, 1171, 0.0436852028330519), ('django/db/models/query.py', 1273, 1273, 0.0436852028330519), ('django/db/models/query.py', 1275, 1275, 0.0436852028330519), ('django/db/models/query.py', 1322, 1323, 0.0436852028330519), ('django/db/models/query.py', 1326, 1327, 0.0436852028330519), ('django/db/models/query.py', 1334, 1341, 0.0436852028330519), ('django/db/models/query.py', 1344, 1346, 0.0436852028330519), ('django/db/models/query.py', 1418, 1418, 0.0436852028330519), ('django/db/models/query.py', 2030, 2032, 0.0436852028330519), ('django/db/models/query.py', 2035, 2035, 0.0436852028330519), ('django/db/models/query_utils.py', 41, 41, 0.0436852028330519), ('django/db/models/query_utils.py', 138, 138, 0.0436852028330519), ('django/db/models/query_utils.py', 147, 149, 0.0436852028330519), ('django/db/models/query_utils.py', 151, 151, 0.0436852028330519), ('django/db/models/query_utils.py', 153, 153, 0.0436852028330519), ('django/db/models/sql/compiler.py', 31, 33, 0.0436852028330519), ('django/db/models/sql/compiler.py', 36, 37, 0.0436852028330519), ('django/db/models/sql/compiler.py', 42, 45, 0.0436852028330519), ('django/db/models/sql/compiler.py', 59, 65, 0.0436852028330519), ('django/db/models/sql/compiler.py', 104, 105, 0.0436852028330519), ('django/db/models/sql/compiler.py', 222, 226, 0.0436852028330519), ('django/db/models/sql/compiler.py', 230, 232, 0.0436852028330519), ('django/db/models/sql/compiler.py', 252, 252, 0.0436852028330519), ('django/db/models/sql/compiler.py', 264, 267, 0.0436852028330519), ('django/db/models/sql/compiler.py', 272, 274, 0.0436852028330519), ('django/db/models/sql/compiler.py', 277, 277, 0.0436852028330519), ('django/db/models/sql/compiler.py', 288, 289, 0.0436852028330519), ('django/db/models/sql/compiler.py', 382, 383, 0.0436852028330519), ('django/db/models/sql/compiler.py', 428, 429, 0.0436852028330519), ('django/db/models/sql/compiler.py', 435, 435, 0.0436852028330519), ('django/db/models/sql/compiler.py', 443, 447, 0.0436852028330519), ('django/db/models/sql/compiler.py', 450, 452, 0.0436852028330519), ('django/db/models/sql/compiler.py', 459, 460, 0.0436852028330519), ('django/db/models/sql/compiler.py', 525, 528, 0.0436852028330519), ('django/db/models/sql/compiler.py', 530, 533, 0.0436852028330519), ('django/db/models/sql/compiler.py', 538, 538, 0.0436852028330519), ('django/db/models/sql/compiler.py', 541, 543, 0.0436852028330519), ('django/db/models/sql/compiler.py', 549, 551, 0.0436852028330519), ('django/db/models/sql/compiler.py', 553, 553, 0.0436852028330519), ('django/db/models/sql/compiler.py', 572, 573, 0.0436852028330519), ('django/db/models/sql/compiler.py', 575, 576, 0.0436852028330519), ('django/db/models/sql/compiler.py', 578, 578, 0.0436852028330519), ('django/db/models/sql/compiler.py', 612, 612, 0.0436852028330519), ('django/db/models/sql/compiler.py', 615, 617, 0.0436852028330519), ('django/db/models/sql/compiler.py', 619, 620, 0.0436852028330519), ('django/db/models/sql/compiler.py', 623, 623, 0.0436852028330519), ('django/db/models/sql/compiler.py', 630, 630, 0.0436852028330519), ('django/db/models/sql/compiler.py', 634, 634, 0.0436852028330519), ('django/db/models/sql/compiler.py', 647, 648, 0.0436852028330519), ('django/db/models/sql/compiler.py', 650, 650, 0.0436852028330519), ('django/db/models/sql/compiler.py', 653, 653, 0.0436852028330519), ('django/db/models/sql/compiler.py', 680, 680, 0.0436852028330519), ('django/db/models/sql/compiler.py', 683, 683, 0.0436852028330519), ('django/db/models/sql/compiler.py', 697, 701, 0.0436852028330519), ('django/db/models/sql/compiler.py', 705, 705, 0.0436852028330519), ('django/db/models/sql/compiler.py', 707, 708, 0.0436852028330519), ('django/db/models/sql/compiler.py', 711, 713, 0.0436852028330519), ('django/db/models/sql/compiler.py', 721, 721, 0.0436852028330519), ('django/db/models/sql/compiler.py', 723, 727, 0.0436852028330519), ('django/db/models/sql/compiler.py', 736, 738, 0.0436852028330519), ('django/db/models/sql/compiler.py', 740, 740, 0.0436852028330519), ('django/db/models/sql/compiler.py', 751, 751, 0.0436852028330519), ('django/db/models/sql/compiler.py', 818, 821, 0.0436852028330519), ('django/db/models/sql/compiler.py', 823, 824, 0.0436852028330519), ('django/db/models/sql/compiler.py', 829, 832, 0.0436852028330519), ('django/db/models/sql/compiler.py', 839, 839, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1124, 1126, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1129, 1136, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1139, 1147, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1152, 1152, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1154, 1159, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1161, 1161, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1183, 1186, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1193, 1193, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1196, 1198, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1204, 1204, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1220, 1223, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1225, 1226, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1231, 1231, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1234, 1234, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1678, 1680, 0.0436852028330519), ('django/db/models/sql/compiler.py', 1682, 1682, 0.0436852028330519), ('django/db/models/sql/datastructures.py', 162, 163, 0.0436852028330519), ('django/db/models/sql/datastructures.py', 166, 168, 0.0436852028330519), ('django/db/models/sql/query.py', 148, 149, 0.0436852028330519), ('django/db/models/sql/query.py', 155, 155, 0.0436852028330519), ('django/db/models/sql/query.py', 157, 157, 0.0436852028330519), ('django/db/models/sql/query.py', 162, 169, 0.0436852028330519), ('django/db/models/sql/query.py', 177, 179, 0.0436852028330519), ('django/db/models/sql/query.py', 186, 195, 0.0436852028330519), ('django/db/models/sql/query.py', 197, 197, 0.0436852028330519), ('django/db/models/sql/query.py', 199, 199, 0.0436852028330519), ('django/db/models/sql/query.py', 203, 203, 0.0436852028330519), ('django/db/models/sql/query.py', 206, 208, 0.0436852028330519), ('django/db/models/sql/query.py', 211, 213, 0.0436852028330519), ('django/db/models/sql/query.py', 217, 219, 0.0436852028330519), ('django/db/models/sql/query.py', 221, 222, 0.0436852028330519), ('django/db/models/sql/query.py', 227, 227, 0.0436852028330519), ('django/db/models/sql/query.py', 229, 229, 0.0436852028330519), ('django/db/models/sql/query.py', 231, 233, 0.0436852028330519), ('django/db/models/sql/query.py', 249, 250, 0.0436852028330519), ('django/db/models/sql/query.py', 277, 277, 0.0436852028330519), ('django/db/models/sql/query.py', 279, 281, 0.0436852028330519), ('django/db/models/sql/query.py', 289, 289, 0.0436852028330519), ('django/db/models/sql/query.py', 296, 297, 0.0436852028330519), ('django/db/models/sql/query.py', 299, 299, 0.0436852028330519), ('django/db/models/sql/query.py', 301, 308, 0.0436852028330519), ('django/db/models/sql/query.py', 311, 311, 0.0436852028330519), ('django/db/models/sql/query.py', 317, 320, 0.0436852028330519), ('django/db/models/sql/query.py', 323, 324, 0.0436852028330519), ('django/db/models/sql/query.py', 327, 327, 0.0436852028330519), ('django/db/models/sql/query.py', 331, 331, 0.0436852028330519), ('django/db/models/sql/query.py', 333, 334, 0.0436852028330519), ('django/db/models/sql/query.py', 336, 340, 0.0436852028330519), ('django/db/models/sql/query.py', 347, 348, 0.0436852028330519), ('django/db/models/sql/query.py', 350, 353, 0.0436852028330519), ('django/db/models/sql/query.py', 355, 355, 0.0436852028330519), ('django/db/models/sql/query.py', 363, 363, 0.0436852028330519), ('django/db/models/sql/query.py', 365, 365, 0.0436852028330519), ('django/db/models/sql/query.py', 680, 682, 0.0436852028330519), ('django/db/models/sql/query.py', 760, 761, 0.0436852028330519), ('django/db/models/sql/query.py', 767, 767, 0.0436852028330519), ('django/db/models/sql/query.py', 772, 775, 0.0436852028330519), ('django/db/models/sql/query.py', 779, 779, 0.0436852028330519), ('django/db/models/sql/query.py', 783, 783, 0.0436852028330519), ('django/db/models/sql/query.py', 796, 797, 0.0436852028330519), ('django/db/models/sql/query.py', 829, 832, 0.0436852028330519), ('django/db/models/sql/query.py', 843, 845, 0.0436852028330519), ('django/db/models/sql/query.py', 940, 942, 0.0436852028330519), ('django/db/models/sql/query.py', 944, 945, 0.0436852028330519), ('django/db/models/sql/query.py', 968, 969, 0.0436852028330519), ('django/db/models/sql/query.py', 972, 972, 0.0436852028330519), ('django/db/models/sql/query.py', 983, 984, 0.0436852028330519), ('django/db/models/sql/query.py', 990, 992, 0.0436852028330519), ('django/db/models/sql/query.py', 1003, 1004, 0.0436852028330519), ('django/db/models/sql/query.py', 1077, 1077, 0.0436852028330519), ('django/db/models/sql/query.py', 1081, 1081, 0.0436852028330519), ('django/db/models/sql/query.py', 1098, 1099, 0.0436852028330519), ('django/db/models/sql/query.py', 1103, 1105, 0.0436852028330519), ('django/db/models/sql/query.py', 1110, 1110, 0.0436852028330519), ('django/db/models/sql/query.py', 1125, 1125, 0.0436852028330519), ('django/db/models/sql/query.py', 1145, 1146, 0.0436852028330519), ('django/db/models/sql/query.py', 1153, 1153, 0.0436852028330519), ('django/db/models/sql/query.py', 1167, 1168, 0.0436852028330519), ('django/db/models/sql/query.py', 1172, 1173, 0.0436852028330519), ('django/db/models/sql/query.py', 1184, 1184, 0.0436852028330519), ('django/db/models/sql/query.py', 1187, 1187, 0.0436852028330519), ('django/db/models/sql/query.py', 1196, 1196, 0.0436852028330519), ('django/db/models/sql/query.py', 1200, 1200, 0.0436852028330519), ('django/db/models/sql/query.py', 1250, 1250, 0.0436852028330519), ('django/db/models/sql/query.py', 1252, 1252, 0.0436852028330519), ('django/db/models/sql/query.py', 1262, 1262, 0.0436852028330519), ('django/db/models/sql/query.py', 1271, 1272, 0.0436852028330519), ('django/db/models/sql/query.py', 1274, 1274, 0.0436852028330519), ('django/db/models/sql/query.py', 1276, 1277, 0.0436852028330519), ('django/db/models/sql/query.py', 1279, 1279, 0.0436852028330519), ('django/db/models/sql/query.py', 1282, 1284, 0.0436852028330519), ('django/db/models/sql/query.py', 1286, 1287, 0.0436852028330519), ('django/db/models/sql/query.py', 1289, 1290, 0.0436852028330519), ('django/db/models/sql/query.py', 1295, 1297, 0.0436852028330519), ('django/db/models/sql/query.py', 1299, 1301, 0.0436852028330519), ('django/db/models/sql/query.py', 1305, 1305, 0.0436852028330519), ('django/db/models/sql/query.py', 1307, 1307, 0.0436852028330519), ('django/db/models/sql/query.py', 1311, 1311, 0.0436852028330519), ('django/db/models/sql/query.py', 1317, 1320, 0.0436852028330519), ('django/db/models/sql/query.py', 1322, 1322, 0.0436852028330519), ('django/db/models/sql/query.py', 1332, 1332, 0.0436852028330519), ('django/db/models/sql/query.py', 1334, 1336, 0.0436852028330519), ('django/db/models/sql/query.py', 1338, 1339, 0.0436852028330519), ('django/db/models/sql/query.py', 1363, 1363, 0.0436852028330519), ('django/db/models/sql/query.py', 1379, 1383, 0.0436852028330519), ('django/db/models/sql/query.py', 1392, 1402, 0.0436852028330519), ('django/db/models/sql/query.py', 1404, 1408, 0.0436852028330519), ('django/db/models/sql/query.py', 1475, 1479, 0.0436852028330519), ('django/db/models/sql/query.py', 1481, 1484, 0.0436852028330519), ('django/db/models/sql/query.py', 1498, 1498, 0.0436852028330519), ('django/db/models/sql/query.py', 1502, 1502, 0.0436852028330519), ('django/db/models/sql/query.py', 1509, 1510, 0.0436852028330519), ('django/db/models/sql/query.py', 1531, 1531, 0.0436852028330519), ('django/db/models/sql/query.py', 1537, 1537, 0.0436852028330519), ('django/db/models/sql/query.py', 1554, 1556, 0.0436852028330519), ('django/db/models/sql/query.py', 1560, 1561, 0.0436852028330519), ('django/db/models/sql/query.py', 1591, 1591, 0.0436852028330519), ('django/db/models/sql/query.py', 1604, 1608, 0.0436852028330519), ('django/db/models/sql/query.py', 1620, 1622, 0.0436852028330519), ('django/db/models/sql/query.py', 1637, 1637, 0.0436852028330519), ('django/db/models/sql/query.py', 1658, 1658, 0.0436852028330519), ('django/db/models/sql/query.py', 1673, 1674, 0.0436852028330519), ('django/db/models/sql/query.py', 1686, 1686, 0.0436852028330519), ('django/db/models/sql/query.py', 1833, 1834, 0.0436852028330519), ('django/db/models/sql/query.py', 1837, 1838, 0.0436852028330519), ('django/db/models/sql/query.py', 1844, 1844, 0.0436852028330519), ('django/db/models/sql/query.py', 1853, 1853, 0.0436852028330519), ('django/db/models/sql/query.py', 1864, 1864, 0.0436852028330519), ('django/db/models/sql/query.py', 1971, 1971, 0.0436852028330519), ('django/db/models/sql/query.py', 1976, 1976, 0.0436852028330519), ('django/db/models/sql/query.py', 1985, 1985, 0.0436852028330519), ('django/db/models/sql/query.py', 2220, 2220, 0.0436852028330519), ('django/db/models/sql/query.py', 2235, 2235, 0.0436852028330519), ('django/db/models/sql/query.py', 2237, 2238, 0.0436852028330519), ('django/db/models/sql/query.py', 2381, 2383, 0.0436852028330519), ('django/db/models/sql/query.py', 2389, 2390, 0.0436852028330519), ('django/db/models/sql/query.py', 2393, 2393, 0.0436852028330519), ('django/db/models/sql/query.py', 2400, 2400, 0.0436852028330519), ('django/db/models/sql/query.py', 2409, 2410, 0.0436852028330519), ('django/db/models/sql/query.py', 2413, 2413, 0.0436852028330519), ('django/db/models/sql/query.py', 2424, 2424, 0.0436852028330519), ('django/db/models/sql/query.py', 2436, 2436, 0.0436852028330519), ('django/db/models/sql/query.py', 2438, 2438, 0.0436852028330519), ('django/db/models/sql/query.py', 2454, 2456, 0.0436852028330519), ('django/db/models/sql/where.py', 38, 39, 0.0436852028330519), ('django/db/models/sql/where.py', 72, 75, 0.0436852028330519), ('django/db/models/sql/where.py', 79, 81, 0.0436852028330519), ('django/db/models/sql/where.py', 85, 87, 0.0436852028330519), ('django/db/models/sql/where.py', 95, 95, 0.0436852028330519), ('django/db/models/sql/where.py', 100, 100, 0.0436852028330519), ('django/db/models/sql/where.py', 105, 108, 0.0436852028330519), ('django/db/models/sql/where.py', 113, 115, 0.0436852028330519), ('django/db/models/sql/where.py', 148, 151, 0.0436852028330519), ('django/db/models/sql/where.py', 154, 155, 0.0436852028330519), ('django/db/models/sql/where.py', 167, 169, 0.0436852028330519), ('django/db/models/sql/where.py', 173, 173, 0.0436852028330519), ('django/db/utils.py', 67, 67, 0.0436852028330519), ('django/db/utils.py', 70, 71, 0.0436852028330519), ('django/db/utils.py', 95, 98, 0.0436852028330519), ('django/db/utils.py', 238, 239, 0.0436852028330519), ('django/db/utils.py', 249, 250, 0.0436852028330519), ('django/db/utils.py', 252, 252, 0.0436852028330519), ('django/http/cookie.py', 11, 14, 0.0436852028330519), ('django/http/cookie.py', 22, 23, 0.0436852028330519), ('django/http/request.py', 422, 428, 0.0436852028330519), ('django/http/request.py', 430, 430, 0.0436852028330519), ('django/http/request.py', 437, 438, 0.0436852028330519), ('django/http/request.py', 449, 449, 0.0436852028330519), ('django/http/request.py', 466, 466, 0.0436852028330519), ('django/http/request.py', 468, 468, 0.0436852028330519), ('django/http/request.py', 472, 472, 0.0436852028330519), ('django/http/response.py', 273, 274, 0.0436852028330519), ('django/test/client.py', 335, 338, 0.0436852028330519), ('django/utils/asyncio.py', 16, 16, 0.0436852028330519), ('django/utils/asyncio.py', 18, 21, 0.0436852028330519), ('django/utils/asyncio.py', 25, 25, 0.0436852028330519), ('django/utils/crypto.py', 25, 26, 0.0436852028330519), ('django/utils/crypto.py', 28, 31, 0.0436852028330519), ('django/utils/crypto.py', 39, 39, 0.0436852028330519), ('django/utils/crypto.py', 44, 44, 0.0436852028330519), ('django/utils/crypto.py', 66, 66, 0.0436852028330519), ('django/utils/datastructures.py', 268, 270, 0.0436852028330519), ('django/utils/datastructures.py', 278, 279, 0.0436852028330519), ('django/utils/datastructures.py', 281, 282, 0.0436852028330519), ('django/utils/datastructures.py', 284, 284, 0.0436852028330519), ('django/utils/dateparse.py', 115, 116, 0.0436852028330519), ('django/utils/deconstruct.py', 16, 18, 0.0436852028330519), ('django/utils/decorators.py', 117, 117, 0.0436852028330519), ('django/utils/decorators.py', 119, 123, 0.0436852028330519), ('django/utils/timezone.py', 197, 197, 0.0436852028330519), ('django/utils/timezone.py', 213, 213, 0.0436852028330519), ('django/utils/tree.py', 23, 25, 0.0436852028330519), ('django/utils/tree.py', 39, 41, 0.0436852028330519), ('django/utils/tree.py', 62, 62, 0.0436852028330519), ('django/utils/tree.py', 69, 70, 0.0436852028330519), ('django/utils/tree.py', 93, 93, 0.0436852028330519), ('django/utils/tree.py', 95, 95, 0.0436852028330519), ('django/utils/tree.py', 98, 98, 0.0436852028330519), ('django/utils/tree.py', 100, 101, 0.0436852028330519), ('django/utils/tree.py', 108, 109, 0.0436852028330519), ('django/utils/tree.py', 113, 114, 0.0436852028330519), ('django/core/handlers/base.py', 188, 188, 0.043355498476206), ('django/core/handlers/base.py', 210, 210, 0.043355498476206), ('django/core/handlers/base.py', 298, 299, 0.043355498476206), ('django/urls/base.py', 56, 56, 0.043355498476206), ('django/utils/functional.py', 94, 96, 0.04319342127906801), ('django/utils/functional.py', 98, 98, 0.04319342127906801), ('django/utils/functional.py', 197, 197, 0.04319342127906801), ('django/http/response.py', 107, 111, 0.04303314829119352), ('django/urls/base.py', 67, 68, 0.04303314829119352), ('django/contrib/sessions/middleware.py', 45, 47, 0.042874646285627205), ('django/middleware/csrf.py', 385, 386, 0.042874646285627205), ('django/urls/base.py', 45, 45, 0.042874646285627205), ('django/contrib/admin/sites.py', 199, 199, 0.04271788288583805), ('django/apps/config.py', 265, 267, 0.04256282653793743), ('django/apps/registry.py', 201, 201, 0.04256282653793743), ('django/apps/registry.py', 203, 204, 0.04256282653793743), ('django/contrib/auth/__init__.py', 60, 60, 0.04256282653793743), ('django/contrib/auth/__init__.py', 159, 160, 0.04256282653793743), ('django/contrib/auth/__init__.py', 196, 196, 0.04256282653793743), ('django/contrib/auth/middleware.py', 10, 12, 0.04256282653793743), ('django/contrib/sessions/backends/base.py', 50, 50, 0.04256282653793743), ('django/utils/cache.py', 291, 291, 0.04256282653793743), ('django/utils/cache.py', 293, 297, 0.04256282653793743), ('django/utils/cache.py', 300, 300, 0.04256282653793743), ('django/utils/functional.py', 384, 384, 0.04256282653793743), ('django/core/handlers/base.py', 170, 172, 0.042409446483998546), ('django/core/handlers/base.py', 175, 176, 0.042409446483998546), ('django/core/handlers/base.py', 178, 178, 0.042409446483998546), ('django/core/handlers/base.py', 180, 181, 0.042409446483998546), ('django/core/handlers/base.py', 290, 292, 0.042409446483998546), ('django/core/handlers/base.py', 323, 325, 0.042409446483998546), ('django/core/handlers/base.py', 331, 331, 0.042409446483998546), ('django/template/base.py', 175, 179, 0.042409446483998546), ('django/template/base.py', 966, 967, 0.042409446483998546), ('django/template/base.py', 995, 995, 0.042409446483998546), ('django/template/context.py', 15, 15, 0.042409446483998546), ('django/template/context.py', 17, 18, 0.042409446483998546), ('django/template/context.py', 29, 29, 0.042409446483998546), ('django/template/context.py', 58, 58, 0.042409446483998546), ('django/template/context.py', 60, 60, 0.042409446483998546), ('django/template/context.py', 136, 140, 0.042409446483998546), ('django/template/context.py', 143, 144, 0.042409446483998546), ('django/template/context.py', 201, 206, 0.042409446483998546), ('django/template/context.py', 208, 210, 0.042409446483998546), ('django/test/utils.py', 100, 101, 0.042409446483998546), ('django/urls/resolvers.py', 59, 59, 0.042409446483998546), ('django/template/loaders/cached.py', 83, 83, 0.042257712736425826), ('django/template/loaders/cached.py', 90, 90, 0.042257712736425826), ('django/contrib/auth/__init__.py', 21, 21, 0.04210759605332595), ('django/contrib/sessions/backends/base.py', 178, 182, 0.04210759605332595), ('django/db/models/manager.py', 178, 178, 0.04210759605332595), ('django/db/models/manager.py', 181, 181, 0.04210759605332595), ('django/db/models/manager.py', 186, 186, 0.04210759605332595), ('django/db/models/manager.py', 194, 194, 0.04210759605332595), ('django/db/models/options.py', 374, 374, 0.04210759605332595), ('django/db/models/options.py', 388, 388, 0.04210759605332595), ('django/db/models/options.py', 591, 591, 0.04210759605332595), ('django/urls/base.py', 47, 51, 0.04210759605332595), ('django/urls/base.py', 53, 54, 0.04210759605332595), ('django/urls/base.py', 70, 74, 0.04210759605332595), ('django/urls/base.py', 83, 84, 0.04210759605332595), ('django/urls/resolvers.py', 543, 544, 0.04210759605332595), ('django/urls/resolvers.py', 546, 546, 0.04210759605332595), ('django/urls/resolvers.py', 550, 551, 0.04210759605332595), ('django/urls/resolvers.py', 553, 553, 0.04210759605332595), ('django/urls/resolvers.py', 665, 665, 0.04210759605332595), ('django/urls/resolvers.py', 667, 667, 0.04210759605332595), ('django/urls/resolvers.py', 669, 669, 0.04210759605332595), ('django/utils/decorators.py', 125, 127, 0.04210759605332595), ('django/utils/decorators.py', 129, 130, 0.04210759605332595), ('django/apps/registry.py', 129, 129, 0.041959067914834454), ('django/apps/registry.py', 154, 156, 0.041959067914834454), ('django/apps/registry.py', 206, 206, 0.041959067914834454), ('django/apps/registry.py', 208, 208, 0.041959067914834454), ('django/apps/registry.py', 211, 211, 0.041959067914834454), ('django/dispatch/dispatcher.py', 167, 168, 0.041959067914834454), ('django/urls/base.py', 28, 32, 0.041959067914834454), ('django/urls/base.py', 34, 34, 0.041959067914834454), ('django/urls/base.py', 36, 36, 0.041959067914834454), ('django/urls/base.py', 39, 39, 0.041959067914834454), ('django/urls/base.py', 86, 86, 0.041959067914834454), ('django/urls/base.py', 113, 113, 0.041959067914834454), ('django/urls/resolvers.py', 536, 537, 0.041959067914834454), ('django/urls/resolvers.py', 539, 539, 0.041959067914834454), ('django/urls/resolvers.py', 565, 567, 0.041959067914834454), ('django/urls/resolvers.py', 569, 569, 0.041959067914834454), ('django/urls/resolvers.py', 650, 650, 0.041959067914834454), ('django/urls/resolvers.py', 653, 653, 0.041959067914834454), ('django/urls/resolvers.py', 656, 656, 0.041959067914834454), ('django/urls/resolvers.py', 689, 690, 0.041959067914834454), ('django/urls/resolvers.py', 692, 692, 0.041959067914834454), ('django/urls/resolvers.py', 694, 694, 0.041959067914834454), ('django/utils/datastructures.py', 144, 146, 0.041959067914834454), ('django/utils/datastructures.py', 153, 153, 0.041959067914834454), ('django/utils/http.py', 352, 352, 0.041959067914834454), ('django/utils/http.py', 354, 354, 0.041959067914834454), ('django/utils/translation/__init__.py', 182, 182, 0.041959067914834454), ('django/db/__init__.py', 27, 28, 0.04181210050035454), ('django/test/client.py', 471, 473, 0.04181210050035454), ('django/urls/resolvers.py', 34, 39, 0.04181210050035454), ('django/urls/resolvers.py', 43, 46, 0.04181210050035454), ('django/urls/resolvers.py', 48, 48, 0.04181210050035454), ('django/urls/resolvers.py', 53, 53, 0.04181210050035454), ('django/urls/resolvers.py', 55, 56, 0.04181210050035454), ('django/urls/resolvers.py', 298, 298, 0.04181210050035454), ('django/urls/resolvers.py', 382, 384, 0.04181210050035454), ('django/urls/resolvers.py', 386, 387, 0.04181210050035454), ('django/urls/resolvers.py', 590, 590, 0.04181210050035454), ('django/urls/resolvers.py', 592, 592, 0.04181210050035454), ('django/contrib/auth/middleware.py', 17, 17, 0.041666666666666664), ('django/contrib/auth/middleware.py', 25, 25, 0.041666666666666664), ('django/contrib/messages/middleware.py', 12, 12, 0.041666666666666664), ('django/contrib/messages/middleware.py', 22, 24, 0.041666666666666664), ('django/contrib/messages/middleware.py', 26, 26, 0.041666666666666664), ('django/contrib/messages/storage/__init__.py', 12, 12, 0.041666666666666664), ('django/contrib/messages/storage/base.py', 53, 57, 0.041666666666666664), ('django/contrib/messages/storage/base.py', 116, 116, 0.041666666666666664), ('django/contrib/messages/storage/base.py', 126, 127, 0.041666666666666664), ('django/contrib/messages/storage/base.py', 129, 129, 0.041666666666666664), ('django/contrib/messages/storage/cookie.py', 75, 76, 0.041666666666666664), ('django/contrib/messages/storage/fallback.py', 14, 17, 0.041666666666666664), ('django/contrib/messages/storage/session.py', 17, 17, 0.041666666666666664), ('django/contrib/messages/storage/session.py', 23, 23, 0.041666666666666664), ('django/core/handlers/base.py', 166, 167, 0.041666666666666664), ('django/core/handlers/base.py', 283, 283, 0.041666666666666664), ('django/core/handlers/base.py', 288, 288, 0.041666666666666664), ('django/core/signing.py', 101, 103, 0.041666666666666664), ('django/core/signing.py', 149, 151, 0.041666666666666664), ('django/core/signing.py', 156, 157, 0.041666666666666664), ('django/middleware/common.py', 56, 56, 0.041666666666666664), ('django/middleware/common.py', 75, 75, 0.041666666666666664), ('django/middleware/csrf.py', 191, 192, 0.041666666666666664), ('django/middleware/csrf.py', 205, 205, 0.041666666666666664), ('django/middleware/csrf.py', 215, 218, 0.041666666666666664), ('django/middleware/csrf.py', 374, 375, 0.041666666666666664), ('django/middleware/csrf.py', 380, 380, 0.041666666666666664), ('django/middleware/csrf.py', 390, 390, 0.041666666666666664), ('django/middleware/csrf.py', 394, 394, 0.041666666666666664), ('django/middleware/csrf.py', 444, 444, 0.041666666666666664), ('django/core/handlers/wsgi.py', 175, 175, 0.041522739926869986), ('django/core/handlers/wsgi.py', 177, 177, 0.041522739926869986), ('django/core/handlers/wsgi.py', 185, 185, 0.041522739926869986), ('django/core/handlers/wsgi.py', 187, 187, 0.041522739926869986), ('django/conf/__init__.py', 130, 130, 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 41, 44, 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 134, 135, 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 156, 156, 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 159, 159, 0.0413802944301184), ('django/contrib/sessions/backends/db.py', 17, 17, 0.0413802944301184), ('django/contrib/sessions/middleware.py', 14, 16, 0.0413802944301184), ('django/contrib/sessions/middleware.py', 19, 20, 0.0413802944301184), ('django/contrib/sessions/middleware.py', 28, 31, 0.0413802944301184), ('django/contrib/sessions/middleware.py', 36, 36, 0.0413802944301184), ('django/contrib/sessions/middleware.py', 75, 75, 0.0413802944301184), ('django/core/cache/__init__.py', 47, 48, 0.0413802944301184), ('django/core/cache/__init__.py', 50, 50, 0.0413802944301184), ('django/core/cache/__init__.py', 62, 63, 0.0413802944301184), ('django/core/cache/backends/base.py', 277, 277, 0.0413802944301184), ('django/core/handlers/base.py', 32, 34, 0.0413802944301184), ('django/core/handlers/base.py', 36, 43, 0.0413802944301184), ('django/core/handlers/base.py', 48, 49, 0.0413802944301184), ('django/core/handlers/base.py', 52, 52, 0.0413802944301184), ('django/core/handlers/base.py', 54, 56, 0.0413802944301184), ('django/core/handlers/base.py', 58, 58, 0.0413802944301184), ('django/core/handlers/base.py', 67, 67, 0.0413802944301184), ('django/core/handlers/base.py', 69, 69, 0.0413802944301184), ('django/core/handlers/base.py', 74, 77, 0.0413802944301184), ('django/core/handlers/base.py', 79, 79, 0.0413802944301184), ('django/core/handlers/base.py', 83, 83, 0.0413802944301184), ('django/core/handlers/base.py', 90, 91, 0.0413802944301184), ('django/core/handlers/base.py', 94, 94, 0.0413802944301184), ('django/core/handlers/base.py', 97, 97, 0.0413802944301184), ('django/core/handlers/base.py', 111, 113, 0.0413802944301184), ('django/core/handlers/base.py', 115, 115, 0.0413802944301184), ('django/core/handlers/base.py', 120, 120, 0.0413802944301184), ('django/core/handlers/base.py', 124, 124, 0.0413802944301184), ('django/core/handlers/base.py', 129, 132, 0.0413802944301184), ('django/core/handlers/base.py', 138, 138, 0.0413802944301184), ('django/core/handlers/base.py', 347, 347, 0.0413802944301184), ('django/core/handlers/exception.py', 34, 34, 0.0413802944301184), ('django/core/handlers/exception.py', 44, 47, 0.0413802944301184), ('django/core/handlers/exception.py', 50, 51, 0.0413802944301184), ('django/core/handlers/wsgi.py', 18, 21, 0.0413802944301184), ('django/core/handlers/wsgi.py', 66, 66, 0.0413802944301184), ('django/core/handlers/wsgi.py', 69, 71, 0.0413802944301184), ('django/core/handlers/wsgi.py', 75, 80, 0.0413802944301184), ('django/core/handlers/wsgi.py', 82, 84, 0.0413802944301184), ('django/core/handlers/wsgi.py', 87, 89, 0.0413802944301184), ('django/core/handlers/wsgi.py', 92, 92, 0.0413802944301184), ('django/core/handlers/wsgi.py', 110, 111, 0.0413802944301184), ('django/core/handlers/wsgi.py', 154, 154, 0.0413802944301184), ('django/core/handlers/wsgi.py', 156, 156, 0.0413802944301184), ('django/core/handlers/wsgi.py', 167, 167, 0.0413802944301184), ('django/core/handlers/wsgi.py', 196, 196, 0.0413802944301184), ('django/core/handlers/wsgi.py', 200, 200, 0.0413802944301184), ('django/core/handlers/wsgi.py', 209, 210, 0.0413802944301184), ('django/dispatch/dispatcher.py', 11, 11, 0.0413802944301184), ('django/dispatch/dispatcher.py', 13, 13, 0.0413802944301184), ('django/dispatch/dispatcher.py', 79, 79, 0.0413802944301184), ('django/dispatch/dispatcher.py', 82, 82, 0.0413802944301184), ('django/dispatch/dispatcher.py', 89, 90, 0.0413802944301184), ('django/dispatch/dispatcher.py', 92, 92, 0.0413802944301184), ('django/dispatch/dispatcher.py', 94, 96, 0.0413802944301184), ('django/dispatch/dispatcher.py', 98, 102, 0.0413802944301184), ('django/dispatch/dispatcher.py', 104, 108, 0.0413802944301184), ('django/dispatch/dispatcher.py', 129, 130, 0.0413802944301184), ('django/dispatch/dispatcher.py', 132, 132, 0.0413802944301184), ('django/dispatch/dispatcher.py', 134, 144, 0.0413802944301184), ('django/dispatch/dispatcher.py', 170, 172, 0.0413802944301184), ('django/dispatch/dispatcher.py', 217, 217, 0.0413802944301184), ('django/dispatch/dispatcher.py', 231, 232, 0.0413802944301184), ('django/dispatch/dispatcher.py', 238, 246, 0.0413802944301184), ('django/dispatch/dispatcher.py', 252, 254, 0.0413802944301184), ('django/dispatch/dispatcher.py', 256, 258, 0.0413802944301184), ('django/dispatch/dispatcher.py', 261, 261, 0.0413802944301184), ('django/http/cookie.py', 19, 20, 0.0413802944301184), ('django/http/request.py', 89, 90, 0.0413802944301184), ('django/http/request.py', 104, 104, 0.0413802944301184), ('django/http/request.py', 107, 107, 0.0413802944301184), ('django/http/request.py', 111, 113, 0.0413802944301184), ('django/http/request.py', 115, 115, 0.0413802944301184), ('django/http/request.py', 119, 119, 0.0413802944301184), ('django/http/request.py', 122, 123, 0.0413802944301184), ('django/http/request.py', 126, 128, 0.0413802944301184), ('django/http/request.py', 139, 139, 0.0413802944301184), ('django/http/request.py', 142, 143, 0.0413802944301184), ('django/http/request.py', 146, 146, 0.0413802944301184), ('django/http/request.py', 154, 157, 0.0413802944301184), ('django/http/request.py', 232, 232, 0.0413802944301184), ('django/http/request.py', 242, 242, 0.0413802944301184), ('django/http/request.py', 245, 245, 0.0413802944301184), ('django/http/request.py', 627, 627, 0.0413802944301184), ('django/http/request.py', 629, 629, 0.0413802944301184), ('django/http/request.py', 632, 632, 0.0413802944301184), ('django/http/request.py', 635, 636, 0.0413802944301184), ('django/http/request.py', 638, 639, 0.0413802944301184), ('django/http/request.py', 657, 657, 0.0413802944301184), ('django/http/response.py', 35, 35, 0.0413802944301184), ('django/http/response.py', 37, 38, 0.0413802944301184), ('django/http/response.py', 47, 47, 0.0413802944301184), ('django/http/response.py', 49, 51, 0.0413802944301184), ('django/http/response.py', 54, 55, 0.0413802944301184), ('django/http/response.py', 57, 57, 0.0413802944301184), ('django/http/response.py', 67, 67, 0.0413802944301184), ('django/http/response.py', 73, 75, 0.0413802944301184), ('django/http/response.py', 100, 102, 0.0413802944301184), ('django/http/response.py', 114, 117, 0.0413802944301184), ('django/http/response.py', 125, 125, 0.0413802944301184), ('django/http/response.py', 141, 141, 0.0413802944301184), ('django/http/response.py', 143, 145, 0.0413802944301184), ('django/http/response.py', 182, 182, 0.0413802944301184), ('django/http/response.py', 190, 190, 0.0413802944301184), ('django/http/response.py', 271, 271, 0.0413802944301184), ('django/http/response.py', 284, 286, 0.0413802944301184), ('django/http/response.py', 290, 292, 0.0413802944301184), ('django/http/response.py', 329, 329, 0.0413802944301184), ('django/http/response.py', 331, 331, 0.0413802944301184), ('django/http/response.py', 348, 348, 0.0413802944301184), ('django/http/response.py', 353, 355, 0.0413802944301184), ('django/http/response.py', 364, 364, 0.0413802944301184), ('django/http/response.py', 366, 366, 0.0413802944301184), ('django/middleware/common.py', 41, 42, 0.0413802944301184), ('django/middleware/common.py', 48, 50, 0.0413802944301184), ('django/middleware/common.py', 53, 53, 0.0413802944301184), ('django/middleware/common.py', 59, 59, 0.0413802944301184), ('django/middleware/common.py', 68, 68, 0.0413802944301184), ('django/middleware/common.py', 107, 107, 0.0413802944301184), ('django/middleware/common.py', 112, 113, 0.0413802944301184), ('django/middleware/common.py', 115, 115, 0.0413802944301184), ('django/test/client.py', 62, 66, 0.0413802944301184), ('django/test/client.py', 83, 83, 0.0413802944301184), ('django/test/client.py', 85, 87, 0.0413802944301184), ('django/test/client.py', 105, 105, 0.0413802944301184), ('django/test/client.py', 110, 110, 0.0413802944301184), ('django/test/client.py', 115, 115, 0.0413802944301184), ('django/test/client.py', 131, 132, 0.0413802944301184), ('django/test/client.py', 134, 137, 0.0413802944301184), ('django/test/client.py', 142, 142, 0.0413802944301184), ('django/test/client.py', 145, 145, 0.0413802944301184), ('django/test/client.py', 148, 148, 0.0413802944301184), ('django/test/client.py', 152, 152, 0.0413802944301184), ('django/test/client.py', 155, 155, 0.0413802944301184), ('django/test/client.py', 159, 161, 0.0413802944301184), ('django/test/client.py', 163, 163, 0.0413802944301184), ('django/test/client.py', 340, 355, 0.0413802944301184), ('django/test/client.py', 383, 383, 0.0413802944301184), ('django/test/client.py', 385, 385, 0.0413802944301184), ('django/test/client.py', 387, 387, 0.0413802944301184), ('django/test/client.py', 391, 391, 0.0413802944301184), ('django/test/client.py', 453, 459, 0.0413802944301184), ('django/test/client.py', 467, 467, 0.0413802944301184), ('django/test/client.py', 469, 469, 0.0413802944301184), ('django/test/client.py', 575, 576, 0.0413802944301184), ('django/test/client.py', 702, 702, 0.0413802944301184), ('django/test/client.py', 706, 709, 0.0413802944301184), ('django/test/client.py', 711, 714, 0.0413802944301184), ('django/test/client.py', 716, 717, 0.0413802944301184), ('django/test/client.py', 719, 719, 0.0413802944301184), ('django/test/client.py', 721, 722, 0.0413802944301184), ('django/test/client.py', 724, 726, 0.0413802944301184), ('django/test/client.py', 728, 730, 0.0413802944301184), ('django/test/client.py', 735, 735, 0.0413802944301184), ('django/urls/base.py', 131, 132, 0.0413802944301184), ('django/urls/base.py', 134, 135, 0.0413802944301184), ('django/urls/resolvers.py', 577, 586, 0.0413802944301184), ('django/urls/resolvers.py', 612, 612, 0.0413802944301184), ('django/utils/connection.py', 57, 58, 0.0413802944301184), ('django/utils/connection.py', 73, 73, 0.0413802944301184), ('django/utils/connection.py', 76, 76, 0.0413802944301184), ('django/utils/datastructures.py', 323, 323, 0.0413802944301184), ('django/utils/deprecation.py', 93, 93, 0.0413802944301184), ('django/utils/deprecation.py', 95, 97, 0.0413802944301184), ('django/utils/deprecation.py', 114, 114, 0.0413802944301184), ('django/utils/deprecation.py', 121, 121, 0.0413802944301184), ('django/utils/deprecation.py', 123, 129, 0.0413802944301184), ('django/utils/encoding.py', 88, 90, 0.0413802944301184), ('django/utils/encoding.py', 93, 93, 0.0413802944301184), ('django/utils/encoding.py', 95, 95, 0.0413802944301184), ('django/utils/encoding.py', 97, 97, 0.0413802944301184), ('django/utils/encoding.py', 200, 200, 0.0413802944301184), ('django/utils/encoding.py', 215, 216, 0.0413802944301184), ('django/utils/encoding.py', 223, 223, 0.0413802944301184), ('django/utils/functional.py', 268, 268, 0.0413802944301184), ('django/utils/functional.py', 273, 273, 0.0413802944301184), ('django/utils/functional.py', 275, 275, 0.0413802944301184), ('django/utils/functional.py', 380, 381, 0.0413802944301184), ('django/utils/http.py', 45, 45, 0.0413802944301184), ('django/utils/http.py', 229, 229, 0.0413802944301184), ('django/utils/http.py', 232, 235, 0.0413802944301184), ('django/utils/module_loading.py', 12, 13, 0.0413802944301184), ('django/utils/module_loading.py', 17, 17, 0.0413802944301184), ('django/utils/module_loading.py', 19, 20, 0.0413802944301184), ('django/urls/resolvers.py', 272, 273, 0.041239304942116126), ('django/urls/resolvers.py', 279, 280, 0.041239304942116126), ('django/urls/resolvers.py', 560, 560, 0.041239304942116126), ('django/urls/resolvers.py', 164, 165, 0.04109974682633932), ('django/urls/resolvers.py', 169, 172, 0.04109974682633932), ('django/urls/resolvers.py', 269, 270, 0.04109974682633932), ('django/urls/resolvers.py', 557, 558, 0.04109974682633932), ('django/urls/resolvers.py', 588, 588, 0.04109974682633932), ('django/urls/resolvers.py', 610, 610, 0.04109974682633932), ('django/urls/base.py', 143, 143, 0.04096159602595203), ('django/urls/resolvers.py', 76, 78, 0.04096159602595203)]
2024-04-05 05:23:37 SBFL result (methods): [('django/forms/formsets.py', 'BaseFormSet', 'cleaned_data', 0.35355339059327373), ('django/forms/formsets.py', 'BaseFormSet', 'full_clean', 0.35355339059327373), ('django/forms/utils.py', 'ErrorList', 'as_ul', 0.3333333333333333), ('django/forms/formsets.py', 'BaseFormSet', 'errors', 0.2886751345948129), ('django/forms/utils.py', 'ErrorList', '__getitem__', 0.2886751345948129), ('django/core/exceptions.py', 'ValidationError', '__iter__', 0.24253562503633297), ('django/db/models/fields/__init__.py', 'Field', 'validate', 0.22360679774997896), ('django/forms/fields.py', 'Field', 'has_changed', 0.22360679774997896), ('django/forms/fields.py', 'TypedChoiceField', '__init__', 0.22360679774997896), ('django/forms/fields.py', 'TypedChoiceField', '_coerce', 0.22360679774997896), ('django/core/exceptions.py', 'ValidationError', '__init__', 0.20851441405707477), ('django/forms/formsets.py', 'BaseFormSet', 'is_valid', 0.20412414523193154), ('django/forms/formsets.py', 'BaseFormSet', 'initial_form_count', 0.19611613513818404), ('django/forms/forms.py', 'BaseForm', 'has_changed', 0.19245008972987526), ('django/forms/formsets.py', 'BaseFormSet', '_construct_form', 0.19245008972987526), ('django/forms/formsets.py', 'BaseFormSet', '_should_delete_form', 0.19245008972987526), ('django/contrib/admin/options.py', 'ModelAdmin', '_get_edited_object_pks', 0.1889822365046136), ('django/contrib/admin/options.py', 'ModelAdmin', '_get_list_editable_queryset', 0.1889822365046136), ('django/contrib/admin/options.py', 'ModelAdmin', 'changelist_view', 0.1889822365046136), ('django/forms/widgets.py', 'CheckboxInput', 'value_from_datadict', 0.1889822365046136), ('django/forms/fields.py', 'IntegerField', 'to_python', 0.18257418583505536), ('django/forms/formsets.py', 'BaseFormSet', 'total_form_count', 0.18257418583505536), ('django/forms/formsets.py', 'ManagementForm', 'clean', 0.1796053020267749), ('django/forms/formsets.py', 'BaseFormSet', 'management_form', 0.1796053020267749), ('django/contrib/admin/utils.py', '', 'display_for_field', 0.17677669529663687), ('django/forms/formsets.py', 'BaseFormSet', 'non_form_errors', 0.17677669529663687), ('django/forms/models.py', '', 'construct_instance', 0.17677669529663687), ('django/forms/models.py', 'BaseModelFormSet', '_existing_object', 0.17677669529663687), ('django/forms/models.py', 'BaseModelFormSet', '_get_to_python', 0.17677669529663687), ('django/forms/models.py', 'BaseModelFormSet', '_construct_form', 0.17677669529663687), ('django/forms/models.py', 'ModelChoiceField', 'prepare_value', 0.17677669529663687), ('django/forms/models.py', 'ModelChoiceField', 'to_python', 0.17677669529663687), ('django/forms/widgets.py', 'CheckboxInput', 'value_omitted_from_data', 0.17677669529663687), ('django/contrib/admin/filters.py', 'ChoicesFieldListFilter', 'choices', 0.16666666666666666), ('django/forms/forms.py', 'BaseForm', 'hidden_fields', 0.16666666666666666), ('django/forms/models.py', 'BaseModelFormSet', 'initial_form_count', 0.15811388300841897), ('django/forms/utils.py', 'ErrorList', '__eq__', 0.15811388300841897), ('django/forms/forms.py', 'BaseForm', 'changed_data', 0.1543033499620919), ('django/forms/forms.py', 'BaseForm', 'media', 0.1543033499620919), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'formfield_for_dbfield', 0.15075567228888181), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'formfield_for_choice_field', 0.15075567228888181), ('django/db/models/base.py', 'Model', '__eq__', 0.15075567228888181), ('django/db/models/fields/__init__.py', 'Field', 'get_choices', 0.15075567228888181), ('django/db/models/fields/__init__.py', 'Field', '_get_flatchoices', 0.15075567228888181), ('django/db/models/fields/__init__.py', 'Field', 'formfield', 0.15075567228888181), ('django/forms/fields.py', 'Field', 'to_python', 0.15075567228888181), ('django/forms/fields.py', 'CallableChoiceIterator', '__iter__', 0.15075567228888181), ('django/forms/fields.py', 'ChoiceField', 'valid_value', 0.15075567228888181), ('django/contrib/admin/filters.py', 'ChoicesFieldListFilter', '__init__', 0.14433756729740646), ('django/contrib/admin/filters.py', 'ChoicesFieldListFilter', 'expected_parameters', 0.14433756729740646), ('django/forms/boundfield.py', 'BoundField', 'data', 0.14433756729740646), ('django/forms/boundfield.py', 'BoundField', 'value', 0.14433756729740646), ('django/forms/fields.py', 'Field', 'bound_data', 0.14433756729740646), ('django/forms/fields.py', 'ChoiceField', '_set_choices', 0.14433756729740646), ('django/forms/fields.py', 'ChoiceField', 'validate', 0.14433756729740646), ('django/forms/models.py', 'BaseModelForm', '_get_validation_exclusions', 0.14433756729740646), ('django/forms/models.py', 'BaseModelFormSet', 'add_fields', 0.14433756729740646), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_query_string', 0.1386750490563073), ('django/forms/widgets.py', 'ChoiceWidget', 'value_from_datadict', 0.1386750490563073), ('django/forms/formsets.py', 'ManagementForm', '__init__', 0.13608276348795434), ('django/forms/formsets.py', 'BaseFormSet', 'forms', 0.13608276348795434), ('django/contrib/admin/widgets.py', 'AdminIntegerFieldWidget', '__init__', 0.1336306209562122), ('django/test/utils.py', 'ContextList', '__getitem__', 0.1336306209562122), ('django/forms/fields.py', 'IntegerField', '__init__', 0.13245323570650439), ('django/forms/fields.py', 'IntegerField', 'widget_attrs', 0.13245323570650439), ('django/forms/forms.py', 'BaseForm', '__init__', 0.13245323570650439), ('django/forms/formsets.py', 'BaseFormSet', '__init__', 0.13245323570650439), ('django/forms/formsets.py', 'BaseFormSet', 'get_form_kwargs', 0.13245323570650439), ('django/forms/formsets.py', 'BaseFormSet', 'clean', 0.13245323570650439), ('django/forms/formsets.py', 'BaseFormSet', 'add_fields', 0.13245323570650439), ('django/forms/utils.py', 'ErrorList', '__str__', 0.13130643285972254), ('django/utils/html.py', '', 'format_html_join', 0.13130643285972254), ('django/forms/fields.py', 'Field', 'run_validators', 0.13018891098082389), ('django/db/models/base.py', 'Model', 'clean', 0.12909944487358055), ('django/forms/boundfield.py', 'BoundField', '__init__', 0.12803687993289598), ('django/contrib/admin/templatetags/admin_list.py', '', '_boolean_icon', 0.125), ('django/contrib/admin/templatetags/admin_list.py', '', 'admin_list_filter', 0.125), ('django/forms/fields.py', 'BooleanField', 'to_python', 0.125), ('django/forms/utils.py', '', 'pretty_name', 0.125), ('django/forms/widgets.py', 'CheckboxInput', 'get_context', 0.125), ('django/template/defaultfilters.py', '', 'floatformat', 0.125), ('django/contrib/admin/templatetags/admin_list.py', '', 'items_for_result', 0.12126781251816648), ('django/contrib/admin/templatetags/admin_list.py', '', 'results', 0.12126781251816648), ('django/contrib/admin/templatetags/admin_list.py', '', 'result_hidden_fields', 0.12126781251816648), ('django/contrib/admin/views/main.py', 'ChangeList', '_get_deterministic_ordering', 0.11785113019775793), ('django/forms/formsets.py', 'BaseFormSet', '__bool__', 0.11785113019775793), ('django/contrib/admin/filters.py', 'ListFilter', '__init__', 0.11470786693528087), ('django/contrib/admin/filters.py', 'FieldListFilter', '__init__', 0.11470786693528087), ('django/contrib/admin/filters.py', 'FieldListFilter', 'has_output', 0.11470786693528087), ('django/contrib/admin/filters.py', 'FieldListFilter', 'queryset', 0.11470786693528087), ('django/contrib/admin/filters.py', 'FieldListFilter', 'create', 0.11470786693528087), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_filters', 0.11470786693528087), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_queryset', 0.11470786693528087), ('django/forms/forms.py', 'BaseForm', 'clean', 0.1125087900926024), ('django/forms/forms.py', 'BaseForm', '_post_clean', 0.11043152607484653), ('django/forms/fields.py', 'CharField', 'to_python', 0.10976425998969035), ('django/forms/forms.py', 'BaseForm', 'errors', 0.10783277320343841), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_changelist_form', 0.10660035817780521), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_changelist_formset', 0.10660035817780521), ('django/forms/models.py', 'ModelFormMetaclass', '__new__', 0.10660035817780521), ('django/forms/widgets.py', '', 'boolean_check', 0.10660035817780521), ('django/forms/widgets.py', 'CheckboxInput', 'format_value', 0.10660035817780521), ('django/forms/fields.py', 'Field', 'validate', 0.10540925533894598), ('django/forms/fields.py', 'Field', 'clean', 0.10540925533894598), ('django/forms/forms.py', 'BaseForm', 'add_initial_prefix', 0.10540925533894598), ('django/forms/forms.py', 'BaseForm', '_widget_data_value', 0.10540925533894598), ('django/forms/forms.py', 'BaseForm', 'full_clean', 0.10540925533894598), ('django/forms/forms.py', 'BaseForm', '_clean_fields', 0.10540925533894598), ('django/forms/forms.py', 'BaseForm', '_clean_form', 0.10540925533894598), ('django/forms/widgets.py', 'Widget', 'value_from_datadict', 0.10540925533894598), ('django/utils/datastructures.py', 'MultiValueDict', 'items', 0.10425720702853739), ('django/forms/boundfield.py', 'BoundField', 'css_classes', 0.10206207261596577), ('django/forms/utils.py', 'ErrorList', '__init__', 0.09901475429766744), ('django/contrib/admin/templatetags/admin_list.py', '', 'result_headers', 0.09805806756909202), ('django/contrib/admin/utils.py', '', 'get_fields_from_path', 0.09805806756909202), ('django/forms/formsets.py', 'BaseFormSet', 'is_multipart', 0.09805806756909202), ('django/forms/fields.py', 'Field', '__init__', 0.09759000729485333), ('django/forms/fields.py', 'Field', 'widget_attrs', 0.09759000729485333), ('django/forms/widgets.py', 'Widget', '__init__', 0.09759000729485333), ('django/forms/widgets.py', 'Input', '__init__', 0.09759000729485333), ('django/db/models/base.py', 'Model', '__reduce__', 0.09622504486493763), ('django/db/models/base.py', 'Model', '__getstate__', 0.09622504486493763), ('django/db/models/base.py', 'Model', '__setstate__', 0.09622504486493763), ('django/db/models/base.py', 'Model', '_get_unique_checks', 0.09622504486493763), ('django/db/models/base.py', 'Model', 'clean_fields', 0.09622504486493763), ('django/db/models/base.py', '', 'model_unpickle', 0.09622504486493763), ('django/forms/formsets.py', 'BaseFormSet', '__getitem__', 0.09622504486493763), ('django/db/models/base.py', 'Model', 'validate_unique', 0.0944911182523068), ('django/db/models/base.py', 'Model', '_perform_unique_checks', 0.0944911182523068), ('django/db/models/base.py', 'Model', '_perform_date_checks', 0.0944911182523068), ('django/db/models/base.py', 'Model', 'full_clean', 0.0944911182523068), ('django/db/models/fields/__init__.py', 'Field', 'run_validators', 0.0944911182523068), ('django/db/models/fields/__init__.py', 'Field', 'clean', 0.0944911182523068), ('django/db/models/fields/__init__.py', 'Field', 'save_form_data', 0.0944911182523068), ('django/forms/models.py', 'BaseModelForm', 'clean', 0.0944911182523068), ('django/forms/models.py', 'BaseModelForm', '_post_clean', 0.0944911182523068), ('django/forms/models.py', 'BaseModelForm', 'validate_unique', 0.0944911182523068), ('django/utils/html.py', '', 'html_safe', 0.09325048082403138), ('django/forms/boundfield.py', 'BoundField', 'auto_id', 0.09166984970282113), ('django/forms/boundfield.py', 'BoundField', 'id_for_label', 0.09166984970282113), ('django/forms/fields.py', 'Field', 'get_bound_field', 0.09166984970282113), ('django/forms/forms.py', 'BaseForm', '__iter__', 0.09166984970282113), ('django/forms/forms.py', 'BaseForm', '__getitem__', 0.09166984970282113), ('django/forms/forms.py', 'BaseForm', 'add_prefix', 0.09166984970282113), ('django/utils/html.py', '', 'format_html', 0.09053574604251853), ('django/core/handlers/wsgi.py', 'WSGIRequest', 'FILES', 0.08980265101338746), ('django/db/models/fields/__init__.py', 'BooleanField', 'formfield', 0.08980265101338746), ('django/forms/forms.py', 'BaseForm', '_html_output', 0.08980265101338746), ('django/test/testcases.py', 'TestData', 'get_memo', 0.08980265101338746), ('django/test/testcases.py', 'TestData', '__get__', 0.08980265101338746), ('django/forms/models.py', 'BaseModelFormSet', 'get_queryset', 0.08838834764831843), ('django/utils/safestring.py', '', 'mark_safe', 0.08804509063256238), ('django/contrib/admin/views/main.py', 'ChangeList', 'has_related_field_in_list_display', 0.08703882797784893), ('django/db/models/options.py', 'Options', 'get_parent_list', 0.08703882797784893), ('django/forms/fields.py', 'Field', '__deepcopy__', 0.08703882797784893), ('django/forms/widgets.py', 'Widget', '__deepcopy__', 0.08703882797784893), ('django/utils/datastructures.py', 'OrderedSet', '__len__', 0.08703882797784893), ('django/forms/forms.py', 'BaseForm', 'order_fields', 0.086710996952412), ('django/utils/html.py', '', 'conditional_escape', 0.08638684255813601), ('django/utils/safestring.py', 'SafeData', '__html__', 0.08638684255813601), ('django/utils/safestring.py', 'SafeString', '__str__', 0.08638684255813601), ('django/utils/html.py', '', 'escape', 0.08606629658238704), ('django/contrib/admin/utils.py', '', 'lookup_field', 0.08574929257125441), ('django/db/models/fields/__init__.py', 'BigAutoField', 'rel_db_type', 0.08574929257125441), ('django/forms/models.py', 'BaseModelFormSet', '__init__', 0.08574929257125441), ('django/forms/models.py', '', 'modelformset_factory', 0.08574929257125441), ('django/forms/models.py', 'ModelChoiceField', '_get_choices', 0.08574929257125441), ('django/contrib/admin/utils.py', '', '_get_non_gfk_field', 0.08451542547285165), ('django/contrib/admin/utils.py', '', 'label_for_field', 0.08451542547285165), ('django/utils/functional.py', '', 'keep_lazy', 0.0842151921066519), ('django/forms/forms.py', 'BaseForm', '__str__', 0.08333333333333333), ('django/forms/forms.py', 'BaseForm', 'as_table', 0.08333333333333333), ('django/utils/http.py', '', 'urlencode', 0.08219949365267865), ('django/core/validators.py', 'ProhibitNullCharactersValidator', '__call__', 0.08111071056538127), ('django/db/models/fields/__init__.py', 'BooleanField', 'to_python', 0.08111071056538127), ('django/forms/formsets.py', 'BaseFormSet', 'get_default_prefix', 0.08111071056538127), ('django/forms/utils.py', 'ErrorList', 'copy', 0.08111071056538127), ('django/utils/translation/__init__.py', '', 'gettext', 0.08058229640253803), ('django/utils/translation/trans_real.py', 'TranslationCatalog', 'get', 0.08058229640253803), ('django/utils/translation/trans_real.py', '', 'gettext', 0.08058229640253803), ('django/forms/widgets.py', 'ChoiceWidget', '__init__', 0.08006407690254357), ('django/contrib/admin/templatetags/admin_list.py', '', 'admin_actions', 0.07905694150420949), ('django/forms/forms.py', 'BaseForm', '_bound_items', 0.07905694150420949), ('django/contrib/admin/templatetags/admin_list.py', 'ResultList', '__init__', 0.07808688094430304), ('django/contrib/admin/views/main.py', 'ChangeList', 'url_for_result', 0.07808688094430304), ('django/db/models/fields/__init__.py', 'Field', '_get_default', 0.07808688094430304), ('django/utils/datastructures.py', 'MultiValueDict', '__init__', 0.07761505257063328), ('django/utils/functional.py', '', 'new_method_proxy', 0.07738232325341368), ('django/core/files/uploadhandler.py', 'FileUploadHandler', '__init__', 0.07715167498104596), ('django/core/files/uploadhandler.py', 'FileUploadHandler', 'handle_raw_input', 0.07715167498104596), ('django/core/files/uploadhandler.py', 'FileUploadHandler', 'upload_complete', 0.07715167498104596), ('django/core/files/uploadhandler.py', 'MemoryFileUploadHandler', 'handle_raw_input', 0.07715167498104596), ('django/core/files/uploadhandler.py', '', 'load_handler', 0.07715167498104596), ('django/core/handlers/wsgi.py', 'LimitedStream', '_read_limited', 0.07715167498104596), ('django/core/handlers/wsgi.py', 'LimitedStream', 'read', 0.07715167498104596), ('django/core/handlers/wsgi.py', 'LimitedStream', 'readline', 0.07715167498104596), ('django/forms/models.py', '', 'model_to_dict', 0.07715167498104596), ('django/forms/widgets.py', 'CheckboxInput', '__init__', 0.07715167498104596), ('django/forms/widgets.py', 'ChoiceWidget', 'format_value', 0.07715167498104596), ('django/forms/widgets.py', 'Select', '_choice_has_empty_value', 0.07715167498104596), ('django/forms/widgets.py', 'Select', 'use_required_attribute', 0.07715167498104596), ('django/http/multipartparser.py', 'MultiPartParser', '__init__', 0.07715167498104596), ('django/http/multipartparser.py', 'MultiPartParser', 'parse', 0.07715167498104596), ('django/http/multipartparser.py', 'LazyStream', '__init__', 0.07715167498104596), ('django/http/multipartparser.py', 'LazyStream', 'read', 0.07715167498104596), ('django/http/multipartparser.py', 'LazyStream', '__next__', 0.07715167498104596), ('django/http/multipartparser.py', 'LazyStream', '__iter__', 0.07715167498104596), ('django/http/multipartparser.py', 'LazyStream', 'unget', 0.07715167498104596), ('django/http/multipartparser.py', 'LazyStream', '_update_unget_history', 0.07715167498104596), ('django/http/multipartparser.py', 'ChunkIter', '__init__', 0.07715167498104596), ('django/http/multipartparser.py', 'ChunkIter', '__next__', 0.07715167498104596), ('django/http/multipartparser.py', 'InterBoundaryIter', '__init__', 0.07715167498104596), ('django/http/multipartparser.py', 'InterBoundaryIter', '__iter__', 0.07715167498104596), ('django/http/multipartparser.py', 'InterBoundaryIter', '__next__', 0.07715167498104596), ('django/http/multipartparser.py', 'BoundaryIter', '__init__', 0.07715167498104596), ('django/http/multipartparser.py', 'BoundaryIter', '__next__', 0.07715167498104596), ('django/http/multipartparser.py', 'BoundaryIter', '_find_boundary', 0.07715167498104596), ('django/http/multipartparser.py', '', 'exhaust', 0.07715167498104596), ('django/http/multipartparser.py', '', 'parse_boundary_stream', 0.07715167498104596), ('django/http/multipartparser.py', 'Parser', '__init__', 0.07715167498104596), ('django/http/multipartparser.py', 'Parser', '__iter__', 0.07715167498104596), ('django/http/multipartparser.py', '', 'parse_header', 0.07715167498104596), ('django/http/multipartparser.py', '', '_parse_header_params', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', '_initialize_handlers', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', 'upload_handlers', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', 'parse_file_upload', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', '_load_post_and_files', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', 'read', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', 'readline', 0.07715167498104596), ('django/http/request.py', 'HttpRequest', '__iter__', 0.07715167498104596), ('django/middleware/csrf.py', 'CsrfViewMiddleware', 'process_view', 0.07715167498104596), ('django/template/base.py', 'FilterExpression', 'resolve', 0.07715167498104596), ('django/test/client.py', 'FakePayload', 'read', 0.07715167498104596), ('django/test/client.py', '', 'encode_multipart', 0.07715167498104596), ('django/test/client.py', 'RequestFactory', '_encode_data', 0.07715167498104596), ('django/test/client.py', 'RequestFactory', '_encode_json', 0.07715167498104596), ('django/test/client.py', 'RequestFactory', 'post', 0.07715167498104596), ('django/test/client.py', 'RequestFactory', 'generic', 0.07715167498104596), ('django/test/client.py', 'Client', 'post', 0.07715167498104596), ('django/utils/encoding.py', '', 'force_str', 0.07715167498104596), ('django/utils/translation/trans_real.py', 'DjangoTranslation', 'ngettext', 0.07715167498104596), ('django/forms/formsets.py', 'BaseFormSet', 'as_ul', 0.07624928516630233), ('django/utils/functional.py', 'cached_property', '__get__', 0.07624928516630233), ('django/apps/config.py', 'AppConfig', 'get_model', 0.07537783614444091), ('django/apps/registry.py', 'Apps', 'check_models_ready', 0.07537783614444091), ('django/apps/registry.py', 'Apps', 'get_model', 0.07537783614444091), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', 'max_in_list_size', 0.07537783614444091), ('django/db/models/base.py', 'Model', 'serializable_value', 0.07537783614444091), ('django/db/models/lookups.py', 'Lookup', 'batch_process_rhs', 0.07537783614444091), ('django/db/models/lookups.py', 'Lookup', 'get_source_expressions', 0.07537783614444091), ('django/db/models/lookups.py', 'FieldGetDbPrepValueIterableMixin', 'batch_process_rhs', 0.07537783614444091), ('django/db/models/lookups.py', 'PostgresOperatorLookup', 'as_postgresql', 0.07537783614444091), ('django/db/models/lookups.py', 'Exact', 'process_rhs', 0.07537783614444091), ('django/db/models/lookups.py', 'In', 'process_rhs', 0.07537783614444091), ('django/db/models/lookups.py', 'In', 'get_rhs_op', 0.07537783614444091), ('django/db/models/lookups.py', 'In', 'as_sql', 0.07537783614444091), ('django/db/models/lookups.py', 'In', 'split_parameter_list_as_sql', 0.07537783614444091), ('django/db/models/lookups.py', 'PatternLookup', 'get_rhs_op', 0.07537783614444091), ('django/forms/widgets.py', 'ChoiceWidget', 'create_option', 0.07537783614444091), ('django/template/defaultfilters.py', '', 'join', 0.07537783614444091), ('django/utils/datastructures.py', 'OrderedSet', 'remove', 0.07537783614444091), ('django/utils/datastructures.py', 'OrderedSet', 'discard', 0.07537783614444091), ('django/utils/datastructures.py', 'OrderedSet', '__bool__', 0.07537783614444091), ('django/contrib/admin/utils.py', '', 'display_for_value', 0.07453559924999299), ('django/db/models/sql/query.py', '', 'get_order_dir', 0.07453559924999299), ('django/forms/formsets.py', '', 'formset_factory', 0.07453559924999299), ('django/forms/models.py', 'BaseModelForm', '__init__', 0.07453559924999299), ('django/template/loader.py', '', 'get_template', 0.07453559924999299), ('django/db/models/sql/query.py', 'Query', 'resolve_lookup_value', 0.07372097807744857), ('django/contrib/admin/views/main.py', 'ChangeList', '_get_default_ordering', 0.07293249574894728), ('django/forms/models.py', 'ModelMultipleChoiceField', 'has_changed', 0.07293249574894728), ('django/forms/widgets.py', 'Widget', '_render', 0.07293249574894728), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_ordering_field_columns', 0.07216878364870323), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'get_empty_value_display', 0.07142857142857142), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_action_choices', 0.07142857142857142), ('django/contrib/admin/views/main.py', 'ChangeList', 'apply_select_related', 0.07142857142857142), ('django/forms/forms.py', 'BaseForm', 'get_initial_for_field', 0.07142857142857142), ('django/template/defaultfilters.py', '', 'stringfilter', 0.07142857142857142), ('django/contrib/admin/templatetags/admin_list.py', '', 'pagination', 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', '', '_coerce_field_name', 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', '', 'result_list', 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', '', 'search_form', 0.07071067811865475), ('django/contrib/admin/templatetags/admin_list.py', '', 'change_list_object_tools_tag', 0.07071067811865475), ('django/db/models/lookups.py', 'FieldGetDbPrepValueIterableMixin', 'process_rhs', 0.07071067811865475), ('django/db/models/lookups.py', 'FieldGetDbPrepValueIterableMixin', 'resolve_expression_parameter', 0.07071067811865475), ('django/forms/models.py', 'ModelChoiceIteratorValue', '__str__', 0.07071067811865475), ('django/forms/models.py', 'ModelChoiceField', '__init__', 0.07071067811865475), ('django/forms/models.py', 'ModelChoiceField', 'get_limit_choices_to', 0.07071067811865475), ('django/forms/models.py', 'ModelChoiceField', '__deepcopy__', 0.07071067811865475), ('django/forms/widgets.py', 'Media', '__getitem__', 0.07071067811865475), ('django/forms/widgets.py', 'ChoiceWidget', 'optgroups', 0.07071067811865475), ('django/forms/widgets.py', 'ChoiceWidget', 'get_context', 0.07071067811865475), ('django/forms/widgets.py', 'Select', 'get_context', 0.07071067811865475), ('django/forms/fields.py', 'ChoiceField', '__deepcopy__', 0.07001400420140048), ('django/forms/fields.py', 'ChoiceField', '_get_choices', 0.07001400420140048), ('django/utils/translation/trans_real.py', '', 'do_ntranslate', 0.06933752452815364), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_changelist_instance', 0.06868028197434452), ('django/contrib/admin/options.py', 'ModelAdmin', '_filter_actions_by_permissions', 0.06868028197434452), ('django/contrib/admin/utils.py', '', 'model_format_dict', 0.06868028197434452), ('django/contrib/admin/views/main.py', 'ChangeList', '__init__', 0.06804138174397717), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_results', 0.06804138174397717), ('django/contrib/admin/widgets.py', 'AdminTextInputWidget', '__init__', 0.06804138174397717), ('django/db/models/sql/query.py', 'Query', 'add_ordering', 0.06804138174397717), ('django/forms/widgets.py', 'Widget', 'format_value', 0.06804138174397717), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_changelist', 0.06741998624632421), ('django/contrib/admin/options.py', 'ModelAdmin', '_get_base_actions', 0.06741998624632421), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_actions', 0.06741998624632421), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_list_display_links', 0.06741998624632421), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_search_results', 0.06741998624632421), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_preserved_filters', 0.06741998624632421), ('django/contrib/admin/sites.py', 'AdminSite', 'actions', 0.06741998624632421), ('django/contrib/admin/views/main.py', 'ChangeListSearchForm', '__init__', 0.06741998624632421), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_filters_params', 0.06741998624632421), ('django/contrib/admin/views/main.py', 'ChangeList', 'get_ordering', 0.06741998624632421), ('django/core/paginator.py', 'Paginator', '__init__', 0.06741998624632421), ('django/core/paginator.py', 'Paginator', 'count', 0.06741998624632421), ('django/core/paginator.py', 'Paginator', '_check_object_list_is_ordered', 0.06741998624632421), ('django/db/models/fields/__init__.py', 'CharField', 'formfield', 0.06741998624632421), ('django/db/models/query.py', 'QuerySet', 'ordered', 0.06741998624632421), ('django/forms/fields.py', 'CharField', '__init__', 0.06741998624632421), ('django/forms/fields.py', 'CharField', 'widget_attrs', 0.06741998624632421), ('django/forms/forms.py', 'BaseForm', 'non_field_errors', 0.06741998624632421), ('django/http/request.py', 'QueryDict', 'urlencode', 0.06741998624632421), ('django/utils/functional.py', '', 'lazy', 0.06741998624632421), ('django/utils/inspect.py', '', '_get_callable_parameters', 0.06741998624632421), ('django/utils/inspect.py', '', 'method_has_no_args', 0.06741998624632421), ('django/core/validators.py', 'BaseValidator', '__init__', 0.0668153104781061), ('django/db/models/fields/__init__.py', 'AutoFieldMeta', '__instancecheck__', 0.0668153104781061), ('django/forms/models.py', '', 'fields_for_model', 0.0668153104781061), ('django/db/models/fields/__init__.py', 'Field', '__lt__', 0.06565321642986127), ('django/utils/datastructures.py', 'MultiValueDict', 'get', 0.06509445549041194), ('django/utils/translation/__init__.py', '', 'ngettext', 0.06509445549041194), ('django/utils/translation/trans_real.py', 'TranslationCatalog', 'plural', 0.06509445549041194), ('django/utils/translation/trans_real.py', '', 'ngettext', 0.06509445549041194), ('django/utils/numberformat.py', '', 'format', 0.06454972243679027), ('django/db/backends/sqlite3/operations.py', 'DatabaseOperations', 'check_expression_support', 0.06401843996644799), ('django/db/models/aggregates.py', 'Aggregate', '__init__', 0.06401843996644799), ('django/db/models/aggregates.py', 'Aggregate', 'resolve_expression', 0.06401843996644799), ('django/db/models/aggregates.py', 'Aggregate', 'as_sql', 0.06401843996644799), ('django/db/models/aggregates.py', 'Count', '__init__', 0.06401843996644799), ('django/db/models/expressions.py', 'SQLiteNumericMixin', 'as_sqlite', 0.06401843996644799), ('django/db/models/expressions.py', 'BaseExpression', 'get_db_converters', 0.06401843996644799), ('django/db/models/expressions.py', 'BaseExpression', '_parse_expressions', 0.06401843996644799), ('django/db/models/expressions.py', 'BaseExpression', 'convert_value', 0.06401843996644799), ('django/db/models/expressions.py', 'Func', '__init__', 0.06401843996644799), ('django/db/models/expressions.py', 'Func', 'resolve_expression', 0.06401843996644799), ('django/db/models/expressions.py', 'Func', 'as_sql', 0.06401843996644799), ('django/db/models/expressions.py', 'Func', 'copy', 0.06401843996644799), ('django/db/models/expressions.py', 'Star', 'as_sql', 0.06401843996644799), ('django/db/models/query.py', 'QuerySet', 'count', 0.06401843996644799), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_select', 0.06401843996644799), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'compile', 0.06401843996644799), ('django/db/models/sql/query.py', 'Query', 'get_aggregation', 0.06401843996644799), ('django/db/models/sql/query.py', 'Query', 'get_count', 0.06401843996644799), ('django/db/models/sql/query.py', 'Query', 'add_annotation', 0.06401843996644799), ('django/db/models/sql/query.py', 'Query', 'clear_limits', 0.06401843996644799), ('django/db/models/sql/query.py', 'Query', 'set_annotation_mask', 0.06401843996644799), ('django/db/models/sql/query.py', 'Query', 'annotation_select', 0.06401843996644799), ('django/forms/models.py', '', 'apply_limit_choices_to_to_formfield', 0.06401843996644799), ('django/utils/formats.py', '', 'number_format', 0.06401843996644799), ('django/utils/formats.py', '', 'localize', 0.06401843996644799), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'execute_sql', 0.06350006350009525), ('django/forms/models.py', 'ModelFormOptions', '__init__', 0.0629940788348712), ('django/forms/models.py', '', 'modelform_factory', 0.0629940788348712), ('django/forms/forms.py', 'DeclarativeFieldsMetaclass', '__new__', 0.0625), ('django/forms/widgets.py', '', 'media_property', 0.0625), ('django/forms/widgets.py', 'MediaDefiningClass', '__new__', 0.0625), ('django/db/models/query.py', 'QuerySet', '_not_support_combined_queries', 0.062017367294604234), ('django/db/models/sql/query.py', 'Query', 'is_empty', 0.062017367294604234), ('django/db/models/options.py', 'Options', 'get_field', 0.06154574548966636), ('django/template/defaulttags.py', 'ForNode', 'render', 0.06154574548966636), ('django/template/library.py', 'SimpleNode', 'render', 0.06154574548966636), ('django/utils/datastructures.py', 'MultiValueDict', '__getitem__', 0.06154574548966636), ('django/db/models/fields/__init__.py', 'Field', 'has_default', 0.06108472217815261), ('django/template/context.py', 'BaseContext', 'get', 0.06108472217815261), ('django/db/models/fields/__init__.py', 'Field', 'value_from_object', 0.06063390625908324), ('django/db/models/sql/compiler.py', 'SQLCompiler', '_order_by_pairs', 0.06063390625908324), ('django/forms/widgets.py', 'ChoiceWidget', '__deepcopy__', 0.06063390625908324), ('django/http/request.py', 'QueryDict', '_assert_mutable', 0.06063390625908324), ('django/http/request.py', 'QueryDict', 'setlist', 0.06063390625908324), ('django/http/request.py', 'QueryDict', 'setlistdefault', 0.06063390625908324), ('django/http/request.py', 'QueryDict', 'appendlist', 0.06063390625908324), ('django/http/request.py', '', 'bytes_to_text', 0.06063390625908324), ('django/db/models/base.py', 'ModelStateFieldsCacheDescriptor', '__get__', 0.0601929265428846), ('django/template/engine.py', 'Engine', 'select_template', 0.05976143046671968), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'setup_query', 0.058520573598065284), ('django/forms/boundfield.py', 'BoundField', 'as_widget', 0.058520573598065284), ('django/template/loader_tags.py', 'BlockNode', 'render', 0.05812381937190964), ('django/utils/datastructures.py', 'ImmutableList', '__new__', 0.05812381937190964), ('django/utils/safestring.py', 'SafeString', '__add__', 0.05812381937190964), ('django/contrib/admin/utils.py', '', 'quote', 0.05773502691896257), ('django/contrib/admin/templatetags/base.py', 'InclusionAdminNode', 'render', 0.057353933467640436), ('django/template/context.py', 'BaseContext', 'new', 0.057353933467640436), ('django/template/context.py', 'RequestContext', 'new', 0.057353933467640436), ('django/template/library.py', 'TagHelperNode', 'get_resolved_arguments', 0.057353933467640436), ('django/template/library.py', 'InclusionNode', 'render', 0.057353933467640436), ('django/db/models/expressions.py', 'BaseExpression', 'resolve_expression', 0.05698028822981897), ('django/db/models/expressions.py', 'OrderBy', '__init__', 0.05698028822981897), ('django/db/models/expressions.py', 'OrderBy', 'set_source_expressions', 0.05698028822981897), ('django/db/models/expressions.py', 'OrderBy', 'get_source_expressions', 0.05698028822981897), ('django/db/models/expressions.py', 'OrderBy', 'as_sql', 0.05698028822981897), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_order_by', 0.05698028822981897), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'as_sql', 0.05698028822981897), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'find_ordering_name', 0.05698028822981897), ('django/db/models/sql/compiler.py', 'SQLCompiler', '_setup_joins', 0.05698028822981897), ('django/utils/encoding.py', '', 'iri_to_uri', 0.05698028822981897), ('django/utils/hashable.py', '', 'make_hashable', 0.05698028822981897), ('django/forms/boundfield.py', 'BoundField', 'errors', 0.05661385170722978), ('django/utils/itercompat.py', '', 'is_iterable', 0.05661385170722978), ('django/template/loader.py', '', 'select_template', 0.05590169943749474), ('django/contrib/admin/sites.py', 'AdminSite', '_build_app_dict', 0.05555555555555555), ('django/core/validators.py', 'ProhibitNullCharactersValidator', '__init__', 0.05555555555555555), ('django/db/models/fields/__init__.py', 'IntegerField', 'to_python', 0.05555555555555555), ('django/contrib/admin/options.py', 'ModelAdmin', 'media', 0.05521576303742327), ('django/contrib/admin/templatetags/admin_urls.py', '', 'add_preserved_filters', 0.05521576303742327), ('django/db/models/sql/query.py', 'Query', 'setup_joins', 0.05521576303742327), ('django/forms/widgets.py', 'Media', 'render_js', 0.05521576303742327), ('django/forms/widgets.py', 'Media', 'merge', 0.05521576303742327), ('django/urls/converters.py', 'StringConverter', 'to_url', 0.05521576303742327), ('django/urls/resolvers.py', 'URLResolver', '_reverse_with_prefix', 0.05521576303742327), ('django/db/models/fields/__init__.py', 'Field', 'get_default', 0.05488212999484517), ('django/contrib/admin/templatetags/admin_urls.py', '', 'admin_urlname', 0.0545544725589981), ('django/forms/widgets.py', 'Media', 'absolute_path', 0.0545544725589981), ('django/template/smartif.py', '', 'infix', 0.0545544725589981), ('django/templatetags/static.py', '', 'static', 0.0545544725589981), ('django/utils/datastructures.py', 'OrderedSet', 'add', 0.0545544725589981), ('django/utils/topological_sort.py', '', 'topological_sort_as_sets', 0.0545544725589981), ('django/utils/topological_sort.py', '', 'stable_topological_sort', 0.0545544725589981), ('django/db/models/options.py', 'Options', 'app_config', 0.05423261445466404), ('django/db/models/query.py', 'QuerySet', 'only', 0.05423261445466404), ('django/forms/boundfield.py', 'BoundField', '__getitem__', 0.05423261445466404), ('django/utils/datastructures.py', 'MultiValueDict', 'setlist', 0.053916386601719206), ('django/utils/datastructures.py', 'MultiValueDict', 'setlistdefault', 0.053916386601719206), ('django/utils/datastructures.py', 'MultiValueDict', 'appendlist', 0.053916386601719206), ('django/template/loaders/cached.py', 'Loader', 'get_template', 0.05360562674188974), ('django/db/models/query.py', 'QuerySet', '__iter__', 0.053300179088902604), ('django/db/models/sql/query.py', 'Query', 'clear_ordering', 0.052999894000318), ('django/forms/forms.py', 'BaseForm', 'visible_fields', 0.052999894000318), ('django/template/defaultfilters.py', '', 'capfirst', 0.052999894000318), ('django/forms/widgets.py', 'Media', '__add__', 0.052414241836095915), ('django/forms/widgets.py', 'Media', '__init__', 0.05212860351426869), ('django/template/backends/django.py', 'DjangoTemplates', 'get_template', 0.05212860351426869), ('django/template/backends/django.py', '', 'copy_exception', 0.05212860351426869), ('django/template/backends/django.py', '', 'reraise', 0.05212860351426869), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'get_queryset', 0.05184758473652126), ('django/contrib/auth/models.py', '', 'has_module_perms', 0.05157106231293967), ('django/template/defaulttags.py', 'IfNode', 'render', 0.051298917604257706), ('django/forms/boundfield.py', 'BoundField', '__str__', 0.051031036307982884), ('django/forms/boundfield.py', 'BoundField', 'initial', 0.051031036307982884), ('django/forms/renderers.py', 'BaseRenderer', 'render', 0.051031036307982884), ('django/forms/renderers.py', 'EngineMixin', 'get_template', 0.051031036307982884), ('django/forms/widgets.py', 'Widget', 'get_context', 0.051031036307982884), ('django/forms/widgets.py', 'Widget', 'render', 0.051031036307982884), ('django/forms/widgets.py', 'Widget', 'build_attrs', 0.051031036307982884), ('django/forms/widgets.py', 'Widget', 'use_required_attribute', 0.051031036307982884), ('django/forms/widgets.py', 'Input', 'get_context', 0.051031036307982884), ('django/template/context.py', '', 'make_context', 0.051031036307982884), ('django/template/defaultfilters.py', '', 'slugify', 0.051031036307982884), ('django/template/engine.py', 'Engine', 'find_template', 0.051031036307982884), ('django/contrib/auth/base_user.py', '', 'has_usable_password', 0.05076730825668096), ('django/contrib/auth/hashers.py', '', 'is_password_usable', 0.05076730825668096), ('django/db/models/fields/__init__.py', 'Field', 'unique', 0.05076730825668096), ('django/forms/widgets.py', 'Media', '__str__', 0.050507627227610534), ('django/forms/widgets.py', 'Media', '_css', 0.050507627227610534), ('django/forms/widgets.py', 'Media', '_js', 0.050507627227610534), ('django/forms/widgets.py', 'Media', 'render', 0.050507627227610534), ('django/forms/widgets.py', 'Media', 'render_css', 0.050507627227610534), ('django/middleware/csrf.py', '', 'get_token', 0.050251890762960605), ('django/template/context_processors.py', '', 'csrf', 0.050251890762960605), ('django/template/defaulttags.py', 'CsrfTokenNode', 'render', 0.050251890762960605), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_urls', 0.05), ('django/contrib/auth/models.py', '', 'get_short_name', 0.05), ('django/http/response.py', 'HttpResponseBase', 'set_cookie', 0.05), ('django/middleware/csrf.py', 'CsrfViewMiddleware', '_get_token', 0.05), ('django/middleware/csrf.py', 'CsrfViewMiddleware', '_set_csrf_cookie', 0.05), ('django/middleware/csrf.py', 'CsrfViewMiddleware', 'process_response', 0.05), ('django/template/defaulttags.py', 'FirstOfNode', '__init__', 0.05), ('django/template/defaulttags.py', 'FirstOfNode', 'render', 0.05), ('django/template/defaulttags.py', 'ForNode', '__repr__', 0.05), ('django/template/loader_tags.py', 'IncludeNode', 'render', 0.05), ('django/utils/cache.py', '', 'patch_vary_headers', 0.05), ('django/contrib/auth/base_user.py', '', 'get_username', 0.04950737714883372), ('django/templatetags/i18n.py', 'BlockTranslateNode', 'render_token_list', 0.04950737714883372), ('django/templatetags/i18n.py', 'BlockTranslateNode', 'render', 0.04950737714883372), ('django/contrib/admin/options.py', 'ModelAdmin', 'get_model_perms', 0.04926646390821466), ('django/contrib/admin/sites.py', 'AdminSite', 'get_app_list', 0.04926646390821466), ('django/forms/fields.py', 'Field', 'prepare_value', 0.04926646390821466), ('django/utils/text.py', '', '_format_lazy', 0.04902903378454601), ('django/contrib/auth/models.py', '', 'has_perm', 0.048795003647426664), ('django/template/response.py', 'SimpleTemplateResponse', 'resolve_template', 0.048795003647426664), ('django/forms/widgets.py', 'Widget', 'is_hidden', 0.04856429311786321), ('django/template/exceptions.py', 'TemplateDoesNotExist', '__init__', 0.04856429311786321), ('django/utils/datastructures.py', 'MultiValueDict', '_getlist', 0.04856429311786321), ('django/template/context.py', 'Context', 'bind_template', 0.04833682445228318), ('django/template/context_processors.py', '', 'debug', 0.04833682445228318), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'has_add_permission', 0.04789131426105757), ('django/db/models/expressions.py', 'BaseExpression', '__init__', 0.04767312946227962), ('django/urls/base.py', '', 'reverse', 0.04767312946227962), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'has_delete_permission', 0.04745789978762495), ('django/utils/translation/trans_real.py', 'DjangoTranslation', 'to_language', 0.0472455591261534), ('django/utils/translation/trans_real.py', '', 'get_language', 0.0472455591261534), ('django/urls/resolvers.py', 'URLResolver', 'resolve', 0.047036043419179864), ('django/template/loader_tags.py', 'BlockContext', 'get_block', 0.0468292905790847), ('django/template/loader_tags.py', 'BlockNode', 'super', 0.0468292905790847), ('django/utils/datastructures.py', 'OrderedSet', '__iter__', 0.0468292905790847), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'has_view_permission', 0.04662524041201569), ('django/db/models/base.py', 'Model', '_get_pk_val', 0.04662524041201569), ('django/template/defaulttags.py', 'URLNode', 'render', 0.04662524041201569), ('django/template/response.py', 'SimpleTemplateResponse', 'add_post_render_callback', 0.04662524041201569), ('django/template/response.py', 'SimpleTemplateResponse', 'render', 0.04662524041201569), ('django/utils/dateformat.py', 'TimeFormat', '__init__', 0.04662524041201569), ('django/utils/decorators.py', '', 'make_middleware_decorator', 0.04662524041201569), ('django/contrib/admin/options.py', 'BaseModelAdmin', 'has_change_permission', 0.046423834544262965), ('django/contrib/auth/__init__.py', '', 'get_permission_codename', 0.046423834544262965), ('django/http/response.py', 'HttpResponseBase', 'setdefault', 0.046423834544262965), ('django/test/client.py', 'Client', 'request', 0.046423834544262965), ('django/apps/registry.py', 'Apps', 'is_installed', 0.046225016352102424), ('django/contrib/admin/sites.py', 'AdminSite', 'each_context', 0.046225016352102424), ('django/contrib/auth/context_processors.py', 'PermWrapper', '__init__', 0.046225016352102424), ('django/contrib/auth/context_processors.py', '', 'auth', 0.046225016352102424), ('django/contrib/messages/api.py', '', 'get_messages', 0.046225016352102424), ('django/contrib/messages/context_processors.py', '', 'messages', 0.046225016352102424), ('django/contrib/messages/storage/base.py', 'BaseStorage', '__len__', 0.046225016352102424), ('django/core/files/storage.py', 'FileSystemStorage', 'url', 0.046225016352102424), ('django/core/handlers/base.py', 'BaseHandler', '_get_response', 0.046225016352102424), ('django/core/handlers/wsgi.py', 'WSGIRequest', 'GET', 0.046225016352102424), ('django/core/handlers/wsgi.py', 'WSGIRequest', '_get_post', 0.046225016352102424), ('django/http/request.py', 'HttpRequest', 'close', 0.046225016352102424), ('django/template/base.py', 'Variable', '__init__', 0.046225016352102424), ('django/template/base.py', 'Variable', 'resolve', 0.046225016352102424), ('django/template/base.py', 'Node', 'render_annotated', 0.046225016352102424), ('django/template/base.py', 'Node', '__iter__', 0.046225016352102424), ('django/template/base.py', 'Node', 'get_nodes_by_type', 0.046225016352102424), ('django/template/base.py', 'TextNode', 'render_annotated', 0.046225016352102424), ('django/template/context.py', 'BaseContext', 'push', 0.046225016352102424), ('django/template/context.py', 'BaseContext', 'setdefault', 0.046225016352102424), ('django/template/context.py', 'RenderContext', '__contains__', 0.046225016352102424), ('django/template/context.py', 'RenderContext', 'get', 0.046225016352102424), ('django/template/context.py', 'RenderContext', '__getitem__', 0.046225016352102424), ('django/template/context.py', 'RequestContext', '__init__', 0.046225016352102424), ('django/template/context.py', 'RequestContext', 'bind_template', 0.046225016352102424), ('django/template/context_processors.py', '', 'request', 0.046225016352102424), ('django/template/defaultfilters.py', '', 'get_digit', 0.046225016352102424), ('django/template/defaultfilters.py', '', 'timesince_filter', 0.046225016352102424), ('django/template/defaultfilters.py', '', 'divisibleby', 0.046225016352102424), ('django/template/defaultfilters.py', '', 'yesno', 0.046225016352102424), ('django/template/defaulttags.py', 'IfNode', '__repr__', 0.046225016352102424), ('django/template/defaulttags.py', 'IfNode', '__iter__', 0.046225016352102424), ('django/template/defaulttags.py', 'NowNode', '__init__', 0.046225016352102424), ('django/template/defaulttags.py', 'NowNode', 'render', 0.046225016352102424), ('django/template/defaulttags.py', 'URLNode', '__repr__', 0.046225016352102424), ('django/template/loader_tags.py', 'BlockContext', '__init__', 0.046225016352102424), ('django/template/loader_tags.py', 'BlockContext', 'add_blocks', 0.046225016352102424), ('django/template/loader_tags.py', 'BlockContext', 'pop', 0.046225016352102424), ('django/template/loader_tags.py', 'BlockContext', 'push', 0.046225016352102424), ('django/template/loader_tags.py', 'BlockNode', '__init__', 0.046225016352102424), ('django/template/loader_tags.py', 'ExtendsNode', 'find_template', 0.046225016352102424), ('django/template/loader_tags.py', 'ExtendsNode', 'get_parent', 0.046225016352102424), ('django/template/loader_tags.py', 'ExtendsNode', 'render', 0.046225016352102424), ('django/template/loaders/cached.py', 'Loader', 'cache_key', 0.046225016352102424), ('django/template/response.py', 'SimpleTemplateResponse', '__init__', 0.046225016352102424), ('django/template/response.py', 'SimpleTemplateResponse', 'resolve_context', 0.046225016352102424), ('django/template/response.py', 'SimpleTemplateResponse', 'rendered_content', 0.046225016352102424), ('django/template/response.py', 'SimpleTemplateResponse', 'content', 0.046225016352102424), ('django/template/response.py', 'TemplateResponse', '__init__', 0.046225016352102424), ('django/template/smartif.py', '', 'prefix', 0.046225016352102424), ('django/templatetags/i18n.py', 'GetCurrentLanguageNode', 'render', 0.046225016352102424), ('django/templatetags/i18n.py', 'GetCurrentLanguageBidiNode', 'render', 0.046225016352102424), ('django/templatetags/i18n.py', 'TranslateNode', 'render', 0.046225016352102424), ('django/templatetags/static.py', 'StaticNode', 'url', 0.046225016352102424), ('django/templatetags/static.py', 'StaticNode', 'render', 0.046225016352102424), ('django/templatetags/static.py', 'StaticNode', 'handle_simple', 0.046225016352102424), ('django/utils/dateformat.py', 'Formatter', 'format', 0.046225016352102424), ('django/utils/dateformat.py', 'TimeFormat', '_no_timezone_or_datetime_is_ambiguous_or_imaginary', 0.046225016352102424), ('django/utils/dateformat.py', 'TimeFormat', 'Z', 0.046225016352102424), ('django/utils/dateformat.py', '', 'format', 0.046225016352102424), ('django/utils/encoding.py', '', 'filepath_to_uri', 0.046225016352102424), ('django/utils/formats.py', '', 'get_format', 0.046225016352102424), ('django/utils/formats.py', '', 'time_format', 0.046225016352102424), ('django/utils/formats.py', '', 'localize_input', 0.046225016352102424), ('django/utils/text.py', '', 'capfirst', 0.046225016352102424), ('django/utils/timezone.py', '', 'is_naive', 0.046225016352102424), ('django/utils/timezone.py', '', '_datetime_ambiguous_or_imaginary', 0.046225016352102424), ('django/utils/translation/__init__.py', '', 'get_language_bidi', 0.046225016352102424), ('django/utils/translation/trans_real.py', '', 'get_language_bidi', 0.046225016352102424), ('django/middleware/csrf.py', '', '_get_new_csrf_string', 0.04602873089491617), ('django/middleware/csrf.py', '', '_mask_cipher_secret', 0.04602873089491617), ('django/utils/crypto.py', '', 'get_random_string', 0.04602873089491617), ('django/template/context.py', 'BaseContext', '_reset_dicts', 0.045834924851410566), ('django/contrib/admin/sites.py', 'AdminSite', 'admin_view', 0.045454545454545456), ('django/utils/datastructures.py', 'MultiValueDict', 'lists', 0.045454545454545456), ('django/template/context.py', 'BaseContext', '__setitem__', 0.04490132550669373), ('django/template/context.py', 'Context', 'update', 0.04490132550669373), ('django/utils/datastructures.py', 'OrderedSet', '__init__', 0.04490132550669373), ('django/utils/decorators.py', '', '_multi_decorate', 0.044721359549995794), ('django/template/base.py', 'Template', 'compile_nodelist', 0.0445435403187374), ('django/template/loader_tags.py', '', 'construct_relative_path', 0.0445435403187374), ('django/utils/cache.py', '', 'patch_cache_control', 0.0445435403187374), ('django/utils/cache.py', '', 'patch_response_headers', 0.0445435403187374), ('django/utils/cache.py', '', 'add_never_cache_headers', 0.0445435403187374), ('django/views/decorators/cache.py', '', 'never_cache', 0.0445435403187374), ('django/contrib/auth/__init__.py', '', 'get_user', 0.04436782547080569), ('django/contrib/messages/storage/base.py', 'BaseStorage', '_loaded_messages', 0.04436782547080569), ('django/contrib/messages/storage/base.py', 'BaseStorage', '_get', 0.04436782547080569), ('django/contrib/messages/storage/cookie.py', 'CookieStorage', '_get', 0.04436782547080569), ('django/contrib/messages/storage/cookie.py', 'CookieStorage', '_decode', 0.04436782547080569), ('django/contrib/messages/storage/fallback.py', 'FallbackStorage', '_get', 0.04436782547080569), ('django/template/base.py', 'Variable', '_resolve_lookup', 0.04436782547080569), ('django/template/context.py', 'BaseContext', '__contains__', 0.04436782547080569), ('django/contrib/auth/backends.py', 'ModelBackend', 'user_can_authenticate', 0.044194173824159216), ('django/contrib/auth/backends.py', 'ModelBackend', 'get_user', 0.044194173824159216), ('django/core/signing.py', 'TimestampSigner', 'unsign', 0.044194173824159216), ('django/db/backends/sqlite3/operations.py', 'DatabaseOperations', 'get_db_converters', 0.044194173824159216), ('django/db/backends/sqlite3/operations.py', 'DatabaseOperations', 'convert_booleanfield_value', 0.044194173824159216), ('django/db/models/base.py', 'ModelBase', '_default_manager', 0.044194173824159216), ('django/db/models/fields/__init__.py', 'BooleanField', 'get_internal_type', 0.044194173824159216), ('django/template/backends/django.py', 'Template', '__init__', 0.044194173824159216), ('django/template/backends/django.py', 'Template', 'render', 0.044194173824159216), ('django/template/context.py', 'ContextDict', '__enter__', 0.044194173824159216), ('django/template/context.py', 'ContextDict', '__exit__', 0.044194173824159216), ('django/template/context.py', 'BaseContext', '__copy__', 0.044194173824159216), ('django/template/context.py', 'Context', '__copy__', 0.044194173824159216), ('django/template/engine.py', 'Engine', 'get_template', 0.044194173824159216), ('django/test/client.py', '', 'store_rendered_templates', 0.044194173824159216), ('django/utils/http.py', '', 'http_date', 0.044194173824159216), ('django/template/base.py', 'FilterExpression', '__init__', 0.04402254531628119), ('django/template/base.py', 'Variable', '__str__', 0.04402254531628119), ('django/template/base.py', 'Node', 'render', 0.04402254531628119), ('django/template/base.py', '', 'render_value_in_context', 0.04402254531628119), ('django/template/context.py', 'BaseContext', '__getitem__', 0.04402254531628119), ('django/template/defaulttags.py', 'IfNode', 'nodelist', 0.04402254531628119), ('django/template/defaulttags.py', 'TemplateLiteral', '__init__', 0.04402254531628119), ('django/template/loader.py', '', '_engine_list', 0.04402254531628119), ('django/template/utils.py', 'EngineHandler', '__getitem__', 0.04402254531628119), ('django/template/utils.py', 'EngineHandler', '__iter__', 0.04402254531628119), ('django/template/utils.py', 'EngineHandler', 'all', 0.04402254531628119), ('django/utils/timezone.py', '', 'template_localtime', 0.04402254531628119), ('django/contrib/auth/base_user.py', '', 'get_session_auth_hash', 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 'SessionBase', 'key_salt', 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 'SessionBase', 'get', 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 'SessionBase', 'decode', 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 'SessionBase', '_set_session_key', 0.0436852028330519), ('django/contrib/sessions/backends/base.py', 'SessionBase', '_get_session', 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 'SessionStore', 'get_model_class', 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 'SessionStore', 'model', 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 'SessionStore', '_get_session_from_db', 0.0436852028330519), ('django/contrib/sessions/backends/db.py', 'SessionStore', 'load', 0.0436852028330519), ('django/core/signing.py', '', 'get_cookie_signer', 0.0436852028330519), ('django/core/signing.py', '', 'dumps', 0.0436852028330519), ('django/core/signing.py', '', 'loads', 0.0436852028330519), ('django/core/signing.py', 'Signer', 'unsign', 0.0436852028330519), ('django/core/signing.py', 'Signer', 'sign_object', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'queries_logged', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'ensure_connection', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', '_prepare_cursor', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', '_cursor', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'cursor', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'validate_no_broken_transaction', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'allow_thread_sharing', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'validate_thread_sharing', 0.0436852028330519), ('django/db/backends/base/base.py', 'BaseDatabaseWrapper', 'make_cursor', 0.0436852028330519), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', 'field_cast_sql', 0.0436852028330519), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', '_get_limit_offset_params', 0.0436852028330519), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', 'limit_offset_sql', 0.0436852028330519), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', 'lookup_cast', 0.0436852028330519), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', 'compiler', 0.0436852028330519), ('django/db/backends/base/operations.py', 'BaseDatabaseOperations', 'get_db_converters', 0.0436852028330519), ('django/db/backends/sqlite3/base.py', '', 'decoder', 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 'DatabaseWrapper', 'create_cursor', 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 'SQLiteCursorWrapper', 'execute', 0.0436852028330519), ('django/db/backends/sqlite3/base.py', 'SQLiteCursorWrapper', 'convert_query', 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 'DatabaseOperations', 'quote_name', 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 'DatabaseOperations', 'adapt_datetimefield_value', 0.0436852028330519), ('django/db/backends/sqlite3/operations.py', 'DatabaseOperations', 'convert_datetimefield_value', 0.0436852028330519), ('django/db/backends/utils.py', 'CursorWrapper', '__init__', 0.0436852028330519), ('django/db/backends/utils.py', 'CursorWrapper', '__getattr__', 0.0436852028330519), ('django/db/backends/utils.py', 'CursorWrapper', 'execute', 0.0436852028330519), ('django/db/backends/utils.py', 'CursorWrapper', '_execute_with_wrappers', 0.0436852028330519), ('django/db/backends/utils.py', 'CursorWrapper', '_execute', 0.0436852028330519), ('django/db/models/base.py', 'Model', '__init__', 0.0436852028330519), ('django/db/models/base.py', 'Model', 'from_db', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', '__getstate__', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', 'get_source_expressions', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', 'set_source_expressions', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', 'contains_aggregate', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', 'get_lookup', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', 'copy', 0.0436852028330519), ('django/db/models/expressions.py', 'BaseExpression', 'select_format', 0.0436852028330519), ('django/db/models/expressions.py', 'Col', 'as_sql', 0.0436852028330519), ('django/db/models/expressions.py', 'Col', 'get_db_converters', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'get_col', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'select_format', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', '__eq__', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'db_type_parameters', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'db_type', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'get_db_converters', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'get_prep_value', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'Field', 'get_db_prep_value', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'CharField', 'get_internal_type', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'CharField', 'to_python', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'CharField', 'get_prep_value', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'DateField', 'to_python', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'DateTimeField', 'to_python', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'DateTimeField', 'get_prep_value', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'DateTimeField', 'get_db_prep_value', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'DateTimeField', 'value_to_string', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'IntegerField', 'get_prep_value', 0.0436852028330519), ('django/db/models/fields/__init__.py', 'TextField', 'to_python', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', '__init__', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'set_source_expressions', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'get_prep_lookup', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'get_db_prep_lookup', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'process_lhs', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'process_rhs', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'relabeled_clone', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'get_group_by_cols', 0.0436852028330519), ('django/db/models/lookups.py', 'Lookup', 'as_oracle', 0.0436852028330519), ('django/db/models/lookups.py', 'FieldGetDbPrepValueMixin', 'get_db_prep_lookup', 0.0436852028330519), ('django/db/models/lookups.py', 'FieldGetDbPrepValueIterableMixin', 'get_prep_lookup', 0.0436852028330519), ('django/db/models/lookups.py', 'Exact', 'as_sql', 0.0436852028330519), ('django/db/models/lookups.py', 'IExact', 'process_rhs', 0.0436852028330519), ('django/db/models/manager.py', 'BaseManager', '_get_queryset_methods', 0.0436852028330519), ('django/db/models/manager.py', 'BaseManager', 'get_queryset', 0.0436852028330519), ('django/db/models/query.py', 'BaseIterable', '__init__', 0.0436852028330519), ('django/db/models/query.py', 'ModelIterable', '__iter__', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '__init__', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '__len__', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', 'get', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', 'all', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', 'exclude', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '_filter_or_exclude', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '_annotate', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '_batched_insert', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '_chain', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '_clone', 0.0436852028330519), ('django/db/models/query.py', 'QuerySet', '_validate_values_are_expressions', 0.0436852028330519), ('django/db/models/query.py', 'RelatedPopulator', 'populate', 0.0436852028330519), ('django/db/models/query_utils.py', 'Q', '__init__', 0.0436852028330519), ('django/db/models/query_utils.py', 'RegisterLookupMixin', 'get_lookups', 0.0436852028330519), ('django/db/models/query_utils.py', 'RegisterLookupMixin', 'get_lookup', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', '__init__', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'pre_sql_setup', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_group_by', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_extra_select', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'quote_name_unless_alias', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_default_columns', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_distinct', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_from_clause', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'deferred_to_columns', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'get_converters', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'apply_converters', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'results_iter', 0.0436852028330519), ('django/db/models/sql/compiler.py', 'SQLCompiler', 'as_subquery_condition', 0.0436852028330519), ('django/db/models/sql/datastructures.py', 'BaseTable', '__init__', 0.0436852028330519), ('django/db/models/sql/datastructures.py', 'BaseTable', 'as_sql', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', '__init__', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'base_table', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'get_compiler', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'clone', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'chain', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', '_get_col', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'deferred_to_data', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'table_alias', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'promote_joins', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'demote_joins', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'reset_refcounts', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'get_initial_alias', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'join', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'join_parent_model', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'solve_lookup_type', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'check_related_objects', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'check_filterable', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'build_lookup', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'build_filter', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'add_filter', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'add_q', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'build_where', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', '_add_q', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'names_to_path', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'trim_joins', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'set_limits', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'is_sliced', 0.0436852028330519), ('django/db/models/sql/query.py', 'Query', 'can_filter', 0.0436852028330519), ('django/db/models/sql/query.py', 'JoinPromoter', '__init__', 0.0436852028330519), ('django/db/models/sql/query.py', 'JoinPromoter', 'add_votes', 0.0436852028330519), ('django/db/models/sql/query.py', 'JoinPromoter', 'update_join_types', 0.0436852028330519), ('django/db/models/sql/where.py', 'WhereNode', 'split_having', 0.0436852028330519), ('django/db/models/sql/where.py', 'WhereNode', 'as_sql', 0.0436852028330519), ('django/db/models/sql/where.py', 'WhereNode', 'clone', 0.0436852028330519), ('django/db/models/sql/where.py', 'WhereNode', '_contains_aggregate', 0.0436852028330519), ('django/db/models/sql/where.py', 'WhereNode', 'contains_aggregate', 0.0436852028330519), ('django/db/utils.py', 'DatabaseErrorWrapper', '__enter__', 0.0436852028330519), ('django/db/utils.py', 'DatabaseErrorWrapper', '__exit__', 0.0436852028330519), ('django/db/utils.py', 'DatabaseErrorWrapper', '__call__', 0.0436852028330519), ('django/db/utils.py', 'ConnectionRouter', '_router_func', 0.0436852028330519), ('django/http/cookie.py', '', 'parse_cookie', 0.0436852028330519), ('django/http/request.py', 'QueryDict', '__init__', 0.0436852028330519), ('django/http/request.py', 'QueryDict', 'encoding', 0.0436852028330519), ('django/test/client.py', 'RequestFactory', '_base_environ', 0.0436852028330519), ('django/utils/asyncio.py', '', 'async_unsafe', 0.0436852028330519), ('django/utils/crypto.py', '', 'salted_hmac', 0.0436852028330519), ('django/utils/crypto.py', '', 'constant_time_compare', 0.0436852028330519), ('django/utils/datastructures.py', 'DictWrapper', '__init__', 0.0436852028330519), ('django/utils/datastructures.py', 'DictWrapper', '__getitem__', 0.0436852028330519), ('django/utils/dateparse.py', '', 'parse_datetime', 0.0436852028330519), ('django/utils/deconstruct.py', '', 'deconstructible', 0.0436852028330519), ('django/utils/timezone.py', '', 'now', 0.0436852028330519), ('django/utils/timezone.py', '', 'is_aware', 0.0436852028330519), ('django/utils/tree.py', 'Node', '__init__', 0.0436852028330519), ('django/utils/tree.py', 'Node', '_new_instance', 0.0436852028330519), ('django/utils/tree.py', 'Node', '__bool__', 0.0436852028330519), ('django/utils/tree.py', 'Node', '__eq__', 0.0436852028330519), ('django/utils/tree.py', 'Node', 'add', 0.0436852028330519), ('django/utils/tree.py', 'Node', 'negate', 0.0436852028330519), ('django/core/handlers/base.py', 'BaseHandler', 'check_response', 0.043355498476206), ('django/http/response.py', 'HttpResponseBase', '__init__', 0.04303314829119352), ('django/contrib/sessions/middleware.py', 'SessionMiddleware', 'process_response', 0.042874646285627205), ('django/middleware/csrf.py', 'CsrfViewMiddleware', 'process_request', 0.042874646285627205), ('django/contrib/admin/sites.py', 'AdminSite', 'has_permission', 0.04271788288583805), ('django/contrib/auth/__init__.py', '', '_get_user_session_key', 0.04256282653793743), ('django/contrib/auth/__init__.py', '', 'get_user_model', 0.04256282653793743), ('django/contrib/auth/middleware.py', '', 'get_user', 0.04256282653793743), ('django/contrib/sessions/backends/base.py', 'SessionBase', '__getitem__', 0.04256282653793743), ('django/utils/functional.py', 'SimpleLazyObject', '_setup', 0.04256282653793743), ('django/core/handlers/base.py', 'BaseHandler', 'resolve_request', 0.042409446483998546), ('django/core/handlers/base.py', 'BaseHandler', 'make_view_atomic', 0.042409446483998546), ('django/template/base.py', 'Template', 'render', 0.042409446483998546), ('django/template/base.py', 'TextNode', '__repr__', 0.042409446483998546), ('django/template/context.py', 'ContextDict', '__init__', 0.042409446483998546), ('django/template/context.py', 'BaseContext', '__init__', 0.042409446483998546), ('django/template/context.py', 'BaseContext', 'pop', 0.042409446483998546), ('django/template/context.py', 'Context', '__init__', 0.042409446483998546), ('django/template/context.py', 'RenderContext', 'push_state', 0.042409446483998546), ('django/test/utils.py', '', 'instrumented_test_render', 0.042409446483998546), ('django/urls/resolvers.py', 'ResolverMatch', '__getitem__', 0.042409446483998546), ('django/contrib/auth/__init__.py', '', 'load_backend', 0.04210759605332595), ('django/db/models/manager.py', 'ManagerDescriptor', '__get__', 0.04210759605332595), ('django/db/models/options.py', 'Options', 'swapped', 0.04210759605332595), ('django/urls/resolvers.py', 'URLResolver', 'reverse_dict', 0.04210759605332595), ('django/urls/resolvers.py', 'URLResolver', 'namespace_dict', 0.04210759605332595), ('django/urls/resolvers.py', 'URLResolver', 'app_dict', 0.04210759605332595), ('django/apps/registry.py', 'Apps', 'check_apps_ready', 0.041959067914834454), ('django/apps/registry.py', 'Apps', 'get_app_config', 0.041959067914834454), ('django/dispatch/dispatcher.py', 'Signal', 'send', 0.041959067914834454), ('django/urls/base.py', '', 'get_script_prefix', 0.041959067914834454), ('django/urls/resolvers.py', 'URLResolver', '_populate', 0.041959067914834454), ('django/urls/resolvers.py', 'URLResolver', '_join_route', 0.041959067914834454), ('django/urls/resolvers.py', 'URLResolver', 'reverse', 0.041959067914834454), ('django/utils/datastructures.py', 'MultiValueDict', 'getlist', 0.041959067914834454), ('django/utils/http.py', '', 'escape_leading_slashes', 0.041959067914834454), ('django/utils/translation/__init__.py', '', 'get_language', 0.041959067914834454), ('django/db/__init__.py', '', 'reset_queries', 0.04181210050035454), ('django/urls/resolvers.py', 'ResolverMatch', '__init__', 0.04181210050035454), ('django/urls/resolvers.py', 'RoutePattern', '_compile', 0.04181210050035454), ('django/urls/resolvers.py', 'URLPattern', '_check_callback', 0.04181210050035454), ('django/urls/resolvers.py', 'URLPattern', 'resolve', 0.04181210050035454), ('django/contrib/auth/middleware.py', 'AuthenticationMiddleware', 'process_request', 0.041666666666666664), ('django/contrib/messages/middleware.py', 'MessageMiddleware', 'process_request', 0.041666666666666664), ('django/contrib/messages/middleware.py', 'MessageMiddleware', 'process_response', 0.041666666666666664), ('django/contrib/messages/storage/__init__.py', '', 'default_storage', 0.041666666666666664), ('django/contrib/messages/storage/base.py', 'BaseStorage', '__init__', 0.041666666666666664), ('django/contrib/messages/storage/base.py', 'BaseStorage', 'update', 0.041666666666666664), ('django/contrib/messages/storage/cookie.py', 'CookieStorage', '__init__', 0.041666666666666664), ('django/contrib/messages/storage/fallback.py', 'FallbackStorage', '__init__', 0.041666666666666664), ('django/contrib/messages/storage/session.py', 'SessionStorage', '__init__', 0.041666666666666664), ('django/middleware/common.py', 'CommonMiddleware', 'process_request', 0.041666666666666664), ('django/middleware/common.py', 'CommonMiddleware', 'should_redirect_with_slash', 0.041666666666666664), ('django/middleware/csrf.py', 'CsrfViewMiddleware', '_accept', 0.041666666666666664), ('django/middleware/csrf.py', 'CsrfViewMiddleware', '_reject', 0.041666666666666664), ('django/middleware/csrf.py', 'CsrfViewMiddleware', '_check_token', 0.041666666666666664), ('django/core/handlers/wsgi.py', '', 'get_script_name', 0.041522739926869986), ('django/contrib/sessions/backends/base.py', 'SessionBase', '__init__', 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 'SessionBase', 'is_empty', 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 'SessionBase', '_validate_session_key', 0.0413802944301184), ('django/contrib/sessions/backends/base.py', 'SessionBase', '_get_session_key', 0.0413802944301184), ('django/contrib/sessions/backends/db.py', 'SessionStore', '__init__', 0.0413802944301184), ('django/contrib/sessions/middleware.py', 'SessionMiddleware', '__init__', 0.0413802944301184), ('django/contrib/sessions/middleware.py', 'SessionMiddleware', 'process_request', 0.0413802944301184), ('django/core/cache/backends/base.py', 'BaseCache', 'close', 0.0413802944301184), ('django/core/handlers/base.py', 'BaseHandler', 'load_middleware', 0.0413802944301184), ('django/core/handlers/base.py', 'BaseHandler', 'adapt_method_mode', 0.0413802944301184), ('django/core/handlers/base.py', 'BaseHandler', 'get_response', 0.0413802944301184), ('django/core/handlers/base.py', '', 'reset_urlconf', 0.0413802944301184), ('django/core/handlers/exception.py', '', 'convert_exception_to_response', 0.0413802944301184), ('django/core/handlers/wsgi.py', 'LimitedStream', '__init__', 0.0413802944301184), ('django/core/handlers/wsgi.py', 'WSGIRequest', '__init__', 0.0413802944301184), ('django/core/handlers/wsgi.py', 'WSGIRequest', '_get_scheme', 0.0413802944301184), ('django/core/handlers/wsgi.py', 'WSGIRequest', 'COOKIES', 0.0413802944301184), ('django/core/handlers/wsgi.py', '', 'get_path_info', 0.0413802944301184), ('django/core/handlers/wsgi.py', '', 'get_bytes_from_wsgi', 0.0413802944301184), ('django/core/handlers/wsgi.py', '', 'get_str_from_wsgi', 0.0413802944301184), ('django/dispatch/dispatcher.py', '', '_make_id', 0.0413802944301184), ('django/dispatch/dispatcher.py', 'Signal', 'connect', 0.0413802944301184), ('django/dispatch/dispatcher.py', 'Signal', 'disconnect', 0.0413802944301184), ('django/dispatch/dispatcher.py', 'Signal', '_clear_dead_receivers', 0.0413802944301184), ('django/dispatch/dispatcher.py', 'Signal', '_live_receivers', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', '_set_content_type_params', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', '_get_raw_host', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', 'get_host', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', 'get_port', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', 'get_full_path', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', '_get_full_path', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', 'scheme', 0.0413802944301184), ('django/http/request.py', 'HttpRequest', 'is_secure', 0.0413802944301184), ('django/http/request.py', '', 'split_domain_port', 0.0413802944301184), ('django/http/request.py', '', 'validate_host', 0.0413802944301184), ('django/http/response.py', 'ResponseHeaders', '__init__', 0.0413802944301184), ('django/http/response.py', 'ResponseHeaders', '_convert_to_charset', 0.0413802944301184), ('django/http/response.py', 'ResponseHeaders', '__setitem__', 0.0413802944301184), ('django/http/response.py', 'HttpResponseBase', 'items', 0.0413802944301184), ('django/http/response.py', 'HttpResponseBase', 'make_bytes', 0.0413802944301184), ('django/http/response.py', 'HttpResponseBase', 'close', 0.0413802944301184), ('django/http/response.py', 'HttpResponseBase', 'write', 0.0413802944301184), ('django/http/response.py', 'HttpResponse', '__repr__', 0.0413802944301184), ('django/http/response.py', 'HttpResponse', 'content', 0.0413802944301184), ('django/http/response.py', 'HttpResponse', '__iter__', 0.0413802944301184), ('django/middleware/common.py', 'CommonMiddleware', 'process_response', 0.0413802944301184), ('django/test/client.py', 'FakePayload', '__init__', 0.0413802944301184), ('django/test/client.py', 'FakePayload', 'write', 0.0413802944301184), ('django/test/client.py', '', 'conditional_content_removal', 0.0413802944301184), ('django/test/client.py', 'ClientHandler', '__call__', 0.0413802944301184), ('django/test/client.py', 'RequestFactory', '_get_path', 0.0413802944301184), ('django/test/client.py', 'ClientMixin', 'check_exception', 0.0413802944301184), ('django/urls/base.py', '', 'set_urlconf', 0.0413802944301184), ('django/urls/resolvers.py', 'URLResolver', '_is_callback', 0.0413802944301184), ('django/utils/connection.py', 'BaseConnectionHandler', '__getitem__', 0.0413802944301184), ('django/utils/connection.py', 'BaseConnectionHandler', '__iter__', 0.0413802944301184), ('django/utils/connection.py', 'BaseConnectionHandler', 'all', 0.0413802944301184), ('django/utils/datastructures.py', 'CaseInsensitiveMapping', '__getitem__', 0.0413802944301184), ('django/utils/deprecation.py', 'MiddlewareMixin', '__init__', 0.0413802944301184), ('django/utils/deprecation.py', 'MiddlewareMixin', '_async_check', 0.0413802944301184), ('django/utils/deprecation.py', 'MiddlewareMixin', '__call__', 0.0413802944301184), ('django/utils/encoding.py', '', 'force_bytes', 0.0413802944301184), ('django/utils/encoding.py', '', 'escape_uri_path', 0.0413802944301184), ('django/utils/encoding.py', '', 'repercent_broken_unicode', 0.0413802944301184), ('django/utils/functional.py', 'LazyObject', '__init__', 0.0413802944301184), ('django/utils/functional.py', 'LazyObject', '__setattr__', 0.0413802944301184), ('django/utils/functional.py', 'SimpleLazyObject', '__init__', 0.0413802944301184), ('django/utils/http.py', '', 'is_same_domain', 0.0413802944301184), ('django/utils/module_loading.py', '', 'import_string', 0.0413802944301184), ('django/urls/resolvers.py', 'RoutePattern', 'match', 0.041239304942116126), ('django/urls/resolvers.py', 'URLResolver', '_extend_tried', 0.041239304942116126), ('django/urls/resolvers.py', 'RegexPattern', '__init__', 0.04109974682633932), ('django/urls/resolvers.py', 'RegexPattern', 'match', 0.04109974682633932), ('django/urls/resolvers.py', 'RoutePattern', '__init__', 0.04109974682633932), ('django/urls/base.py', '', 'get_urlconf', 0.04096159602595203), ('django/urls/resolvers.py', 'ResolverMatch', '__reduce_ex__', 0.04096159602595203)]
2024-04-05 05:23:37 
========== Conversation Round 0 ==========
2024-04-05 05:23:37 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Add `nonform` CSS class for non form errors in FormSets\n'
             'Description\n'
             '(last modified by Ties Jan Hefting)\n'
             'Forms add the nonfield CSS class for non field errors in ErrorList instances. This is documented in a section on \u200brendering form error '
             "messages. Similarly, in FormSets I'd expect to see the nonform CSS class added for non form errors. This would allow a custom ErrorList to make "
             "a distinction in form field errors, non field errors (forms) and non form errors (FormSets) when rendering error messages. Therefore I'd suggest "
             'to add this nonform CSS class and document it for developers to use.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '}]
2024-04-05 05:23:41 Model API request cost info: input_tokens=628, output_tokens=86, cost=0.008860
2024-04-05 05:23:41 Raw model response: ChatCompletionMessage(content='search_class("BaseFormSet")\nsearch_class("ErrorList")\nsearch_method_in_file("cleaned_data", "django/forms/formsets.py")\nsearch_method_in_file("full_clean", "django/forms/formsets.py")\nsearch_method_in_file("as_ul", "django/forms/utils.py")\nsearch_method_in_file("errors", "django/forms/formsets.py")\nsearch_method_in_file("__getitem__", "django/forms/utils.py")', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:23:41 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 05:23:48 Model API request cost info: input_tokens=406, output_tokens=124, cost=0.007780
2024-04-05 05:23:48 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [\n        "search_class(\\"BaseFormSet\\")",\n        "search_class(\\"ErrorList\\")",\n        "search_method_in_file(\\"cleaned_data\\", \\"django/forms/formsets.py\\")",\n        "search_method_in_file(\\"full_clean\\", \\"django/forms/formsets.py\\")",\n        "search_method_in_file(\\"as_ul\\", \\"django/forms/utils.py\\")",\n        "search_method_in_file(\\"errors\\", \\"django/forms/formsets.py\\")",\n        "search_method_in_file(\\"__getitem__\\", \\"django/forms/utils.py\\")"\n    ],\n    "bug_locations": []\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:23:48 Raw issue json produced. Writing issue json into file.
2024-04-05 05:23:48 Extracted a valid json. Congratulations!
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_class("BaseFormSet")': malformed node or string on line 1: <ast.Name object at 0x7f0ecf32a140>
2024-04-05 05:23:48 Result of dispatch_intent: ("Found 1 classes with name BaseFormSet in the codebase.\nSearch result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <code>class BaseFormSet:\n    ordering_widget = NumberInput\n    default_error_messages = {\n        'missing_management_form': _(\n            'ManagementForm data is missing or has been tampered with. Missing fields: '\n            '%(field_names)s. You may need to file a bug report if the issue persists.'\n        ),\n    }\n    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n                 initial=None, error_class=ErrorList, form_kwargs=None,\n                 error_messages=None):\n    def __str__(self):\n    def __iter__(self):\n    def __getitem__(self, index):\n    def __len__(self):\n    def __bool__(self):\n    @cached_property\n    def management_form(self):\n    def total_form_count(self):\n    def initial_form_count(self):\n    @cached_property\n    def forms(self):\n    def get_form_kwargs(self, index):\n    def _construct_form(self, i, **kwargs):\n    @property\n    def initial_forms(self):\n    @property\n    def extra_forms(self):\n    @property\n    def empty_form(self):\n    @property\n    def cleaned_data(self):\n    @property\n    def deleted_forms(self):\n    @property\n    def ordered_forms(self):\n    @classmethod\n    def get_default_prefix(cls):\n    @classmethod\n    def get_ordering_widget(cls):\n    def non_form_errors(self):\n    @property\n    def errors(self):\n    def total_error_count(self):\n    def _should_delete_form(self, form):\n    def is_valid(self):\n    def full_clean(self):\n    def clean(self):\n    def has_changed(self):\n    def add_fields(self, form, index):\n    def add_prefix(self, index):\n    def is_multipart(self):\n    @property\n    def media(self):\n    def as_table(self):\n    def as_p(self):\n    def as_ul(self):\n</code>\n\n", 'The tool returned information about class `BaseFormSet`.', True)
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_class("ErrorList")': malformed node or string on line 1: <ast.Name object at 0x7f0ed12fc310>
2024-04-05 05:23:48 Result of dispatch_intent: ('Found 1 classes with name ErrorList in the codebase.\nSearch result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <code>class ErrorList(UserList, list):\n    def __init__(self, initlist=None, error_class=None):\n    def as_data(self):\n    def copy(self):\n    def get_json_data(self, escape_html=False):\n    def as_json(self, escape_html=False):\n    def as_ul(self):\n    def as_text(self):\n    def __str__(self):\n    def __repr__(self):\n    def __contains__(self, item):\n    def __eq__(self, other):\n    def __getitem__(self, i):\n    def __reduce_ex__(self, *args, **kwargs):\n</code>\n\n', 'The tool returned information about class `ErrorList`.', True)
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_method_in_file("cleaned_data", "django/forms/formsets.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed1377430>
2024-04-05 05:23:48 Result of dispatch_intent: ('Found 1 methods with name `cleaned_data` in file django/forms/formsets.py.\nSearch result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func> <code>    def cleaned_data(self):\n        """\n        Return a list of form.cleaned_data dicts for every form in self.forms.\n        """\n        if not self.is_valid():\n            raise AttributeError("\'%s\' object has no attribute \'cleaned_data\'" % self.__class__.__name__)\n        return [form.cleaned_data for form in self.forms]\n</code>\n\n', 'Found 1 methods with name `cleaned_data` in file django/forms/formsets.py.\n', True)
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_method_in_file("full_clean", "django/forms/formsets.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed1376b30>
2024-04-05 05:23:48 Result of dispatch_intent: ('Found 1 methods with name `full_clean` in file django/forms/formsets.py.\nSearch result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func> <code>    def full_clean(self):\n        """\n        Clean all of self.data and populate self._errors and\n        self._non_form_errors.\n        """\n        self._errors = []\n        self._non_form_errors = self.error_class()\n        empty_forms_count = 0\n\n        if not self.is_bound:  # Stop further processing.\n            return\n\n        if not self.management_form.is_valid():\n            error = ValidationError(\n                self.error_messages[\'missing_management_form\'],\n                params={\n                    \'field_names\': \', \'.join(\n                        self.management_form.add_prefix(field_name)\n                        for field_name in self.management_form.errors\n                    ),\n                },\n                code=\'missing_management_form\',\n            )\n            self._non_form_errors.append(error)\n\n        for i, form in enumerate(self.forms):\n            # Empty forms are unchanged forms beyond those with initial data.\n            if not form.has_changed() and i >= self.initial_form_count():\n                empty_forms_count += 1\n            # Accessing errors calls full_clean() if necessary.\n            # _should_delete_form() requires cleaned_data.\n            form_errors = form.errors\n            if self.can_delete and self._should_delete_form(form):\n                continue\n            self._errors.append(form_errors)\n        try:\n            if (self.validate_max and\n                    self.total_form_count() - len(self.deleted_forms) > self.max_num) or \\\n                    self.management_form.cleaned_data[TOTAL_FORM_COUNT] > self.absolute_max:\n                raise ValidationError(ngettext(\n                    "Please submit at most %d form.",\n                    "Please submit at most %d forms.", self.max_num) % self.max_num,\n                    code=\'too_many_forms\',\n                )\n            if (self.validate_min and\n                    self.total_form_count() - len(self.deleted_forms) - empty_forms_count < self.min_num):\n                raise ValidationError(ngettext(\n                    "Please submit at least %d form.",\n                    "Please submit at least %d forms.", self.min_num) % self.min_num,\n                    code=\'too_few_forms\')\n            # Give self.clean() a chance to do cross-form validation.\n            self.clean()\n        except ValidationError as e:\n            self._non_form_errors = self.error_class(e.error_list)\n</code>\n\n', 'Found 1 methods with name `full_clean` in file django/forms/formsets.py.\n', True)
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_method_in_file("as_ul", "django/forms/utils.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed1374160>
2024-04-05 05:23:48 Result of dispatch_intent: ('Found 2 methods with name `as_ul` in file django/forms/utils.py.\nSearch result 1: <file>django/forms/utils.py</file> <class>ErrorDict</class> <func>as_ul</func> <code>    def as_ul(self):\n        if not self:\n            return \'\'\n        return format_html(\n            \'<ul class="errorlist">{}</ul>\',\n            format_html_join(\'\', \'<li>{}{}</li>\', self.items())\n        )\n</code>\n\nSearch result 2: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func> <code>    def as_ul(self):\n        if not self.data:\n            return \'\'\n\n        return format_html(\n            \'<ul class="{}">{}</ul>\',\n            self.error_class,\n            format_html_join(\'\', \'<li>{}</li>\', ((e,) for e in self))\n        )\n</code>\n\n', 'Found 2 methods with name `as_ul` in file django/forms/utils.py.\n', True)
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_method_in_file("errors", "django/forms/formsets.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed1376e60>
2024-04-05 05:23:48 Result of dispatch_intent: ('Found 1 methods with name `errors` in file django/forms/formsets.py.\nSearch result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func> <code>    def errors(self):\n        """Return a list of form.errors for every form in self.forms."""\n        if self._errors is None:\n            self.full_clean()\n        return self._errors\n</code>\n\n', 'Found 1 methods with name `errors` in file django/forms/formsets.py.\n', True)
2024-04-05 05:23:48 Refactored invocation argument parsing failed on 'search_method_in_file("__getitem__", "django/forms/utils.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed1375300>
2024-04-05 05:23:48 Result of dispatch_intent: ('Found 1 methods with name `__getitem__` in file django/forms/utils.py.\nSearch result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func> <code>    def __getitem__(self, i):\n        error = self.data[i]\n        if isinstance(error, ValidationError):\n            return next(iter(error))\n        return error\n</code>\n\n', 'Found 1 methods with name `__getitem__` in file django/forms/utils.py.\n', True)
2024-04-05 05:24:19 Model API request cost info: input_tokens=2440, output_tokens=564, cost=0.041320
2024-04-05 05:24:19 Raw model response: ChatCompletionMessage(content="Based on the collected context from the search results, here's an analysis of the relevant parts of the Django codebase that pertain to the issue of adding a `nonform` CSS class for non-form errors in FormSets:\n\n1. **BaseFormSet Class**: This class in `django/forms/formsets.py` is central to handling formsets in Django. It contains methods that manage the formset's lifecycle, including validation and error handling. The `full_clean` method is particularly relevant because it populates `_non_form_errors`, which are errors not associated with a specific form in the formset.\n\n2. **ErrorList Class**: Located in `django/forms/utils.py`, this class is used to store and render errors. The `as_ul` method renders the errors as an unordered list (`<ul>`), and it uses the `error_class` attribute to add a CSS class to the `<ul>`. Currently, there is no distinction between different types of errors (field errors, non-field errors, and non-form errors) in terms of CSS classes applied.\n\n3. **Relevant Methods**:\n    - `BaseFormSet.cleaned_data`: Returns cleaned data for each form in the formset. It raises an AttributeError if the formset is not valid, indicating that error handling is closely tied to formset validation.\n    - `BaseFormSet.full_clean`: This method performs the cleaning process for all forms in the formset and populates error lists, including `_non_form_errors`. This is a key area for implementing the addition of a `nonform` CSS class for non-form errors.\n    - `ErrorList.as_ul`: Renders errors stored in an `ErrorList` instance as an unordered list. The method currently applies a CSS class stored in `self.error_class` to the `<ul>` element. This method could be modified or extended to differentiate between error types.\n\n4. **Error Handling**: The `full_clean` method of `BaseFormSet` and the `as_ul` method of `ErrorList` are central to how errors are handled and displayed. The `full_clean` method is where non-form errors are collected, and the `as_ul` method is where these errors are rendered into HTML.\n\nTo address the issue, modifications are likely needed in both the `BaseFormSet` and `ErrorList` classes. Specifically, the `full_clean` method in `BaseFormSet` could be adjusted to tag non-form errors with a distinct identifier (or directly apply the `nonform` CSS class), and the `ErrorList.as_ul` method could be modified to render these errors with the `nonform` CSS class when appropriate. Additionally, documentation updates will be necessary to inform developers of the new `nonform` CSS class and its intended use.", role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:24:19 
========== Conversation Round 1 ==========
2024-04-05 05:24:19 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Add `nonform` CSS class for non form errors in FormSets\n'
             'Description\n'
             '(last modified by Ties Jan Hefting)\n'
             'Forms add the nonfield CSS class for non field errors in ErrorList instances. This is documented in a section on \u200brendering form error '
             "messages. Similarly, in FormSets I'd expect to see the nonform CSS class added for non form errors. This would allow a custom ErrorList to make "
             "a distinction in form field errors, non field errors (forms) and non form errors (FormSets) when rendering error messages. Therefore I'd suggest "
             'to add this nonform CSS class and document it for developers to use.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'search_class("BaseFormSet")\n'
             'search_class("ErrorList")\n'
             'search_method_in_file("cleaned_data", "django/forms/formsets.py")\n'
             'search_method_in_file("full_clean", "django/forms/formsets.py")\n'
             'search_method_in_file("as_ul", "django/forms/utils.py")\n'
             'search_method_in_file("errors", "django/forms/formsets.py")\n'
             'search_method_in_file("__getitem__", "django/forms/utils.py")'},
 {'role': 'user',
  'content': 'Result of search_class("BaseFormSet"):\n'
             'Found 1 classes with name BaseFormSet in the codebase.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <code>class BaseFormSet:\n'
             '    ordering_widget = NumberInput\n'
             '    default_error_messages = {\n'
             "        'missing_management_form': _(\n"
             "            'ManagementForm data is missing or has been tampered with. Missing fields: '\n"
             "            '%(field_names)s. You may need to file a bug report if the issue persists.'\n"
             '        ),\n'
             '    }\n'
             "    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n"
             '                 initial=None, error_class=ErrorList, form_kwargs=None,\n'
             '                 error_messages=None):\n'
             '    def __str__(self):\n'
             '    def __iter__(self):\n'
             '    def __getitem__(self, index):\n'
             '    def __len__(self):\n'
             '    def __bool__(self):\n'
             '    @cached_property\n'
             '    def management_form(self):\n'
             '    def total_form_count(self):\n'
             '    def initial_form_count(self):\n'
             '    @cached_property\n'
             '    def forms(self):\n'
             '    def get_form_kwargs(self, index):\n'
             '    def _construct_form(self, i, **kwargs):\n'
             '    @property\n'
             '    def initial_forms(self):\n'
             '    @property\n'
             '    def extra_forms(self):\n'
             '    @property\n'
             '    def empty_form(self):\n'
             '    @property\n'
             '    def cleaned_data(self):\n'
             '    @property\n'
             '    def deleted_forms(self):\n'
             '    @property\n'
             '    def ordered_forms(self):\n'
             '    @classmethod\n'
             '    def get_default_prefix(cls):\n'
             '    @classmethod\n'
             '    def get_ordering_widget(cls):\n'
             '    def non_form_errors(self):\n'
             '    @property\n'
             '    def errors(self):\n'
             '    def total_error_count(self):\n'
             '    def _should_delete_form(self, form):\n'
             '    def is_valid(self):\n'
             '    def full_clean(self):\n'
             '    def clean(self):\n'
             '    def has_changed(self):\n'
             '    def add_fields(self, form, index):\n'
             '    def add_prefix(self, index):\n'
             '    def is_multipart(self):\n'
             '    @property\n'
             '    def media(self):\n'
             '    def as_table(self):\n'
             '    def as_p(self):\n'
             '    def as_ul(self):\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_class("ErrorList"):\n'
             'Found 1 classes with name ErrorList in the codebase.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <code>class ErrorList(UserList, list):\n'
             '    def __init__(self, initlist=None, error_class=None):\n'
             '    def as_data(self):\n'
             '    def copy(self):\n'
             '    def get_json_data(self, escape_html=False):\n'
             '    def as_json(self, escape_html=False):\n'
             '    def as_ul(self):\n'
             '    def as_text(self):\n'
             '    def __str__(self):\n'
             '    def __repr__(self):\n'
             '    def __contains__(self, item):\n'
             '    def __eq__(self, other):\n'
             '    def __getitem__(self, i):\n'
             '    def __reduce_ex__(self, *args, **kwargs):\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("cleaned_data", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `cleaned_data` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func> <code>    def cleaned_data(self):\n'
             '        """\n'
             '        Return a list of form.cleaned_data dicts for every form in self.forms.\n'
             '        """\n'
             '        if not self.is_valid():\n'
             '            raise AttributeError("\'%s\' object has no attribute \'cleaned_data\'" % self.__class__.__name__)\n'
             '        return [form.cleaned_data for form in self.forms]\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("full_clean", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `full_clean` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func> <code>    def full_clean(self):\n'
             '        """\n'
             '        Clean all of self.data and populate self._errors and\n'
             '        self._non_form_errors.\n'
             '        """\n'
             '        self._errors = []\n'
             '        self._non_form_errors = self.error_class()\n'
             '        empty_forms_count = 0\n'
             '\n'
             '        if not self.is_bound:  # Stop further processing.\n'
             '            return\n'
             '\n'
             '        if not self.management_form.is_valid():\n'
             '            error = ValidationError(\n'
             "                self.error_messages['missing_management_form'],\n"
             '                params={\n'
             "                    'field_names': ', '.join(\n"
             '                        self.management_form.add_prefix(field_name)\n'
             '                        for field_name in self.management_form.errors\n'
             '                    ),\n'
             '                },\n'
             "                code='missing_management_form',\n"
             '            )\n'
             '            self._non_form_errors.append(error)\n'
             '\n'
             '        for i, form in enumerate(self.forms):\n'
             '            # Empty forms are unchanged forms beyond those with initial data.\n'
             '            if not form.has_changed() and i >= self.initial_form_count():\n'
             '                empty_forms_count += 1\n'
             '            # Accessing errors calls full_clean() if necessary.\n'
             '            # _should_delete_form() requires cleaned_data.\n'
             '            form_errors = form.errors\n'
             '            if self.can_delete and self._should_delete_form(form):\n'
             '                continue\n'
             '            self._errors.append(form_errors)\n'
             '        try:\n'
             '            if (self.validate_max and\n'
             '                    self.total_form_count() - len(self.deleted_forms) > self.max_num) or \\\n'
             '                    self.management_form.cleaned_data[TOTAL_FORM_COUNT] > self.absolute_max:\n'
             '                raise ValidationError(ngettext(\n'
             '                    "Please submit at most %d form.",\n'
             '                    "Please submit at most %d forms.", self.max_num) % self.max_num,\n'
             "                    code='too_many_forms',\n"
             '                )\n'
             '            if (self.validate_min and\n'
             '                    self.total_form_count() - len(self.deleted_forms) - empty_forms_count < self.min_num):\n'
             '                raise ValidationError(ngettext(\n'
             '                    "Please submit at least %d form.",\n'
             '                    "Please submit at least %d forms.", self.min_num) % self.min_num,\n'
             "                    code='too_few_forms')\n"
             '            # Give self.clean() a chance to do cross-form validation.\n'
             '            self.clean()\n'
             '        except ValidationError as e:\n'
             '            self._non_form_errors = self.error_class(e.error_list)\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("as_ul", "django/forms/utils.py"):\n'
             'Found 2 methods with name `as_ul` in file django/forms/utils.py.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorDict</class> <func>as_ul</func> <code>    def as_ul(self):\n'
             '        if not self:\n'
             "            return ''\n"
             '        return format_html(\n'
             '            \'<ul class="errorlist">{}</ul>\',\n'
             "            format_html_join('', '<li>{}{}</li>', self.items())\n"
             '        )\n'
             '</code>\n'
             '\n'
             'Search result 2: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func> <code>    def as_ul(self):\n'
             '        if not self.data:\n'
             "            return ''\n"
             '\n'
             '        return format_html(\n'
             '            \'<ul class="{}">{}</ul>\',\n'
             '            self.error_class,\n'
             "            format_html_join('', '<li>{}</li>', ((e,) for e in self))\n"
             '        )\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("errors", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `errors` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func> <code>    def errors(self):\n'
             '        """Return a list of form.errors for every form in self.forms."""\n'
             '        if self._errors is None:\n'
             '            self.full_clean()\n'
             '        return self._errors\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("__getitem__", "django/forms/utils.py"):\n'
             'Found 1 methods with name `__getitem__` in file django/forms/utils.py.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func> <code>    def __getitem__(self, i):\n'
             '        error = self.data[i]\n'
             '        if isinstance(error, ValidationError):\n'
             '            return next(iter(error))\n'
             '        return error\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': "Based on the collected context from the search results, here's an analysis of the relevant parts of the Django codebase that pertain to the "
             'issue of adding a `nonform` CSS class for non-form errors in FormSets:\n'
             '\n'
             '1. **BaseFormSet Class**: This class in `django/forms/formsets.py` is central to handling formsets in Django. It contains methods that manage '
             "the formset's lifecycle, including validation and error handling. The `full_clean` method is particularly relevant because it populates "
             '`_non_form_errors`, which are errors not associated with a specific form in the formset.\n'
             '\n'
             '2. **ErrorList Class**: Located in `django/forms/utils.py`, this class is used to store and render errors. The `as_ul` method renders the errors '
             'as an unordered list (`<ul>`), and it uses the `error_class` attribute to add a CSS class to the `<ul>`. Currently, there is no distinction '
             'between different types of errors (field errors, non-field errors, and non-form errors) in terms of CSS classes applied.\n'
             '\n'
             '3. **Relevant Methods**:\n'
             '    - `BaseFormSet.cleaned_data`: Returns cleaned data for each form in the formset. It raises an AttributeError if the formset is not valid, '
             'indicating that error handling is closely tied to formset validation.\n'
             '    - `BaseFormSet.full_clean`: This method performs the cleaning process for all forms in the formset and populates error lists, including '
             '`_non_form_errors`. This is a key area for implementing the addition of a `nonform` CSS class for non-form errors.\n'
             '    - `ErrorList.as_ul`: Renders errors stored in an `ErrorList` instance as an unordered list. The method currently applies a CSS class stored '
             'in `self.error_class` to the `<ul>` element. This method could be modified or extended to differentiate between error types.\n'
             '\n'
             '4. **Error Handling**: The `full_clean` method of `BaseFormSet` and the `as_ul` method of `ErrorList` are central to how errors are handled and '
             'displayed. The `full_clean` method is where non-form errors are collected, and the `as_ul` method is where these errors are rendered into HTML.\n'
             '\n'
             'To address the issue, modifications are likely needed in both the `BaseFormSet` and `ErrorList` classes. Specifically, the `full_clean` method '
             'in `BaseFormSet` could be adjusted to tag non-form errors with a distinct identifier (or directly apply the `nonform` CSS class), and the '
             '`ErrorList.as_ul` method could be modified to render these errors with the `nonform` CSS class when appropriate. Additionally, documentation '
             'updates will be necessary to inform developers of the new `nonform` CSS class and its intended use.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'}]
2024-04-05 05:24:25 Model API request cost info: input_tokens=3077, output_tokens=139, cost=0.034940
2024-04-05 05:24:25 Raw model response: ChatCompletionMessage(content='- do we need more context:\n\n- where are bug locations: \n  - **Buggy files and methods**:\n    1. **File**: `django/forms/formsets.py`\n       - **Method**: `BaseFormSet.full_clean` - This method handles the validation and error collection for formsets, including non-form errors. Modifications here could ensure non-form errors are correctly identified and tagged for CSS styling.\n    2. **File**: `django/forms/utils.py`\n       - **Method**: `ErrorList.as_ul` - This method renders errors as an unordered list. Adjustments here could allow for the differentiation of non-form errors with the `nonform` CSS class.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:24:25 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 05:24:27 Model API request cost info: input_tokens=459, output_tokens=66, cost=0.006570
2024-04-05 05:24:27 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [],\n    "bug_locations": [\n        {\n            "file": "django/forms/formsets.py",\n            "method": "BaseFormSet.full_clean"\n        },\n        {\n            "file": "django/forms/utils.py",\n            "method": "ErrorList.as_ul"\n        }\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:24:27 Raw issue json produced. Writing issue json into file.
2024-04-05 05:24:27 Extracted a valid json. Congratulations!
2024-04-05 05:24:27 Result of dispatch_intent: ('The method BaseFormSet.full_clean does not appear in the codebase.', 'The method BaseFormSet.full_clean does not appear in the codebase.', False)
2024-04-05 05:24:27 Result of dispatch_intent: ('Could not find method BaseFormSet.full_clean in the codebase.', 'Could not find method BaseFormSet.full_clean in the codebase.', False)
2024-04-05 05:24:27 Result of dispatch_intent: ('The method ErrorList.as_ul does not appear in the codebase.', 'The method ErrorList.as_ul does not appear in the codebase.', False)
2024-04-05 05:24:27 Result of dispatch_intent: ('Could not find method ErrorList.as_ul in the codebase.', 'Could not find method ErrorList.as_ul in the codebase.', False)
2024-04-05 05:24:27 
========== Conversation Round 2 ==========
2024-04-05 05:24:27 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Add `nonform` CSS class for non form errors in FormSets\n'
             'Description\n'
             '(last modified by Ties Jan Hefting)\n'
             'Forms add the nonfield CSS class for non field errors in ErrorList instances. This is documented in a section on \u200brendering form error '
             "messages. Similarly, in FormSets I'd expect to see the nonform CSS class added for non form errors. This would allow a custom ErrorList to make "
             "a distinction in form field errors, non field errors (forms) and non form errors (FormSets) when rendering error messages. Therefore I'd suggest "
             'to add this nonform CSS class and document it for developers to use.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'search_class("BaseFormSet")\n'
             'search_class("ErrorList")\n'
             'search_method_in_file("cleaned_data", "django/forms/formsets.py")\n'
             'search_method_in_file("full_clean", "django/forms/formsets.py")\n'
             'search_method_in_file("as_ul", "django/forms/utils.py")\n'
             'search_method_in_file("errors", "django/forms/formsets.py")\n'
             'search_method_in_file("__getitem__", "django/forms/utils.py")'},
 {'role': 'user',
  'content': 'Result of search_class("BaseFormSet"):\n'
             'Found 1 classes with name BaseFormSet in the codebase.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <code>class BaseFormSet:\n'
             '    ordering_widget = NumberInput\n'
             '    default_error_messages = {\n'
             "        'missing_management_form': _(\n"
             "            'ManagementForm data is missing or has been tampered with. Missing fields: '\n"
             "            '%(field_names)s. You may need to file a bug report if the issue persists.'\n"
             '        ),\n'
             '    }\n'
             "    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n"
             '                 initial=None, error_class=ErrorList, form_kwargs=None,\n'
             '                 error_messages=None):\n'
             '    def __str__(self):\n'
             '    def __iter__(self):\n'
             '    def __getitem__(self, index):\n'
             '    def __len__(self):\n'
             '    def __bool__(self):\n'
             '    @cached_property\n'
             '    def management_form(self):\n'
             '    def total_form_count(self):\n'
             '    def initial_form_count(self):\n'
             '    @cached_property\n'
             '    def forms(self):\n'
             '    def get_form_kwargs(self, index):\n'
             '    def _construct_form(self, i, **kwargs):\n'
             '    @property\n'
             '    def initial_forms(self):\n'
             '    @property\n'
             '    def extra_forms(self):\n'
             '    @property\n'
             '    def empty_form(self):\n'
             '    @property\n'
             '    def cleaned_data(self):\n'
             '    @property\n'
             '    def deleted_forms(self):\n'
             '    @property\n'
             '    def ordered_forms(self):\n'
             '    @classmethod\n'
             '    def get_default_prefix(cls):\n'
             '    @classmethod\n'
             '    def get_ordering_widget(cls):\n'
             '    def non_form_errors(self):\n'
             '    @property\n'
             '    def errors(self):\n'
             '    def total_error_count(self):\n'
             '    def _should_delete_form(self, form):\n'
             '    def is_valid(self):\n'
             '    def full_clean(self):\n'
             '    def clean(self):\n'
             '    def has_changed(self):\n'
             '    def add_fields(self, form, index):\n'
             '    def add_prefix(self, index):\n'
             '    def is_multipart(self):\n'
             '    @property\n'
             '    def media(self):\n'
             '    def as_table(self):\n'
             '    def as_p(self):\n'
             '    def as_ul(self):\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_class("ErrorList"):\n'
             'Found 1 classes with name ErrorList in the codebase.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <code>class ErrorList(UserList, list):\n'
             '    def __init__(self, initlist=None, error_class=None):\n'
             '    def as_data(self):\n'
             '    def copy(self):\n'
             '    def get_json_data(self, escape_html=False):\n'
             '    def as_json(self, escape_html=False):\n'
             '    def as_ul(self):\n'
             '    def as_text(self):\n'
             '    def __str__(self):\n'
             '    def __repr__(self):\n'
             '    def __contains__(self, item):\n'
             '    def __eq__(self, other):\n'
             '    def __getitem__(self, i):\n'
             '    def __reduce_ex__(self, *args, **kwargs):\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("cleaned_data", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `cleaned_data` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func> <code>    def cleaned_data(self):\n'
             '        """\n'
             '        Return a list of form.cleaned_data dicts for every form in self.forms.\n'
             '        """\n'
             '        if not self.is_valid():\n'
             '            raise AttributeError("\'%s\' object has no attribute \'cleaned_data\'" % self.__class__.__name__)\n'
             '        return [form.cleaned_data for form in self.forms]\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("full_clean", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `full_clean` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func> <code>    def full_clean(self):\n'
             '        """\n'
             '        Clean all of self.data and populate self._errors and\n'
             '        self._non_form_errors.\n'
             '        """\n'
             '        self._errors = []\n'
             '        self._non_form_errors = self.error_class()\n'
             '        empty_forms_count = 0\n'
             '\n'
             '        if not self.is_bound:  # Stop further processing.\n'
             '            return\n'
             '\n'
             '        if not self.management_form.is_valid():\n'
             '            error = ValidationError(\n'
             "                self.error_messages['missing_management_form'],\n"
             '                params={\n'
             "                    'field_names': ', '.join(\n"
             '                        self.management_form.add_prefix(field_name)\n'
             '                        for field_name in self.management_form.errors\n'
             '                    ),\n'
             '                },\n'
             "                code='missing_management_form',\n"
             '            )\n'
             '            self._non_form_errors.append(error)\n'
             '\n'
             '        for i, form in enumerate(self.forms):\n'
             '            # Empty forms are unchanged forms beyond those with initial data.\n'
             '            if not form.has_changed() and i >= self.initial_form_count():\n'
             '                empty_forms_count += 1\n'
             '            # Accessing errors calls full_clean() if necessary.\n'
             '            # _should_delete_form() requires cleaned_data.\n'
             '            form_errors = form.errors\n'
             '            if self.can_delete and self._should_delete_form(form):\n'
             '                continue\n'
             '            self._errors.append(form_errors)\n'
             '        try:\n'
             '            if (self.validate_max and\n'
             '                    self.total_form_count() - len(self.deleted_forms) > self.max_num) or \\\n'
             '                    self.management_form.cleaned_data[TOTAL_FORM_COUNT] > self.absolute_max:\n'
             '                raise ValidationError(ngettext(\n'
             '                    "Please submit at most %d form.",\n'
             '                    "Please submit at most %d forms.", self.max_num) % self.max_num,\n'
             "                    code='too_many_forms',\n"
             '                )\n'
             '            if (self.validate_min and\n'
             '                    self.total_form_count() - len(self.deleted_forms) - empty_forms_count < self.min_num):\n'
             '                raise ValidationError(ngettext(\n'
             '                    "Please submit at least %d form.",\n'
             '                    "Please submit at least %d forms.", self.min_num) % self.min_num,\n'
             "                    code='too_few_forms')\n"
             '            # Give self.clean() a chance to do cross-form validation.\n'
             '            self.clean()\n'
             '        except ValidationError as e:\n'
             '            self._non_form_errors = self.error_class(e.error_list)\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("as_ul", "django/forms/utils.py"):\n'
             'Found 2 methods with name `as_ul` in file django/forms/utils.py.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorDict</class> <func>as_ul</func> <code>    def as_ul(self):\n'
             '        if not self:\n'
             "            return ''\n"
             '        return format_html(\n'
             '            \'<ul class="errorlist">{}</ul>\',\n'
             "            format_html_join('', '<li>{}{}</li>', self.items())\n"
             '        )\n'
             '</code>\n'
             '\n'
             'Search result 2: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func> <code>    def as_ul(self):\n'
             '        if not self.data:\n'
             "            return ''\n"
             '\n'
             '        return format_html(\n'
             '            \'<ul class="{}">{}</ul>\',\n'
             '            self.error_class,\n'
             "            format_html_join('', '<li>{}</li>', ((e,) for e in self))\n"
             '        )\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("errors", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `errors` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func> <code>    def errors(self):\n'
             '        """Return a list of form.errors for every form in self.forms."""\n'
             '        if self._errors is None:\n'
             '            self.full_clean()\n'
             '        return self._errors\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("__getitem__", "django/forms/utils.py"):\n'
             'Found 1 methods with name `__getitem__` in file django/forms/utils.py.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func> <code>    def __getitem__(self, i):\n'
             '        error = self.data[i]\n'
             '        if isinstance(error, ValidationError):\n'
             '            return next(iter(error))\n'
             '        return error\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': "Based on the collected context from the search results, here's an analysis of the relevant parts of the Django codebase that pertain to the "
             'issue of adding a `nonform` CSS class for non-form errors in FormSets:\n'
             '\n'
             '1. **BaseFormSet Class**: This class in `django/forms/formsets.py` is central to handling formsets in Django. It contains methods that manage '
             "the formset's lifecycle, including validation and error handling. The `full_clean` method is particularly relevant because it populates "
             '`_non_form_errors`, which are errors not associated with a specific form in the formset.\n'
             '\n'
             '2. **ErrorList Class**: Located in `django/forms/utils.py`, this class is used to store and render errors. The `as_ul` method renders the errors '
             'as an unordered list (`<ul>`), and it uses the `error_class` attribute to add a CSS class to the `<ul>`. Currently, there is no distinction '
             'between different types of errors (field errors, non-field errors, and non-form errors) in terms of CSS classes applied.\n'
             '\n'
             '3. **Relevant Methods**:\n'
             '    - `BaseFormSet.cleaned_data`: Returns cleaned data for each form in the formset. It raises an AttributeError if the formset is not valid, '
             'indicating that error handling is closely tied to formset validation.\n'
             '    - `BaseFormSet.full_clean`: This method performs the cleaning process for all forms in the formset and populates error lists, including '
             '`_non_form_errors`. This is a key area for implementing the addition of a `nonform` CSS class for non-form errors.\n'
             '    - `ErrorList.as_ul`: Renders errors stored in an `ErrorList` instance as an unordered list. The method currently applies a CSS class stored '
             'in `self.error_class` to the `<ul>` element. This method could be modified or extended to differentiate between error types.\n'
             '\n'
             '4. **Error Handling**: The `full_clean` method of `BaseFormSet` and the `as_ul` method of `ErrorList` are central to how errors are handled and '
             'displayed. The `full_clean` method is where non-form errors are collected, and the `as_ul` method is where these errors are rendered into HTML.\n'
             '\n'
             'To address the issue, modifications are likely needed in both the `BaseFormSet` and `ErrorList` classes. Specifically, the `full_clean` method '
             'in `BaseFormSet` could be adjusted to tag non-form errors with a distinct identifier (or directly apply the `nonform` CSS class), and the '
             '`ErrorList.as_ul` method could be modified to render these errors with the `nonform` CSS class when appropriate. Additionally, documentation '
             'updates will be necessary to inform developers of the new `nonform` CSS class and its intended use.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'},
 {'role': 'assistant',
  'content': '- do we need more context:\n'
             '\n'
             '- where are bug locations: \n'
             '  - **Buggy files and methods**:\n'
             '    1. **File**: `django/forms/formsets.py`\n'
             '       - **Method**: `BaseFormSet.full_clean` - This method handles the validation and error collection for formsets, including non-form errors. '
             'Modifications here could ensure non-form errors are correctly identified and tagged for CSS styling.\n'
             '    2. **File**: `django/forms/utils.py`\n'
             '       - **Method**: `ErrorList.as_ul` - This method renders errors as an unordered list. Adjustments here could allow for the differentiation '
             'of non-form errors with the `nonform` CSS class.'},
 {'role': 'user', 'content': 'The buggy locations is not precise. You may need to check whether the arguments are correct and search more information.'}]
2024-04-05 05:24:44 Model API request cost info: input_tokens=3246, output_tokens=579, cost=0.049830
2024-04-05 05:24:44 Raw model response: ChatCompletionMessage(content="Given the feedback, it seems necessary to refine our understanding of where exactly the modifications need to be made to address the issue of adding a `nonform` CSS class for non-form errors in FormSets. To get a more precise location for the bug and how to implement the `nonform` CSS class effectively, let's consider additional context that might be needed:\n\n1. **Understanding how `error_class` is used and instantiated across FormSets and ErrorLists**: Since the `ErrorList` class uses the `error_class` attribute to apply CSS classes, understanding how this attribute is set and used across different contexts (FormSets vs. individual forms) could provide insight into where adjustments are needed.\n\n2. **Exploring how non-form errors are distinguished from other errors in the codebase**: It's crucial to understand the current mechanism for distinguishing non-form errors from field-specific errors and non-field errors within a form. This could involve looking at how errors are collected and rendered in both forms and formsets.\n\n3. **Reviewing the documentation and default templates for rendering errors**: The default templates and documentation for Django's form and formset error rendering might offer clues on how errors are typically classified and displayed, which could inform how the `nonform` CSS class should be integrated.\n\nBased on these considerations, additional context might be needed from the following areas:\n\n1. **How `error_class` is set for `ErrorList` instances within `BaseFormSet`**: This could involve searching for where `ErrorList` instances are created within the `BaseFormSet` class and how the `error_class` attribute is determined.\n\n2. **Default rendering behavior for non-form errors in formsets**: Understanding the current default behavior for rendering non-form errors in formsets could highlight where changes are necessary to introduce the `nonform` CSS class.\n\nHowever, since the instructions were to leave the search API calls section empty if no further context is needed based on the initial analysis, and considering the feedback, it appears we should proceed with the information at hand:\n\n- **Buggy locations**:\n  - **File**: `django/forms/formsets.py`\n    - **Method**: `BaseFormSet.full_clean` - This method is responsible for cleaning the formset and populating errors, including non-form errors. It's a potential location for ensuring non-form errors are correctly identified for CSS styling.\n  - **File**: `django/forms/utils.py`\n    - **Method**: `ErrorList.as_ul` - Since this method renders the errors to HTML, it's a critical point for applying the `nonform` CSS class to non-form errors.\n\nGiven the nature of the issue, it's clear that the implementation of the `nonform` CSS class involves both identifying non-form errors correctly within the formset validation process and rendering these errors with the appropriate CSS class in the HTML output.", role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:24:44 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 05:24:47 Model API request cost info: input_tokens=899, output_tokens=66, cost=0.010970
2024-04-05 05:24:47 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [],\n    "bug_locations":[\n        {\n            "file": "django/forms/formsets.py",\n            "method": "BaseFormSet.full_clean"\n        },\n        {\n            "file": "django/forms/utils.py",\n            "method": "ErrorList.as_ul"\n        }\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:24:47 Raw issue json produced. Writing issue json into file.
2024-04-05 05:24:47 Extracted a valid json. Congratulations!
2024-04-05 05:24:47 Result of dispatch_intent: ('The method BaseFormSet.full_clean does not appear in the codebase.', 'The method BaseFormSet.full_clean does not appear in the codebase.', False)
2024-04-05 05:24:47 Result of dispatch_intent: ('Could not find method BaseFormSet.full_clean in the codebase.', 'Could not find method BaseFormSet.full_clean in the codebase.', False)
2024-04-05 05:24:47 Result of dispatch_intent: ('The method ErrorList.as_ul does not appear in the codebase.', 'The method ErrorList.as_ul does not appear in the codebase.', False)
2024-04-05 05:24:47 Result of dispatch_intent: ('Could not find method ErrorList.as_ul in the codebase.', 'Could not find method ErrorList.as_ul in the codebase.', False)
2024-04-05 05:24:47 
========== Conversation Round 3 ==========
2024-04-05 05:24:47 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Add `nonform` CSS class for non form errors in FormSets\n'
             'Description\n'
             '(last modified by Ties Jan Hefting)\n'
             'Forms add the nonfield CSS class for non field errors in ErrorList instances. This is documented in a section on \u200brendering form error '
             "messages. Similarly, in FormSets I'd expect to see the nonform CSS class added for non form errors. This would allow a custom ErrorList to make "
             "a distinction in form field errors, non field errors (forms) and non form errors (FormSets) when rendering error messages. Therefore I'd suggest "
             'to add this nonform CSS class and document it for developers to use.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'search_class("BaseFormSet")\n'
             'search_class("ErrorList")\n'
             'search_method_in_file("cleaned_data", "django/forms/formsets.py")\n'
             'search_method_in_file("full_clean", "django/forms/formsets.py")\n'
             'search_method_in_file("as_ul", "django/forms/utils.py")\n'
             'search_method_in_file("errors", "django/forms/formsets.py")\n'
             'search_method_in_file("__getitem__", "django/forms/utils.py")'},
 {'role': 'user',
  'content': 'Result of search_class("BaseFormSet"):\n'
             'Found 1 classes with name BaseFormSet in the codebase.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <code>class BaseFormSet:\n'
             '    ordering_widget = NumberInput\n'
             '    default_error_messages = {\n'
             "        'missing_management_form': _(\n"
             "            'ManagementForm data is missing or has been tampered with. Missing fields: '\n"
             "            '%(field_names)s. You may need to file a bug report if the issue persists.'\n"
             '        ),\n'
             '    }\n'
             "    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,\n"
             '                 initial=None, error_class=ErrorList, form_kwargs=None,\n'
             '                 error_messages=None):\n'
             '    def __str__(self):\n'
             '    def __iter__(self):\n'
             '    def __getitem__(self, index):\n'
             '    def __len__(self):\n'
             '    def __bool__(self):\n'
             '    @cached_property\n'
             '    def management_form(self):\n'
             '    def total_form_count(self):\n'
             '    def initial_form_count(self):\n'
             '    @cached_property\n'
             '    def forms(self):\n'
             '    def get_form_kwargs(self, index):\n'
             '    def _construct_form(self, i, **kwargs):\n'
             '    @property\n'
             '    def initial_forms(self):\n'
             '    @property\n'
             '    def extra_forms(self):\n'
             '    @property\n'
             '    def empty_form(self):\n'
             '    @property\n'
             '    def cleaned_data(self):\n'
             '    @property\n'
             '    def deleted_forms(self):\n'
             '    @property\n'
             '    def ordered_forms(self):\n'
             '    @classmethod\n'
             '    def get_default_prefix(cls):\n'
             '    @classmethod\n'
             '    def get_ordering_widget(cls):\n'
             '    def non_form_errors(self):\n'
             '    @property\n'
             '    def errors(self):\n'
             '    def total_error_count(self):\n'
             '    def _should_delete_form(self, form):\n'
             '    def is_valid(self):\n'
             '    def full_clean(self):\n'
             '    def clean(self):\n'
             '    def has_changed(self):\n'
             '    def add_fields(self, form, index):\n'
             '    def add_prefix(self, index):\n'
             '    def is_multipart(self):\n'
             '    @property\n'
             '    def media(self):\n'
             '    def as_table(self):\n'
             '    def as_p(self):\n'
             '    def as_ul(self):\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_class("ErrorList"):\n'
             'Found 1 classes with name ErrorList in the codebase.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <code>class ErrorList(UserList, list):\n'
             '    def __init__(self, initlist=None, error_class=None):\n'
             '    def as_data(self):\n'
             '    def copy(self):\n'
             '    def get_json_data(self, escape_html=False):\n'
             '    def as_json(self, escape_html=False):\n'
             '    def as_ul(self):\n'
             '    def as_text(self):\n'
             '    def __str__(self):\n'
             '    def __repr__(self):\n'
             '    def __contains__(self, item):\n'
             '    def __eq__(self, other):\n'
             '    def __getitem__(self, i):\n'
             '    def __reduce_ex__(self, *args, **kwargs):\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("cleaned_data", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `cleaned_data` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>cleaned_data</func> <code>    def cleaned_data(self):\n'
             '        """\n'
             '        Return a list of form.cleaned_data dicts for every form in self.forms.\n'
             '        """\n'
             '        if not self.is_valid():\n'
             '            raise AttributeError("\'%s\' object has no attribute \'cleaned_data\'" % self.__class__.__name__)\n'
             '        return [form.cleaned_data for form in self.forms]\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("full_clean", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `full_clean` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func> <code>    def full_clean(self):\n'
             '        """\n'
             '        Clean all of self.data and populate self._errors and\n'
             '        self._non_form_errors.\n'
             '        """\n'
             '        self._errors = []\n'
             '        self._non_form_errors = self.error_class()\n'
             '        empty_forms_count = 0\n'
             '\n'
             '        if not self.is_bound:  # Stop further processing.\n'
             '            return\n'
             '\n'
             '        if not self.management_form.is_valid():\n'
             '            error = ValidationError(\n'
             "                self.error_messages['missing_management_form'],\n"
             '                params={\n'
             "                    'field_names': ', '.join(\n"
             '                        self.management_form.add_prefix(field_name)\n'
             '                        for field_name in self.management_form.errors\n'
             '                    ),\n'
             '                },\n'
             "                code='missing_management_form',\n"
             '            )\n'
             '            self._non_form_errors.append(error)\n'
             '\n'
             '        for i, form in enumerate(self.forms):\n'
             '            # Empty forms are unchanged forms beyond those with initial data.\n'
             '            if not form.has_changed() and i >= self.initial_form_count():\n'
             '                empty_forms_count += 1\n'
             '            # Accessing errors calls full_clean() if necessary.\n'
             '            # _should_delete_form() requires cleaned_data.\n'
             '            form_errors = form.errors\n'
             '            if self.can_delete and self._should_delete_form(form):\n'
             '                continue\n'
             '            self._errors.append(form_errors)\n'
             '        try:\n'
             '            if (self.validate_max and\n'
             '                    self.total_form_count() - len(self.deleted_forms) > self.max_num) or \\\n'
             '                    self.management_form.cleaned_data[TOTAL_FORM_COUNT] > self.absolute_max:\n'
             '                raise ValidationError(ngettext(\n'
             '                    "Please submit at most %d form.",\n'
             '                    "Please submit at most %d forms.", self.max_num) % self.max_num,\n'
             "                    code='too_many_forms',\n"
             '                )\n'
             '            if (self.validate_min and\n'
             '                    self.total_form_count() - len(self.deleted_forms) - empty_forms_count < self.min_num):\n'
             '                raise ValidationError(ngettext(\n'
             '                    "Please submit at least %d form.",\n'
             '                    "Please submit at least %d forms.", self.min_num) % self.min_num,\n'
             "                    code='too_few_forms')\n"
             '            # Give self.clean() a chance to do cross-form validation.\n'
             '            self.clean()\n'
             '        except ValidationError as e:\n'
             '            self._non_form_errors = self.error_class(e.error_list)\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("as_ul", "django/forms/utils.py"):\n'
             'Found 2 methods with name `as_ul` in file django/forms/utils.py.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorDict</class> <func>as_ul</func> <code>    def as_ul(self):\n'
             '        if not self:\n'
             "            return ''\n"
             '        return format_html(\n'
             '            \'<ul class="errorlist">{}</ul>\',\n'
             "            format_html_join('', '<li>{}{}</li>', self.items())\n"
             '        )\n'
             '</code>\n'
             '\n'
             'Search result 2: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func> <code>    def as_ul(self):\n'
             '        if not self.data:\n'
             "            return ''\n"
             '\n'
             '        return format_html(\n'
             '            \'<ul class="{}">{}</ul>\',\n'
             '            self.error_class,\n'
             "            format_html_join('', '<li>{}</li>', ((e,) for e in self))\n"
             '        )\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("errors", "django/forms/formsets.py"):\n'
             'Found 1 methods with name `errors` in file django/forms/formsets.py.\n'
             'Search result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>errors</func> <code>    def errors(self):\n'
             '        """Return a list of form.errors for every form in self.forms."""\n'
             '        if self._errors is None:\n'
             '            self.full_clean()\n'
             '        return self._errors\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_method_in_file("__getitem__", "django/forms/utils.py"):\n'
             'Found 1 methods with name `__getitem__` in file django/forms/utils.py.\n'
             'Search result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>__getitem__</func> <code>    def __getitem__(self, i):\n'
             '        error = self.data[i]\n'
             '        if isinstance(error, ValidationError):\n'
             '            return next(iter(error))\n'
             '        return error\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': "Based on the collected context from the search results, here's an analysis of the relevant parts of the Django codebase that pertain to the "
             'issue of adding a `nonform` CSS class for non-form errors in FormSets:\n'
             '\n'
             '1. **BaseFormSet Class**: This class in `django/forms/formsets.py` is central to handling formsets in Django. It contains methods that manage '
             "the formset's lifecycle, including validation and error handling. The `full_clean` method is particularly relevant because it populates "
             '`_non_form_errors`, which are errors not associated with a specific form in the formset.\n'
             '\n'
             '2. **ErrorList Class**: Located in `django/forms/utils.py`, this class is used to store and render errors. The `as_ul` method renders the errors '
             'as an unordered list (`<ul>`), and it uses the `error_class` attribute to add a CSS class to the `<ul>`. Currently, there is no distinction '
             'between different types of errors (field errors, non-field errors, and non-form errors) in terms of CSS classes applied.\n'
             '\n'
             '3. **Relevant Methods**:\n'
             '    - `BaseFormSet.cleaned_data`: Returns cleaned data for each form in the formset. It raises an AttributeError if the formset is not valid, '
             'indicating that error handling is closely tied to formset validation.\n'
             '    - `BaseFormSet.full_clean`: This method performs the cleaning process for all forms in the formset and populates error lists, including '
             '`_non_form_errors`. This is a key area for implementing the addition of a `nonform` CSS class for non-form errors.\n'
             '    - `ErrorList.as_ul`: Renders errors stored in an `ErrorList` instance as an unordered list. The method currently applies a CSS class stored '
             'in `self.error_class` to the `<ul>` element. This method could be modified or extended to differentiate between error types.\n'
             '\n'
             '4. **Error Handling**: The `full_clean` method of `BaseFormSet` and the `as_ul` method of `ErrorList` are central to how errors are handled and '
             'displayed. The `full_clean` method is where non-form errors are collected, and the `as_ul` method is where these errors are rendered into HTML.\n'
             '\n'
             'To address the issue, modifications are likely needed in both the `BaseFormSet` and `ErrorList` classes. Specifically, the `full_clean` method '
             'in `BaseFormSet` could be adjusted to tag non-form errors with a distinct identifier (or directly apply the `nonform` CSS class), and the '
             '`ErrorList.as_ul` method could be modified to render these errors with the `nonform` CSS class when appropriate. Additionally, documentation '
             'updates will be necessary to inform developers of the new `nonform` CSS class and its intended use.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'},
 {'role': 'assistant',
  'content': '- do we need more context:\n'
             '\n'
             '- where are bug locations: \n'
             '  - **Buggy files and methods**:\n'
             '    1. **File**: `django/forms/formsets.py`\n'
             '       - **Method**: `BaseFormSet.full_clean` - This method handles the validation and error collection for formsets, including non-form errors. '
             'Modifications here could ensure non-form errors are correctly identified and tagged for CSS styling.\n'
             '    2. **File**: `django/forms/utils.py`\n'
             '       - **Method**: `ErrorList.as_ul` - This method renders errors as an unordered list. Adjustments here could allow for the differentiation '
             'of non-form errors with the `nonform` CSS class.'},
 {'role': 'user', 'content': 'The buggy locations is not precise. You may need to check whether the arguments are correct and search more information.'},
 {'role': 'assistant',
  'content': 'Given the feedback, it seems necessary to refine our understanding of where exactly the modifications need to be made to address the issue of '
             'adding a `nonform` CSS class for non-form errors in FormSets. To get a more precise location for the bug and how to implement the `nonform` CSS '
             "class effectively, let's consider additional context that might be needed:\n"
             '\n'
             '1. **Understanding how `error_class` is used and instantiated across FormSets and ErrorLists**: Since the `ErrorList` class uses the '
             '`error_class` attribute to apply CSS classes, understanding how this attribute is set and used across different contexts (FormSets vs. '
             'individual forms) could provide insight into where adjustments are needed.\n'
             '\n'
             "2. **Exploring how non-form errors are distinguished from other errors in the codebase**: It's crucial to understand the current mechanism for "
             'distinguishing non-form errors from field-specific errors and non-field errors within a form. This could involve looking at how errors are '
             'collected and rendered in both forms and formsets.\n'
             '\n'
             "3. **Reviewing the documentation and default templates for rendering errors**: The default templates and documentation for Django's form and "
             'formset error rendering might offer clues on how errors are typically classified and displayed, which could inform how the `nonform` CSS class '
             'should be integrated.\n'
             '\n'
             'Based on these considerations, additional context might be needed from the following areas:\n'
             '\n'
             '1. **How `error_class` is set for `ErrorList` instances within `BaseFormSet`**: This could involve searching for where `ErrorList` instances are '
             'created within the `BaseFormSet` class and how the `error_class` attribute is determined.\n'
             '\n'
             '2. **Default rendering behavior for non-form errors in formsets**: Understanding the current default behavior for rendering non-form errors in '
             'formsets could highlight where changes are necessary to introduce the `nonform` CSS class.\n'
             '\n'
             'However, since the instructions were to leave the search API calls section empty if no further context is needed based on the initial analysis, '
             'and considering the feedback, it appears we should proceed with the information at hand:\n'
             '\n'
             '- **Buggy locations**:\n'
             '  - **File**: `django/forms/formsets.py`\n'
             '    - **Method**: `BaseFormSet.full_clean` - This method is responsible for cleaning the formset and populating errors, including non-form '
             "errors. It's a potential location for ensuring non-form errors are correctly identified for CSS styling.\n"
             '  - **File**: `django/forms/utils.py`\n'
             "    - **Method**: `ErrorList.as_ul` - Since this method renders the errors to HTML, it's a critical point for applying the `nonform` CSS class "
             'to non-form errors.\n'
             '\n'
             "Given the nature of the issue, it's clear that the implementation of the `nonform` CSS class involves both identifying non-form errors correctly "
             'within the formset validation process and rendering these errors with the appropriate CSS class in the HTML output.'},
 {'role': 'user', 'content': 'The buggy locations is not precise. You may need to check whether the arguments are correct and search more information.'}]
2024-04-05 05:25:08 Model API request cost info: input_tokens=3855, output_tokens=442, cost=0.051810
2024-04-05 05:25:08 Raw model response: ChatCompletionMessage(content='Given the feedback and the need for further precision in identifying the exact locations for the bug fix, it appears additional context or a reevaluation of the current information is necessary. However, based on the instructions and the information already gathered, I will proceed with a refined approach to identifying the bug locations without additional search API calls.\n\nBased on the analysis of the provided code snippets and the issue description, the implementation of a `nonform` CSS class for non-form errors in FormSets should involve modifications in the following areas:\n\n1. **django/forms/formsets.py (BaseFormSet class)**:\n   - The `full_clean` method is a key location because it handles the validation and error collection for the entire formset, including non-form errors. This method populates the `_non_form_errors` attribute, which is crucial for identifying errors that are not associated with any specific form in the formset.\n\n2. **django/forms/utils.py (ErrorList class)**:\n   - The `as_ul` method in the `ErrorList` class is responsible for rendering the errors into an HTML unordered list. Since this method applies CSS classes to the error messages, it is a critical point for integrating the `nonform` CSS class for non-form errors.\n\nGiven the nature of the issue, which involves both the identification and rendering of non-form errors with a specific CSS class, the bug locations are as follows:\n\n- **Buggy files and methods**:\n  - **File**: `django/forms/formsets.py`\n    - **Method**: `BaseFormSet.full_clean` - Modifications here should ensure that non-form errors are correctly identified and tagged for CSS styling, potentially by setting an attribute or a flag that can be recognized in the rendering phase.\n  - **File**: `django/forms/utils.py`\n    - **Method**: `ErrorList.as_ul` - Adjustments here should allow for the differentiation of non-form errors using the `nonform` CSS class when rendering the errors to HTML.\n\nThese locations are identified based on the understanding that to address the issue, we need to ensure non-form errors are both correctly identified during the formset validation process and rendered with the appropriate CSS class in the HTML output.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:25:08 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 05:25:13 Model API request cost info: input_tokens=762, output_tokens=78, cost=0.009960
2024-04-05 05:25:13 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [],\n    "bug_locations": [\n        {\n            "file": "django/forms/formsets.py",\n            "class": "BaseFormSet",\n            "method": "full_clean"\n        },\n        {\n            "file": "django/forms/utils.py",\n            "class": "ErrorList",\n            "method": "as_ul"\n        }\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:25:13 Raw issue json produced. Writing issue json into file.
2024-04-05 05:25:13 Extracted a valid json. Congratulations!
2024-04-05 05:25:13 Result of dispatch_intent: ('Found 1 methods with name full_clean in class BaseFormSet.\nSearch result 1: <file>django/forms/formsets.py</file> <class>BaseFormSet</class> <func>full_clean</func> <code>    def full_clean(self):\n        """\n        Clean all of self.data and populate self._errors and\n        self._non_form_errors.\n        """\n        self._errors = []\n        self._non_form_errors = self.error_class()\n        empty_forms_count = 0\n\n        if not self.is_bound:  # Stop further processing.\n            return\n\n        if not self.management_form.is_valid():\n            error = ValidationError(\n                self.error_messages[\'missing_management_form\'],\n                params={\n                    \'field_names\': \', \'.join(\n                        self.management_form.add_prefix(field_name)\n                        for field_name in self.management_form.errors\n                    ),\n                },\n                code=\'missing_management_form\',\n            )\n            self._non_form_errors.append(error)\n\n        for i, form in enumerate(self.forms):\n            # Empty forms are unchanged forms beyond those with initial data.\n            if not form.has_changed() and i >= self.initial_form_count():\n                empty_forms_count += 1\n            # Accessing errors calls full_clean() if necessary.\n            # _should_delete_form() requires cleaned_data.\n            form_errors = form.errors\n            if self.can_delete and self._should_delete_form(form):\n                continue\n            self._errors.append(form_errors)\n        try:\n            if (self.validate_max and\n                    self.total_form_count() - len(self.deleted_forms) > self.max_num) or \\\n                    self.management_form.cleaned_data[TOTAL_FORM_COUNT] > self.absolute_max:\n                raise ValidationError(ngettext(\n                    "Please submit at most %d form.",\n                    "Please submit at most %d forms.", self.max_num) % self.max_num,\n                    code=\'too_many_forms\',\n                )\n            if (self.validate_min and\n                    self.total_form_count() - len(self.deleted_forms) - empty_forms_count < self.min_num):\n                raise ValidationError(ngettext(\n                    "Please submit at least %d form.",\n                    "Please submit at least %d forms.", self.min_num) % self.min_num,\n                    code=\'too_few_forms\')\n            # Give self.clean() a chance to do cross-form validation.\n            self.clean()\n        except ValidationError as e:\n            self._non_form_errors = self.error_class(e.error_list)\n</code>\n\nOther results are in these files:\n', 'Found 1 methods with name full_clean in class BaseFormSet.\n', True)
2024-04-05 05:25:13 Result of dispatch_intent: ('Found 1 methods with name as_ul in class ErrorList.\nSearch result 1: <file>django/forms/utils.py</file> <class>ErrorList</class> <func>as_ul</func> <code>    def as_ul(self):\n        if not self.data:\n            return \'\'\n\n        return format_html(\n            \'<ul class="{}">{}</ul>\',\n            self.error_class,\n            format_html_join(\'\', \'<li>{}</li>\', ((e,) for e in self))\n        )\n</code>\n\nOther results are in these files:\n', 'Found 1 methods with name as_ul in class ErrorList.\n', True)
2024-04-05 05:25:13 Gathered enough information. Invoking write_patch.
2024-04-05 05:25:13 Trying to write a patch. Try 1 of 3.
2024-04-05 05:25:41 Model API request cost info: input_tokens=5100, output_tokens=397, cost=0.062910
2024-04-05 05:25:41 Raw model response: ChatCompletionMessage(content='# modification 1\n```python\n<file>django/forms/utils.py</file>\n<original>    def as_ul(self):\n        if not self.data:\n            return \'\'\n\n        return format_html(\n            \'<ul class="{}">{}</ul>\',\n            self.error_class,\n            format_html_join(\'\', \'<li>{}</li>\', ((e,) for e in self))\n        )</original>\n<patched>    def as_ul(self, non_form_errors=False):\n        if not self.data:\n            return \'\'\n        css_class = self.error_class\n        if non_form_errors:\n            css_class += " nonform"\n        return format_html(\n            \'<ul class="{}">{}</ul>\',\n            css_class,\n            format_html_join(\'\', \'<li>{}</li>\', ((e,) for e in self))\n        )</patched>\n```\n\n# modification 2\n```python\n<file>django/forms/formsets.py</file>\n<original>        except ValidationError as e:\n            self._non_form_errors = self.error_class(e.error_list)</original>\n<patched>        except ValidationError as e:\n            self._non_form_errors = self.error_class(e.error_list)\n            # Apply the nonform CSS class to non-form errors\n            self._non_form_errors.error_class += " nonform"</patched>\n```\n\nThese modifications address the issue by adding the capability to distinguish non-form errors in FormSets with a specific CSS class (`nonform`). The first modification in `django/forms/utils.py` adds an optional parameter to the `ErrorList.as_ul` method to indicate when it is being called for non-form errors, appending the `nonform` CSS class accordingly. The second modification in `django/forms/formsets.py` ensures that when non-form errors are added to the `_non_form_errors` attribute, they are marked with the `nonform` CSS class by modifying the `error_class` attribute of the `ErrorList` instance.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 05:25:41 Raw patch produced in try 1. Writing patch into file.
2024-04-05 05:25:41 [Validation] Applied patch. Going to run test suite.
2024-04-05 05:25:41 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_django__django__4.0 ; ./tests/runtests.py --verbosity 2 admin_views.tests forms_tests.tests.test_formsets ; conda deactivate
2024-04-05 05:25:45 [Run test-suite] Result of parsing test log: True
2024-04-05 05:25:45 [Run test-suite] Eval status: {'Cancelling the deletion of an object takes the user back one page.': 'SKIPPED', 'Cancelling the deletion of an object with relations takes the user back': 'SKIPPED', "The 'collapse' class in fieldsets definition allows to": 'SKIPPED', 'JavaScript-assisted auto-focus on first usable form field.': 'SKIPPED', 'test_inline_uuid_pk_add_with_popup (admin_views.tests.SeleniumTests)': 'SKIPPED', 'test_inline_uuid_pk_delete_with_popup (admin_views.tests.SeleniumTests)': 'SKIPPED', 'test_inline_uuid_pk_edit_with_popup (admin_views.tests.SeleniumTests)': 'SKIPPED', 'Clicking ""No, take me back" on a delete popup closes the window.': 'SKIPPED', "Browsers' default stylesheets override the font of inputs. The admin": 'SKIPPED', 'list_editable foreign keys have add/change popups.': 'SKIPPED', 'test_list_editable_raw_id_fields (admin_views.tests.SeleniumTests)': 'SKIPPED', 'test_login_button_centered (admin_views.tests.SeleniumTests)': 'SKIPPED', 'The prepopulation works for existing objects too, as long as': 'SKIPPED', 'The JavaScript-automated prepopulated fields work with the main form': 'SKIPPED', 'test_search_input_filtered_page (admin_views.tests.SeleniumTests)': 'SKIPPED', 'all_valid() validates all forms, even when some are invalid.': 'PASSED', 'test_valid (forms_tests.tests.test_formsets.AllValidTests)': 'PASSED', 'is_multipart() works with an empty formset.': 'PASSED', 'An empty formset still calls clean()': 'PASSED', 'Media is available on empty formset.': 'PASSED', 'test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)': 'PASSED', 'test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)': 'PASSED', 'test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)': 'PASSED', 'test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)': 'PASSED', 'test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)': 'PASSED', 'test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)': 'PASSED', 'test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)': 'PASSED', 'test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)': 'PASSED', 'test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)': 'PASSED', 'test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'A FormSet constructor takes the same arguments as Form. Create a': 'PASSED', "A form that's displayed as blank may be submitted as blank.": 'PASSED', 'test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', "FormSets have a clean() hook for doing extra validation that isn't tied": 'PASSED', 'test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'Deleting prefilled data is an error. Removing data from form fields': 'PASSED', 'test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', "More than 1 empty form can be displayed using formset_factory's": 'PASSED', 'Ordering fields are allowed to be left blank. If they are left blank,': 'PASSED', 'test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'Custom kwargs set on the formset instance are passed to the': 'PASSED', 'Form kwargs can be passed dynamically in a formset.': 'PASSED', 'Formsets call is_valid() on each form.': 'PASSED', "Formset's forms use the formset's error_class.": 'PASSED', 'FormSet.has_changed() is True if any data is passed to its forms, even': 'PASSED', 'A FormSet can be prefilled with existing data by providing a list of': 'PASSED', 'Formset instances are iterable.': 'PASSED', 'A formsets without any forms evaluates as True.': 'PASSED', 'Formset works with SplitDateTimeField(initial=datetime.datetime.now).': 'PASSED', 'A valid formset should have 0 total errors.': 'PASSED', 'test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'If validate_max is set and max_num is less than TOTAL_FORMS in the': 'PASSED', 'test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'If validate_min is set and min_num is more than TOTAL_FORMS in the': 'PASSED', "min_num validation doesn't consider unchanged forms with initial data": 'PASSED', 'test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', "A formset's ManagementForm is validated once per FormSet.is_valid()": 'PASSED', 'formset_factory\'s can_delete argument adds a boolean "delete" field to': 'PASSED', 'deleted_forms works on a valid formset even if a deleted form would': 'PASSED', 'If a form is filled with something and can_delete is also checked, that': 'PASSED', 'FormSets with ordering + deletion.': 'PASSED', 'test_formsets_with_order_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', "formset_factory's can_order argument adds an integer field to each": 'PASSED', 'A formset has a hard limit on the number of forms instantiated.': 'PASSED', 'test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'Can increase the built-in forms limit via a higher max_num.': 'PASSED', 'Can get ordered_forms from a valid formset even if a deleted form': 'PASSED', 'test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'max_num has no effect when extra is less than max_num.': 'PASSED', 'Limiting the maximum number of forms with max_num.': 'PASSED', 'The management form has the correct prefix.': 'PASSED', 'test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'If max_num is 0 then no form is rendered at all, regardless of extra,': 'PASSED', 'test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', "More than 1 empty form can also be displayed using formset_factory's": 'PASSED', 'More than 1 empty form can be displayed using min_num.': 'PASSED', 'The extra argument works when the formset is pre-filled with initial': 'PASSED', 'One form from initial and extra=3 with max_num=2 results in the one': 'PASSED', 'More initial forms than max_num results in all initial forms being': 'PASSED', 'test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'If non_form_errors() is called without calling is_valid() first,': 'PASSED', 'Ordering works with blank fieldsets.': 'PASSED', 'If at least one field is filled out on a blank form, it will be': 'PASSED', 'A partially completed form is invalid.': 'PASSED', 'Just one form may be completed.': 'PASSED', 'test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)': 'PASSED', 'test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)': 'PASSED', 'test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)': 'PASSED', 'test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)': 'PASSED', 'InlineModelAdmin broken?': 'PASSED', 'test_lang_name_present (admin_views.tests.ValidXHTMLTests)': 'PASSED', 'test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)': 'PASSED', 'Validate that a custom ChangeList class can be used (#9749)': 'PASSED', 'test_all_fields_hidden (admin_views.tests.TestLabelVisibility)': 'PASSED', 'test_all_fields_visible (admin_views.tests.TestLabelVisibility)': 'PASSED', 'test_mixin (admin_views.tests.TestLabelVisibility)': 'PASSED', 'The delete_view handles non-ASCII characters': 'PASSED', 'A test to ensure that POST on edit_view handles non-ASCII characters.': 'PASSED', 'test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)': 'PASSED', 'test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)': 'PASSED', 'The minified versions of the JS files are only used when DEBUG is False.': 'PASSED', 'test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)': 'PASSED', 'Staff_member_required decorator works with an argument': 'PASSED', 'test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)': 'PASSED', 'test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)': 'PASSED', "Admin index views don't break when user's ModelAdmin removes standard urls": 'PASSED', 'test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)': 'PASSED', 'test_logout (admin_views.tests.AdminViewLogoutTests)': 'PASSED', 'Test for ticket 2445 changes to admin.': 'PASSED', 'Object history button link should work and contain the pk value quoted.': 'PASSED', 'Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072': 'PASSED', 'The link from the delete confirmation page referring back to the changeform of the object should be quoted': 'PASSED', 'Retrieving the object using urlencoded form of primary key should work': 'PASSED', 'Retrieving the history for an object using urlencoded form of primary': 'PASSED', 'The link from the recent actions list referring to the changeform of the object should be quoted': 'PASSED', 'As soon as an object is added using "Save and continue editing"': 'PASSED', "'View on site should' work properly with char fields": 'PASSED', 'A model with a primary key that ends with add or is `add` should be visible': 'PASSED', 'A model with a primary key that ends with delete should be visible': 'PASSED', 'A model with a primary key that ends with history should be visible': 'PASSED', 'change_view has form_url in response.context': 'PASSED', 'The behavior for setting initial form data can be overridden in the': 'PASSED', 'test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)': 'PASSED', 'Inline file uploads correctly display prior data (#10002).': 'PASSED', 'Inline models which inherit from a common parent are correctly handled.': 'PASSED', 'The right link is displayed if view_on_site is a callable': 'PASSED', "The 'View on site' button is not displayed if view_on_site is False": 'PASSED', "The 'View on site' button is displayed if view_on_site is True": 'PASSED', 'Regression test for #15938: if USE_THOUSAND_SEPARATOR is set, make sure': 'PASSED', 'test_prepopulated_off (admin_views.tests.PrePopulatedTest)': 'PASSED', 'test_prepopulated_on (admin_views.tests.PrePopulatedTest)': 'PASSED', "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'": 'PASSED', "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'. That": 'PASSED', 'test_known_url_missing_slash_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_known_url_missing_slash_redirects_with_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_known_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_known_url_redirects_login_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_false (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_false_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true_force_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true_non_staff_user (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true_unknown_url (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true_unknown_url_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_missing_slash_append_slash_true_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_non_admin_url_404_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_non_admin_url_shares_url_prefix (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_non_admin_url_shares_url_prefix_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_single_model_no_append_slash (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_unknown_url_404_if_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_unknown_url_404_if_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_unknown_url_404_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_unknown_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_unkown_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_unkown_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)': 'PASSED', 'test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)': 'PASSED', 'test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)': 'PASSED', 'test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)': 'PASSED', 'test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)': 'PASSED', 'test_change_password_template (admin_views.tests.AdminCustomTemplateTests)': 'PASSED', 'test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)': 'PASSED', "The admin/change_list.html' template uses block.super": 'PASSED', 'The admin/change_form.html template uses block.super in the': 'PASSED', 'The admin/delete_confirmation.html template uses': 'PASSED', 'The admin/delete_selected_confirmation.html template uses': 'PASSED', 'The admin/index.html template uses block.super in the bodyclass block.': 'PASSED', 'The admin/login.html template uses block.super in the': 'PASSED', 'A custom template can be used to render an admin filter.': 'PASSED', 'test_group_permission_performance (admin_views.tests.GroupAdminTest)': 'PASSED', 'test_save_button (admin_views.tests.GroupAdminTest)': 'PASSED', 'Issue #20522': 'PASSED', 'The view_on_site value is either a boolean or a callable': 'PASSED', "None is returned if model doesn't have get_absolute_url": 'PASSED', 'The default behavior is followed if view_on_site is True': 'PASSED', 'Saving a new object using "Save as new" redirects to the changelist': 'PASSED', "'save as' creates a new person": 'PASSED', 'test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)': 'PASSED', 'When you click "Save as new" and have a validation error,': 'PASSED', 'test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)': 'PASSED', 'test_message_debug (admin_views.tests.AdminUserMessageTest)': 'PASSED', 'test_message_error (admin_views.tests.AdminUserMessageTest)': 'PASSED', 'test_message_extra_tags (admin_views.tests.AdminUserMessageTest)': 'PASSED', 'test_message_info (admin_views.tests.AdminUserMessageTest)': 'PASSED', 'test_message_success (admin_views.tests.AdminUserMessageTest)': 'PASSED', 'test_message_warning (admin_views.tests.AdminUserMessageTest)': 'PASSED', 'Regression test for 14880': 'PASSED', 'Regression test for 20182': 'PASSED', 'Should be able to use a ModelAdmin method in list_display that has the': 'PASSED', 'Check the never-cache status of the JavaScript i18n view': 'PASSED', 'Check the never-cache status of the main index': 'PASSED', 'Check the never-cache status of an application index': 'PASSED', 'Check the never-cache status of login views': 'PASSED', 'Check the never-cache status of logout view': 'PASSED', 'Check the never-cache status of a model add page': 'PASSED', 'Check the never-cache status of a model delete page': 'PASSED', 'Check the never-cache status of a model history page': 'PASSED', 'Check the never-cache status of a model index': 'PASSED', 'Check the never-cache status of a model edit page': 'PASSED', 'Check the never-cache status of the password change view': 'PASSED', 'Check the never-cache status of the password change done view': 'PASSED', 'Ensure app and model tag are correctly read by app_index template': 'PASSED', 'Ensure app and model tag are correctly read by delete_confirmation': 'PASSED', 'Ensure app and model tag are correctly read by': 'PASSED', 'Ensure app and model tag are correctly read by change_form template': 'PASSED', 'Ensure app and model tag are correctly read by change_list template': 'PASSED', 'Cells of the change list table should contain the field name in their class attribute': 'PASSED', "Fields have a CSS class name with a 'field-' prefix.": 'PASSED', 'CSS class names are used for each app and model on the admin index': 'PASSED', 'No date hierarchy links display with empty changelist.': 'PASSED', 'year-level links appear for year-spanning changelist.': 'PASSED', 'test_related_field (admin_views.tests.DateHierarchyTests)': 'PASSED', 'Single day-level date hierarchy appears for single object.': 'PASSED', 'day-level links appear for changelist within single month.': 'PASSED', 'month-level links appear for changelist within single year.': 'PASSED', 'test_form_url_present_in_context (admin_views.tests.UserAdminTest)': 'PASSED', 'test_password_mismatch (admin_views.tests.UserAdminTest)': 'PASSED', 'test_save_add_another_button (admin_views.tests.UserAdminTest)': 'PASSED', 'test_save_button (admin_views.tests.UserAdminTest)': 'PASSED', 'test_save_continue_editing_button (admin_views.tests.UserAdminTest)': 'PASSED', 'User addition through a FK popup should return the appropriate JavaScript response.': 'PASSED', 'User change through a FK popup should return the appropriate JavaScript response.': 'PASSED', 'User deletion through a FK popup should return the appropriate JavaScript response.': 'PASSED', 'test_user_permission_performance (admin_views.tests.UserAdminTest)': 'PASSED', 'Cyclic relationships should still cause each object to only be': 'PASSED', 'The delete view uses ModelAdmin.get_deleted_objects().': 'PASSED', 'If a deleted object has GenericForeignKeys pointing to it,': 'PASSED', 'If a deleted object has GenericForeignKey with': 'PASSED', 'In the case of an inherited model, if either the child or': 'PASSED', 'If a deleted object has two relationships pointing to it from': 'PASSED', 'If a deleted object has two relationships from another model,': 'PASSED', 'Objects should be nested to display the relationships that': 'PASSED', 'test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)': 'PASSED', 'test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)': 'PASSED', 'A POST request to delete protected objects should display the page': 'PASSED', 'test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)': 'PASSED', 'test_protected (admin_views.tests.AdminViewDeletedObjectsTest)': 'PASSED', 'test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)': 'PASSED', 'test_filters (admin_views.tests.AdminDocsTest)': 'PASSED', 'test_tags (admin_views.tests.AdminDocsTest)': 'PASSED', 'test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_add_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_change_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)': 'PASSED', 'test_changelist_input_html (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_custom_pk (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_inheritance (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_inheritance_2 (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_list_editable_ordering (admin_views.tests.AdminViewListEditable)': 'PASSED', 'Pagination works for list_editable items.': 'PASSED', 'Fields should not be list-editable in popups.': 'PASSED', 'Non-field errors are displayed for each of the forms in the': 'PASSED', 'test_non_form_errors (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)': 'PASSED', "hidden pk fields aren't displayed in the table body and their": 'PASSED', 'Similarly as test_pk_hidden_fields, but when the hidden pk fields are': 'PASSED', 'test_post_messages (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_post_submission (admin_views.tests.AdminViewListEditable)': 'PASSED', 'test_beginning_matches (admin_views.tests.AdminSearchTest)': 'PASSED', 'test_exact_matches (admin_views.tests.AdminSearchTest)': 'PASSED', '#8408 -- "Show all" should be displayed instead of the total count if': 'PASSED', 'test_pluggable_search (admin_views.tests.AdminSearchTest)': 'PASSED', 'Test presence of reset link in search bar ("1 result (_x total_)").': 'PASSED', 'A search that mentions sibling models': 'PASSED', 'test_search_with_spaces (admin_views.tests.AdminSearchTest)': 'PASSED', 'The to_field GET parameter is preserved when a search is performed.': 'PASSED', 'A model with a character PK can be saved as inlines. Regression for #10992': 'PASSED', 'A model with an explicit autofield primary key can be saved as inlines. Regression for #8093': 'PASSED', 'An inherited model can be saved as inlines. Regression for #11042': 'PASSED', 'A model with an integer PK can be saved as inlines. Regression for #10992': 'PASSED', 'An inline with an editable ordering fields is updated correctly.': 'PASSED', 'A simple model can be saved as inlines': 'PASSED', 'test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_add_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_change_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)': 'PASSED', 'test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'test_change_view (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)': 'PASSED', 'Custom querysets are considered for the admin history view.': 'PASSED', 'Regression test for #17911.': 'PASSED', 'Make sure that non-field readonly elements are properly autoescaped (#24461)': 'PASSED', 'test_label_suffix_translated (admin_views.tests.ReadonlyTest)': 'PASSED', 'Regression test for #22087 - ModelForm Meta overrides are ignored by': 'PASSED', 'ForeignKey readonly fields render as links if the target model is': 'PASSED', 'test_readonly_get (admin_views.tests.ReadonlyTest)': 'PASSED', 'Regression test for #13004': 'PASSED', 'Regression test for #16433 - backwards references for related objects': 'PASSED', 'test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)': 'PASSED', 'Can reference a reverse OneToOneField in ModelAdmin.readonly_fields.': 'PASSED', 'test_readonly_post (admin_views.tests.ReadonlyTest)': 'PASSED', 'test_readonly_text_field (admin_views.tests.ReadonlyTest)': 'PASSED', 'test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)': 'PASSED', 'Test add view restricts access and actually adds items.': 'PASSED', 'User with add permission to a section but view-only for inlines.': 'PASSED', 'If a user has no module perms, the app list returns a 404.': 'PASSED', 'Change view should restrict access and allow users to edit items.': 'PASSED', "'Save as new' should raise PermissionDenied for users without the 'add'": 'PASSED', 'User has view and add permissions on the inline model.': 'PASSED', 'User has view and delete permissions on the inline model.': 'PASSED', 'User with change permission to a section but view-only for inlines.': 'PASSED', 'The object should be read-only if the user has permission to view it': 'PASSED', 'The foreign key widget should only show the "add related" button if the': 'PASSED', 'The foreign key widget should only show the "change related" button if': 'PASSED', 'The foreign key widget should only show the "delete related" button if': 'PASSED', 'Delete view should restrict access and actually delete items.': 'PASSED', 'test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)': 'PASSED', 'The delete view allows users to delete collected objects without a': 'PASSED', 'test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)': 'PASSED', 'test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)': 'PASSED', 'Regression test for #19327': 'PASSED', 'has_module_permission() returns True for all users who': 'PASSED', 'History view should restrict access.': 'PASSED', 'test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)': 'PASSED', 'Make sure only staff members can log in.': 'PASSED', 'test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)': 'PASSED', 'A logged-in non-staff user trying to access the admin index should be': 'PASSED', 'Login redirect should be to the admin index page when going directly to': 'PASSED', 'test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)': 'PASSED', "If has_module_permission() always returns False, the module shouldn't": 'PASSED', "Post-save message shouldn't contain a link to the change form if the": 'PASSED', 'Only admin users should be able to use the admin shortcut view.': 'PASSED', "Check if L10N is deactivated, the JavaScript i18n view doesn't": 'PASSED', 'test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)': 'PASSED', "#13749 - Admin should display link to front-end site 'View site'": 'PASSED', 'Regressions test for ticket 15103 - filtering on fields defined in a': 'PASSED', 'AttributeErrors are allowed to bubble when raised inside a change list': 'PASSED', 'test_app_index_context (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'A smoke test to ensure GET on the add_view works.': 'PASSED', 'A smoke test to ensure POST on add_view works.': 'PASSED', 'A smoke test to ensure GET on the change_view works.': 'PASSED', 'The change URL changed in Django 1.9, but the old one still redirects.': 'PASSED', 'GET on the change_view (when passing a string as the PK argument for a': 'PASSED', 'A smoke test to ensure POST on edit_view works.': 'PASSED', 'GET on the change_view (for inherited models) redirects to the index': 'PASSED', 'test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'Ensure we can sort on a list_display field that is a callable': 'PASSED', 'Query expressions may be used for admin_order_field.': 'PASSED', 'test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'Ensure we can sort on a list_display field that is a Model method': 'PASSED', 'Ensure we can sort on a list_display field that is a ModelAdmin method': 'PASSED', 'Ensure we can sort on a list_display field that is a ModelAdmin': 'PASSED', 'test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'If no ordering is defined in `ModelAdmin.ordering` or in the query': 'PASSED', 'Sort on a list_display field that is a property (column 10 is': 'PASSED', "Changes to ManyToManyFields are included in the object's history.": 'PASSED', 'test_change_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)': 'PASSED', "The 'show_delete' context variable in the admin's change view controls": 'PASSED', "ModelAdmin.changelist_view shouldn't result in a NoReverseMatch if url": 'PASSED', 'test_date_hierarchy_empty_queryset (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_date_hierarchy_local_date_differ_from_utc (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_display_decorator_with_boolean_and_empty_value (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'Test "save as".': 'PASSED', 'Should be able to "Save as new" while also deleting an inline.': 'PASSED', 'test_formset_kwargs_can_be_overridden (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)': 'PASSED', "Joins shouldn't be performed for <FK>_id fields in list display.": 'PASSED', "Joins shouldn't be performed for <O2O>_id fields in list display.": 'PASSED', 'Tests if the "change password" link in the admin is hidden if the User': 'PASSED', 'Check if the JavaScript i18n view returns an empty language catalog': 'PASSED', 'Makes sure that the fallback language is still working properly': 'PASSED', 'Ensure incorrect lookup parameters are handled gracefully.': 'PASSED', "#21056 -- URL reversing shouldn't work for nonexistent apps.": 'PASSED', 'Ensure is_null is handled correctly.': 'PASSED', 'test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'Ensure admin changelist filters do not contain objects excluded via limit_choices_to.': 'PASSED', 'test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'Ensures the admin changelist shows correct values in the relevant column': 'PASSED', 'Ensures the filter UI shows correctly when at least one named group has': 'PASSED', 'Ensure http response from a popup is properly escaped.': 'PASSED', 'Regression test for ticket 20664 - ensure the pk is properly quoted.': 'PASSED', 'test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_render_views_no_subtitle (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)': 'PASSED', "The admin shows default sort indicators for all kinds of 'ordering'": 'PASSED', 'test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)': 'PASSED', 'If you leave off the trailing slash, app should redirect and add it.': 'PASSED', 'test_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)': 'PASSED'}
2024-04-05 05:25:45 [Run test-suite] Eval result: {'FAIL_TO_PASS': {'success': ['If validate_max is set and max_num is less than TOTAL_FORMS in the', 'If validate_min is set and min_num is more than TOTAL_FORMS in the', 'test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)'], 'failure': []}, 'PASS_TO_PASS': {'success': ["#13749 - Admin should display link to front-end site 'View site'", "#21056 -- URL reversing shouldn't work for nonexistent apps.", '#8408 -- "Show all" should be displayed instead of the total count if', "'Save as new' should raise PermissionDenied for users without the 'add'", "'View on site should' work properly with char fields", "'save as' creates a new person", 'A FormSet can be prefilled with existing data by providing a list of', 'A FormSet constructor takes the same arguments as Form. Create a', 'A POST request to delete protected objects should display the page', 'A custom template can be used to render an admin filter.', "A form that's displayed as blank may be submitted as blank.", 'A formset has a hard limit on the number of forms instantiated.', "A formset's ManagementForm is validated once per FormSet.is_valid()", 'A formsets without any forms evaluates as True.', 'A logged-in non-staff user trying to access the admin index should be', 'A model with a character PK can be saved as inlines. Regression for #10992', 'A model with a primary key that ends with add or is `add` should be visible', 'A model with a primary key that ends with delete should be visible', 'A model with a primary key that ends with history should be visible', 'A model with an explicit autofield primary key can be saved as inlines. Regression for #8093', 'A model with an integer PK can be saved as inlines. Regression for #10992', 'A partially completed form is invalid.', 'A search that mentions sibling models', 'A simple model can be saved as inlines', 'A smoke test to ensure GET on the add_view works.', 'A smoke test to ensure GET on the change_view works.', 'A smoke test to ensure POST on add_view works.', 'A smoke test to ensure POST on edit_view works.', 'A test to ensure that POST on edit_view handles non-ASCII characters.', 'A valid formset should have 0 total errors.', "Admin index views don't break when user's ModelAdmin removes standard urls", 'An empty formset still calls clean()', 'An inherited model can be saved as inlines. Regression for #11042', 'An inline with an editable ordering fields is updated correctly.', 'As soon as an object is added using "Save and continue editing"', 'AttributeErrors are allowed to bubble when raised inside a change list', 'CSS class names are used for each app and model on the admin index', 'Can get ordered_forms from a valid formset even if a deleted form', 'Can increase the built-in forms limit via a higher max_num.', 'Can reference a reverse OneToOneField in ModelAdmin.readonly_fields.', 'Cells of the change list table should contain the field name in their class attribute', 'Change view should restrict access and allow users to edit items.', "Changes to ManyToManyFields are included in the object's history.", "Check if L10N is deactivated, the JavaScript i18n view doesn't", 'Check if the JavaScript i18n view returns an empty language catalog', 'Check the never-cache status of a model add page', 'Check the never-cache status of a model delete page', 'Check the never-cache status of a model edit page', 'Check the never-cache status of a model history page', 'Check the never-cache status of a model index', 'Check the never-cache status of an application index', 'Check the never-cache status of login views', 'Check the never-cache status of logout view', 'Check the never-cache status of the JavaScript i18n view', 'Check the never-cache status of the main index', 'Check the never-cache status of the password change done view', 'Check the never-cache status of the password change view', 'Custom kwargs set on the formset instance are passed to the', 'Custom querysets are considered for the admin history view.', 'Cyclic relationships should still cause each object to only be', 'Delete view should restrict access and actually delete items.', 'Deleting prefilled data is an error. Removing data from form fields', 'Ensure admin changelist filters do not contain objects excluded via limit_choices_to.', 'Ensure app and model tag are correctly read by', 'Ensure app and model tag are correctly read by app_index template', 'Ensure app and model tag are correctly read by change_form template', 'Ensure app and model tag are correctly read by change_list template', 'Ensure app and model tag are correctly read by delete_confirmation', 'Ensure http response from a popup is properly escaped.', 'Ensure incorrect lookup parameters are handled gracefully.', 'Ensure is_null is handled correctly.', 'Ensure we can sort on a list_display field that is a Model method', 'Ensure we can sort on a list_display field that is a ModelAdmin', 'Ensure we can sort on a list_display field that is a ModelAdmin method', 'Ensure we can sort on a list_display field that is a callable', 'Ensures the admin changelist shows correct values in the relevant column', 'Ensures the filter UI shows correctly when at least one named group has', "Fields have a CSS class name with a 'field-' prefix.", 'Fields should not be list-editable in popups.', 'ForeignKey readonly fields render as links if the target model is', 'Form kwargs can be passed dynamically in a formset.', 'FormSet.has_changed() is True if any data is passed to its forms, even', "FormSets have a clean() hook for doing extra validation that isn't tied", 'FormSets with ordering + deletion.', 'Formset instances are iterable.', 'Formset works with SplitDateTimeField(initial=datetime.datetime.now).', "Formset's forms use the formset's error_class.", 'Formsets call is_valid() on each form.', 'GET on the change_view (for inherited models) redirects to the index', 'GET on the change_view (when passing a string as the PK argument for a', 'History view should restrict access.', 'If a deleted object has GenericForeignKey with', 'If a deleted object has GenericForeignKeys pointing to it,', 'If a deleted object has two relationships from another model,', 'If a deleted object has two relationships pointing to it from', 'If a form is filled with something and can_delete is also checked, that', 'If a user has no module perms, the app list returns a 404.', 'If at least one field is filled out on a blank form, it will be', "If has_module_permission() always returns False, the module shouldn't", 'If max_num is 0 then no form is rendered at all, regardless of extra,', 'If no ordering is defined in `ModelAdmin.ordering` or in the query', 'If non_form_errors() is called without calling is_valid() first,', 'If you leave off the trailing slash, app should redirect and add it.', 'In the case of an inherited model, if either the child or', 'Inline file uploads correctly display prior data (#10002).', 'Inline models which inherit from a common parent are correctly handled.', 'InlineModelAdmin broken?', 'Issue #20522', "Joins shouldn't be performed for <FK>_id fields in list display.", "Joins shouldn't be performed for <O2O>_id fields in list display.", 'Just one form may be completed.', 'Limiting the maximum number of forms with max_num.', 'Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072', 'Login redirect should be to the admin index page when going directly to', 'Make sure only staff members can log in.', 'Make sure that non-field readonly elements are properly autoescaped (#24461)', 'Makes sure that the fallback language is still working properly', 'Media is available on empty formset.', "ModelAdmin.changelist_view shouldn't result in a NoReverseMatch if url", 'More initial forms than max_num results in all initial forms being', "More than 1 empty form can also be displayed using formset_factory's", "More than 1 empty form can be displayed using formset_factory's", 'More than 1 empty form can be displayed using min_num.', 'No date hierarchy links display with empty changelist.', 'Non-field errors are displayed for each of the forms in the', "None is returned if model doesn't have get_absolute_url", 'Object history button link should work and contain the pk value quoted.', 'Objects should be nested to display the relationships that', 'One form from initial and extra=3 with max_num=2 results in the one', 'Only admin users should be able to use the admin shortcut view.', 'Ordering fields are allowed to be left blank. If they are left blank,', 'Ordering works with blank fieldsets.', 'Pagination works for list_editable items.', "Post-save message shouldn't contain a link to the change form if the", "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'", "PrePopulatedPostReadOnlyAdmin.prepopulated_fields includes 'slug'. That", 'Query expressions may be used for admin_order_field.', 'Regression test for #13004', 'Regression test for #15938: if USE_THOUSAND_SEPARATOR is set, make sure', 'Regression test for #16433 - backwards references for related objects', 'Regression test for #17911.', 'Regression test for #19327', 'Regression test for #22087 - ModelForm Meta overrides are ignored by', 'Regression test for 14880', 'Regression test for 20182', 'Regression test for ticket 20664 - ensure the pk is properly quoted.', 'Regressions test for ticket 15103 - filtering on fields defined in a', 'Retrieving the history for an object using urlencoded form of primary', 'Retrieving the object using urlencoded form of primary key should work', 'Saving a new object using "Save as new" redirects to the changelist', 'Should be able to "Save as new" while also deleting an inline.', 'Should be able to use a ModelAdmin method in list_display that has the', 'Similarly as test_pk_hidden_fields, but when the hidden pk fields are', 'Single day-level date hierarchy appears for single object.', 'Sort on a list_display field that is a property (column 10 is', 'Staff_member_required decorator works with an argument', 'Test "save as".', 'Test add view restricts access and actually adds items.', 'Test for ticket 2445 changes to admin.', 'Test presence of reset link in search bar ("1 result (_x total_)").', 'Tests if the "change password" link in the admin is hidden if the User', "The 'View on site' button is displayed if view_on_site is True", "The 'View on site' button is not displayed if view_on_site is False", "The 'show_delete' context variable in the admin's change view controls", "The admin shows default sort indicators for all kinds of 'ordering'", 'The admin/change_form.html template uses block.super in the', "The admin/change_list.html' template uses block.super", 'The admin/delete_confirmation.html template uses', 'The admin/delete_selected_confirmation.html template uses', 'The admin/index.html template uses block.super in the bodyclass block.', 'The admin/login.html template uses block.super in the', 'The behavior for setting initial form data can be overridden in the', 'The change URL changed in Django 1.9, but the old one still redirects.', 'The default behavior is followed if view_on_site is True', 'The delete view allows users to delete collected objects without a', 'The delete view uses ModelAdmin.get_deleted_objects().', 'The delete_view handles non-ASCII characters', 'The extra argument works when the formset is pre-filled with initial', 'The foreign key widget should only show the "add related" button if the', 'The foreign key widget should only show the "change related" button if', 'The foreign key widget should only show the "delete related" button if', 'The link from the delete confirmation page referring back to the changeform of the object should be quoted', 'The link from the recent actions list referring to the changeform of the object should be quoted', 'The management form has the correct prefix.', 'The minified versions of the JS files are only used when DEBUG is False.', 'The object should be read-only if the user has permission to view it', 'The right link is displayed if view_on_site is a callable', 'The to_field GET parameter is preserved when a search is performed.', 'The view_on_site value is either a boolean or a callable', 'User addition through a FK popup should return the appropriate JavaScript response.', 'User change through a FK popup should return the appropriate JavaScript response.', 'User deletion through a FK popup should return the appropriate JavaScript response.', 'User has view and add permissions on the inline model.', 'User has view and delete permissions on the inline model.', 'User with add permission to a section but view-only for inlines.', 'User with change permission to a section but view-only for inlines.', 'Validate that a custom ChangeList class can be used (#9749)', 'When you click "Save as new" and have a validation error,', 'all_valid() validates all forms, even when some are invalid.', 'change_view has form_url in response.context', 'day-level links appear for changelist within single month.', 'deleted_forms works on a valid formset even if a deleted form would', 'formset_factory\'s can_delete argument adds a boolean "delete" field to', "formset_factory's can_order argument adds an integer field to each", 'has_module_permission() returns True for all users who', "hidden pk fields aren't displayed in the table body and their", 'is_multipart() works with an empty formset.', 'max_num has no effect when extra is less than max_num.', "min_num validation doesn't consider unchanged forms with initial data", 'month-level links appear for changelist within single year.', 'test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)', 'test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)', 'test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)', 'test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_add_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_add_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)', 'test_all_fields_hidden (admin_views.tests.TestLabelVisibility)', 'test_all_fields_visible (admin_views.tests.TestLabelVisibility)', 'test_app_index_context (admin_views.tests.AdminViewBasicTest)', 'test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)', 'test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)', 'test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)', 'test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_beginning_matches (admin_views.tests.AdminSearchTest)', 'test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)', 'test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)', 'test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)', 'test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)', 'test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)', 'test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)', 'test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)', 'test_change_password_template (admin_views.tests.AdminCustomTemplateTests)', 'test_change_view (admin_views.tests.AdminCustomQuerysetTest)', 'test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_change_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)', 'test_change_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_change_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_changelist_input_html (admin_views.tests.AdminViewListEditable)', 'test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)', 'test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)', 'test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)', 'test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)', 'test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)', 'test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)', 'test_custom_pk (admin_views.tests.AdminViewListEditable)', 'test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)', 'test_date_hierarchy_empty_queryset (admin_views.tests.AdminViewBasicTest)', 'test_date_hierarchy_local_date_differ_from_utc (admin_views.tests.AdminViewBasicTest)', 'test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)', 'test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)', 'test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)', 'test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)', 'test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)', 'test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)', 'test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)', 'test_display_decorator_with_boolean_and_empty_value (admin_views.tests.AdminViewBasicTest)', 'test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)', 'test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)', 'test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)', 'test_exact_matches (admin_views.tests.AdminSearchTest)', 'test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)', 'test_filters (admin_views.tests.AdminDocsTest)', 'test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)', 'test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)', 'test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_form_url_present_in_context (admin_views.tests.UserAdminTest)', 'test_formset_kwargs_can_be_overridden (admin_views.tests.AdminViewBasicTest)', 'test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_formsets_with_order_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)', 'test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)', 'test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)', 'test_group_permission_performance (admin_views.tests.GroupAdminTest)', 'test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)', 'test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)', 'test_inheritance (admin_views.tests.AdminViewListEditable)', 'test_inheritance_2 (admin_views.tests.AdminViewListEditable)', 'test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)', 'test_known_url_missing_slash_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_known_url_missing_slash_redirects_with_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_known_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_known_url_redirects_login_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_label_suffix_translated (admin_views.tests.ReadonlyTest)', 'test_lang_name_present (admin_views.tests.ValidXHTMLTests)', 'test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)', 'test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)', 'test_list_editable_ordering (admin_views.tests.AdminViewListEditable)', 'test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)', 'test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)', 'test_logout (admin_views.tests.AdminViewLogoutTests)', 'test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)', 'test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior)', 'test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_message_debug (admin_views.tests.AdminUserMessageTest)', 'test_message_error (admin_views.tests.AdminUserMessageTest)', 'test_message_extra_tags (admin_views.tests.AdminUserMessageTest)', 'test_message_info (admin_views.tests.AdminUserMessageTest)', 'test_message_success (admin_views.tests.AdminUserMessageTest)', 'test_message_warning (admin_views.tests.AdminUserMessageTest)', 'test_missing_slash_append_slash_false (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_false_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true_force_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true_non_staff_user (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true_script_name (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true_unknown_url (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true_unknown_url_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_missing_slash_append_slash_true_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_mixin (admin_views.tests.TestLabelVisibility)', 'test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)', 'test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)', 'test_non_admin_url_404_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_non_admin_url_shares_url_prefix (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_non_admin_url_shares_url_prefix_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_non_form_errors (admin_views.tests.AdminViewListEditable)', 'test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)', 'test_password_mismatch (admin_views.tests.UserAdminTest)', 'test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)', 'test_pluggable_search (admin_views.tests.AdminSearchTest)', 'test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)', 'test_post_messages (admin_views.tests.AdminViewListEditable)', 'test_post_submission (admin_views.tests.AdminViewListEditable)', 'test_prepopulated_off (admin_views.tests.PrePopulatedTest)', 'test_prepopulated_on (admin_views.tests.PrePopulatedTest)', 'test_protected (admin_views.tests.AdminViewDeletedObjectsTest)', 'test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)', 'test_readonly_get (admin_views.tests.ReadonlyTest)', 'test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)', 'test_readonly_post (admin_views.tests.ReadonlyTest)', 'test_readonly_text_field (admin_views.tests.ReadonlyTest)', 'test_related_field (admin_views.tests.DateHierarchyTests)', 'test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)', 'test_render_views_no_subtitle (admin_views.tests.AdminViewBasicTest)', 'test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)', 'test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)', 'test_save_add_another_button (admin_views.tests.UserAdminTest)', 'test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)', 'test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)', 'test_save_button (admin_views.tests.GroupAdminTest)', 'test_save_button (admin_views.tests.UserAdminTest)', 'test_save_continue_editing_button (admin_views.tests.UserAdminTest)', 'test_search_with_spaces (admin_views.tests.AdminSearchTest)', 'test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)', 'test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)', 'test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)', 'test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)', 'test_single_model_no_append_slash (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)', 'test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)', 'test_tags (admin_views.tests.AdminDocsTest)', 'test_unknown_url_404_if_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_unknown_url_404_if_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_unknown_url_404_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_unknown_url_redirects_login_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_unkown_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_unkown_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)', 'test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)', 'test_url_without_trailing_slash_if_not_authenticated (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_url_without_trailing_slash_if_not_authenticated_without_final_catch_all_view (admin_views.tests.AdminSiteFinalCatchAllPatternTests)', 'test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)', 'test_user_permission_performance (admin_views.tests.UserAdminTest)', 'test_valid (forms_tests.tests.test_formsets.AllValidTests)', 'test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)', 'test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)', 'test_view_subtitle_per_object (admin_views.tests.AdminViewBasicTest)', 'test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)', 'year-level links appear for year-spanning changelist.'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}
2024-04-05 05:25:45 [Run test-suite] Resolution status: ResolvedStatus.FULL
2024-04-05 05:25:45 [Run test-suite] Returning True since all resolved.
2024-04-05 05:25:45 [Validation] Finishing. Result is True. Message: .
2024-04-05 05:25:45 Result of dispatch_intent: ('Written a patch that resolves the issue. Congratulations!', 'The tool returned the patch written by another agent.', True)
2024-04-05 05:25:45 Invoked write_patch. Ending workflow.
2024-04-05 05:25:45 Task django__django-14608 completed successfully.
