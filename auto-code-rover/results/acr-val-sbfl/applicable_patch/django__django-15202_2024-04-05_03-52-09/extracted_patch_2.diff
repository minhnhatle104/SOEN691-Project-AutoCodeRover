diff --git a/django/core/validators.py b/django/core/validators.py
index 72fbe15551..3bcc6fbfac 100644
--- a/django/core/validators.py
+++ b/django/core/validators.py
@@ -116,6 +116,8 @@ class URLValidator(RegexValidator):
                 try:
                     scheme, netloc, path, query, fragment = urlsplit(value)
                 except ValueError:  # for example, "Invalid IPv6 URL"
+                    # Ensure that any ValueError is caught and handled as a ValidationError
+                    # with the predefined message for consistency.
                     raise ValidationError(self.message, code=self.code, params={'value': value})
                 try:
                     netloc = punycode(netloc)  # IDN -> ACE
diff --git a/django/forms/fields.py b/django/forms/fields.py
index 65d6a9ec82..d7f71c7e3a 100644
--- a/django/forms/fields.py
+++ b/django/forms/fields.py
@@ -689,7 +689,9 @@ class URLField(CharField):
                 return list(urlsplit(url))
             except ValueError:
                 # urlparse.urlsplit can raise a ValueError with some
-                # misformatted URLs.
+                # misformatted URLs. Instead of changing the error message,
+                # we ensure that any ValueError is caught and handled as a ValidationError
+                # with the predefined 'invalid' message for consistency.
                 raise ValidationError(self.error_messages['invalid'], code='invalid')
 
         value = super().to_python(value)
