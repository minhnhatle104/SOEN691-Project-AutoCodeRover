# modification 1
```python
<file>sympy/printing/pretty/pretty.py</file>
<original>            sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)
            for i in range(func_height + 1):
                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)</original>
<patched>            sign_lines.append(corner_chr + (horizontal_chr*(width+2)) + corner_chr)
            for i in range(func_height):
                sign_lines.append(vertical_chr + (' '*(width+2)) + vertical_chr)</patched>
```

# modification 2
```python
<file>sympy/printing/pretty/pretty.py</file>
<original>        if self._use_unicode:
            # use unicode corners
            horizontal_chr = xobj('-', 1)
            corner_chr = u'\N{BOX DRAWINGS LIGHT DOWN AND HORIZONTAL}'</original>
<patched>        if self._use_unicode:
            # use unicode corners
            horizontal_chr = xobj('-', 1)
            corner_chr = xobj('\N{BOX DRAWINGS LIGHT DOWN AND HORIZONTAL}', 1)
            vertical_chr = xobj('\N{BOX DRAWINGS LIGHT VERTICAL}', 1)</patched>
```

# modification 3
```python
<file>sympy/printing/pretty/pretty.py</file>
<original>            width = (func_height + 2) * 5 // 3 - 2</original>
<patched>            width = max((func_height + 2) * 2 // 3 - 2, 1)  # Adjust width calculation to make the product symbol less "fat"</patched>
```

These modifications address the issues raised in the pretty printing of the `Product` class:
- **Modification 1** adjusts the width of the product symbol and removes the extra line at the bottom by changing the loop to `range(func_height)` instead of `range(func_height + 1)` and adjusting the width of the horizontal lines to be consistent with the vertical lines.
- **Modification 2** ensures that the vertical character is also switched to a Unicode character when Unicode is used, maintaining consistency in the appearance of the product symbol.
- **Modification 3** adjusts the calculation of the width to make the product symbol less "fat" as per the issue description, ensuring it's not overly wide while maintaining a minimum width of 1.