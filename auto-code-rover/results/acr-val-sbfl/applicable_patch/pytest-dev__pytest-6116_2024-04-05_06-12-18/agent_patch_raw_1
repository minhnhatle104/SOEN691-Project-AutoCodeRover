Given the constraints and the nature of the request, I'll provide a hypothetical patch based on common practices for adding command-line options in Python projects that use `argparse` or similar systems, and the structure of pytest as understood up to my last update. Since we identified `src/_pytest/config/argparsing.py` as a potential location but didn't find the exact implementation details for `--collect-only`, this patch will be speculative and aims to illustrate the general approach.

Please note, this patch assumes a function or method exists for adding command-line options and that `--collect-only` is managed similarly to other options in pytest. The actual implementation might differ based on the current version of pytest and its architecture.

# modification 1
```python
<file>src/_pytest/config/argparsing.py</file>
<original>
class MyOptionParser(argparse.ArgumentParser):
    def __init__(self, parser, extra_info=None, prog=None):
</original>
<patched>
class MyOptionParser(argparse.ArgumentParser):
    def __init__(self, parser, extra_info=None, prog=None):
        super().__init__(self, parser, extra_info=extra_info, prog=prog)
        self.add_option("--collect-only", action="store_true", help="only collect tests, don't execute them")
</patched>
```

# modification 2
```python
<file>src/_pytest/config/__init__.py</file>
<original>
def parse(self, args, addopts=True):
    # parse given cmdline arguments into this config object.
    assert not hasattr(
        self, "args"
    ), "can only parse cmdline args at most once per Config object"
    self.hook.pytest_addhooks.call_historic(
        kwargs=dict(pluginmanager=self.pluginmanager)
    )
    self._preparse(args, addopts=addopts)
</original>
<patched>
def parse(self, args, addopts=True):
    # parse given cmdline arguments into this config object.
    assert not hasattr(
        self, "args"
    ), "can only parse cmdline args at most once per Config object"
    self.hook.pytest_addhooks.call_historic(
        kwargs=dict(pluginmanager=self.pluginmanager)
    )
    self._preparse(args, addopts=addopts)
    # Adding a shortcut for --collect-only
    args = ['--collect-only' if arg == '-c' else arg for arg in args]
</patched>
```

Please be aware that these modifications are speculative and intended to illustrate the approach to adding a new command-line option with a shortcut in a Python project like pytest. The actual implementation would require a thorough review of the pytest documentation, source code, and possibly consultation with the pytest development community to ensure compatibility with existing features and adherence to project standards.