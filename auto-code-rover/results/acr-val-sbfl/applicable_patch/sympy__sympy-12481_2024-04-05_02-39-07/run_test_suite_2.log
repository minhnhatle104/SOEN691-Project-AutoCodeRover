Output:
============================= test process starts ==============================
executable:         /home/yuntong/miniconda3/envs/setup_sympy__sympy__1.0/bin/python  (3.9.18-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
random seed:        91523531
hash randomization: on (PYTHONHASHSEED=326655247)

sympy/combinatorics/tests/test_permutations.py[9] 
test_Permutation F
test_josephus ok
test_ranking F
test_mul ok
test_args F
test_Cycle E
test_from_sequence ok
test_printing_cyclic ok
test_printing_non_cyclic ok                                               [FAIL]


________________________________________________________________________________
__________ sympy/combinatorics/tests/test_permutations.py:test_Cycle ___________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 387, in test_Cycle
    assert Permutation(Cycle(p)) == p
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 870, in __new__
    return _af_new(a.list(size))
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 371, in list
    raise ValueError('must give size for empty Cycle')
ValueError: must give size for empty Cycle

________________________________________________________________________________
_______ sympy/combinatorics/tests/test_permutations.py:test_Permutation ________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 46, in test_Permutation
    assert q.support() == [0, 2, 3, 4, 5, 6]
AssertionError
________________________________________________________________________________
_________ sympy/combinatorics/tests/test_permutations.py:test_ranking __________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 247, in test_ranking
    assert q.rank_trotterjohnson() == 2283
AssertionError
________________________________________________________________________________
___________ sympy/combinatorics/tests/test_permutations.py:test_args ___________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 329, in test_args
    assert p.cyclic_form == [[0, 3, 1, 2], [4, 5]]
AssertionError

====== tests finished: 5 passed, 3 failed, 1 exceptions, in 0.07 seconds =======
DO *NOT* COMMIT!
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable

>>>>> All Tests Passed
