Output:
============================= test process starts ==============================
executable:         /home/yuntong/miniconda3/envs/setup_sympy__sympy__1.0/bin/python  (3.9.18-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
random seed:        108554
hash randomization: on (PYTHONHASHSEED=3020240694)

sympy/combinatorics/tests/test_permutations.py[9] 
test_Permutation E
test_josephus ok
test_ranking E
test_mul ok
test_args E
test_Cycle E
test_from_sequence E
test_printing_cyclic E
test_printing_non_cyclic ok                                               [FAIL]


________________________________________________________________________________
_______ sympy/combinatorics/tests/test_permutations.py:test_Permutation ________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 22, in test_Permutation
    assert list(p(1, 2)) == [0, 2, 1, 3]
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 1586, in __call__
    return self*Permutation(Cycle(*i), size=self.size)
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 870, in __new__
    return _af_new(a.list(size))
UnboundLocalError: local variable '_af_new' referenced before assignment
________________________________________________________________________________
_________ sympy/combinatorics/tests/test_permutations.py:test_ranking __________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 247, in test_ranking
    assert q.rank_trotterjohnson() == 2283
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 2394, in rank_trotterjohnson
    if perm[i] < j:
TypeError: '<' not supported between instances of 'Cycle' and 'int'
________________________________________________________________________________
___________ sympy/combinatorics/tests/test_permutations.py:test_args ___________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 329, in test_args
    assert p.cyclic_form == [[0, 3, 1, 2], [4, 5]]
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 1088, in cyclic_form
    while unchecked[array_form[j]]:
TypeError: list indices must be integers or slices, not Cycle
________________________________________________________________________________
__________ sympy/combinatorics/tests/test_permutations.py:test_Cycle ___________
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 365, in test_Cycle
    assert Permutation(Cycle(1, 2)(2, 1, 0, 3)).cyclic_form, Cycle(0, 2, 1)
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 870, in __new__
    return _af_new(a.list(size))
UnboundLocalError: local variable '_af_new' referenced before assignment
________________________________________________________________________________
______ sympy/combinatorics/tests/test_permutations.py:test_from_sequence _______
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 391, in test_from_sequence
    assert Permutation.from_sequence('SymPy') == Permutation(4)(0, 1, 3)
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 872, in __new__
    return _af_new(list(range(a + 1)))
UnboundLocalError: local variable '_af_new' referenced before assignment
________________________________________________________________________________
_____ sympy/combinatorics/tests/test_permutations.py:test_printing_cyclic ______
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/tests/test_permutations.py", line 399, in test_printing_cyclic
    assert repr(p1) == 'Permutation(1, 2)'
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 997, in __repr__
    s = Cycle(self)(self.size - 1).__repr__()[len('Cycle'):]
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 395, in __repr__
    cycles = Permutation(self).cyclic_form
  File "/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/combinatorics/permutations.py", line 870, in __new__
    return _af_new(a.list(size))
UnboundLocalError: local variable '_af_new' referenced before assignment

=========== tests finished: 3 passed, 6 exceptions, in 0.07 seconds ============
DO *NOT* COMMIT!
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Mapping
/media/media0/yuntong/SWE-bench/testbed/sympy__sympy/setup_sympy__sympy__1.0/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
  from collections import Callable

>>>>> All Tests Passed
