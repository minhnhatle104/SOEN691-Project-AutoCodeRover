2024-04-05 06:10:31 ========== Running task pytest-dev__pytest-5692 (relative counter in this run: 175/300) ==========
2024-04-05 06:10:31 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.0 ; python -m pip install -e . ; conda deactivate
2024-04-05 06:10:34 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.0 ; python -m pip install xmlrunner coverage pytest pytest-cov ; conda deactivate
2024-04-05 06:10:40 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.0 ; python -m pytest --cov --cov-context=test  -rA testing/test_junitxml.py ; conda deactivate
2024-04-05 06:10:49 SBFL result (lines): [('src/_pytest/pytester.py', 501, 501, 1.0), ('src/_pytest/_code/source.py', 274, 279, 0.7071067811865475), ('src/_pytest/assertion/rewrite.py', 408, 408, 0.7071067811865475), ('src/_pytest/assertion/rewrite.py', 397, 399, 0.5), ('src/_pytest/assertion/rewrite.py', 402, 404, 0.5), ('src/_pytest/_code/code.py', 154, 157, 0.3922322702763681), ('src/_pytest/_code/code.py', 647, 651, 0.3922322702763681), ('src/_pytest/_code/source.py', 281, 282, 0.3922322702763681), ('src/_pytest/_code/source.py', 305, 305, 0.31622776601683794), ('src/_pytest/_code/source.py', 307, 313, 0.31622776601683794), ('src/_pytest/terminal.py', 175, 177, 0.3086066999241838), ('src/_pytest/nose.py', 14, 14, 0.3061862178478973), ('src/_pytest/nose.py', 26, 27, 0.3061862178478973), ('src/_pytest/nose.py', 32, 34, 0.3061862178478973), ('src/_pytest/runner.py', 325, 330, 0.3038218101251), ('src/_pytest/runner.py', 120, 126, 0.30151134457776363), ('src/_pytest/terminal.py', 171, 173, 0.30151134457776363), ('src/_pytest/capture.py', 219, 220, 0.3007528242702513), ('src/_pytest/logging.py', 565, 566, 0.3007528242702513), ('src/_pytest/nodes.py', 198, 200, 0.3007528242702513), ('src/_pytest/runner.py', 81, 84, 0.3007528242702513), ('src/_pytest/cacheprovider.py', 187, 190, 0.3), ('src/_pytest/runner.py', 152, 153, 0.3), ('src/_pytest/runner.py', 156, 156, 0.3), ('src/_pytest/runner.py', 159, 159, 0.3), ('src/_pytest/runner.py', 336, 336, 0.3), ('src/_pytest/terminal.py', 397, 403, 0.3), ('src/_pytest/nodes.py', 144, 144, 0.29851115706299675), ('src/_pytest/reports.py', 103, 105, 0.29851115706299675), ('src/_pytest/_io/saferepr.py', 17, 17, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 21, 21, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 30, 32, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 35, 36, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 39, 39, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 42, 43, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 46, 46, 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 67, 67, 0.29488391230979427), ('src/_pytest/python.py', 807, 811, 0.29488391230979427), ('src/_pytest/capture.py', 123, 124, 0.2934695928267111), ('src/_pytest/capture.py', 149, 150, 0.2934695928267111), ('src/_pytest/capture.py', 182, 185, 0.2934695928267111), ('src/_pytest/capture.py', 499, 504, 0.2934695928267111), ('src/_pytest/capture.py', 606, 608, 0.2934695928267111), ('src/_pytest/capture.py', 676, 677, 0.2934695928267111), ('src/_pytest/config/__init__.py', 1027, 1030, 0.2934695928267111), ('src/_pytest/config/__init__.py', 1032, 1032, 0.2934695928267111), ('src/_pytest/logging.py', 547, 552, 0.2934695928267111), ('src/_pytest/runner.py', 186, 192, 0.2934695928267111), ('src/_pytest/runner.py', 217, 223, 0.2934695928267111), ('src/_pytest/capture.py', 127, 129, 0.29277002188455997), ('src/_pytest/capture.py', 141, 141, 0.29277002188455997), ('src/_pytest/capture.py', 155, 156, 0.29277002188455997), ('src/_pytest/capture.py', 187, 188, 0.29277002188455997), ('src/_pytest/capture.py', 190, 192, 0.29277002188455997), ('src/_pytest/capture.py', 443, 443, 0.29277002188455997), ('src/_pytest/capture.py', 489, 494, 0.29277002188455997), ('src/_pytest/capture.py', 522, 524, 0.29277002188455997), ('src/_pytest/capture.py', 584, 588, 0.29277002188455997), ('src/_pytest/capture.py', 601, 603, 0.29277002188455997), ('src/_pytest/capture.py', 627, 631, 0.29277002188455997), ('src/_pytest/capture.py', 672, 673, 0.29277002188455997), ('src/_pytest/logging.py', 191, 191, 0.29277002188455997), ('src/_pytest/logging.py', 193, 195, 0.29277002188455997), ('src/_pytest/logging.py', 200, 200, 0.29277002188455997), ('src/_pytest/logging.py', 202, 204, 0.29277002188455997), ('src/_pytest/logging.py', 207, 208, 0.29277002188455997), ('src/_pytest/logging.py', 210, 210, 0.29277002188455997), ('src/_pytest/logging.py', 212, 213, 0.29277002188455997), ('src/_pytest/logging.py', 221, 222, 0.29277002188455997), ('src/_pytest/logging.py', 527, 528, 0.29277002188455997), ('src/_pytest/logging.py', 532, 532, 0.29277002188455997), ('src/_pytest/logging.py', 537, 540, 0.29277002188455997), ('src/_pytest/logging.py', 543, 545, 0.29277002188455997), ('src/_pytest/logging.py', 554, 556, 0.29277002188455997), ('src/_pytest/logging.py', 558, 558, 0.29277002188455997), ('src/_pytest/logging.py', 560, 561, 0.29277002188455997), ('src/_pytest/logging.py', 592, 593, 0.29277002188455997), ('src/_pytest/main.py', 409, 412, 0.29277002188455997), ('src/_pytest/main.py', 423, 426, 0.29277002188455997), ('src/_pytest/main.py', 431, 432, 0.29277002188455997), ('src/_pytest/mark/evaluate.py', 32, 32, 0.29277002188455997), ('src/_pytest/mark/evaluate.py', 40, 40, 0.29277002188455997), ('src/_pytest/mark/structures.py', 354, 355, 0.29277002188455997), ('src/_pytest/mark/structures.py', 358, 361, 0.29277002188455997), ('src/_pytest/nodes.py', 100, 100, 0.29277002188455997), ('src/_pytest/nodes.py', 141, 141, 0.29277002188455997), ('src/_pytest/nodes.py', 155, 161, 0.29277002188455997), ('src/_pytest/nodes.py', 189, 189, 0.29277002188455997), ('src/_pytest/nodes.py', 410, 411, 0.29277002188455997), ('src/_pytest/nodes.py', 418, 425, 0.29277002188455997), ('src/_pytest/python.py', 247, 249, 0.29277002188455997), ('src/_pytest/python.py', 252, 254, 0.29277002188455997), ('src/_pytest/reports.py', 298, 298, 0.29277002188455997), ('src/_pytest/reports.py', 303, 303, 0.29277002188455997), ('src/_pytest/reports.py', 307, 307, 0.29277002188455997), ('src/_pytest/reports.py', 310, 310, 0.29277002188455997), ('src/_pytest/reports.py', 313, 313, 0.29277002188455997), ('src/_pytest/reports.py', 316, 316, 0.29277002188455997), ('src/_pytest/reports.py', 320, 320, 0.29277002188455997), ('src/_pytest/reports.py', 326, 326, 0.29277002188455997), ('src/_pytest/reports.py', 329, 329, 0.29277002188455997), ('src/_pytest/reports.py', 331, 331, 0.29277002188455997), ('src/_pytest/reports.py', 343, 350, 0.29277002188455997), ('src/_pytest/reports.py', 367, 378, 0.29277002188455997), ('src/_pytest/runner.py', 141, 143, 0.29277002188455997), ('src/_pytest/runner.py', 145, 146, 0.29277002188455997), ('src/_pytest/runner.py', 167, 174, 0.29277002188455997), ('src/_pytest/runner.py', 178, 181, 0.29277002188455997), ('src/_pytest/runner.py', 225, 227, 0.29277002188455997), ('src/_pytest/runner.py', 243, 243, 0.29277002188455997), ('src/_pytest/skipping.py', 122, 124, 0.29277002188455997), ('src/_pytest/skipping.py', 126, 126, 0.29277002188455997), ('src/_pytest/skipping.py', 134, 134, 0.29277002188455997), ('src/_pytest/skipping.py', 136, 136, 0.29277002188455997), ('src/_pytest/skipping.py', 139, 139, 0.29277002188455997), ('src/_pytest/skipping.py', 156, 157, 0.29277002188455997), ('src/_pytest/skipping.py', 173, 173, 0.29277002188455997), ('src/_pytest/stepwise.py', 74, 75, 0.29277002188455997), ('src/_pytest/terminal.py', 386, 390, 0.29277002188455997), ('src/_pytest/terminal.py', 393, 395, 0.29277002188455997), ('src/_pytest/unittest.py', 225, 225, 0.29277002188455997), ('src/_pytest/unittest.py', 233, 234, 0.29277002188455997), ('src/_pytest/python.py', 1415, 1417, 0.2917299829957891), ('src/_pytest/python.py', 1419, 1419, 0.2917299829957891), ('src/_pytest/reports.py', 360, 362, 0.2886751345948129), ('src/_pytest/terminal.py', 1037, 1038, 0.2886751345948129), ('src/_pytest/python.py', 258, 258, 0.28718326344709527), ('src/_pytest/runner.py', 114, 118, 0.282842712474619), ('src/_pytest/terminal.py', 405, 406, 0.2773500981126146), ('src/_pytest/_code/code.py', 312, 312, 0.2721655269759087), ('src/_pytest/_code/code.py', 316, 317, 0.2721655269759087), ('src/_pytest/_code/code.py', 319, 319, 0.2721655269759087), ('src/_pytest/faulthandler.py', 84, 84, 0.2721655269759087), ('src/_pytest/faulthandler.py', 86, 86, 0.2721655269759087), ('src/_pytest/_code/code.py', 306, 310, 0.2672612419124244), ('src/_pytest/_code/code.py', 500, 500, 0.2672612419124244), ('src/_pytest/_code/code.py', 667, 670, 0.2672612419124244), ('src/_pytest/nodes.py', 245, 246, 0.2672612419124244), ('src/_pytest/nodes.py', 248, 249, 0.2672612419124244), ('src/_pytest/nodes.py', 252, 254, 0.2672612419124244), ('src/_pytest/nodes.py', 256, 257, 0.2672612419124244), ('src/_pytest/nodes.py', 260, 260, 0.2672612419124244), ('src/_pytest/nodes.py', 266, 266, 0.2672612419124244), ('src/_pytest/nodes.py', 269, 269, 0.2672612419124244), ('src/_pytest/nodes.py', 271, 273, 0.2672612419124244), ('src/_pytest/nodes.py', 277, 283, 0.2672612419124244), ('src/_pytest/python.py', 786, 791, 0.2672612419124244), ('src/_pytest/python.py', 798, 798, 0.2672612419124244), ('src/_pytest/python.py', 801, 802, 0.2672612419124244), ('src/_pytest/_code/code.py', 72, 72, 0.2626128657194451), ('src/_pytest/_code/code.py', 74, 75, 0.2626128657194451), ('src/_pytest/_code/code.py', 92, 97, 0.2626128657194451), ('src/_pytest/_code/code.py', 160, 160, 0.2626128657194451), ('src/_pytest/_code/code.py', 200, 200, 0.2626128657194451), ('src/_pytest/_code/code.py', 205, 205, 0.2626128657194451), ('src/_pytest/_code/code.py', 208, 208, 0.2626128657194451), ('src/_pytest/_code/code.py', 214, 214, 0.2626128657194451), ('src/_pytest/_code/code.py', 216, 217, 0.2626128657194451), ('src/_pytest/_code/code.py', 219, 227, 0.2626128657194451), ('src/_pytest/_code/code.py', 232, 234, 0.2626128657194451), ('src/_pytest/_code/code.py', 294, 294, 0.2626128657194451), ('src/_pytest/_code/code.py', 328, 328, 0.2626128657194451), ('src/_pytest/_code/code.py', 338, 338, 0.2626128657194451), ('src/_pytest/_code/code.py', 486, 487, 0.2626128657194451), ('src/_pytest/_code/code.py', 489, 489, 0.2626128657194451), ('src/_pytest/_code/code.py', 583, 590, 0.2626128657194451), ('src/_pytest/_code/code.py', 592, 592, 0.2626128657194451), ('src/_pytest/_code/code.py', 627, 628, 0.2626128657194451), ('src/_pytest/_code/code.py', 638, 638, 0.2626128657194451), ('src/_pytest/_code/code.py', 641, 644, 0.2626128657194451), ('src/_pytest/_code/code.py', 655, 655, 0.2626128657194451), ('src/_pytest/_code/code.py', 657, 658, 0.2626128657194451), ('src/_pytest/_code/code.py', 661, 661, 0.2626128657194451), ('src/_pytest/_code/code.py', 663, 664, 0.2626128657194451), ('src/_pytest/_code/code.py', 672, 675, 0.2626128657194451), ('src/_pytest/_code/code.py', 678, 679, 0.2626128657194451), ('src/_pytest/_code/code.py', 681, 685, 0.2626128657194451), ('src/_pytest/_code/code.py', 687, 687, 0.2626128657194451), ('src/_pytest/_code/code.py', 690, 690, 0.2626128657194451), ('src/_pytest/_code/code.py', 716, 716, 0.2626128657194451), ('src/_pytest/_code/code.py', 718, 719, 0.2626128657194451), ('src/_pytest/_code/code.py', 723, 723, 0.2626128657194451), ('src/_pytest/_code/code.py', 725, 734, 0.2626128657194451), ('src/_pytest/_code/code.py', 737, 743, 0.2626128657194451), ('src/_pytest/_code/code.py', 749, 751, 0.2626128657194451), ('src/_pytest/_code/code.py', 754, 754, 0.2626128657194451), ('src/_pytest/_code/code.py', 756, 756, 0.2626128657194451), ('src/_pytest/_code/code.py', 759, 760, 0.2626128657194451), ('src/_pytest/_code/code.py', 763, 763, 0.2626128657194451), ('src/_pytest/_code/code.py', 766, 766, 0.2626128657194451), ('src/_pytest/_code/code.py', 768, 774, 0.2626128657194451), ('src/_pytest/_code/code.py', 815, 823, 0.2626128657194451), ('src/_pytest/_code/code.py', 832, 833, 0.2626128657194451), ('src/_pytest/_code/code.py', 841, 842, 0.2626128657194451), ('src/_pytest/_code/code.py', 852, 854, 0.2626128657194451), ('src/_pytest/_code/code.py', 885, 886, 0.2626128657194451), ('src/_pytest/_code/code.py', 889, 890, 0.2626128657194451), ('src/_pytest/_code/code.py', 916, 918, 0.2626128657194451), ('src/_pytest/_code/code.py', 958, 962, 0.2626128657194451), ('src/_pytest/_code/code.py', 1018, 1018, 0.2626128657194451), ('src/_pytest/_code/source.py', 51, 51, 0.2626128657194451), ('src/_pytest/_code/source.py', 54, 54, 0.2626128657194451), ('src/_pytest/_code/source.py', 56, 58, 0.2626128657194451), ('src/_pytest/_code/source.py', 61, 61, 0.2626128657194451), ('src/_pytest/_code/source.py', 99, 100, 0.2626128657194451), ('src/_pytest/_code/source.py', 106, 106, 0.2626128657194451), ('src/_pytest/_code/source.py', 108, 109, 0.2626128657194451), ('src/_pytest/_code/source.py', 113, 115, 0.2626128657194451), ('src/_pytest/_code/source.py', 138, 138, 0.2626128657194451), ('src/_pytest/_code/source.py', 262, 262, 0.2626128657194451), ('src/_pytest/_code/source.py', 266, 272, 0.2626128657194451), ('src/_pytest/_code/source.py', 286, 287, 0.2626128657194451), ('src/_pytest/_code/source.py', 290, 292, 0.2626128657194451), ('src/_pytest/_code/source.py', 294, 294, 0.2626128657194451), ('src/_pytest/_code/source.py', 299, 300, 0.2626128657194451), ('src/_pytest/_code/source.py', 302, 302, 0.2626128657194451), ('src/_pytest/_code/source.py', 318, 320, 0.2626128657194451), ('src/_pytest/_code/source.py', 324, 324, 0.2626128657194451), ('src/_pytest/nodes.py', 242, 242, 0.2626128657194451), ('src/_pytest/_code/code.py', 573, 573, 0.2581988897471611), ('src/_pytest/_code/code.py', 872, 872, 0.2581988897471611), ('src/_pytest/_code/source.py', 236, 237, 0.2581988897471611), ('src/_pytest/_code/source.py', 240, 242, 0.2581988897471611), ('src/_pytest/junitxml.py', 213, 213, 0.2581988897471611), ('src/_pytest/junitxml.py', 556, 560, 0.2581988897471611), ('src/_pytest/nose.py', 9, 10, 0.25607375986579195), ('src/_pytest/nose.py', 12, 12, 0.25607375986579195), ('src/_pytest/nose.py', 18, 20, 0.25607375986579195), ('src/_pytest/capture.py', 224, 225, 0.2550306852253353), ('src/_pytest/logging.py', 570, 571, 0.2550306852253353), ('src/_pytest/runner.py', 86, 88, 0.2550306852253353), ('src/_pytest/fixtures.py', 273, 274, 0.25298221281347033), ('src/_pytest/fixtures.py', 290, 290, 0.25298221281347033), ('src/_pytest/fixtures.py', 359, 361, 0.25298221281347033), ('src/_pytest/fixtures.py', 459, 463, 0.25298221281347033), ('src/_pytest/python.py', 781, 783, 0.25298221281347033), ('src/_pytest/python.py', 1431, 1432, 0.25298221281347033), ('src/_pytest/runner.py', 282, 283, 0.25298221281347033), ('src/_pytest/runner.py', 285, 285, 0.25298221281347033), ('src/_pytest/runner.py', 292, 297, 0.25298221281347033), ('src/_pytest/skipping.py', 86, 87, 0.25298221281347033), ('src/_pytest/assertion/__init__.py', 110, 110, 0.2519763153394848), ('src/_pytest/assertion/__init__.py', 137, 137, 0.2519763153394848), ('src/_pytest/assertion/__init__.py', 139, 139, 0.2519763153394848), ('src/_pytest/nodes.py', 150, 150, 0.2519763153394848), ('src/_pytest/runner.py', 109, 110, 0.2519763153394848), ('src/_pytest/runner.py', 288, 289, 0.2519763153394848), ('src/_pytest/runner.py', 303, 303, 0.2519763153394848), ('src/_pytest/runner.py', 308, 311, 0.2519763153394848), ('src/_pytest/runner.py', 343, 344, 0.2519763153394848), ('src/_pytest/runner.py', 347, 348, 0.2519763153394848), ('src/_pytest/runner.py', 351, 354, 0.2519763153394848), ('src/_pytest/runner.py', 130, 132, 0.25098232205526344), ('src/_pytest/runner.py', 148, 148, 0.25098232205526344), ('src/_pytest/skipping.py', 77, 77, 0.25), ('src/_pytest/_code/code.py', 33, 38, 0.24902912254587614), ('src/_pytest/_code/code.py', 1041, 1042, 0.24902912254587614), ('src/_pytest/_code/source.py', 206, 206, 0.24902912254587614), ('src/_pytest/_code/source.py', 208, 209, 0.24902912254587614), ('src/_pytest/_code/source.py', 224, 227, 0.24902912254587614), ('src/_pytest/compat.py', 227, 233, 0.24902912254587614), ('src/_pytest/compat.py', 263, 264, 0.24902912254587614), ('src/_pytest/compat.py', 266, 268, 0.24902912254587614), ('src/_pytest/logging.py', 580, 580, 0.24902912254587614), ('src/_pytest/logging.py', 582, 583, 0.24902912254587614), ('src/_pytest/main.py', 398, 398, 0.24902912254587614), ('src/_pytest/mark/evaluate.py', 25, 28, 0.24902912254587614), ('src/_pytest/monkeypatch.py', 304, 309, 0.24902912254587614), ('src/_pytest/nodes.py', 233, 236, 0.24902912254587614), ('src/_pytest/pytester.py', 428, 429, 0.24902912254587614), ('src/_pytest/pytester.py', 432, 434, 0.24902912254587614), ('src/_pytest/pytester.py', 436, 437, 0.24902912254587614), ('src/_pytest/pytester.py', 442, 442, 0.24902912254587614), ('src/_pytest/pytester.py', 445, 445, 0.24902912254587614), ('src/_pytest/pytester.py', 523, 524, 0.24902912254587614), ('src/_pytest/pytester.py', 526, 526, 0.24902912254587614), ('src/_pytest/python.py', 266, 276, 0.24902912254587614), ('src/_pytest/python.py', 278, 282, 0.24902912254587614), ('src/_pytest/python.py', 286, 288, 0.24902912254587614), ('src/_pytest/python.py', 295, 298, 0.24902912254587614), ('src/_pytest/runner.py', 71, 74, 0.24902912254587614), ('src/_pytest/runner.py', 78, 79, 0.24902912254587614), ('src/_pytest/runner.py', 91, 94, 0.24902912254587614), ('src/_pytest/skipping.py', 71, 73, 0.24902912254587614), ('src/_pytest/terminal.py', 378, 378, 0.24902912254587614), ('src/_pytest/terminal.py', 381, 383, 0.24902912254587614), ('src/_pytest/_code/code.py', 41, 41, 0.24806946917841693), ('src/_pytest/_code/code.py', 56, 57, 0.24806946917841693), ('src/_pytest/_code/code.py', 59, 59, 0.24806946917841693), ('src/_pytest/_code/code.py', 66, 66, 0.24806946917841693), ('src/_pytest/assertion/__init__.py', 150, 151, 0.24806946917841693), ('src/_pytest/capture.py', 213, 215, 0.24806946917841693), ('src/_pytest/compat.py', 44, 45, 0.24806946917841693), ('src/_pytest/faulthandler.py', 56, 57, 0.24806946917841693), ('src/_pytest/fixtures.py', 75, 76, 0.24806946917841693), ('src/_pytest/fixtures.py', 392, 392, 0.24806946917841693), ('src/_pytest/logging.py', 587, 588, 0.24806946917841693), ('src/_pytest/main.py', 254, 257, 0.24806946917841693), ('src/_pytest/main.py', 259, 259, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 105, 108, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 206, 207, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 226, 226, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 237, 237, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 239, 239, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 300, 301, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 313, 315, 0.24806946917841693), ('src/_pytest/monkeypatch.py', 319, 319, 0.24806946917841693), ('src/_pytest/nodes.py', 210, 210, 0.24806946917841693), ('src/_pytest/runner.py', 321, 322, 0.24806946917841693), ('src/_pytest/terminal.py', 437, 438, 0.24806946917841693), ('src/_pytest/terminal.py', 442, 442, 0.24806946917841693), ('src/_pytest/terminal.py', 444, 446, 0.24806946917841693), ('src/_pytest/terminal.py', 448, 449, 0.24806946917841693), ('src/_pytest/unittest.py', 247, 247, 0.24806946917841693), ('src/_pytest/warnings.py', 83, 84, 0.24806946917841693), ('src/_pytest/warnings.py', 111, 112, 0.24806946917841693), ('src/_pytest/compat.py', 222, 223, 0.24712082528608617), ('src/_pytest/compat.py', 241, 241, 0.24712082528608617), ('src/_pytest/compat.py', 243, 243, 0.24712082528608617), ('src/_pytest/config/__init__.py', 952, 956, 0.24712082528608617), ('src/_pytest/faulthandler.py', 67, 67, 0.24712082528608617), ('src/_pytest/terminal.py', 275, 275, 0.24712082528608617), ('src/_pytest/unittest.py', 272, 272, 0.24712082528608617), ('src/_pytest/warnings.py', 66, 68, 0.24712082528608617), ('src/_pytest/warnings.py', 70, 70, 0.24712082528608617), ('src/_pytest/warnings.py', 72, 73, 0.24712082528608617), ('src/_pytest/warnings.py', 77, 78, 0.24712082528608617), ('src/_pytest/warnings.py', 80, 80, 0.24712082528608617), ('src/_pytest/warnings.py', 114, 114, 0.24712082528608617), ('src/_pytest/fixtures.py', 646, 646, 0.24618298195866545), ('src/_pytest/fixtures.py', 827, 827, 0.24618298195866545), ('src/_pytest/terminal.py', 481, 482, 0.24618298195866545), ('src/_pytest/warnings.py', 88, 88, 0.24618298195866545), ('src/_pytest/warnings.py', 90, 90, 0.24618298195866545), ('src/_pytest/mark/evaluate.py', 49, 50, 0.2399040575616269), ('src/_pytest/mark/evaluate.py', 72, 72, 0.2399040575616269), ('src/_pytest/mark/evaluate.py', 74, 74, 0.2399040575616269), ('src/_pytest/mark/evaluate.py', 76, 76, 0.2399040575616269), ('src/_pytest/mark/evaluate.py', 109, 109, 0.2399040575616269), ('src/_pytest/skipping.py', 101, 103, 0.2399040575616269), ('src/_pytest/terminal.py', 265, 266, 0.2399040575616269), ('src/_pytest/terminal.py', 282, 282, 0.2399040575616269), ('src/_pytest/terminal.py', 285, 286, 0.2399040575616269), ('src/_pytest/terminal.py', 288, 292, 0.2399040575616269), ('src/_pytest/_code/code.py', 105, 109, 0.23904572186687872), ('src/_pytest/_code/code.py', 170, 172, 0.23904572186687872), ('src/_pytest/_code/code.py', 180, 180, 0.23904572186687872), ('src/_pytest/_code/code.py', 182, 182, 0.23904572186687872), ('src/_pytest/_code/code.py', 247, 249, 0.23904572186687872), ('src/_pytest/_code/code.py', 251, 251, 0.23904572186687872), ('src/_pytest/_code/code.py', 253, 253, 0.23904572186687872), ('src/_pytest/_code/code.py', 284, 285, 0.23904572186687872), ('src/_pytest/_code/code.py', 287, 290, 0.23904572186687872), ('src/_pytest/_code/code.py', 292, 292, 0.23904572186687872), ('src/_pytest/_code/code.py', 323, 324, 0.23904572186687872), ('src/_pytest/_code/code.py', 326, 326, 0.23904572186687872), ('src/_pytest/_code/code.py', 344, 347, 0.23904572186687872), ('src/_pytest/_code/code.py', 462, 463, 0.23904572186687872), ('src/_pytest/_code/code.py', 465, 465, 0.23904572186687872), ('src/_pytest/_code/code.py', 478, 479, 0.23904572186687872), ('src/_pytest/_code/code.py', 481, 481, 0.23904572186687872), ('src/_pytest/_code/code.py', 494, 496, 0.23904572186687872), ('src/_pytest/_code/code.py', 515, 521, 0.23904572186687872), ('src/_pytest/_code/code.py', 530, 533, 0.23904572186687872), ('src/_pytest/_code/code.py', 992, 994, 0.23904572186687872), ('src/_pytest/capture.py', 229, 230, 0.23904572186687872), ('src/_pytest/logging.py', 575, 576, 0.23904572186687872), ('src/_pytest/reports.py', 352, 352, 0.23904572186687872), ('src/_pytest/reports.py', 355, 355, 0.23904572186687872), ('src/_pytest/terminal.py', 257, 257, 0.23904572186687872), ('testing/conftest.py', 13, 15, 0.23904572186687872), ('src/_pytest/main.py', 239, 239, 0.23570226039551587), ('src/_pytest/_code/code.py', 416, 421, 0.23249527748763857), ('src/_pytest/_code/code.py', 424, 424, 0.23249527748763857), ('src/_pytest/_code/code.py', 441, 446, 0.23249527748763857), ('src/_pytest/_code/code.py', 470, 471, 0.23249527748763857), ('src/_pytest/_code/code.py', 473, 473, 0.23249527748763857), ('src/_pytest/_code/code.py', 527, 527, 0.23249527748763857), ('src/_pytest/terminal.py', 1035, 1035, 0.23249527748763857), ('src/_pytest/compat.py', 272, 275, 0.22941573387056174), ('src/_pytest/fixtures.py', 899, 901, 0.22941573387056174), ('src/_pytest/fixtures.py', 607, 608, 0.2250175801852048), ('src/_pytest/python.py', 764, 764, 0.22360679774997896), ('src/_pytest/python.py', 771, 772, 0.22360679774997896), ('src/_pytest/fixtures.py', 366, 366, 0.2215395102486845), ('src/_pytest/fixtures.py', 605, 605, 0.2215395102486845), ('src/_pytest/terminal.py', 811, 814, 0.2182178902359924), ('src/_pytest/assertion/rewrite.py', 352, 352, 0.19611613513818404), ('src/_pytest/assertion/util.py', 30, 33, 0.19611613513818404), ('src/_pytest/assertion/util.py', 43, 45, 0.19611613513818404), ('src/_pytest/assertion/util.py', 50, 50, 0.19611613513818404), ('src/_pytest/assertion/util.py', 62, 65, 0.19611613513818404), ('src/_pytest/assertion/util.py', 84, 85, 0.19611613513818404), ('src/_pytest/terminal.py', 834, 837, 0.19425717247145283), ('src/_pytest/config/findpaths.py', 23, 32, 0.1889822365046136), ('src/_pytest/junitxml.py', 163, 165, 0.1889822365046136), ('src/_pytest/junitxml.py', 167, 167, 0.1889822365046136), ('src/_pytest/junitxml.py', 191, 191, 0.1889822365046136), ('src/_pytest/junitxml.py', 273, 275, 0.1889822365046136), ('src/_pytest/junitxml.py', 499, 499, 0.1889822365046136), ('src/_pytest/junitxml.py', 501, 504, 0.1889822365046136), ('src/_pytest/junitxml.py', 515, 515, 0.1889822365046136), ('src/_pytest/junitxml.py', 593, 596, 0.1889822365046136), ('src/_pytest/junitxml.py', 598, 598, 0.1889822365046136), ('src/_pytest/junitxml.py', 601, 605, 0.1889822365046136), ('src/_pytest/junitxml.py', 607, 607, 0.1889822365046136), ('src/_pytest/junitxml.py', 614, 614, 0.1889822365046136), ('src/_pytest/junitxml.py', 616, 616, 0.1889822365046136), ('src/_pytest/junitxml.py', 623, 625, 0.1889822365046136), ('src/_pytest/python.py', 398, 399, 0.1889822365046136), ('src/_pytest/reports.py', 55, 55, 0.1889822365046136), ('src/_pytest/reports.py', 79, 80, 0.1889822365046136), ('src/_pytest/reports.py', 89, 90, 0.1889822365046136), ('src/_pytest/reports.py', 99, 100, 0.1889822365046136), ('src/_pytest/config/__init__.py', 367, 371, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 54, 54, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 58, 60, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 62, 63, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 65, 66, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 73, 75, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 124, 128, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 132, 136, 0.1873171623163388), ('src/_pytest/config/findpaths.py', 139, 141, 0.1873171623163388), ('src/_pytest/fixtures.py', 180, 184, 0.1873171623163388), ('src/_pytest/junitxml.py', 114, 114, 0.1873171623163388), ('src/_pytest/junitxml.py', 128, 130, 0.1873171623163388), ('src/_pytest/junitxml.py', 136, 137, 0.1873171623163388), ('src/_pytest/junitxml.py', 160, 160, 0.1873171623163388), ('src/_pytest/junitxml.py', 674, 674, 0.1873171623163388), ('src/_pytest/terminal.py', 152, 155, 0.1873171623163388), ('src/_pytest/config/__init__.py', 99, 99, 0.18569533817705186), ('src/_pytest/junitxml.py', 445, 448, 0.18569533817705186), ('src/_pytest/junitxml.py', 628, 628, 0.18569533817705186), ('src/_pytest/terminal.py', 747, 750, 0.18569533817705186), ('src/_pytest/config/__init__.py', 97, 97, 0.1841149235796647), ('src/_pytest/config/__init__.py', 393, 395, 0.1841149235796647), ('src/_pytest/junitxml.py', 117, 121, 0.1841149235796647), ('src/_pytest/junitxml.py', 123, 126, 0.1841149235796647), ('src/_pytest/junitxml.py', 132, 133, 0.1841149235796647), ('src/_pytest/junitxml.py', 431, 439, 0.1841149235796647), ('src/_pytest/junitxml.py', 441, 441, 0.1841149235796647), ('src/_pytest/junitxml.py', 452, 457, 0.1841149235796647), ('src/_pytest/junitxml.py', 529, 531, 0.1841149235796647), ('src/_pytest/junitxml.py', 691, 691, 0.1841149235796647), ('src/_pytest/nodes.py', 147, 147, 0.1841149235796647), ('src/_pytest/pytester.py', 889, 891, 0.1841149235796647), ('src/_pytest/python.py', 448, 449, 0.1841149235796647), ('src/_pytest/assertion/rewrite.py', 183, 184, 0.18257418583505536), ('src/_pytest/assertion/rewrite.py', 207, 211, 0.18257418583505536), ('src/_pytest/compat.py', 294, 295, 0.18257418583505536), ('src/_pytest/fixtures.py', 345, 345, 0.18257418583505536), ('src/_pytest/fixtures.py', 347, 347, 0.18257418583505536), ('src/_pytest/fixtures.py', 349, 354, 0.18257418583505536), ('src/_pytest/fixtures.py', 1131, 1131, 0.18257418583505536), ('src/_pytest/fixtures.py', 1133, 1134, 0.18257418583505536), ('src/_pytest/fixtures.py', 1141, 1141, 0.18257418583505536), ('src/_pytest/fixtures.py', 1144, 1145, 0.18257418583505536), ('src/_pytest/fixtures.py', 1149, 1150, 0.18257418583505536), ('src/_pytest/fixtures.py', 1152, 1155, 0.18257418583505536), ('src/_pytest/fixtures.py', 1157, 1157, 0.18257418583505536), ('src/_pytest/fixtures.py', 1178, 1181, 0.18257418583505536), ('src/_pytest/fixtures.py', 1186, 1187, 0.18257418583505536), ('src/_pytest/fixtures.py', 1197, 1198, 0.18257418583505536), ('src/_pytest/fixtures.py', 1200, 1201, 0.18257418583505536), ('src/_pytest/fixtures.py', 1205, 1205, 0.18257418583505536), ('src/_pytest/fixtures.py', 1210, 1210, 0.18257418583505536), ('src/_pytest/fixtures.py', 1212, 1216, 0.18257418583505536), ('src/_pytest/fixtures.py', 1226, 1226, 0.18257418583505536), ('src/_pytest/fixtures.py', 1234, 1235, 0.18257418583505536), ('src/_pytest/fixtures.py', 1238, 1238, 0.18257418583505536), ('src/_pytest/fixtures.py', 1275, 1277, 0.18257418583505536), ('src/_pytest/junitxml.py', 84, 92, 0.18257418583505536), ('src/_pytest/junitxml.py', 107, 107, 0.18257418583505536), ('src/_pytest/junitxml.py', 148, 150, 0.18257418583505536), ('src/_pytest/junitxml.py', 152, 152, 0.18257418583505536), ('src/_pytest/junitxml.py', 459, 460, 0.18257418583505536), ('src/_pytest/junitxml.py', 462, 463, 0.18257418583505536), ('src/_pytest/junitxml.py', 507, 507, 0.18257418583505536), ('src/_pytest/junitxml.py', 509, 509, 0.18257418583505536), ('src/_pytest/junitxml.py', 511, 511, 0.18257418583505536), ('src/_pytest/junitxml.py', 513, 513, 0.18257418583505536), ('src/_pytest/junitxml.py', 517, 517, 0.18257418583505536), ('src/_pytest/junitxml.py', 519, 520, 0.18257418583505536), ('src/_pytest/junitxml.py', 522, 522, 0.18257418583505536), ('src/_pytest/junitxml.py', 525, 526, 0.18257418583505536), ('src/_pytest/main.py', 237, 237, 0.18257418583505536), ('src/_pytest/main.py', 358, 360, 0.18257418583505536), ('src/_pytest/main.py', 694, 699, 0.18257418583505536), ('src/_pytest/mark/structures.py', 248, 249, 0.18257418583505536), ('src/_pytest/mark/structures.py', 251, 251, 0.18257418583505536), ('src/_pytest/mark/structures.py', 261, 262, 0.18257418583505536), ('src/_pytest/mark/structures.py', 264, 264, 0.18257418583505536), ('src/_pytest/mark/structures.py', 267, 267, 0.18257418583505536), ('src/_pytest/pathlib.py', 129, 135, 0.18257418583505536), ('src/_pytest/pytester.py', 548, 551, 0.18257418583505536), ('src/_pytest/python.py', 45, 46, 0.18257418583505536), ('src/_pytest/python.py', 122, 124, 0.18257418583505536), ('src/_pytest/python.py', 127, 127, 0.18257418583505536), ('src/_pytest/python.py', 194, 196, 0.18257418583505536), ('src/_pytest/python.py', 199, 199, 0.18257418583505536), ('src/_pytest/python.py', 202, 202, 0.18257418583505536), ('src/_pytest/python.py', 204, 204, 0.18257418583505536), ('src/_pytest/python.py', 208, 208, 0.18257418583505536), ('src/_pytest/python.py', 218, 219, 0.18257418583505536), ('src/_pytest/python.py', 227, 228, 0.18257418583505536), ('src/_pytest/python.py', 303, 303, 0.18257418583505536), ('src/_pytest/python.py', 312, 312, 0.18257418583505536), ('src/_pytest/python.py', 318, 319, 0.18257418583505536), ('src/_pytest/python.py', 322, 324, 0.18257418583505536), ('src/_pytest/python.py', 327, 327, 0.18257418583505536), ('src/_pytest/python.py', 337, 339, 0.18257418583505536), ('src/_pytest/python.py', 343, 343, 0.18257418583505536), ('src/_pytest/python.py', 347, 347, 0.18257418583505536), ('src/_pytest/python.py', 350, 350, 0.18257418583505536), ('src/_pytest/python.py', 355, 368, 0.18257418583505536), ('src/_pytest/python.py', 370, 372, 0.18257418583505536), ('src/_pytest/python.py', 376, 376, 0.18257418583505536), ('src/_pytest/python.py', 379, 382, 0.18257418583505536), ('src/_pytest/python.py', 384, 385, 0.18257418583505536), ('src/_pytest/python.py', 387, 388, 0.18257418583505536), ('src/_pytest/python.py', 390, 391, 0.18257418583505536), ('src/_pytest/python.py', 393, 393, 0.18257418583505536), ('src/_pytest/python.py', 396, 396, 0.18257418583505536), ('src/_pytest/python.py', 429, 432, 0.18257418583505536), ('src/_pytest/python.py', 444, 445, 0.18257418583505536), ('src/_pytest/python.py', 468, 470, 0.18257418583505536), ('src/_pytest/python.py', 472, 473, 0.18257418583505536), ('src/_pytest/python.py', 537, 538, 0.18257418583505536), ('src/_pytest/python.py', 671, 673, 0.18257418583505536), ('src/_pytest/python.py', 898, 899, 0.18257418583505536), ('src/_pytest/python.py', 902, 902, 0.18257418583505536), ('src/_pytest/python.py', 905, 905, 0.18257418583505536), ('src/_pytest/python.py', 908, 908, 0.18257418583505536), ('src/_pytest/python.py', 911, 911, 0.18257418583505536), ('src/_pytest/python.py', 914, 914, 0.18257418583505536), ('src/_pytest/python.py', 917, 917, 0.18257418583505536), ('src/_pytest/python.py', 919, 921, 0.18257418583505536), ('src/_pytest/python.py', 1360, 1363, 0.18257418583505536), ('src/_pytest/python.py', 1365, 1367, 0.18257418583505536), ('src/_pytest/python.py', 1377, 1377, 0.18257418583505536), ('src/_pytest/python.py', 1383, 1384, 0.18257418583505536), ('src/_pytest/python.py', 1386, 1386, 0.18257418583505536), ('src/_pytest/python.py', 1391, 1393, 0.18257418583505536), ('src/_pytest/python.py', 1395, 1397, 0.18257418583505536), ('src/_pytest/python.py', 1403, 1403, 0.18257418583505536), ('src/_pytest/python.py', 1406, 1407, 0.18257418583505536), ('src/_pytest/terminal.py', 304, 306, 0.18257418583505536), ('src/_pytest/terminal.py', 309, 309, 0.18257418583505536), ('src/_pytest/terminal.py', 473, 476, 0.18257418583505536), ('src/_pytest/terminal.py', 1013, 1016, 0.18257418583505536), ('src/_pytest/unittest.py', 20, 21, 0.18257418583505536), ('src/_pytest/unittest.py', 23, 24, 0.18257418583505536), ('src/_pytest/_code/source.py', 22, 25, 0.18107149208503706), ('src/_pytest/_code/source.py', 27, 27, 0.18107149208503706), ('src/_pytest/_code/source.py', 29, 29, 0.18107149208503706), ('src/_pytest/_code/source.py', 31, 32, 0.18107149208503706), ('src/_pytest/_code/source.py', 35, 37, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 141, 148, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 150, 150, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 153, 153, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 161, 163, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 166, 166, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 168, 168, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 176, 176, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 178, 178, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 181, 181, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 270, 272, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 274, 275, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 277, 278, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 285, 285, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 290, 296, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 338, 338, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 575, 580, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 584, 584, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 592, 592, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 597, 599, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 601, 603, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 605, 610, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 617, 618, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 622, 623, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 627, 628, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 630, 630, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 632, 639, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 643, 648, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 651, 651, 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 653, 653, 0.18107149208503706), ('src/_pytest/cacheprovider.py', 174, 174, 0.18107149208503706), ('src/_pytest/capture.py', 198, 204, 0.18107149208503706), ('src/_pytest/capture.py', 206, 206, 0.18107149208503706), ('src/_pytest/config/__init__.py', 387, 388, 0.18107149208503706), ('src/_pytest/config/__init__.py', 426, 427, 0.18107149208503706), ('src/_pytest/config/__init__.py', 432, 432, 0.18107149208503706), ('src/_pytest/config/__init__.py', 930, 935, 0.18107149208503706), ('src/_pytest/config/__init__.py', 990, 993, 0.18107149208503706), ('src/_pytest/fixtures.py', 210, 217, 0.18107149208503706), ('src/_pytest/junitxml.py', 641, 641, 0.18107149208503706), ('src/_pytest/junitxml.py', 644, 645, 0.18107149208503706), ('src/_pytest/junitxml.py', 647, 649, 0.18107149208503706), ('src/_pytest/junitxml.py', 651, 656, 0.18107149208503706), ('src/_pytest/junitxml.py', 658, 658, 0.18107149208503706), ('src/_pytest/junitxml.py', 660, 668, 0.18107149208503706), ('src/_pytest/junitxml.py', 670, 671, 0.18107149208503706), ('src/_pytest/junitxml.py', 684, 684, 0.18107149208503706), ('src/_pytest/main.py', 251, 251, 0.18107149208503706), ('src/_pytest/main.py', 261, 261, 0.18107149208503706), ('src/_pytest/main.py', 267, 269, 0.18107149208503706), ('src/_pytest/main.py', 282, 285, 0.18107149208503706), ('src/_pytest/main.py', 288, 288, 0.18107149208503706), ('src/_pytest/main.py', 291, 292, 0.18107149208503706), ('src/_pytest/main.py', 294, 296, 0.18107149208503706), ('src/_pytest/main.py', 299, 299, 0.18107149208503706), ('src/_pytest/main.py', 302, 303, 0.18107149208503706), ('src/_pytest/main.py', 306, 306, 0.18107149208503706), ('src/_pytest/main.py', 521, 522, 0.18107149208503706), ('src/_pytest/main.py', 524, 526, 0.18107149208503706), ('src/_pytest/main.py', 528, 529, 0.18107149208503706), ('src/_pytest/main.py', 531, 533, 0.18107149208503706), ('src/_pytest/main.py', 538, 538, 0.18107149208503706), ('src/_pytest/main.py', 542, 544, 0.18107149208503706), ('src/_pytest/main.py', 547, 548, 0.18107149208503706), ('src/_pytest/main.py', 575, 577, 0.18107149208503706), ('src/_pytest/main.py', 580, 584, 0.18107149208503706), ('src/_pytest/main.py', 587, 587, 0.18107149208503706), ('src/_pytest/main.py', 606, 606, 0.18107149208503706), ('src/_pytest/main.py', 689, 692, 0.18107149208503706), ('src/_pytest/nodes.py', 93, 95, 0.18107149208503706), ('src/_pytest/nodes.py', 353, 360, 0.18107149208503706), ('src/_pytest/nodes.py', 364, 365, 0.18107149208503706), ('src/_pytest/nodes.py', 367, 367, 0.18107149208503706), ('src/_pytest/nodes.py', 369, 369, 0.18107149208503706), ('src/_pytest/nodes.py', 387, 388, 0.18107149208503706), ('src/_pytest/nodes.py', 392, 392, 0.18107149208503706), ('src/_pytest/pastebin.py', 79, 79, 0.18107149208503706), ('src/_pytest/pastebin.py', 81, 82, 0.18107149208503706), ('src/_pytest/pathlib.py', 323, 324, 0.18107149208503706), ('src/_pytest/pathlib.py', 326, 326, 0.18107149208503706), ('src/_pytest/pathlib.py', 332, 333, 0.18107149208503706), ('src/_pytest/pathlib.py', 338, 338, 0.18107149208503706), ('src/_pytest/pytester.py', 543, 543, 0.18107149208503706), ('src/_pytest/pytester.py', 545, 546, 0.18107149208503706), ('src/_pytest/pytester.py', 553, 562, 0.18107149208503706), ('src/_pytest/pytester.py', 600, 600, 0.18107149208503706), ('src/_pytest/python.py', 170, 174, 0.18107149208503706), ('src/_pytest/python.py', 177, 178, 0.18107149208503706), ('src/_pytest/python.py', 183, 183, 0.18107149208503706), ('src/_pytest/python.py', 187, 187, 0.18107149208503706), ('src/_pytest/python.py', 189, 189, 0.18107149208503706), ('src/_pytest/python.py', 426, 426, 0.18107149208503706), ('src/_pytest/python.py', 441, 442, 0.18107149208503706), ('src/_pytest/python.py', 492, 494, 0.18107149208503706), ('src/_pytest/reports.py', 124, 124, 0.18107149208503706), ('src/_pytest/runner.py', 34, 37, 0.18107149208503706), ('src/_pytest/terminal.py', 278, 279, 0.18107149208503706), ('src/_pytest/terminal.py', 458, 459, 0.18107149208503706), ('src/_pytest/terminal.py', 467, 469, 0.18107149208503706), ('src/_pytest/terminal.py', 658, 660, 0.18107149208503706), ('src/_pytest/terminal.py', 669, 674, 0.18107149208503706), ('src/_pytest/terminal.py', 676, 676, 0.18107149208503706), ('src/_pytest/terminal.py', 740, 741, 0.18107149208503706), ('src/_pytest/terminal.py', 744, 744, 0.18107149208503706), ('src/_pytest/terminal.py', 785, 786, 0.18107149208503706), ('src/_pytest/terminal.py', 873, 873, 0.18107149208503706), ('src/_pytest/terminal.py', 876, 876, 0.18107149208503706), ('src/_pytest/terminal.py', 886, 886, 0.18107149208503706), ('src/_pytest/terminal.py', 896, 896, 0.18107149208503706), ('src/_pytest/terminal.py', 904, 904, 0.18107149208503706), ('src/_pytest/terminal.py', 921, 929, 0.18107149208503706), ('src/_pytest/terminal.py', 932, 935, 0.18107149208503706), ('src/_pytest/terminal.py', 938, 938, 0.18107149208503706), ('src/_pytest/terminal.py', 1019, 1024, 0.18107149208503706), ('src/_pytest/terminal.py', 1026, 1026, 0.18107149208503706), ('src/_pytest/terminal.py', 1028, 1029, 0.18107149208503706), ('src/_pytest/warnings.py', 128, 130, 0.18107149208503706), ('src/_pytest/warnings.py', 132, 132, 0.18107149208503706), ('src/_pytest/_argcomplete.py', 104, 104, 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 70, 72, 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 77, 80, 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 82, 85, 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 87, 88, 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 95, 98, 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 155, 158, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 41, 43, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 46, 48, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 51, 54, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 57, 58, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 92, 96, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 100, 100, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 103, 104, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 106, 106, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 116, 120, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 137, 138, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 198, 199, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 236, 237, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 239, 242, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 245, 246, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 304, 307, 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 657, 657, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 45, 46, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 49, 49, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 53, 53, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 83, 83, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 96, 98, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 100, 101, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 112, 115, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 117, 118, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 122, 125, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 129, 130, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 134, 135, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 137, 139, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 141, 142, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 149, 155, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 183, 183, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 193, 195, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 202, 203, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 249, 250, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 253, 254, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 262, 264, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 267, 267, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 279, 279, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 285, 286, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 289, 289, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 351, 351, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 359, 361, 0.1796053020267749), ('src/_pytest/cacheprovider.py', 382, 382, 0.1796053020267749), ('src/_pytest/capture.py', 40, 47, 0.1796053020267749), ('src/_pytest/capture.py', 50, 50, 0.1796053020267749), ('src/_pytest/capture.py', 53, 56, 0.1796053020267749), ('src/_pytest/capture.py', 76, 78, 0.1796053020267749), ('src/_pytest/capture.py', 86, 87, 0.1796053020267749), ('src/_pytest/capture.py', 110, 112, 0.1796053020267749), ('src/_pytest/capture.py', 115, 118, 0.1796053020267749), ('src/_pytest/capture.py', 209, 209, 0.1796053020267749), ('src/_pytest/capture.py', 398, 400, 0.1796053020267749), ('src/_pytest/capture.py', 406, 407, 0.1796053020267749), ('src/_pytest/capture.py', 409, 410, 0.1796053020267749), ('src/_pytest/capture.py', 417, 418, 0.1796053020267749), ('src/_pytest/capture.py', 481, 482, 0.1796053020267749), ('src/_pytest/capture.py', 484, 484, 0.1796053020267749), ('src/_pytest/capture.py', 486, 486, 0.1796053020267749), ('src/_pytest/capture.py', 543, 545, 0.1796053020267749), ('src/_pytest/capture.py', 550, 555, 0.1796053020267749), ('src/_pytest/capture.py', 557, 562, 0.1796053020267749), ('src/_pytest/capture.py', 565, 566, 0.1796053020267749), ('src/_pytest/capture.py', 575, 576, 0.1796053020267749), ('src/_pytest/capture.py', 579, 581, 0.1796053020267749), ('src/_pytest/capture.py', 593, 598, 0.1796053020267749), ('src/_pytest/capture.py', 738, 738, 0.1796053020267749), ('src/_pytest/capture.py', 763, 763, 0.1796053020267749), ('src/_pytest/capture.py', 792, 793, 0.1796053020267749), ('src/_pytest/compat.py', 110, 111, 0.1796053020267749), ('src/_pytest/compat.py', 118, 120, 0.1796053020267749), ('src/_pytest/compat.py', 122, 122, 0.1796053020267749), ('src/_pytest/compat.py', 125, 125, 0.1796053020267749), ('src/_pytest/compat.py', 130, 131, 0.1796053020267749), ('src/_pytest/compat.py', 135, 135, 0.1796053020267749), ('src/_pytest/compat.py', 137, 137, 0.1796053020267749), ('src/_pytest/compat.py', 251, 253, 0.1796053020267749), ('src/_pytest/compat.py', 256, 256, 0.1796053020267749), ('src/_pytest/compat.py', 258, 258, 0.1796053020267749), ('src/_pytest/compat.py', 286, 287, 0.1796053020267749), ('src/_pytest/config/__init__.py', 76, 77, 0.1796053020267749), ('src/_pytest/config/__init__.py', 79, 79, 0.1796053020267749), ('src/_pytest/config/__init__.py', 344, 346, 0.1796053020267749), ('src/_pytest/config/__init__.py', 349, 351, 0.1796053020267749), ('src/_pytest/config/__init__.py', 354, 354, 0.1796053020267749), ('src/_pytest/config/__init__.py', 373, 377, 0.1796053020267749), ('src/_pytest/config/__init__.py', 391, 391, 0.1796053020267749), ('src/_pytest/config/__init__.py', 403, 404, 0.1796053020267749), ('src/_pytest/config/__init__.py', 517, 517, 0.1796053020267749), ('src/_pytest/config/__init__.py', 591, 592, 0.1796053020267749), ('src/_pytest/config/__init__.py', 611, 614, 0.1796053020267749), ('src/_pytest/config/__init__.py', 617, 619, 0.1796053020267749), ('src/_pytest/config/__init__.py', 688, 688, 0.1796053020267749), ('src/_pytest/config/__init__.py', 693, 693, 0.1796053020267749), ('src/_pytest/config/__init__.py', 696, 698, 0.1796053020267749), ('src/_pytest/config/__init__.py', 701, 707, 0.1796053020267749), ('src/_pytest/config/__init__.py', 734, 734, 0.1796053020267749), ('src/_pytest/config/__init__.py', 777, 777, 0.1796053020267749), ('src/_pytest/config/__init__.py', 783, 787, 0.1796053020267749), ('src/_pytest/config/__init__.py', 789, 794, 0.1796053020267749), ('src/_pytest/config/__init__.py', 803, 807, 0.1796053020267749), ('src/_pytest/config/__init__.py', 811, 812, 0.1796053020267749), ('src/_pytest/config/__init__.py', 820, 820, 0.1796053020267749), ('src/_pytest/config/__init__.py', 822, 822, 0.1796053020267749), ('src/_pytest/config/__init__.py', 826, 830, 0.1796053020267749), ('src/_pytest/config/__init__.py', 833, 834, 0.1796053020267749), ('src/_pytest/config/__init__.py', 838, 841, 0.1796053020267749), ('src/_pytest/config/__init__.py', 844, 844, 0.1796053020267749), ('src/_pytest/config/__init__.py', 846, 846, 0.1796053020267749), ('src/_pytest/config/__init__.py', 856, 859, 0.1796053020267749), ('src/_pytest/config/__init__.py', 862, 865, 0.1796053020267749), ('src/_pytest/config/__init__.py', 868, 871, 0.1796053020267749), ('src/_pytest/config/__init__.py', 873, 873, 0.1796053020267749), ('src/_pytest/config/__init__.py', 876, 878, 0.1796053020267749), ('src/_pytest/config/__init__.py', 898, 898, 0.1796053020267749), ('src/_pytest/config/__init__.py', 900, 901, 0.1796053020267749), ('src/_pytest/config/__init__.py', 924, 928, 0.1796053020267749), ('src/_pytest/config/__init__.py', 943, 945, 0.1796053020267749), ('src/_pytest/config/__init__.py', 959, 960, 0.1796053020267749), ('src/_pytest/config/__init__.py', 963, 972, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1004, 1004, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1008, 1008, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1016, 1016, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1044, 1044, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1052, 1055, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1061, 1061, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1105, 1106, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1108, 1108, 0.1796053020267749), ('src/_pytest/config/__init__.py', 1110, 1110, 0.1796053020267749), ('src/_pytest/config/argparsing.py', 76, 76, 0.1796053020267749), ('src/_pytest/config/argparsing.py', 78, 81, 0.1796053020267749), ('src/_pytest/config/argparsing.py', 101, 104, 0.1796053020267749), ('src/_pytest/config/argparsing.py', 110, 110, 0.1796053020267749), ('src/_pytest/config/argparsing.py', 350, 351, 0.1796053020267749), ('src/_pytest/config/argparsing.py', 359, 359, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 10, 11, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 77, 77, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 81, 81, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 84, 84, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 87, 87, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 93, 93, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 95, 95, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 99, 99, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 106, 107, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 143, 143, 0.1796053020267749), ('src/_pytest/config/findpaths.py', 151, 151, 0.1796053020267749), ('src/_pytest/debugging.py', 48, 48, 0.1796053020267749), ('src/_pytest/debugging.py', 50, 50, 0.1796053020267749), ('src/_pytest/debugging.py', 53, 54, 0.1796053020267749), ('src/_pytest/debugging.py', 56, 58, 0.1796053020267749), ('src/_pytest/debugging.py', 62, 67, 0.1796053020267749), ('src/_pytest/debugging.py', 69, 69, 0.1796053020267749), ('src/_pytest/doctest.py', 88, 90, 0.1796053020267749), ('src/_pytest/faulthandler.py', 18, 18, 0.1796053020267749), ('src/_pytest/faulthandler.py', 21, 22, 0.1796053020267749), ('src/_pytest/faulthandler.py', 40, 40, 0.1796053020267749), ('src/_pytest/faulthandler.py', 42, 42, 0.1796053020267749), ('src/_pytest/faulthandler.py', 44, 45, 0.1796053020267749), ('src/_pytest/fixtures.py', 44, 45, 0.1796053020267749), ('src/_pytest/fixtures.py', 47, 53, 0.1796053020267749), ('src/_pytest/fixtures.py', 56, 56, 0.1796053020267749), ('src/_pytest/fixtures.py', 169, 170, 0.1796053020267749), ('src/_pytest/fixtures.py', 221, 222, 0.1796053020267749), ('src/_pytest/fixtures.py', 232, 233, 0.1796053020267749), ('src/_pytest/fixtures.py', 671, 672, 0.1796053020267749), ('src/_pytest/fixtures.py', 809, 818, 0.1796053020267749), ('src/_pytest/fixtures.py', 820, 824, 0.1796053020267749), ('src/_pytest/fixtures.py', 1114, 1120, 0.1796053020267749), ('src/_pytest/fixtures.py', 1160, 1164, 0.1796053020267749), ('src/_pytest/fixtures.py', 1169, 1169, 0.1796053020267749), ('src/_pytest/fixtures.py', 1174, 1174, 0.1796053020267749), ('src/_pytest/fixtures.py', 1269, 1269, 0.1796053020267749), ('src/_pytest/fixtures.py', 1272, 1273, 0.1796053020267749), ('src/_pytest/fixtures.py', 1280, 1282, 0.1796053020267749), ('src/_pytest/fixtures.py', 1285, 1287, 0.1796053020267749), ('src/_pytest/fixtures.py', 1290, 1290, 0.1796053020267749), ('src/_pytest/fixtures.py', 1292, 1292, 0.1796053020267749), ('src/_pytest/fixtures.py', 1298, 1298, 0.1796053020267749), ('src/_pytest/fixtures.py', 1300, 1308, 0.1796053020267749), ('src/_pytest/fixtures.py', 1311, 1312, 0.1796053020267749), ('src/_pytest/fixtures.py', 1319, 1321, 0.1796053020267749), ('src/_pytest/fixtures.py', 1324, 1324, 0.1796053020267749), ('src/_pytest/helpconfig.py', 88, 90, 0.1796053020267749), ('src/_pytest/helpconfig.py', 129, 129, 0.1796053020267749), ('src/_pytest/helpconfig.py', 132, 132, 0.1796053020267749), ('src/_pytest/helpconfig.py', 225, 226, 0.1796053020267749), ('src/_pytest/helpconfig.py', 235, 235, 0.1796053020267749), ('src/_pytest/helpconfig.py', 244, 244, 0.1796053020267749), ('src/_pytest/junitxml.py', 50, 50, 0.1796053020267749), ('src/_pytest/junitxml.py', 57, 57, 0.1796053020267749), ('src/_pytest/logging.py', 39, 41, 0.1796053020267749), ('src/_pytest/logging.py', 43, 44, 0.1796053020267749), ('src/_pytest/logging.py', 46, 46, 0.1796053020267749), ('src/_pytest/logging.py', 48, 50, 0.1796053020267749), ('src/_pytest/logging.py', 54, 56, 0.1796053020267749), ('src/_pytest/logging.py', 58, 59, 0.1796053020267749), ('src/_pytest/logging.py', 96, 101, 0.1796053020267749), ('src/_pytest/logging.py', 372, 376, 0.1796053020267749), ('src/_pytest/logging.py', 379, 379, 0.1796053020267749), ('src/_pytest/logging.py', 397, 397, 0.1796053020267749), ('src/_pytest/logging.py', 410, 410, 0.1796053020267749), ('src/_pytest/logging.py', 412, 415, 0.1796053020267749), ('src/_pytest/logging.py', 417, 417, 0.1796053020267749), ('src/_pytest/logging.py', 419, 422, 0.1796053020267749), ('src/_pytest/logging.py', 424, 425, 0.1796053020267749), ('src/_pytest/logging.py', 428, 429, 0.1796053020267749), ('src/_pytest/logging.py', 435, 435, 0.1796053020267749), ('src/_pytest/logging.py', 437, 437, 0.1796053020267749), ('src/_pytest/logging.py', 439, 439, 0.1796053020267749), ('src/_pytest/logging.py', 444, 444, 0.1796053020267749), ('src/_pytest/logging.py', 449, 451, 0.1796053020267749), ('src/_pytest/logging.py', 453, 454, 0.1796053020267749), ('src/_pytest/logging.py', 459, 460, 0.1796053020267749), ('src/_pytest/logging.py', 509, 511, 0.1796053020267749), ('src/_pytest/logging.py', 515, 516, 0.1796053020267749), ('src/_pytest/logging.py', 519, 519, 0.1796053020267749), ('src/_pytest/logging.py', 523, 523, 0.1796053020267749), ('src/_pytest/logging.py', 597, 598, 0.1796053020267749), ('src/_pytest/logging.py', 600, 600, 0.1796053020267749), ('src/_pytest/logging.py', 611, 611, 0.1796053020267749), ('src/_pytest/logging.py', 615, 616, 0.1796053020267749), ('src/_pytest/logging.py', 618, 618, 0.1796053020267749), ('src/_pytest/logging.py', 622, 622, 0.1796053020267749), ('src/_pytest/logging.py', 628, 628, 0.1796053020267749), ('src/_pytest/logging.py', 632, 632, 0.1796053020267749), ('src/_pytest/logging.py', 636, 637, 0.1796053020267749), ('src/_pytest/logging.py', 641, 641, 0.1796053020267749), ('src/_pytest/main.py', 182, 191, 0.1796053020267749), ('src/_pytest/main.py', 217, 221, 0.1796053020267749), ('src/_pytest/main.py', 223, 224, 0.1796053020267749), ('src/_pytest/main.py', 228, 228, 0.1796053020267749), ('src/_pytest/main.py', 234, 235, 0.1796053020267749), ('src/_pytest/main.py', 244, 244, 0.1796053020267749), ('src/_pytest/main.py', 248, 248, 0.1796053020267749), ('src/_pytest/main.py', 310, 312, 0.1796053020267749), ('src/_pytest/main.py', 368, 369, 0.1796053020267749), ('src/_pytest/main.py', 371, 378, 0.1796053020267749), ('src/_pytest/main.py', 380, 381, 0.1796053020267749), ('src/_pytest/main.py', 383, 383, 0.1796053020267749), ('src/_pytest/main.py', 385, 385, 0.1796053020267749), ('src/_pytest/main.py', 402, 402, 0.1796053020267749), ('src/_pytest/main.py', 404, 404, 0.1796053020267749), ('src/_pytest/main.py', 435, 440, 0.1796053020267749), ('src/_pytest/main.py', 443, 445, 0.1796053020267749), ('src/_pytest/main.py', 448, 464, 0.1796053020267749), ('src/_pytest/main.py', 471, 471, 0.1796053020267749), ('src/_pytest/main.py', 474, 477, 0.1796053020267749), ('src/_pytest/main.py', 480, 485, 0.1796053020267749), ('src/_pytest/main.py', 491, 491, 0.1796053020267749), ('src/_pytest/main.py', 494, 494, 0.1796053020267749), ('src/_pytest/main.py', 496, 497, 0.1796053020267749), ('src/_pytest/main.py', 502, 505, 0.1796053020267749), ('src/_pytest/main.py', 508, 510, 0.1796053020267749), ('src/_pytest/main.py', 570, 571, 0.1796053020267749), ('src/_pytest/main.py', 589, 589, 0.1796053020267749), ('src/_pytest/main.py', 626, 627, 0.1796053020267749), ('src/_pytest/main.py', 629, 631, 0.1796053020267749), ('src/_pytest/main.py', 637, 638, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 78, 78, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 80, 80, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 99, 101, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 126, 128, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 144, 145, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 149, 150, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 152, 152, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 154, 154, 0.1796053020267749), ('src/_pytest/mark/__init__.py', 162, 162, 0.1796053020267749), ('src/_pytest/mark/structures.py', 296, 297, 0.1796053020267749), ('src/_pytest/mark/structures.py', 335, 337, 0.1796053020267749), ('src/_pytest/monkeypatch.py', 147, 148, 0.1796053020267749), ('src/_pytest/monkeypatch.py', 150, 150, 0.1796053020267749), ('src/_pytest/monkeypatch.py', 160, 161, 0.1796053020267749), ('src/_pytest/monkeypatch.py', 165, 165, 0.1796053020267749), ('src/_pytest/monkeypatch.py', 167, 168, 0.1796053020267749), ('src/_pytest/nodes.py', 63, 63, 0.1796053020267749), ('src/_pytest/nodes.py', 66, 66, 0.1796053020267749), ('src/_pytest/nodes.py', 69, 69, 0.1796053020267749), ('src/_pytest/nodes.py', 72, 72, 0.1796053020267749), ('src/_pytest/nodes.py', 75, 75, 0.1796053020267749), ('src/_pytest/nodes.py', 78, 78, 0.1796053020267749), ('src/_pytest/nodes.py', 81, 81, 0.1796053020267749), ('src/_pytest/nodes.py', 84, 84, 0.1796053020267749), ('src/_pytest/nodes.py', 87, 87, 0.1796053020267749), ('src/_pytest/nodes.py', 89, 91, 0.1796053020267749), ('src/_pytest/nodes.py', 362, 362, 0.1796053020267749), ('src/_pytest/nodes.py', 372, 372, 0.1796053020267749), ('src/_pytest/pastebin.py', 22, 22, 0.1796053020267749), ('src/_pytest/pastebin.py', 42, 42, 0.1796053020267749), ('src/_pytest/pathlib.py', 296, 300, 0.1796053020267749), ('src/_pytest/pathlib.py', 303, 303, 0.1796053020267749), ('src/_pytest/pytester.py', 169, 170, 0.1796053020267749), ('src/_pytest/pytester.py', 187, 188, 0.1796053020267749), ('src/_pytest/pytester.py', 190, 191, 0.1796053020267749), ('src/_pytest/pytester.py', 193, 194, 0.1796053020267749), ('src/_pytest/pytester.py', 196, 196, 0.1796053020267749), ('src/_pytest/pytester.py', 199, 199, 0.1796053020267749), ('src/_pytest/pytester.py', 530, 532, 0.1796053020267749), ('src/_pytest/pytester.py', 819, 821, 0.1796053020267749), ('src/_pytest/pytester.py', 823, 826, 0.1796053020267749), ('src/_pytest/python.py', 111, 111, 0.1796053020267749), ('src/_pytest/python.py', 114, 114, 0.1796053020267749), ('src/_pytest/python.py', 132, 134, 0.1796053020267749), ('src/_pytest/python.py', 143, 145, 0.1796053020267749), ('src/_pytest/reports.py', 386, 391, 0.1796053020267749), ('src/_pytest/resultlog.py', 22, 22, 0.1796053020267749), ('src/_pytest/resultlog.py', 24, 24, 0.1796053020267749), ('src/_pytest/resultlog.py', 39, 40, 0.1796053020267749), ('src/_pytest/runner.py', 63, 63, 0.1796053020267749), ('src/_pytest/runner.py', 67, 67, 0.1796053020267749), ('src/_pytest/runner.py', 209, 209, 0.1796053020267749), ('src/_pytest/runner.py', 211, 211, 0.1796053020267749), ('src/_pytest/runner.py', 247, 250, 0.1796053020267749), ('src/_pytest/runner.py', 266, 267, 0.1796053020267749), ('src/_pytest/runner.py', 269, 270, 0.1796053020267749), ('src/_pytest/runner.py', 277, 278, 0.1796053020267749), ('src/_pytest/runner.py', 314, 314, 0.1796053020267749), ('src/_pytest/runner.py', 316, 316, 0.1796053020267749), ('src/_pytest/runner.py', 318, 318, 0.1796053020267749), ('src/_pytest/runner.py', 361, 365, 0.1796053020267749), ('src/_pytest/runner.py', 367, 367, 0.1796053020267749), ('src/_pytest/setuponly.py', 83, 83, 0.1796053020267749), ('src/_pytest/setupplan.py', 25, 25, 0.1796053020267749), ('src/_pytest/skipping.py', 29, 29, 0.1796053020267749), ('src/_pytest/skipping.py', 42, 44, 0.1796053020267749), ('src/_pytest/skipping.py', 48, 50, 0.1796053020267749), ('src/_pytest/skipping.py', 56, 58, 0.1796053020267749), ('src/_pytest/stepwise.py', 23, 23, 0.1796053020267749), ('src/_pytest/stepwise.py', 28, 31, 0.1796053020267749), ('src/_pytest/stepwise.py', 33, 33, 0.1796053020267749), ('src/_pytest/stepwise.py', 38, 38, 0.1796053020267749), ('src/_pytest/stepwise.py', 41, 42, 0.1796053020267749), ('src/_pytest/stepwise.py', 100, 100, 0.1796053020267749), ('src/_pytest/stepwise.py', 104, 104, 0.1796053020267749), ('src/_pytest/stepwise.py', 108, 108, 0.1796053020267749), ('src/_pytest/terminal.py', 140, 142, 0.1796053020267749), ('src/_pytest/terminal.py', 158, 159, 0.1796053020267749), ('src/_pytest/terminal.py', 161, 161, 0.1796053020267749), ('src/_pytest/terminal.py', 164, 166, 0.1796053020267749), ('src/_pytest/terminal.py', 219, 219, 0.1796053020267749), ('src/_pytest/terminal.py', 221, 224, 0.1796053020267749), ('src/_pytest/terminal.py', 226, 228, 0.1796053020267749), ('src/_pytest/terminal.py', 230, 230, 0.1796053020267749), ('src/_pytest/terminal.py', 232, 240, 0.1796053020267749), ('src/_pytest/terminal.py', 245, 245, 0.1796053020267749), ('src/_pytest/terminal.py', 248, 248, 0.1796053020267749), ('src/_pytest/terminal.py', 250, 252, 0.1796053020267749), ('src/_pytest/terminal.py', 261, 261, 0.1796053020267749), ('src/_pytest/terminal.py', 312, 312, 0.1796053020267749), ('src/_pytest/terminal.py', 314, 315, 0.1796053020267749), ('src/_pytest/terminal.py', 336, 337, 0.1796053020267749), ('src/_pytest/terminal.py', 365, 365, 0.1796053020267749), ('src/_pytest/terminal.py', 488, 488, 0.1796053020267749), ('src/_pytest/terminal.py', 492, 492, 0.1796053020267749), ('src/_pytest/terminal.py', 496, 496, 0.1796053020267749), ('src/_pytest/terminal.py', 498, 498, 0.1796053020267749), ('src/_pytest/terminal.py', 500, 502, 0.1796053020267749), ('src/_pytest/terminal.py', 506, 506, 0.1796053020267749), ('src/_pytest/terminal.py', 509, 509, 0.1796053020267749), ('src/_pytest/terminal.py', 519, 524, 0.1796053020267749), ('src/_pytest/terminal.py', 527, 528, 0.1796053020267749), ('src/_pytest/terminal.py', 530, 530, 0.1796053020267749), ('src/_pytest/terminal.py', 532, 532, 0.1796053020267749), ('src/_pytest/terminal.py', 534, 534, 0.1796053020267749), ('src/_pytest/terminal.py', 536, 536, 0.1796053020267749), ('src/_pytest/terminal.py', 538, 538, 0.1796053020267749), ('src/_pytest/terminal.py', 543, 543, 0.1796053020267749), ('src/_pytest/terminal.py', 547, 549, 0.1796053020267749), ('src/_pytest/terminal.py', 551, 554, 0.1796053020267749), ('src/_pytest/terminal.py', 557, 558, 0.1796053020267749), ('src/_pytest/terminal.py', 560, 563, 0.1796053020267749), ('src/_pytest/terminal.py', 566, 568, 0.1796053020267749), ('src/_pytest/terminal.py', 570, 570, 0.1796053020267749), ('src/_pytest/terminal.py', 573, 575, 0.1796053020267749), ('src/_pytest/terminal.py', 578, 578, 0.1796053020267749), ('src/_pytest/terminal.py', 580, 580, 0.1796053020267749), ('src/_pytest/terminal.py', 583, 584, 0.1796053020267749), ('src/_pytest/terminal.py', 587, 587, 0.1796053020267749), ('src/_pytest/terminal.py', 589, 592, 0.1796053020267749), ('src/_pytest/terminal.py', 595, 595, 0.1796053020267749), ('src/_pytest/terminal.py', 597, 597, 0.1796053020267749), ('src/_pytest/terminal.py', 600, 601, 0.1796053020267749), ('src/_pytest/terminal.py', 603, 603, 0.1796053020267749), ('src/_pytest/terminal.py', 605, 605, 0.1796053020267749), ('src/_pytest/terminal.py', 648, 656, 0.1796053020267749), ('src/_pytest/terminal.py', 662, 662, 0.1796053020267749), ('src/_pytest/terminal.py', 665, 665, 0.1796053020267749), ('src/_pytest/terminal.py', 682, 682, 0.1796053020267749), ('src/_pytest/terminal.py', 862, 865, 0.1796053020267749), ('src/_pytest/terminal.py', 867, 869, 0.1796053020267749), ('src/_pytest/terminal.py', 1010, 1011, 0.1796053020267749), ('src/_pytest/terminal.py', 1033, 1033, 0.1796053020267749), ('src/_pytest/terminal.py', 1042, 1042, 0.1796053020267749), ('src/_pytest/terminal.py', 1046, 1047, 0.1796053020267749), ('src/_pytest/terminal.py', 1049, 1049, 0.1796053020267749), ('src/_pytest/terminal.py', 1051, 1052, 0.1796053020267749), ('src/_pytest/terminal.py', 1055, 1057, 0.1796053020267749), ('src/_pytest/tmpdir.py', 30, 30, 0.1796053020267749), ('src/_pytest/tmpdir.py', 41, 42, 0.1796053020267749), ('src/_pytest/tmpdir.py', 121, 126, 0.1796053020267749), ('src/_pytest/warnings.py', 50, 52, 0.1796053020267749), ('src/_pytest/warnings.py', 119, 121, 0.1796053020267749), ('src/_pytest/warnings.py', 123, 123, 0.1796053020267749), ('src/_pytest/_code/source.py', 258, 258, 0.1781741612749496), ('src/_pytest/assertion/__init__.py', 12, 20, 0.1781741612749496), ('src/_pytest/assertion/__init__.py', 26, 30, 0.1781741612749496), ('src/_pytest/assertion/__init__.py', 63, 63, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 64, 64, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 66, 67, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 69, 69, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 71, 72, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 74, 74, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 79, 79, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 81, 81, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 83, 83, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 87, 87, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 89, 89, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 171, 172, 0.1781741612749496), ('src/_pytest/assertion/rewrite.py', 194, 194, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 293, 299, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 302, 307, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 311, 316, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 319, 323, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 325, 325, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 329, 333, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 335, 336, 0.1781741612749496), ('src/_pytest/cacheprovider.py', 338, 346, 0.1781741612749496), ('src/_pytest/capture.py', 20, 27, 0.1781741612749496), ('src/_pytest/capture.py', 29, 34, 0.1781741612749496), ('src/_pytest/capture.py', 421, 422, 0.1781741612749496), ('src/_pytest/capture.py', 427, 427, 0.1781741612749496), ('src/_pytest/capture.py', 454, 459, 0.1781741612749496), ('src/_pytest/capture.py', 471, 477, 0.1781741612749496), ('src/_pytest/capture.py', 510, 510, 0.1781741612749496), ('src/_pytest/capture.py', 512, 518, 0.1781741612749496), ('src/_pytest/capture.py', 640, 645, 0.1781741612749496), ('src/_pytest/capture.py', 647, 648, 0.1781741612749496), ('src/_pytest/capture.py', 656, 657, 0.1781741612749496), ('src/_pytest/capture.py', 660, 663, 0.1781741612749496), ('src/_pytest/capture.py', 666, 669, 0.1781741612749496), ('src/_pytest/capture.py', 722, 722, 0.1781741612749496), ('src/_pytest/compat.py', 325, 325, 0.1781741612749496), ('src/_pytest/compat.py', 328, 328, 0.1781741612749496), ('src/_pytest/config/__init__.py', 54, 54, 0.1781741612749496), ('src/_pytest/config/__init__.py', 56, 58, 0.1781741612749496), ('src/_pytest/config/__init__.py', 155, 159, 0.1781741612749496), ('src/_pytest/config/__init__.py', 163, 163, 0.1781741612749496), ('src/_pytest/config/__init__.py', 165, 165, 0.1781741612749496), ('src/_pytest/config/__init__.py', 167, 169, 0.1781741612749496), ('src/_pytest/config/__init__.py', 185, 186, 0.1781741612749496), ('src/_pytest/config/__init__.py', 188, 188, 0.1781741612749496), ('src/_pytest/config/__init__.py', 190, 190, 0.1781741612749496), ('src/_pytest/config/__init__.py', 194, 199, 0.1781741612749496), ('src/_pytest/config/__init__.py', 202, 203, 0.1781741612749496), ('src/_pytest/config/__init__.py', 207, 208, 0.1781741612749496), ('src/_pytest/config/__init__.py', 239, 240, 0.1781741612749496), ('src/_pytest/config/__init__.py', 243, 247, 0.1781741612749496), ('src/_pytest/config/__init__.py', 249, 251, 0.1781741612749496), ('src/_pytest/config/__init__.py', 262, 262, 0.1781741612749496), ('src/_pytest/config/__init__.py', 264, 264, 0.1781741612749496), ('src/_pytest/config/__init__.py', 270, 271, 0.1781741612749496), ('src/_pytest/config/__init__.py', 273, 273, 0.1781741612749496), ('src/_pytest/config/__init__.py', 276, 277, 0.1781741612749496), ('src/_pytest/config/__init__.py', 280, 280, 0.1781741612749496), ('src/_pytest/config/__init__.py', 284, 286, 0.1781741612749496), ('src/_pytest/config/__init__.py', 289, 289, 0.1781741612749496), ('src/_pytest/config/__init__.py', 291, 293, 0.1781741612749496), ('src/_pytest/config/__init__.py', 296, 298, 0.1781741612749496), ('src/_pytest/config/__init__.py', 300, 300, 0.1781741612749496), ('src/_pytest/config/__init__.py', 303, 308, 0.1781741612749496), ('src/_pytest/config/__init__.py', 310, 310, 0.1781741612749496), ('src/_pytest/config/__init__.py', 313, 313, 0.1781741612749496), ('src/_pytest/config/__init__.py', 323, 326, 0.1781741612749496), ('src/_pytest/config/__init__.py', 329, 331, 0.1781741612749496), ('src/_pytest/config/__init__.py', 400, 400, 0.1781741612749496), ('src/_pytest/config/__init__.py', 406, 406, 0.1781741612749496), ('src/_pytest/config/__init__.py', 411, 413, 0.1781741612749496), ('src/_pytest/config/__init__.py', 415, 416, 0.1781741612749496), ('src/_pytest/config/__init__.py', 422, 423, 0.1781741612749496), ('src/_pytest/config/__init__.py', 470, 476, 0.1781741612749496), ('src/_pytest/config/__init__.py', 482, 482, 0.1781741612749496), ('src/_pytest/config/__init__.py', 520, 520, 0.1781741612749496), ('src/_pytest/config/__init__.py', 523, 524, 0.1781741612749496), ('src/_pytest/config/__init__.py', 536, 536, 0.1781741612749496), ('src/_pytest/config/__init__.py', 539, 540, 0.1781741612749496), ('src/_pytest/config/__init__.py', 543, 544, 0.1781741612749496), ('src/_pytest/config/__init__.py', 546, 546, 0.1781741612749496), ('src/_pytest/config/__init__.py', 551, 552, 0.1781741612749496), ('src/_pytest/config/__init__.py', 571, 572, 0.1781741612749496), ('src/_pytest/config/__init__.py', 583, 584, 0.1781741612749496), ('src/_pytest/config/__init__.py', 586, 586, 0.1781741612749496), ('src/_pytest/config/__init__.py', 659, 659, 0.1781741612749496), ('src/_pytest/config/__init__.py', 661, 661, 0.1781741612749496), ('src/_pytest/config/__init__.py', 666, 667, 0.1781741612749496), ('src/_pytest/config/__init__.py', 669, 672, 0.1781741612749496), ('src/_pytest/config/__init__.py', 674, 683, 0.1781741612749496), ('src/_pytest/config/__init__.py', 713, 714, 0.1781741612749496), ('src/_pytest/config/__init__.py', 768, 769, 0.1781741612749496), ('src/_pytest/config/__init__.py', 771, 773, 0.1781741612749496), ('src/_pytest/config/__init__.py', 780, 781, 0.1781741612749496), ('src/_pytest/config/__init__.py', 849, 851, 0.1781741612749496), ('src/_pytest/config/__init__.py', 915, 916, 0.1781741612749496), ('src/_pytest/config/__init__.py', 918, 920, 0.1781741612749496), ('src/_pytest/config/__init__.py', 922, 922, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 23, 29, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 32, 34, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 48, 57, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 84, 84, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 86, 95, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 97, 98, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 116, 118, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 131, 133, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 165, 169, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 176, 179, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 182, 182, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 207, 208, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 210, 216, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 224, 224, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 228, 238, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 240, 241, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 247, 248, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 254, 255, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 261, 261, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 263, 263, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 269, 269, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 287, 290, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 300, 301, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 303, 303, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 305, 306, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 309, 310, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 313, 315, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 317, 319, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 324, 333, 0.1781741612749496), ('src/_pytest/config/argparsing.py', 337, 337, 0.1781741612749496), ('src/_pytest/debugging.py', 24, 29, 0.1781741612749496), ('src/_pytest/debugging.py', 31, 36, 0.1781741612749496), ('src/_pytest/debugging.py', 39, 43, 0.1781741612749496), ('src/_pytest/doctest.py', 38, 42, 0.1781741612749496), ('src/_pytest/doctest.py', 44, 45, 0.1781741612749496), ('src/_pytest/doctest.py', 47, 53, 0.1781741612749496), ('src/_pytest/doctest.py', 55, 61, 0.1781741612749496), ('src/_pytest/doctest.py', 63, 69, 0.1781741612749496), ('src/_pytest/doctest.py', 71, 76, 0.1781741612749496), ('src/_pytest/doctest.py', 78, 83, 0.1781741612749496), ('src/_pytest/faulthandler.py', 9, 10, 0.1781741612749496), ('src/_pytest/faulthandler.py', 14, 14, 0.1781741612749496), ('src/_pytest/fixtures.py', 1070, 1074, 0.1781741612749496), ('src/_pytest/helpconfig.py', 22, 28, 0.1781741612749496), ('src/_pytest/helpconfig.py', 40, 44, 0.1781741612749496), ('src/_pytest/helpconfig.py', 46, 51, 0.1781741612749496), ('src/_pytest/helpconfig.py', 53, 59, 0.1781741612749496), ('src/_pytest/helpconfig.py', 63, 68, 0.1781741612749496), ('src/_pytest/helpconfig.py', 70, 75, 0.1781741612749496), ('src/_pytest/helpconfig.py', 77, 82, 0.1781741612749496), ('src/_pytest/junitxml.py', 382, 391, 0.1781741612749496), ('src/_pytest/junitxml.py', 393, 399, 0.1781741612749496), ('src/_pytest/junitxml.py', 401, 402, 0.1781741612749496), ('src/_pytest/junitxml.py', 404, 406, 0.1781741612749496), ('src/_pytest/junitxml.py', 408, 408, 0.1781741612749496), ('src/_pytest/junitxml.py', 410, 414, 0.1781741612749496), ('src/_pytest/junitxml.py', 416, 419, 0.1781741612749496), ('src/_pytest/junitxml.py', 421, 424, 0.1781741612749496), ('src/_pytest/junitxml.py', 429, 429, 0.1781741612749496), ('src/_pytest/junitxml.py', 477, 488, 0.1781741612749496), ('src/_pytest/junitxml.py', 491, 492, 0.1781741612749496), ('src/_pytest/junitxml.py', 495, 495, 0.1781741612749496), ('src/_pytest/logging.py', 106, 106, 0.1781741612749496), ('src/_pytest/logging.py', 108, 110, 0.1781741612749496), ('src/_pytest/logging.py', 112, 112, 0.1781741612749496), ('src/_pytest/logging.py', 114, 121, 0.1781741612749496), ('src/_pytest/logging.py', 123, 127, 0.1781741612749496), ('src/_pytest/logging.py', 129, 133, 0.1781741612749496), ('src/_pytest/logging.py', 135, 139, 0.1781741612749496), ('src/_pytest/logging.py', 141, 145, 0.1781741612749496), ('src/_pytest/logging.py', 147, 148, 0.1781741612749496), ('src/_pytest/logging.py', 150, 154, 0.1781741612749496), ('src/_pytest/logging.py', 156, 160, 0.1781741612749496), ('src/_pytest/logging.py', 162, 166, 0.1781741612749496), ('src/_pytest/logging.py', 168, 172, 0.1781741612749496), ('src/_pytest/logging.py', 174, 178, 0.1781741612749496), ('src/_pytest/logging.py', 180, 184, 0.1781741612749496), ('src/_pytest/main.py', 43, 47, 0.1781741612749496), ('src/_pytest/main.py', 49, 51, 0.1781741612749496), ('src/_pytest/main.py', 53, 54, 0.1781741612749496), ('src/_pytest/main.py', 56, 63, 0.1781741612749496), ('src/_pytest/main.py', 65, 72, 0.1781741612749496), ('src/_pytest/main.py', 74, 78, 0.1781741612749496), ('src/_pytest/main.py', 80, 85, 0.1781741612749496), ('src/_pytest/main.py', 88, 93, 0.1781741612749496), ('src/_pytest/main.py', 95, 99, 0.1781741612749496), ('src/_pytest/main.py', 104, 109, 0.1781741612749496), ('src/_pytest/main.py', 111, 114, 0.1781741612749496), ('src/_pytest/main.py', 116, 120, 0.1781741612749496), ('src/_pytest/main.py', 122, 126, 0.1781741612749496), ('src/_pytest/main.py', 128, 132, 0.1781741612749496), ('src/_pytest/main.py', 136, 142, 0.1781741612749496), ('src/_pytest/main.py', 144, 149, 0.1781741612749496), ('src/_pytest/main.py', 151, 157, 0.1781741612749496), ('src/_pytest/main.py', 159, 164, 0.1781741612749496), ('src/_pytest/main.py', 167, 172, 0.1781741612749496), ('src/_pytest/main.py', 174, 174, 0.1781741612749496), ('src/_pytest/main.py', 418, 418, 0.1781741612749496), ('src/_pytest/mark/__init__.py', 37, 44, 0.1781741612749496), ('src/_pytest/mark/__init__.py', 57, 63, 0.1781741612749496), ('src/_pytest/mark/__init__.py', 67, 70, 0.1781741612749496), ('src/_pytest/mark/__init__.py', 73, 74, 0.1781741612749496), ('src/_pytest/pastebin.py', 8, 16, 0.1781741612749496), ('src/_pytest/pytester.py', 363, 368, 0.1781741612749496), ('src/_pytest/pytester.py', 793, 793, 0.1781741612749496), ('src/_pytest/pytester.py', 795, 797, 0.1781741612749496), ('src/_pytest/pytester.py', 799, 802, 0.1781741612749496), ('src/_pytest/pytester.py', 808, 809, 0.1781741612749496), ('src/_pytest/pytester.py', 817, 817, 0.1781741612749496), ('src/_pytest/pytester.py', 832, 832, 0.1781741612749496), ('src/_pytest/pytester.py', 836, 836, 0.1781741612749496), ('src/_pytest/pytester.py', 840, 840, 0.1781741612749496), ('src/_pytest/pytester.py', 842, 843, 0.1781741612749496), ('src/_pytest/pytester.py', 849, 849, 0.1781741612749496), ('src/_pytest/pytester.py', 851, 851, 0.1781741612749496), ('src/_pytest/pytester.py', 853, 858, 0.1781741612749496), ('src/_pytest/pytester.py', 871, 874, 0.1781741612749496), ('src/_pytest/pytester.py', 876, 878, 0.1781741612749496), ('src/_pytest/pytester.py', 885, 886, 0.1781741612749496), ('src/_pytest/pytester.py', 894, 895, 0.1781741612749496), ('src/_pytest/pytester.py', 1242, 1243, 0.1781741612749496), ('src/_pytest/python.py', 56, 63, 0.1781741612749496), ('src/_pytest/python.py', 66, 71, 0.1781741612749496), ('src/_pytest/python.py', 73, 75, 0.1781741612749496), ('src/_pytest/python.py', 77, 78, 0.1781741612749496), ('src/_pytest/python.py', 80, 84, 0.1781741612749496), ('src/_pytest/python.py', 86, 90, 0.1781741612749496), ('src/_pytest/python.py', 92, 96, 0.1781741612749496), ('src/_pytest/python.py', 100, 105, 0.1781741612749496), ('src/_pytest/resultlog.py', 10, 17, 0.1781741612749496), ('src/_pytest/runner.py', 22, 29, 0.1781741612749496), ('src/_pytest/setuponly.py', 7, 12, 0.1781741612749496), ('src/_pytest/setuponly.py', 14, 18, 0.1781741612749496), ('src/_pytest/setupplan.py', 5, 10, 0.1781741612749496), ('src/_pytest/skipping.py', 10, 16, 0.1781741612749496), ('src/_pytest/skipping.py', 19, 21, 0.1781741612749496), ('src/_pytest/skipping.py', 23, 24, 0.1781741612749496), ('src/_pytest/stepwise.py', 5, 11, 0.1781741612749496), ('src/_pytest/stepwise.py', 13, 17, 0.1781741612749496), ('src/_pytest/terminal.py', 33, 39, 0.1781741612749496), ('src/_pytest/terminal.py', 50, 57, 0.1781741612749496), ('src/_pytest/terminal.py', 59, 65, 0.1781741612749496), ('src/_pytest/terminal.py', 67, 68, 0.1781741612749496), ('src/_pytest/terminal.py', 70, 76, 0.1781741612749496), ('src/_pytest/terminal.py', 81, 87, 0.1781741612749496), ('src/_pytest/terminal.py', 89, 95, 0.1781741612749496), ('src/_pytest/terminal.py', 97, 104, 0.1781741612749496), ('src/_pytest/terminal.py', 106, 112, 0.1781741612749496), ('src/_pytest/terminal.py', 115, 120, 0.1781741612749496), ('src/_pytest/terminal.py', 122, 129, 0.1781741612749496), ('src/_pytest/terminal.py', 132, 135, 0.1781741612749496), ('src/_pytest/warnings.py', 33, 38, 0.1781741612749496), ('src/_pytest/warnings.py', 40, 43, 0.1781741612749496), ('src/_pytest/monkeypatch.py', 215, 216, 0.17407765595569785), ('src/_pytest/monkeypatch.py', 248, 248, 0.17407765595569785), ('src/_pytest/pytester.py', 322, 322, 0.17407765595569785), ('src/_pytest/pytester.py', 420, 420, 0.17407765595569785), ('src/_pytest/pytester.py', 423, 423, 0.17407765595569785), ('src/_pytest/pytester.py', 472, 485, 0.17407765595569785), ('src/_pytest/pytester.py', 489, 490, 0.17407765595569785), ('src/_pytest/pytester.py', 492, 492, 0.17407765595569785), ('src/_pytest/pytester.py', 494, 494, 0.17407765595569785), ('src/_pytest/pytester.py', 497, 498, 0.17407765595569785), ('src/_pytest/pytester.py', 514, 517, 0.17407765595569785), ('src/_pytest/pytester.py', 540, 540, 0.17407765595569785), ('src/_pytest/tmpdir.py', 95, 95, 0.17407765595569785), ('src/_pytest/fixtures.py', 862, 867, 0.17277368511627203), ('src/_pytest/fixtures.py', 871, 871, 0.17277368511627203), ('src/_pytest/tmpdir.py', 57, 58, 0.17277368511627203), ('src/_pytest/pathlib.py', 89, 91, 0.17149858514250882), ('src/_pytest/pathlib.py', 101, 102, 0.17149858514250882), ('src/_pytest/pathlib.py', 109, 109, 0.17149858514250882), ('src/_pytest/pathlib.py', 142, 142, 0.17149858514250882), ('src/_pytest/pathlib.py', 144, 148, 0.17149858514250882), ('src/_pytest/pathlib.py', 152, 153, 0.17149858514250882), ('src/_pytest/tmpdir.py', 47, 47, 0.17149858514250882), ('src/_pytest/tmpdir.py', 51, 53, 0.17149858514250882), ('src/_pytest/warnings.py', 12, 13, 0.17025130615174972), ('src/_pytest/warnings.py', 15, 20, 0.17025130615174972), ('src/_pytest/warnings.py', 28, 29, 0.17025130615174972), ('src/_pytest/python.py', 153, 155, 0.1690308509457033), ('src/_pytest/python.py', 163, 166, 0.1690308509457033), ('src/_pytest/python.py', 1428, 1428, 0.1690308509457033), ('src/_pytest/skipping.py', 92, 96, 0.1690308509457033), ('src/_pytest/skipping.py', 110, 111, 0.1690308509457033), ('src/_pytest/terminal.py', 179, 179, 0.1690308509457033), ('src/_pytest/fixtures.py', 785, 788, 0.16783627165933782), ('src/_pytest/terminal.py', 411, 413, 0.16783627165933782), ('src/_pytest/fixtures.py', 857, 860, 0.16666666666666666), ('src/_pytest/compat.py', 54, 55, 0.1643989873053573), ('src/_pytest/fixtures.py', 102, 103, 0.1643989873053573), ('src/_pytest/fixtures.py', 105, 105, 0.1643989873053573), ('src/_pytest/fixtures.py', 611, 612, 0.1643989873053573), ('src/_pytest/fixtures.py', 615, 615, 0.1643989873053573), ('src/_pytest/fixtures.py', 618, 618, 0.1643989873053573), ('src/_pytest/fixtures.py', 771, 776, 0.1643989873053573), ('src/_pytest/terminal.py', 451, 453, 0.16222142113076254), ('src/_pytest/fixtures.py', 830, 835, 0.16012815380508713), ('src/_pytest/fixtures.py', 778, 779, 0.15161960871578067), ('src/_pytest/fixtures.py', 374, 376, 0.15075567228888181), ('src/_pytest/fixtures.py', 378, 382, 0.15075567228888181), ('src/_pytest/fixtures.py', 476, 485, 0.15075567228888181), ('src/_pytest/fixtures.py', 494, 495, 0.15075567228888181), ('src/_pytest/fixtures.py', 497, 502, 0.15075567228888181), ('src/_pytest/fixtures.py', 581, 583, 0.15075567228888181), ('src/_pytest/fixtures.py', 686, 689, 0.15075567228888181), ('src/_pytest/fixtures.py', 908, 913, 0.15075567228888181), ('src/_pytest/fixtures.py', 1335, 1338, 0.15075567228888181), ('src/_pytest/fixtures.py', 489, 491, 0.14990633779917228), ('src/_pytest/fixtures.py', 514, 524, 0.14990633779917228), ('src/_pytest/fixtures.py', 535, 535, 0.14990633779917228), ('src/_pytest/fixtures.py', 922, 923, 0.14990633779917228), ('src/_pytest/fixtures.py', 369, 370, 0.1466471150213533), ('src/_pytest/fixtures.py', 387, 387, 0.1466471150213533), ('src/_pytest/fixtures.py', 405, 409, 0.1466471150213533), ('src/_pytest/fixtures.py', 429, 429, 0.1466471150213533), ('src/_pytest/fixtures.py', 473, 473, 0.1466471150213533), ('src/_pytest/fixtures.py', 564, 564, 0.1466471150213533), ('src/_pytest/fixtures.py', 567, 568, 0.1466471150213533), ('src/_pytest/fixtures.py', 570, 570, 0.1466471150213533), ('src/_pytest/fixtures.py', 572, 572, 0.1466471150213533), ('src/_pytest/fixtures.py', 576, 577, 0.1466471150213533), ('src/_pytest/fixtures.py', 629, 631, 0.1466471150213533), ('src/_pytest/fixtures.py', 633, 640, 0.1466471150213533), ('src/_pytest/fixtures.py', 664, 664, 0.1466471150213533), ('src/_pytest/fixtures.py', 838, 838, 0.1466471150213533), ('src/_pytest/fixtures.py', 844, 845, 0.1466471150213533), ('src/_pytest/fixtures.py', 850, 852, 0.1466471150213533), ('src/_pytest/fixtures.py', 877, 878, 0.1466471150213533), ('src/_pytest/fixtures.py', 890, 891, 0.1466471150213533), ('src/_pytest/fixtures.py', 903, 903, 0.1466471150213533), ('src/_pytest/fixtures.py', 915, 918, 0.1466471150213533), ('src/_pytest/setuponly.py', 24, 26, 0.1466471150213533), ('src/_pytest/setuponly.py', 41, 43, 0.1466471150213533), ('src/_pytest/setupplan.py', 18, 18, 0.1466471150213533), ('src/_pytest/faulthandler.py', 24, 26, 0.1270001270001905), ('src/_pytest/faulthandler.py', 30, 32, 0.1270001270001905), ('src/_pytest/faulthandler.py', 36, 36, 0.1270001270001905), ('src/_pytest/faulthandler.py', 49, 51, 0.1270001270001905)]
2024-04-05 06:10:49 SBFL result (methods): [('src/_pytest/pytester.py', '', '__repr__', 1.0), ('src/_pytest/_code/source.py', '', 'get_statement_startend2', 0.7071067811865475), ('src/_pytest/assertion/rewrite.py', '', '_call_reprcompare', 0.7071067811865475), ('src/_pytest/_code/code.py', 'Frame', 'getargs', 0.3922322702763681), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_args', 0.3922322702763681), ('src/_pytest/_code/source.py', '', 'getstatementrange_ast', 0.31622776601683794), ('src/_pytest/terminal.py', '', 'pytest_report_teststatus', 0.3086066999241838), ('src/_pytest/nose.py', '', 'pytest_runtest_setup', 0.3061862178478973), ('src/_pytest/nose.py', '', 'is_potential_nosetest', 0.3061862178478973), ('src/_pytest/nose.py', '', 'call_optional', 0.3061862178478973), ('src/_pytest/runner.py', 'SetupState', '_teardown_towards', 0.3038218101251), ('src/_pytest/runner.py', '', 'pytest_runtest_call', 0.30151134457776363), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_runtest_setup', 0.3007528242702513), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_setup', 0.3007528242702513), ('src/_pytest/nodes.py', 'Node', 'iter_markers_with_node', 0.3007528242702513), ('src/_pytest/runner.py', '', 'runtestprotocol', 0.3007528242702513), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_runtest_logreport', 0.3), ('src/_pytest/runner.py', '', 'pytest_report_teststatus', 0.3), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logreport', 0.3), ('src/_pytest/nodes.py', 'Node', '__hash__', 0.29851115706299675), ('src/_pytest/_io/saferepr.py', '', '_ellipsize', 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 'SafeRepr', '__init__', 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 'SafeRepr', 'repr', 0.29488391230979427), ('src/_pytest/_io/saferepr.py', 'SafeRepr', 'repr_instance', 0.29488391230979427), ('src/_pytest/_io/saferepr.py', '', 'saferepr', 0.29488391230979427), ('src/_pytest/python.py', 'FunctionMixin', 'repr_failure', 0.29488391230979427), ('src/_pytest/capture.py', 'CaptureManager', 'resume_global_capture', 0.2934695928267111), ('src/_pytest/capture.py', 'CaptureManager', 'activate_fixture', 0.2934695928267111), ('src/_pytest/capture.py', 'CaptureManager', 'item_capture', 0.2934695928267111), ('src/_pytest/capture.py', 'MultiCapture', 'resume_capturing', 0.2934695928267111), ('src/_pytest/capture.py', 'FDCaptureBinary', 'resume', 0.2934695928267111), ('src/_pytest/capture.py', 'SysCapture', 'resume', 0.2934695928267111), ('src/_pytest/config/__init__.py', '', 'getoption', 0.2934695928267111), ('src/_pytest/logging.py', 'LoggingPlugin', '_runtest_for_main', 0.2934695928267111), ('src/_pytest/runner.py', '', 'call_runtest_hook', 0.2934695928267111), ('src/_pytest/runner.py', 'CallInfo', 'from_call', 0.2934695928267111), ('src/_pytest/capture.py', 'CaptureManager', 'suspend_global_capture', 0.29277002188455997), ('src/_pytest/capture.py', 'CaptureManager', 'read_global_capture', 0.29277002188455997), ('src/_pytest/capture.py', 'CaptureManager', 'deactivate_fixture', 0.29277002188455997), ('src/_pytest/capture.py', 'EncodedFile', '__getattr__', 0.29277002188455997), ('src/_pytest/capture.py', 'MultiCapture', 'suspend_capturing', 0.29277002188455997), ('src/_pytest/capture.py', 'MultiCapture', 'readouterr', 0.29277002188455997), ('src/_pytest/capture.py', 'FDCaptureBinary', 'snap', 0.29277002188455997), ('src/_pytest/capture.py', 'FDCaptureBinary', 'suspend', 0.29277002188455997), ('src/_pytest/capture.py', 'FDCapture', 'snap', 0.29277002188455997), ('src/_pytest/capture.py', 'SysCapture', 'suspend', 0.29277002188455997), ('src/_pytest/logging.py', '', 'catching_logs', 0.29277002188455997), ('src/_pytest/logging.py', 'LogCaptureHandler', '__init__', 0.29277002188455997), ('src/_pytest/logging.py', 'LoggingPlugin', '_runtest_for', 0.29277002188455997), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logreport', 0.29277002188455997), ('src/_pytest/main.py', 'Session', 'pytest_runtest_logreport', 0.29277002188455997), ('src/_pytest/main.py', 'Session', 'gethookproxy', 0.29277002188455997), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '__bool__', 0.29277002188455997), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '_get_marks', 0.29277002188455997), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__iter__', 0.29277002188455997), ('src/_pytest/mark/structures.py', 'NodeKeywords', '_seen', 0.29277002188455997), ('src/_pytest/nodes.py', 'Node', 'ihook', 0.29277002188455997), ('src/_pytest/nodes.py', 'Node', 'nodeid', 0.29277002188455997), ('src/_pytest/nodes.py', 'Node', 'listchain', 0.29277002188455997), ('src/_pytest/nodes.py', 'Node', 'iter_markers', 0.29277002188455997), ('src/_pytest/nodes.py', 'Item', 'add_report_section', 0.29277002188455997), ('src/_pytest/nodes.py', 'Item', 'location', 0.29277002188455997), ('src/_pytest/reports.py', 'TestReport', '__init__', 0.29277002188455997), ('src/_pytest/reports.py', 'TestReport', 'from_item_and_call', 0.29277002188455997), ('src/_pytest/runner.py', '', '_update_current_test_var', 0.29277002188455997), ('src/_pytest/runner.py', '', 'call_and_report', 0.29277002188455997), ('src/_pytest/runner.py', '', 'check_interactive_exception', 0.29277002188455997), ('src/_pytest/runner.py', '', 'pytest_runtest_makereport', 0.29277002188455997), ('src/_pytest/skipping.py', '', 'pytest_runtest_makereport', 0.29277002188455997), ('src/_pytest/skipping.py', '', 'pytest_report_teststatus', 0.29277002188455997), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_runtest_logreport', 0.29277002188455997), ('src/_pytest/unittest.py', '', 'pytest_runtest_makereport', 0.29277002188455997), ('src/_pytest/python.py', 'Function', '_getobj', 0.2917299829957891), ('src/_pytest/terminal.py', '', 'build_summary_stats_line', 0.2886751345948129), ('src/_pytest/python.py', 'PyobjMixin', 'obj', 0.28718326344709527), ('src/_pytest/_code/code.py', 'Traceback', 'cut', 0.2721655269759087), ('src/_pytest/faulthandler.py', '', 'pytest_exception_interact', 0.2721655269759087), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'traceback', 0.2672612419124244), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'get_source', 0.2672612419124244), ('src/_pytest/nodes.py', 'Node', '_repr_failure_py', 0.2672612419124244), ('src/_pytest/python.py', 'FunctionMixin', '_prunetraceback', 0.2672612419124244), ('src/_pytest/_code/code.py', 'Code', 'fullsource', 0.2626128657194451), ('src/_pytest/_code/code.py', 'Code', 'getargs', 0.2626128657194451), ('src/_pytest/_code/code.py', 'TracebackEntry', 'path', 0.2626128657194451), ('src/_pytest/_code/code.py', 'TracebackEntry', 'locals', 0.2626128657194451), ('src/_pytest/_code/code.py', 'TracebackEntry', 'getfirstlinesource', 0.2626128657194451), ('src/_pytest/_code/code.py', 'TracebackEntry', 'getsource', 0.2626128657194451), ('src/_pytest/_code/code.py', 'Traceback', '__init__', 0.2626128657194451), ('src/_pytest/_code/code.py', 'Traceback', 'filter', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'typename', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'getrepr', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_getindent', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_getentrysource', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'get_exconly', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_locals', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_traceback_entry', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_makepath', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_traceback', 0.2626128657194451), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_excinfo', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ExceptionChainRepr', '__init__', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ReprTraceback', '__init__', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ReprEntry', '__init__', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ReprFuncArgs', '__init__', 0.2626128657194451), ('src/_pytest/_code/source.py', 'Source', '__getitem__', 0.2626128657194451), ('src/_pytest/_code/source.py', 'Source', '__len__', 0.2626128657194451), ('src/_pytest/_code/source.py', 'Source', 'getstatement', 0.2626128657194451), ('src/_pytest/_code/source.py', 'Source', 'getstatementrange', 0.2626128657194451), ('src/_pytest/_code/source.py', 'Source', 'deindent', 0.2626128657194451), ('src/_pytest/_code/source.py', 'Source', '__str__', 0.2626128657194451), ('src/_pytest/_code/code.py', 'ExceptionRepr', '__init__', 0.2581988897471611), ('src/_pytest/_code/source.py', '', 'findsource', 0.2581988897471611), ('src/_pytest/junitxml.py', '_NodeReporter', 'append_pass', 0.2581988897471611), ('src/_pytest/junitxml.py', 'LogXML', 'pytest_runtest_logreport', 0.2581988897471611), ('src/_pytest/nose.py', '', 'teardown_nose', 0.25607375986579195), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_runtest_call', 0.2550306852253353), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_call', 0.2550306852253353), ('src/_pytest/fixtures.py', '', 'fillfixtures', 0.25298221281347033), ('src/_pytest/fixtures.py', 'FixtureRequest', 'fixturenames', 0.25298221281347033), ('src/_pytest/fixtures.py', 'FixtureRequest', '_fillfixtures', 0.25298221281347033), ('src/_pytest/python.py', 'FunctionMixin', 'setup', 0.25298221281347033), ('src/_pytest/python.py', 'Function', 'setup', 0.25298221281347033), ('src/_pytest/runner.py', 'SetupState', 'addfinalizer', 0.25298221281347033), ('src/_pytest/runner.py', 'SetupState', '_callfinalizers', 0.25298221281347033), ('src/_pytest/skipping.py', '', 'pytest_runtest_setup', 0.25298221281347033), ('src/_pytest/assertion/__init__.py', '', 'pytest_runtest_setup', 0.2519763153394848), ('src/_pytest/nodes.py', 'Node', 'teardown', 0.2519763153394848), ('src/_pytest/runner.py', '', 'pytest_runtest_setup', 0.2519763153394848), ('src/_pytest/runner.py', 'SetupState', '_pop_and_teardown', 0.2519763153394848), ('src/_pytest/runner.py', 'SetupState', '_teardown_with_finalization', 0.2519763153394848), ('src/_pytest/runner.py', 'SetupState', 'prepare', 0.2519763153394848), ('src/_pytest/runner.py', '', 'pytest_runtest_teardown', 0.25098232205526344), ('src/_pytest/_code/code.py', 'Code', '__init__', 0.24902912254587614), ('src/_pytest/_code/code.py', '', 'getrawcode', 0.24902912254587614), ('src/_pytest/_code/source.py', '', 'getfslineno', 0.24902912254587614), ('src/_pytest/compat.py', '', 'get_real_func', 0.24902912254587614), ('src/_pytest/compat.py', '', 'getfslineno', 0.24902912254587614), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logstart', 0.24902912254587614), ('src/_pytest/main.py', 'Session', '_node_location_to_relpath', 0.24902912254587614), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '__init__', 0.24902912254587614), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'undo', 0.24902912254587614), ('src/_pytest/nodes.py', 'Node', 'getparent', 0.24902912254587614), ('src/_pytest/pytester.py', 'SysModulesSnapshot', '__init__', 0.24902912254587614), ('src/_pytest/pytester.py', 'SysModulesSnapshot', 'restore', 0.24902912254587614), ('src/_pytest/pytester.py', 'SysPathsSnapshot', '__init__', 0.24902912254587614), ('src/_pytest/pytester.py', 'SysPathsSnapshot', 'restore', 0.24902912254587614), ('src/_pytest/pytester.py', '', '__take_sys_modules_snapshot', 0.24902912254587614), ('src/_pytest/python.py', 'PyobjMixin', 'getmodpath', 0.24902912254587614), ('src/_pytest/python.py', 'PyobjMixin', 'reportinfo', 0.24902912254587614), ('src/_pytest/runner.py', '', 'pytest_runtest_protocol', 0.24902912254587614), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logstart', 0.24902912254587614), ('src/_pytest/_code/code.py', 'Code', 'path', 0.24806946917841693), ('src/_pytest/assertion/__init__.py', '', 'pytest_runtest_teardown', 0.24806946917841693), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_runtest_protocol', 0.24806946917841693), ('src/_pytest/compat.py', '', 'is_generator', 0.24806946917841693), ('src/_pytest/faulthandler.py', '', 'pytest_runtest_protocol', 0.24806946917841693), ('src/_pytest/fixtures.py', '', 'scopeproperty', 0.24806946917841693), ('src/_pytest/fixtures.py', 'FixtureRequest', 'function', 0.24806946917841693), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logfinish', 0.24806946917841693), ('src/_pytest/main.py', '', 'pytest_runtestloop', 0.24806946917841693), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', '__init__', 0.24806946917841693), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'setitem', 0.24806946917841693), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'setenv', 0.24806946917841693), ('src/_pytest/nodes.py', 'Node', 'get_closest_marker', 0.24806946917841693), ('src/_pytest/runner.py', 'SetupState', 'teardown_exact', 0.24806946917841693), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logfinish', 0.24806946917841693), ('src/_pytest/unittest.py', '', 'pytest_runtest_protocol', 0.24806946917841693), ('src/_pytest/warnings.py', '', 'catch_warnings_for_item', 0.24806946917841693), ('src/_pytest/warnings.py', '', 'pytest_runtest_protocol', 0.24806946917841693), ('src/_pytest/config/__init__.py', '', 'getini', 0.24712082528608617), ('src/_pytest/terminal.py', 'TerminalReporter', 'showlongtestinfo', 0.24712082528608617), ('src/_pytest/fixtures.py', 'SubRequest', 'addfinalizer', 0.24618298195866545), ('src/_pytest/fixtures.py', 'FixtureDef', 'addfinalizer', 0.24618298195866545), ('src/_pytest/terminal.py', 'TerminalReporter', '_width_of_current_line', 0.24618298195866545), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', 'istrue', 0.2399040575616269), ('src/_pytest/mark/evaluate.py', 'MarkEvaluator', '_istrue', 0.2399040575616269), ('src/_pytest/skipping.py', '', 'check_xfail_no_run', 0.2399040575616269), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_fspath_result', 0.2399040575616269), ('src/_pytest/_code/code.py', 'Frame', '__init__', 0.23904572186687872), ('src/_pytest/_code/code.py', 'TracebackEntry', '__init__', 0.23904572186687872), ('src/_pytest/_code/code.py', 'TracebackEntry', 'frame', 0.23904572186687872), ('src/_pytest/_code/code.py', 'TracebackEntry', 'ishidden', 0.23904572186687872), ('src/_pytest/_code/code.py', 'Traceback', '__getitem__', 0.23904572186687872), ('src/_pytest/_code/code.py', 'Traceback', 'getcrashentry', 0.23904572186687872), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'type', 0.23904572186687872), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'tb', 0.23904572186687872), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'exconly', 0.23904572186687872), ('src/_pytest/_code/code.py', 'ExceptionInfo', '_getreprcrash', 0.23904572186687872), ('src/_pytest/_code/code.py', 'ReprFileLocation', '__init__', 0.23904572186687872), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_runtest_teardown', 0.23904572186687872), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_teardown', 0.23904572186687872), ('src/_pytest/terminal.py', 'TerminalReporter', 'verbosity', 0.23904572186687872), ('testing/conftest.py', '', 'restore_tracing', 0.23904572186687872), ('src/_pytest/main.py', '', '_main', 0.23570226039551587), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'from_exc_info', 0.23249527748763857), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'from_current', 0.23249527748763857), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'value', 0.23249527748763857), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'errisinstance', 0.23249527748763857), ('src/_pytest/compat.py', '', 'getimfunc', 0.22941573387056174), ('src/_pytest/fixtures.py', '', 'resolve_fixture_function', 0.22941573387056174), ('src/_pytest/fixtures.py', 'FixtureRequest', '_getscopeitem', 0.2250175801852048), ('src/_pytest/python.py', 'Instance', '_getobj', 0.22360679774997896), ('src/_pytest/python.py', 'Instance', 'newinstance', 0.22360679774997896), ('src/_pytest/fixtures.py', 'FixtureRequest', 'node', 0.2215395102486845), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_failures', 0.2182178902359924), ('src/_pytest/assertion/rewrite.py', '', '_saferepr', 0.19611613513818404), ('src/_pytest/assertion/util.py', '', 'format_explanation', 0.19611613513818404), ('src/_pytest/assertion/util.py', '', '_split_explanation', 0.19611613513818404), ('src/_pytest/assertion/util.py', '', '_format_lines', 0.19611613513818404), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_errors', 0.19425717247145283), ('src/_pytest/config/findpaths.py', '', 'getcfg', 0.1889822365046136), ('src/_pytest/junitxml.py', '_NodeReporter', 'write_captured_output', 0.1889822365046136), ('src/_pytest/junitxml.py', '_NodeReporter', 'finalize', 0.1889822365046136), ('src/_pytest/junitxml.py', 'LogXML', 'finalize', 0.1889822365046136), ('src/_pytest/junitxml.py', 'LogXML', 'node_reporter', 0.1889822365046136), ('src/_pytest/junitxml.py', 'LogXML', 'update_testcase_duration', 0.1889822365046136), ('src/_pytest/python.py', 'PyCollector', '_genfunctions', 0.1889822365046136), ('src/_pytest/reports.py', 'BaseReport', 'get_sections', 0.1889822365046136), ('src/_pytest/reports.py', 'BaseReport', 'caplog', 0.1889822365046136), ('src/_pytest/reports.py', 'BaseReport', 'capstdout', 0.1889822365046136), ('src/_pytest/reports.py', 'BaseReport', 'capstderr', 0.1889822365046136), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_set_initial_conftests', 0.1873171623163388), ('src/_pytest/config/findpaths.py', '', 'get_common_ancestor', 0.1873171623163388), ('src/_pytest/config/findpaths.py', '', 'determine_setup', 0.1873171623163388), ('src/_pytest/fixtures.py', '', 'get_parametrized_fixture_keys', 0.1873171623163388), ('src/_pytest/junitxml.py', '_NodeReporter', 'make_properties_node', 0.1873171623163388), ('src/_pytest/junitxml.py', '_NodeReporter', 'record_testreport', 0.1873171623163388), ('src/_pytest/junitxml.py', 'LogXML', 'pytest_terminal_summary', 0.1873171623163388), ('src/_pytest/terminal.py', '', 'getreportopt', 0.1873171623163388), ('src/_pytest/config/__init__.py', '', 'filename_arg', 0.18569533817705186), ('src/_pytest/junitxml.py', '', 'pytest_unconfigure', 0.18569533817705186), ('src/_pytest/junitxml.py', 'LogXML', 'pytest_collectreport', 0.18569533817705186), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_warnings', 0.18569533817705186), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_try_load_conftest', 0.1841149235796647), ('src/_pytest/junitxml.py', '', 'pytest_configure', 0.1841149235796647), ('src/_pytest/junitxml.py', '', 'mangle_test_address', 0.1841149235796647), ('src/_pytest/junitxml.py', 'LogXML', '_opentestcase', 0.1841149235796647), ('src/_pytest/junitxml.py', 'LogXML', '_get_global_properties_node', 0.1841149235796647), ('src/_pytest/nodes.py', 'Node', 'setup', 0.1841149235796647), ('src/_pytest/pytester.py', '', '_ensure_basetemp', 0.1841149235796647), ('src/_pytest/python.py', 'Module', '_inject_setup_module_fixture', 0.1841149235796647), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_early_rewrite_bailout', 0.18257418583505536), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_should_rewrite', 0.18257418583505536), ('src/_pytest/compat.py', '', 'safe_isclass', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureRequest', '__init__', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureManager', '_get_direct_parametrize_args', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureManager', 'getfixtureinfo', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureManager', '_getautousenames', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureManager', 'getfixtureclosure', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureManager', 'pytest_generate_tests', 0.18257418583505536), ('src/_pytest/fixtures.py', 'FixtureManager', 'parsefactories', 0.18257418583505536), ('src/_pytest/junitxml.py', '_NodeReporter', '__init__', 0.18257418583505536), ('src/_pytest/junitxml.py', '_NodeReporter', 'to_xml', 0.18257418583505536), ('src/_pytest/junitxml.py', 'LogXML', 'add_stats', 0.18257418583505536), ('src/_pytest/main.py', '_bestrelpath_cache', '__missing__', 0.18257418583505536), ('src/_pytest/main.py', 'Session', 'genitems', 0.18257418583505536), ('src/_pytest/mark/structures.py', '', 'get_unpacked_marks', 0.18257418583505536), ('src/_pytest/mark/structures.py', '', 'normalize_mark_list', 0.18257418583505536), ('src/_pytest/pathlib.py', '', '_force_symlink', 0.18257418583505536), ('src/_pytest/pytester.py', '', '_makefile', 0.18257418583505536), ('src/_pytest/python.py', '', 'pyobj_property', 0.18257418583505536), ('src/_pytest/python.py', '', 'pytest_generate_tests', 0.18257418583505536), ('src/_pytest/python.py', '', 'pytest_pycollect_makeitem', 0.18257418583505536), ('src/_pytest/python.py', 'PyCollector', 'funcnamefilter', 0.18257418583505536), ('src/_pytest/python.py', 'PyCollector', 'isnosetest', 0.18257418583505536), ('src/_pytest/python.py', 'PyCollector', 'istestfunction', 0.18257418583505536), ('src/_pytest/python.py', 'PyCollector', '_matches_prefix_or_glob_option', 0.18257418583505536), ('src/_pytest/python.py', 'PyCollector', 'collect', 0.18257418583505536), ('src/_pytest/python.py', 'PyCollector', '_makeitem', 0.18257418583505536), ('src/_pytest/python.py', 'Module', 'collect', 0.18257418583505536), ('src/_pytest/python.py', 'Module', '_inject_setup_function_fixture', 0.18257418583505536), ('src/_pytest/python.py', 'Module', '_importtestmodule', 0.18257418583505536), ('src/_pytest/python.py', '', '_get_first_non_fixture_func', 0.18257418583505536), ('src/_pytest/python.py', 'Metafunc', '__init__', 0.18257418583505536), ('src/_pytest/python.py', 'Function', '__init__', 0.18257418583505536), ('src/_pytest/python.py', 'Function', '_initrequest', 0.18257418583505536), ('src/_pytest/terminal.py', 'TerminalReporter', 'ensure_newline', 0.18257418583505536), ('src/_pytest/terminal.py', 'TerminalReporter', 'write', 0.18257418583505536), ('src/_pytest/terminal.py', 'TerminalReporter', '_write_progress_information_filling_space', 0.18257418583505536), ('src/_pytest/unittest.py', '', 'pytest_pycollect_makeitem', 0.18257418583505536), ('src/_pytest/_code/source.py', 'Source', '__init__', 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'exec_module', 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', '', '_write_pyc', 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', '', '_rewrite_test', 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', '', 'rewrite_asserts', 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', '__init__', 0.18107149208503706), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'run', 0.18107149208503706), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_ignore_collect', 0.18107149208503706), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_make_collect_report', 0.18107149208503706), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_rget_with_confmod', 0.18107149208503706), ('src/_pytest/config/__init__.py', '', 'parse', 0.18107149208503706), ('src/_pytest/config/__init__.py', '', '_getconftest_pathlist', 0.18107149208503706), ('src/_pytest/fixtures.py', '', 'reorder_items', 0.18107149208503706), ('src/_pytest/junitxml.py', 'LogXML', 'pytest_sessionstart', 0.18107149208503706), ('src/_pytest/junitxml.py', 'LogXML', 'pytest_sessionfinish', 0.18107149208503706), ('src/_pytest/main.py', '', '_in_venv', 0.18107149208503706), ('src/_pytest/main.py', '', 'pytest_ignore_collect', 0.18107149208503706), ('src/_pytest/main.py', 'Session', '_collect', 0.18107149208503706), ('src/_pytest/main.py', 'Session', '_collectfile', 0.18107149208503706), ('src/_pytest/main.py', 'Session', '_visit_filter', 0.18107149208503706), ('src/_pytest/nodes.py', 'Node', '__init__', 0.18107149208503706), ('src/_pytest/nodes.py', 'FSCollector', '__init__', 0.18107149208503706), ('src/_pytest/nodes.py', 'Item', '__init__', 0.18107149208503706), ('src/_pytest/pastebin.py', '', 'pytest_terminal_summary', 0.18107149208503706), ('src/_pytest/pathlib.py', '', 'fnmatch_ex', 0.18107149208503706), ('src/_pytest/pytester.py', '', 'makepyfile', 0.18107149208503706), ('src/_pytest/python.py', '', 'pytest_collect_file', 0.18107149208503706), ('src/_pytest/python.py', '', 'path_matches_patterns', 0.18107149208503706), ('src/_pytest/python.py', '', 'pytest_pycollect_makemodule', 0.18107149208503706), ('src/_pytest/python.py', 'Module', '_getobj', 0.18107149208503706), ('src/_pytest/reports.py', 'BaseReport', 'count_towards_summary', 0.18107149208503706), ('src/_pytest/runner.py', '', 'pytest_terminal_summary', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'hasopt', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_progress_information_message', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_sessionfinish', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_terminal_summary', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'getreports', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_passes', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'short_test_summary', 0.18107149208503706), ('src/_pytest/warnings.py', '', 'pytest_terminal_summary', 0.18107149208503706), ('src/_pytest/_argcomplete.py', '', 'try_argcomplete', 0.1796053020267749), ('src/_pytest/assertion/__init__.py', 'AssertionState', '__init__', 0.1796053020267749), ('src/_pytest/assertion/__init__.py', '', 'install_importhook', 0.1796053020267749), ('src/_pytest/assertion/__init__.py', '', 'pytest_collection', 0.1796053020267749), ('src/_pytest/assertion/__init__.py', '', 'pytest_sessionfinish', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '__init__', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'set_session', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'find_spec', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'create_module', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'mark_rewrite', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', '', '_read_pyc', 0.1796053020267749), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'is_rewrite_disabled', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'Cache', 'for_config', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'Cache', 'cache_dir_from_config', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'Cache', '_getvaluepath', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'Cache', 'get', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'Cache', 'set', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'Cache', '_ensure_supporting_files', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'LFPlugin', '__init__', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_report_collectionfinish', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_collectreport', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_collection_modifyitems', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_sessionfinish', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'NFPlugin', '__init__', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'NFPlugin', 'pytest_collection_modifyitems', 0.1796053020267749), ('src/_pytest/cacheprovider.py', 'NFPlugin', 'pytest_sessionfinish', 0.1796053020267749), ('src/_pytest/cacheprovider.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/cacheprovider.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/cacheprovider.py', '', 'pytest_report_header', 0.1796053020267749), ('src/_pytest/capture.py', '', 'pytest_load_initial_conftests', 0.1796053020267749), ('src/_pytest/capture.py', 'CaptureManager', '__init__', 0.1796053020267749), ('src/_pytest/capture.py', 'CaptureManager', '_getcapture', 0.1796053020267749), ('src/_pytest/capture.py', 'CaptureManager', 'start_global_capturing', 0.1796053020267749), ('src/_pytest/capture.py', 'CaptureManager', 'stop_global_capturing', 0.1796053020267749), ('src/_pytest/capture.py', '', 'safe_text_dupfile', 0.1796053020267749), ('src/_pytest/capture.py', 'EncodedFile', '__init__', 0.1796053020267749), ('src/_pytest/capture.py', 'MultiCapture', 'pop_outerr_to_orig', 0.1796053020267749), ('src/_pytest/capture.py', 'FDCaptureBinary', '__init__', 0.1796053020267749), ('src/_pytest/capture.py', 'FDCaptureBinary', '_start', 0.1796053020267749), ('src/_pytest/capture.py', 'FDCaptureBinary', '_done', 0.1796053020267749), ('src/_pytest/capture.py', '', '_colorama_workaround', 0.1796053020267749), ('src/_pytest/capture.py', '', '_readline_workaround', 0.1796053020267749), ('src/_pytest/capture.py', '', '_py36_windowsconsoleio_workaround', 0.1796053020267749), ('src/_pytest/compat.py', '', 'getfuncargnames', 0.1796053020267749), ('src/_pytest/compat.py', '', 'get_real_method', 0.1796053020267749), ('src/_pytest/compat.py', '', 'safe_getattr', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'main', 0.1796053020267749), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'pytest_configure', 0.1796053020267749), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_getconftestmodules', 0.1796053020267749), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'consider_env', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_get_plugin_specs_as_list', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_iter_rewritable_modules', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'invocation_dir', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'add_cleanup', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_do_configure', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_ensure_unconfigure', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'pytest_cmdline_parse', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'pytest_load_initial_conftests', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_initini', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_consider_importhook', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_mark_plugins_for_rewrite', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_validate_args', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_preparse', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_checkversion', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'addinivalue_line', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_getini', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_get_override_ini_value', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'getvalue', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_assertion_supported', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', '_warn_about_missing_assertion', 0.1796053020267749), ('src/_pytest/config/__init__.py', '', 'create_terminal_writer', 0.1796053020267749), ('src/_pytest/config/argparsing.py', 'Parser', 'parse', 0.1796053020267749), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_setoption', 0.1796053020267749), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_known_args', 0.1796053020267749), ('src/_pytest/config/argparsing.py', 'MyOptionParser', 'parse_args', 0.1796053020267749), ('src/_pytest/config/findpaths.py', '', 'exists', 0.1796053020267749), ('src/_pytest/config/findpaths.py', '', 'get_dirs_from_args', 0.1796053020267749), ('src/_pytest/debugging.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/doctest.py', '', 'pytest_collect_file', 0.1796053020267749), ('src/_pytest/faulthandler.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/faulthandler.py', '', 'pytest_unconfigure', 0.1796053020267749), ('src/_pytest/fixtures.py', '', 'pytest_sessionstart', 0.1796053020267749), ('src/_pytest/fixtures.py', '', 'getfixturemarker', 0.1796053020267749), ('src/_pytest/fixtures.py', '', 'reorder_items_atscope', 0.1796053020267749), ('src/_pytest/fixtures.py', '', 'scope2index', 0.1796053020267749), ('src/_pytest/fixtures.py', 'FixtureDef', '__init__', 0.1796053020267749), ('src/_pytest/fixtures.py', 'FixtureManager', '__init__', 0.1796053020267749), ('src/_pytest/fixtures.py', 'FixtureManager', 'pytest_plugin_registered', 0.1796053020267749), ('src/_pytest/fixtures.py', 'FixtureManager', 'pytest_collection_modifyitems', 0.1796053020267749), ('src/_pytest/helpconfig.py', '', 'pytest_cmdline_parse', 0.1796053020267749), ('src/_pytest/helpconfig.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/helpconfig.py', '', 'pytest_report_header', 0.1796053020267749), ('src/_pytest/junitxml.py', '', 'bin_xml_escape', 0.1796053020267749), ('src/_pytest/logging.py', 'ColoredLevelFormatter', '__init__', 0.1796053020267749), ('src/_pytest/logging.py', '', 'get_option_ini', 0.1796053020267749), ('src/_pytest/logging.py', '', 'get_actual_log_level', 0.1796053020267749), ('src/_pytest/logging.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', '__init__', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', '_create_formatter', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', '_log_cli_enabled', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_collection', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_sessionfinish', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_sessionstart', 0.1796053020267749), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtestloop', 0.1796053020267749), ('src/_pytest/main.py', '', 'wrap_session', 0.1796053020267749), ('src/_pytest/main.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/main.py', '', 'pytest_collection', 0.1796053020267749), ('src/_pytest/main.py', '', 'pytest_collection_modifyitems', 0.1796053020267749), ('src/_pytest/main.py', 'Session', '__init__', 0.1796053020267749), ('src/_pytest/main.py', 'Session', 'pytest_collectstart', 0.1796053020267749), ('src/_pytest/main.py', 'Session', 'perform_collect', 0.1796053020267749), ('src/_pytest/main.py', 'Session', '_perform_collect', 0.1796053020267749), ('src/_pytest/main.py', 'Session', 'collect', 0.1796053020267749), ('src/_pytest/main.py', 'Session', '_parsearg', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'deselect_by_keyword', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'deselect_by_mark', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'pytest_collection_modifyitems', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/mark/__init__.py', '', 'pytest_unconfigure', 0.1796053020267749), ('src/_pytest/mark/structures.py', 'MarkGenerator', '__getattr__', 0.1796053020267749), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__init__', 0.1796053020267749), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'setattr', 0.1796053020267749), ('src/_pytest/pastebin.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/pastebin.py', '', 'pytest_unconfigure', 0.1796053020267749), ('src/_pytest/pathlib.py', '', 'resolve_from_str', 0.1796053020267749), ('src/_pytest/pytester.py', 'ParsedCall', '__init__', 0.1796053020267749), ('src/_pytest/pytester.py', 'HookRecorder', '__init__', 0.1796053020267749), ('src/_pytest/pytester.py', 'HookRecorder', 'finish_recording', 0.1796053020267749), ('src/_pytest/pytester.py', '', 'make_hook_recorder', 0.1796053020267749), ('src/_pytest/pytester.py', '', 'inline_run', 0.1796053020267749), ('src/_pytest/python.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/python.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/reports.py', 'CollectReport', '__init__', 0.1796053020267749), ('src/_pytest/resultlog.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/resultlog.py', '', 'pytest_unconfigure', 0.1796053020267749), ('src/_pytest/runner.py', '', 'pytest_sessionstart', 0.1796053020267749), ('src/_pytest/runner.py', '', 'pytest_sessionfinish', 0.1796053020267749), ('src/_pytest/runner.py', 'CallInfo', 'result', 0.1796053020267749), ('src/_pytest/runner.py', '', 'pytest_make_collect_report', 0.1796053020267749), ('src/_pytest/runner.py', 'SetupState', '__init__', 0.1796053020267749), ('src/_pytest/runner.py', 'SetupState', 'teardown_all', 0.1796053020267749), ('src/_pytest/runner.py', '', 'collect_one_node', 0.1796053020267749), ('src/_pytest/setuponly.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/setupplan.py', '', 'pytest_cmdline_main', 0.1796053020267749), ('src/_pytest/skipping.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/stepwise.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/stepwise.py', 'StepwisePlugin', '__init__', 0.1796053020267749), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_sessionstart', 0.1796053020267749), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_collection_modifyitems', 0.1796053020267749), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_report_collectionfinish', 0.1796053020267749), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_sessionfinish', 0.1796053020267749), ('src/_pytest/terminal.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', '__init__', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', '_determine_show_progress_info', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'showheader', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_line', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_sep', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_plugin_registered', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_collection', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_collectreport', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'report_collect', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_sessionstart', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', '_write_report_lines_from_hooks', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_report_header', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_collection_finish', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_unconfigure', 0.1796053020267749), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_stats', 0.1796053020267749), ('src/_pytest/terminal.py', '', '_plugin_nameversions', 0.1796053020267749), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'from_config', 0.1796053020267749), ('src/_pytest/tmpdir.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/warnings.py', '', 'pytest_configure', 0.1796053020267749), ('src/_pytest/warnings.py', '', 'pytest_collection', 0.1796053020267749), ('src/_pytest/_code/source.py', '', 'deindent', 0.1781741612749496), ('src/_pytest/assertion/__init__.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/assertion/__init__.py', 'DummyRewriteHook', 'mark_rewrite', 0.1781741612749496), ('src/_pytest/cacheprovider.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/capture.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/capture.py', 'EncodedFile', 'write', 0.1781741612749496), ('src/_pytest/capture.py', 'MultiCapture', '__init__', 0.1781741612749496), ('src/_pytest/capture.py', 'MultiCapture', 'start_capturing', 0.1781741612749496), ('src/_pytest/capture.py', 'MultiCapture', 'stop_capturing', 0.1781741612749496), ('src/_pytest/capture.py', 'SysCapture', '__init__', 0.1781741612749496), ('src/_pytest/capture.py', 'SysCapture', 'start', 0.1781741612749496), ('src/_pytest/capture.py', 'SysCapture', 'snap', 0.1781741612749496), ('src/_pytest/capture.py', 'SysCapture', 'done', 0.1781741612749496), ('src/_pytest/capture.py', 'DontReadFromInput', 'close', 0.1781741612749496), ('src/_pytest/compat.py', 'CaptureIO', '__init__', 0.1781741612749496), ('src/_pytest/compat.py', 'CaptureIO', 'getvalue', 0.1781741612749496), ('src/_pytest/config/__init__.py', '', 'get_config', 0.1781741612749496), ('src/_pytest/config/__init__.py', '', '_prepareconfig', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '__init__', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'parse_hookimpl_opts', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'parse_hookspec_opts', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'register', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'consider_preparse', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'consider_module', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_import_plugin_specs', 0.1781741612749496), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'import_plugin', 0.1781741612749496), ('src/_pytest/config/__init__.py', '', '__init__', 0.1781741612749496), ('src/_pytest/config/__init__.py', '', '_processopt', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Parser', '__init__', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Parser', 'processoption', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Parser', 'getgroup', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Parser', '_getparser', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_known_and_unknown_args', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Parser', 'addini', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Argument', '__init__', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Argument', 'names', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Argument', 'attrs', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'Argument', '_set_opt_strings', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'OptionGroup', '__init__', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'OptionGroup', 'addoption', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'OptionGroup', '_addoption', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'OptionGroup', '_addoption_instance', 0.1781741612749496), ('src/_pytest/config/argparsing.py', 'MyOptionParser', '__init__', 0.1781741612749496), ('src/_pytest/debugging.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/doctest.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/faulthandler.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/fixtures.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/helpconfig.py', 'HelpAction', '__init__', 0.1781741612749496), ('src/_pytest/helpconfig.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/junitxml.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/junitxml.py', 'LogXML', '__init__', 0.1781741612749496), ('src/_pytest/logging.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/main.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/main.py', 'Session', 'isinitpath', 0.1781741612749496), ('src/_pytest/mark/__init__.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/pastebin.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/pytester.py', 'RunResult', '__init__', 0.1781741612749496), ('src/_pytest/pytester.py', '', 'runpytest_inprocess', 0.1781741612749496), ('src/_pytest/pytester.py', '', 'runpytest', 0.1781741612749496), ('src/_pytest/pytester.py', 'LineMatcher', '__init__', 0.1781741612749496), ('src/_pytest/python.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/resultlog.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/runner.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/setuponly.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/setupplan.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/skipping.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/stepwise.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/terminal.py', 'MoreQuietAction', '__init__', 0.1781741612749496), ('src/_pytest/terminal.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/warnings.py', '', 'pytest_addoption', 0.1781741612749496), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'delitem', 0.17407765595569785), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'delenv', 0.17407765595569785), ('src/_pytest/pytester.py', '', 'testdir', 0.17407765595569785), ('src/_pytest/pytester.py', 'CwdSnapshot', '__init__', 0.17407765595569785), ('src/_pytest/pytester.py', 'CwdSnapshot', 'restore', 0.17407765595569785), ('src/_pytest/pytester.py', '', '__init__', 0.17407765595569785), ('src/_pytest/pytester.py', '', 'finalize', 0.17407765595569785), ('src/_pytest/pytester.py', '', 'chdir', 0.17407765595569785), ('src/_pytest/tmpdir.py', 'TempdirFactory', 'mktemp', 0.17407765595569785), ('src/_pytest/fixtures.py', 'FixtureDef', 'execute', 0.17277368511627203), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'getbasetemp', 0.17277368511627203), ('src/_pytest/pathlib.py', '', 'find_prefixed', 0.17149858514250882), ('src/_pytest/pathlib.py', '', 'extract_suffixes', 0.17149858514250882), ('src/_pytest/pathlib.py', '', 'find_suffixes', 0.17149858514250882), ('src/_pytest/pathlib.py', '', 'make_numbered_dir', 0.17149858514250882), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'mktemp', 0.17149858514250882), ('src/_pytest/warnings.py', '', '_setoption', 0.17025130615174972), ('src/_pytest/python.py', '', 'pytest_pyfunc_call', 0.1690308509457033), ('src/_pytest/python.py', 'Function', 'runtest', 0.1690308509457033), ('src/_pytest/skipping.py', '', 'pytest_pyfunc_call', 0.1690308509457033), ('src/_pytest/skipping.py', '', 'check_strict_xfail', 0.1690308509457033), ('src/_pytest/fixtures.py', '', '_teardown_yield_fixture', 0.16783627165933782), ('src/_pytest/compat.py', '', 'iscoroutinefunction', 0.1643989873053573), ('src/_pytest/fixtures.py', '', 'get_scope_node', 0.1643989873053573), ('src/_pytest/fixtures.py', '', 'call_fixture_func', 0.1643989873053573), ('src/_pytest/fixtures.py', 'FixtureDef', 'finish', 0.16012815380508713), ('src/_pytest/fixtures.py', 'FixtureRequest', '_getnextfixturedef', 0.15075567228888181), ('src/_pytest/fixtures.py', 'FixtureRequest', '_get_active_fixturedef', 0.15075567228888181), ('src/_pytest/fixtures.py', 'FixtureRequest', '_get_fixturestack', 0.15075567228888181), ('src/_pytest/fixtures.py', 'FixtureRequest', '_check_scope', 0.15075567228888181), ('src/_pytest/fixtures.py', 'FixtureLookupError', '__init__', 0.15075567228888181), ('src/_pytest/fixtures.py', '', 'pytest_fixture_setup', 0.15075567228888181), ('src/_pytest/fixtures.py', 'FixtureManager', 'getfixturedefs', 0.15075567228888181), ('src/_pytest/fixtures.py', 'FixtureRequest', '_compute_fixture_value', 0.14990633779917228), ('src/_pytest/fixtures.py', 'FixtureRequest', 'config', 0.1466471150213533), ('src/_pytest/fixtures.py', 'FixtureRequest', 'instance', 0.1466471150213533), ('src/_pytest/fixtures.py', 'FixtureRequest', 'session', 0.1466471150213533), ('src/_pytest/fixtures.py', 'FixtureRequest', 'getfixturevalue', 0.1466471150213533), ('src/_pytest/fixtures.py', 'FixtureRequest', '_schedule_finalizers', 0.1466471150213533), ('src/_pytest/fixtures.py', 'SubRequest', '__init__', 0.1466471150213533), ('src/_pytest/fixtures.py', '', 'scopemismatch', 0.1466471150213533), ('src/_pytest/setuponly.py', '', 'pytest_fixture_setup', 0.1466471150213533), ('src/_pytest/setuponly.py', '', 'pytest_fixture_post_finalizer', 0.1466471150213533), ('src/_pytest/setupplan.py', '', 'pytest_fixture_setup', 0.1466471150213533), ('src/_pytest/faulthandler.py', '', '_get_stderr_fileno', 0.1270001270001905)]
2024-04-05 06:10:49 
========== Conversation Round 0 ==========
2024-04-05 06:10:49 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Hostname and timestamp properties in generated JUnit XML reports\n'
             'Pytest enables generating JUnit XML reports of the tests.\n'
             'However, there are some properties missing, specifically `hostname` and `timestamp` from the `testsuite` XML element. Is there an option to '
             'include them?\n'
             'Example of a pytest XML report:\n'
             '```xml\n'
             '<?xml version="1.0" encoding="utf-8"?>\n'
             '<testsuite errors="0" failures="2" name="check" skipped="0" tests="4" time="0.049">\n'
             '<testcase classname="test_sample.TestClass" file="test_sample.py" line="3" name="test_addOne_normal" time="0.001"></testcase>\n'
             '<testcase classname="test_sample.TestClass" file="test_sample.py" line="6" name="test_addOne_edge" time="0.001"></testcase>\n'
             '</testsuite>\n'
             '```\n'
             'Example of a junit XML report:\n'
             '```xml\n'
             '<?xml version="1.0" encoding="UTF-8"?>\n'
             '<testsuite name="location.GeoLocationTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2019-04-22T10:32:27" '
             'hostname="Anass-MacBook-Pro.local" time="0.048">\n'
             '<properties/>\n'
             '<testcase name="testIoException()" classname="location.GeoLocationTest" time="0.044"/>\n'
             '<testcase name="testJsonDeserialization()" classname="location.GeoLocationTest" time="0.003"/>\n'
             '<system-out><![CDATA[]]></system-out>\n'
             '<system-err><![CDATA[]]></system-err>\n'
             '</testsuite>\n'
             '```\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/pytester.py</file> <func>__repr__</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/_code/source.py</file> <func>get_statement_startend2</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_reprcompare</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/_code/code.py</file> <class>Frame</class> <func>getargs</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/_code/code.py</file> <class>FormattedExcinfo</class> <func>repr_args</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '}]
2024-04-05 06:10:59 Model API request cost info: input_tokens=838, output_tokens=261, cost=0.016210
2024-04-05 06:10:59 Raw model response: ChatCompletionMessage(content='To address the issue of missing `hostname` and `timestamp` properties in the generated JUnit XML reports by Pytest, we need to understand how the XML report generation is implemented in Pytest. Given the nature of the issue, it\'s likely related to the part of the code that handles the creation or modification of the XML elements for the test suite. \n\nSince the issue description does not directly mention specific classes or methods responsible for XML report generation, we\'ll start by searching for code snippets that could be responsible for generating the `<testsuite>` XML element, as this is where the `hostname` and `timestamp` attributes are missing.\n\nLet\'s perform a search for code snippets related to the creation of the `testsuite` element in the XML reports:\n\n1. `search_code("<testsuite")`: This will help us find where in the codebase the `testsuite` XML element is being generated or modified.\n\n2. `search_code("JUnit XML")`: Since the issue is specifically about JUnit XML reports, this search might reveal comments or documentation within the codebase that point us to the relevant parts of the code responsible for generating these reports. \n\nThese searches are aimed at narrowing down the parts of the codebase that are most likely to be relevant to the issue at hand.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:10:59 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 06:11:01 Model API request cost info: input_tokens=581, output_tokens=30, cost=0.006710
2024-04-05 06:11:01 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": ["search_code(\\"<testsuite\\")", "search_code(\\"JUnit XML\\")"],\n    "bug_locations": []\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:11:01 Raw issue json produced. Writing issue json into file.
2024-04-05 06:11:01 Extracted a valid json. Congratulations!
2024-04-05 06:11:01 Refactored invocation argument parsing failed on 'search_code("<testsuite")': invalid syntax (<unknown>, line 1)
2024-04-05 06:11:01 Result of dispatch_intent: ('Found 1 snippets containing `<testsuite` in the codebase.\nSearch result 1: <file>src/_pytest/junitxml.py</file> <func>record_testsuite_property</func> <code>\ndef record_testsuite_property(request):\n    """\n    Records a new ``<property>`` tag as child of the root ``<testsuite>``. This is suitable to\n    writing global information regarding the entire test suite, and is compatible with ``xunit2`` JUnit family.\n</code>\n\n', 'Found 1 snippets containing `<testsuite` in the codebase.\n', True)
2024-04-05 06:11:01 Refactored invocation argument parsing failed on 'search_code("JUnit XML")': invalid syntax (<unknown>, line 1)
2024-04-05 06:11:01 Result of dispatch_intent: ('Found 1 snippets containing `JUnit XML` in the codebase.\nSearch result 1: <file>src/_pytest/junitxml.py</file> <func>record_property</func> <code>\n    """Add an extra properties the calling test.\n    User properties become part of the test report and are available to the\n    configured reporters, like JUnit XML.\n    The fixture is callable with ``(name, value)``, with value being automatically\n    xml-encoded.\n</code>\n\n', 'Found 1 snippets containing `JUnit XML` in the codebase.\n', True)
2024-04-05 06:11:22 Model API request cost info: input_tokens=1341, output_tokens=565, cost=0.030360
2024-04-05 06:11:22 Raw model response: ChatCompletionMessage(content="Based on the search results, both snippets are located within the same file: `src/_pytest/junitxml.py`. This file is likely responsible for handling JUnit XML report generation in Pytest. Let's analyze the context provided by the search results:\n\n1. **`record_testsuite_property` function in `src/_pytest/junitxml.py`**:\n   - This function is designed to record a new `<property>` tag as a child of the root `<testsuite>`. The description mentions that it is suitable for writing global information regarding the entire test suite, which aligns with the requirement to add `hostname` and `timestamp` properties to the `<testsuite>` element. However, this function seems to be more focused on adding `<property>` tags rather than directly modifying attributes of the `<testsuite>` element itself.\n\n2. **`record_property` function in `src/_pytest/junitxml.py`**:\n   - This function allows adding extra properties to the calling test, where user properties become part of the test report and are available to configured reporters, like JUnit XML. This function seems to be more focused on individual test properties rather than the global `<testsuite>` attributes.\n\nGiven this context, it appears that `src/_pytest/junitxml.py` is indeed the correct file to focus on for addressing the issue, but neither of the functions directly mentioned seems to be responsible for setting the `hostname` and `timestamp` attributes on the `<testsuite>` element itself. Instead, they provide mechanisms for adding properties to the test suite and individual tests.\n\nTo proceed, we need to find the part of the code that actually generates or modifies the `<testsuite>` element to include the `hostname` and `timestamp` attributes. Since the specific function or method responsible for this was not identified in the initial searches, we should look for more general functions or methods in `src/_pytest/junitxml.py` that might be responsible for generating the `<testsuite>` element or setting its attributes.\n\nNext steps could involve:\n- Searching for functions or methods in `src/_pytest/junitxml.py` that are responsible for the creation or modification of the `<testsuite>` XML element.\n- Reviewing the implementation of `src/_pytest/junitxml.py` to understand how the JUnit XML report is structured and where the `hostname` and `timestamp` attributes can be added.\n\nGiven the information we have, a direct search for specific methods or classes within `src/_pytest/junitxml.py` related to the `<testsuite>` element creation or modification would be the next logical step. However, without more specific method or class names to search for, the next best action would be to manually inspect the `src/_pytest/junitxml.py` file for relevant code sections.", role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:11:22 
========== Conversation Round 1 ==========
2024-04-05 06:11:22 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Hostname and timestamp properties in generated JUnit XML reports\n'
             'Pytest enables generating JUnit XML reports of the tests.\n'
             'However, there are some properties missing, specifically `hostname` and `timestamp` from the `testsuite` XML element. Is there an option to '
             'include them?\n'
             'Example of a pytest XML report:\n'
             '```xml\n'
             '<?xml version="1.0" encoding="utf-8"?>\n'
             '<testsuite errors="0" failures="2" name="check" skipped="0" tests="4" time="0.049">\n'
             '<testcase classname="test_sample.TestClass" file="test_sample.py" line="3" name="test_addOne_normal" time="0.001"></testcase>\n'
             '<testcase classname="test_sample.TestClass" file="test_sample.py" line="6" name="test_addOne_edge" time="0.001"></testcase>\n'
             '</testsuite>\n'
             '```\n'
             'Example of a junit XML report:\n'
             '```xml\n'
             '<?xml version="1.0" encoding="UTF-8"?>\n'
             '<testsuite name="location.GeoLocationTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2019-04-22T10:32:27" '
             'hostname="Anass-MacBook-Pro.local" time="0.048">\n'
             '<properties/>\n'
             '<testcase name="testIoException()" classname="location.GeoLocationTest" time="0.044"/>\n'
             '<testcase name="testJsonDeserialization()" classname="location.GeoLocationTest" time="0.003"/>\n'
             '<system-out><![CDATA[]]></system-out>\n'
             '<system-err><![CDATA[]]></system-err>\n'
             '</testsuite>\n'
             '```\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/pytester.py</file> <func>__repr__</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/_code/source.py</file> <func>get_statement_startend2</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_reprcompare</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/_code/code.py</file> <class>Frame</class> <func>getargs</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/_code/code.py</file> <class>FormattedExcinfo</class> <func>repr_args</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'To address the issue of missing `hostname` and `timestamp` properties in the generated JUnit XML reports by Pytest, we need to understand how '
             "the XML report generation is implemented in Pytest. Given the nature of the issue, it's likely related to the part of the code that handles the "
             'creation or modification of the XML elements for the test suite. \n'
             '\n'
             "Since the issue description does not directly mention specific classes or methods responsible for XML report generation, we'll start by "
             'searching for code snippets that could be responsible for generating the `<testsuite>` XML element, as this is where the `hostname` and '
             '`timestamp` attributes are missing.\n'
             '\n'
             "Let's perform a search for code snippets related to the creation of the `testsuite` element in the XML reports:\n"
             '\n'
             '1. `search_code("<testsuite")`: This will help us find where in the codebase the `testsuite` XML element is being generated or modified.\n'
             '\n'
             '2. `search_code("JUnit XML")`: Since the issue is specifically about JUnit XML reports, this search might reveal comments or documentation '
             'within the codebase that point us to the relevant parts of the code responsible for generating these reports. \n'
             '\n'
             'These searches are aimed at narrowing down the parts of the codebase that are most likely to be relevant to the issue at hand.'},
 {'role': 'user',
  'content': 'Result of search_code("<testsuite"):\n'
             'Found 1 snippets containing `<testsuite` in the codebase.\n'
             'Search result 1: <file>src/_pytest/junitxml.py</file> <func>record_testsuite_property</func> <code>\n'
             'def record_testsuite_property(request):\n'
             '    """\n'
             '    Records a new ``<property>`` tag as child of the root ``<testsuite>``. This is suitable to\n'
             '    writing global information regarding the entire test suite, and is compatible with ``xunit2`` JUnit family.\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_code("JUnit XML"):\n'
             'Found 1 snippets containing `JUnit XML` in the codebase.\n'
             'Search result 1: <file>src/_pytest/junitxml.py</file> <func>record_property</func> <code>\n'
             '    """Add an extra properties the calling test.\n'
             '    User properties become part of the test report and are available to the\n'
             '    configured reporters, like JUnit XML.\n'
             '    The fixture is callable with ``(name, value)``, with value being automatically\n'
             '    xml-encoded.\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': 'Based on the search results, both snippets are located within the same file: `src/_pytest/junitxml.py`. This file is likely responsible for '
             "handling JUnit XML report generation in Pytest. Let's analyze the context provided by the search results:\n"
             '\n'
             '1. **`record_testsuite_property` function in `src/_pytest/junitxml.py`**:\n'
             '   - This function is designed to record a new `<property>` tag as a child of the root `<testsuite>`. The description mentions that it is '
             'suitable for writing global information regarding the entire test suite, which aligns with the requirement to add `hostname` and `timestamp` '
             'properties to the `<testsuite>` element. However, this function seems to be more focused on adding `<property>` tags rather than directly '
             'modifying attributes of the `<testsuite>` element itself.\n'
             '\n'
             '2. **`record_property` function in `src/_pytest/junitxml.py`**:\n'
             '   - This function allows adding extra properties to the calling test, where user properties become part of the test report and are available to '
             'configured reporters, like JUnit XML. This function seems to be more focused on individual test properties rather than the global `<testsuite>` '
             'attributes.\n'
             '\n'
             'Given this context, it appears that `src/_pytest/junitxml.py` is indeed the correct file to focus on for addressing the issue, but neither of '
             'the functions directly mentioned seems to be responsible for setting the `hostname` and `timestamp` attributes on the `<testsuite>` element '
             'itself. Instead, they provide mechanisms for adding properties to the test suite and individual tests.\n'
             '\n'
             'To proceed, we need to find the part of the code that actually generates or modifies the `<testsuite>` element to include the `hostname` and '
             '`timestamp` attributes. Since the specific function or method responsible for this was not identified in the initial searches, we should look '
             'for more general functions or methods in `src/_pytest/junitxml.py` that might be responsible for generating the `<testsuite>` element or setting '
             'its attributes.\n'
             '\n'
             'Next steps could involve:\n'
             '- Searching for functions or methods in `src/_pytest/junitxml.py` that are responsible for the creation or modification of the `<testsuite>` XML '
             'element.\n'
             '- Reviewing the implementation of `src/_pytest/junitxml.py` to understand how the JUnit XML report is structured and where the `hostname` and '
             '`timestamp` attributes can be added.\n'
             '\n'
             'Given the information we have, a direct search for specific methods or classes within `src/_pytest/junitxml.py` related to the `<testsuite>` '
             'element creation or modification would be the next logical step. However, without more specific method or class names to search for, the next '
             'best action would be to manually inspect the `src/_pytest/junitxml.py` file for relevant code sections.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'}]
2024-04-05 06:11:31 Model API request cost info: input_tokens=1979, output_tokens=284, cost=0.028310
2024-04-05 06:11:31 Raw model response: ChatCompletionMessage(content='- do we need more context: \n\nGiven the current information and analysis, it seems we need more context to pinpoint the exact location within the code where the `hostname` and `timestamp` attributes can be added to the `<testsuite>` element. Therefore, the following search API calls could provide more context:\n\n1. `search_code_in_file("testsuite", "src/_pytest/junitxml.py")`: This search is aimed at finding any references to the `testsuite` element within the `junitxml.py` file, which could lead us to the code responsible for its creation or modification.\n\n2. `search_method_in_file("add_testsuite_property", "src/_pytest/junitxml.py")`: Although the method name is hypothetical, this search is based on the assumption that there might be a method responsible for adding properties or attributes to the `testsuite` element. If such a method exists, it could be where we need to add the `hostname` and `timestamp`.\n\n- where are bug locations: \n\nBased on the initial analysis, the file likely to contain the bug or the missing feature implementation is:\n\n- **Buggy file**: `src/_pytest/junitxml.py`\n\nHowever, without further context or a deeper dive into the file, we cannot specify the exact methods that need modification to include the `hostname` and `timestamp` attributes in the `<testsuite>` element.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:11:31 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 06:11:35 Model API request cost info: input_tokens=604, output_tokens=73, cost=0.008230
2024-04-05 06:11:35 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [\n        "search_code_in_file(\\"testsuite\\", \\"src/_pytest/junitxml.py\\")",\n        "search_method_in_file(\\"add_testsuite_property\\", \\"src/_pytest/junitxml.py\\")"\n    ],\n    "bug_locations":[\n        {"file": "src/_pytest/junitxml.py"}\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:11:35 Raw issue json produced. Writing issue json into file.
2024-04-05 06:11:35 Extracted a valid json. Congratulations!
2024-04-05 06:11:35 Refactored invocation argument parsing failed on 'search_code_in_file("testsuite", "src/_pytest/junitxml.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed71cc970>
2024-04-05 06:11:35 Result of dispatch_intent: ('Found 8 snippets with code testsuite in file src/_pytest/junitxml.py.\nThey appeared in the following methods:\n<file>src/_pytest/junitxml.py</file> <func>_check_record_param_type</func> (1 matches)\n<file>src/_pytest/junitxml.py</file> <func>record_testsuite_property</func> (5 matches)\n<file>src/_pytest/junitxml.py</file> <func>pytest_sessionfinish</func> (2 matches)\n', 'Found 8 snippets with code testsuite in file src/_pytest/junitxml.py.\n', True)
2024-04-05 06:11:35 Refactored invocation argument parsing failed on 'search_method_in_file("add_testsuite_property", "src/_pytest/junitxml.py")': malformed node or string on line 1: <ast.Name object at 0x7f0ed71cd510>
2024-04-05 06:11:35 Result of dispatch_intent: ('The method add_testsuite_property does not appear in the codebase.', 'The method add_testsuite_property does not appear in the codebase.', False)
2024-04-05 06:11:56 Model API request cost info: input_tokens=2440, output_tokens=565, cost=0.041350
2024-04-05 06:11:56 Raw model response: ChatCompletionMessage(content="Based on the new search results, we have identified three methods within `src/_pytest/junitxml.py` that reference the `testsuite` element. These methods are likely candidates for where the modifications could be made to include the `hostname` and `timestamp` attributes in the JUnit XML reports. Let's analyze each method:\n\n1. **`_check_record_param_type`**:\n   - This method was mentioned to have 1 match for the term `testsuite`. However, based on its name, it seems more related to validation or type checking rather than directly manipulating the XML structure. It's less likely that this method is where we need to make changes to add `hostname` and `timestamp`.\n\n2. **`record_testsuite_property`**:\n   - With 5 matches for the term `testsuite`, this method seems to be significantly involved with the `testsuite` element, specifically in recording properties. While the initial analysis suggested that this method deals with adding `<property>` tags rather than setting attributes on the `testsuite` element itself, the high number of references indicates it's closely related to the manipulation of the `testsuite` element. It's worth investigating further, although it may not be the exact location for adding `hostname` and `timestamp`.\n\n3. **`pytest_sessionfinish`**:\n   - This method has 2 matches for `testsuite` and is named in a way that suggests it's called at the end of the test session. This could be a promising place to add global attributes like `hostname` and `timestamp` to the `testsuite` element, as it might be responsible for finalizing the XML report. The session finish phase is a logical point to add such global information.\n\nGiven this analysis, the most promising method to investigate further for adding the `hostname` and `timestamp` attributes is `pytest_sessionfinish`. This method is likely involved in finalizing the XML report and thus could be the appropriate place to modify the `testsuite` element with global attributes.\n\n**Conclusion**:\n- **Buggy file**: `src/_pytest/junitxml.py`\n- **Potential methods to modify**:\n  - Primary candidate: **`pytest_sessionfinish`** - Likely responsible for finalizing the XML report, making it a suitable place to add global attributes like `hostname` and `timestamp`.\n  - Secondary consideration: **`record_testsuite_property`** - Although initially deemed less likely, its close association with the `testsuite` element warrants further investigation.\n\nThe next step would be to inspect the implementation of `pytest_sessionfinish` (and possibly `record_testsuite_property`) in `src/_pytest/junitxml.py` to confirm where and how to implement the addition of `hostname` and `timestamp` attributes.", role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:11:56 
========== Conversation Round 2 ==========
2024-04-05 06:11:56 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>Hostname and timestamp properties in generated JUnit XML reports\n'
             'Pytest enables generating JUnit XML reports of the tests.\n'
             'However, there are some properties missing, specifically `hostname` and `timestamp` from the `testsuite` XML element. Is there an option to '
             'include them?\n'
             'Example of a pytest XML report:\n'
             '```xml\n'
             '<?xml version="1.0" encoding="utf-8"?>\n'
             '<testsuite errors="0" failures="2" name="check" skipped="0" tests="4" time="0.049">\n'
             '<testcase classname="test_sample.TestClass" file="test_sample.py" line="3" name="test_addOne_normal" time="0.001"></testcase>\n'
             '<testcase classname="test_sample.TestClass" file="test_sample.py" line="6" name="test_addOne_edge" time="0.001"></testcase>\n'
             '</testsuite>\n'
             '```\n'
             'Example of a junit XML report:\n'
             '```xml\n'
             '<?xml version="1.0" encoding="UTF-8"?>\n'
             '<testsuite name="location.GeoLocationTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2019-04-22T10:32:27" '
             'hostname="Anass-MacBook-Pro.local" time="0.048">\n'
             '<properties/>\n'
             '<testcase name="testIoException()" classname="location.GeoLocationTest" time="0.044"/>\n'
             '<testcase name="testJsonDeserialization()" classname="location.GeoLocationTest" time="0.003"/>\n'
             '<system-out><![CDATA[]]></system-out>\n'
             '<system-err><![CDATA[]]></system-err>\n'
             '</testsuite>\n'
             '```\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/pytester.py</file> <func>__repr__</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/_code/source.py</file> <func>get_statement_startend2</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/assertion/rewrite.py</file> <func>_call_reprcompare</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/_code/code.py</file> <class>Frame</class> <func>getargs</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/_code/code.py</file> <class>FormattedExcinfo</class> <func>repr_args</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'To address the issue of missing `hostname` and `timestamp` properties in the generated JUnit XML reports by Pytest, we need to understand how '
             "the XML report generation is implemented in Pytest. Given the nature of the issue, it's likely related to the part of the code that handles the "
             'creation or modification of the XML elements for the test suite. \n'
             '\n'
             "Since the issue description does not directly mention specific classes or methods responsible for XML report generation, we'll start by "
             'searching for code snippets that could be responsible for generating the `<testsuite>` XML element, as this is where the `hostname` and '
             '`timestamp` attributes are missing.\n'
             '\n'
             "Let's perform a search for code snippets related to the creation of the `testsuite` element in the XML reports:\n"
             '\n'
             '1. `search_code("<testsuite")`: This will help us find where in the codebase the `testsuite` XML element is being generated or modified.\n'
             '\n'
             '2. `search_code("JUnit XML")`: Since the issue is specifically about JUnit XML reports, this search might reveal comments or documentation '
             'within the codebase that point us to the relevant parts of the code responsible for generating these reports. \n'
             '\n'
             'These searches are aimed at narrowing down the parts of the codebase that are most likely to be relevant to the issue at hand.'},
 {'role': 'user',
  'content': 'Result of search_code("<testsuite"):\n'
             'Found 1 snippets containing `<testsuite` in the codebase.\n'
             'Search result 1: <file>src/_pytest/junitxml.py</file> <func>record_testsuite_property</func> <code>\n'
             'def record_testsuite_property(request):\n'
             '    """\n'
             '    Records a new ``<property>`` tag as child of the root ``<testsuite>``. This is suitable to\n'
             '    writing global information regarding the entire test suite, and is compatible with ``xunit2`` JUnit family.\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_code("JUnit XML"):\n'
             'Found 1 snippets containing `JUnit XML` in the codebase.\n'
             'Search result 1: <file>src/_pytest/junitxml.py</file> <func>record_property</func> <code>\n'
             '    """Add an extra properties the calling test.\n'
             '    User properties become part of the test report and are available to the\n'
             '    configured reporters, like JUnit XML.\n'
             '    The fixture is callable with ``(name, value)``, with value being automatically\n'
             '    xml-encoded.\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': 'Based on the search results, both snippets are located within the same file: `src/_pytest/junitxml.py`. This file is likely responsible for '
             "handling JUnit XML report generation in Pytest. Let's analyze the context provided by the search results:\n"
             '\n'
             '1. **`record_testsuite_property` function in `src/_pytest/junitxml.py`**:\n'
             '   - This function is designed to record a new `<property>` tag as a child of the root `<testsuite>`. The description mentions that it is '
             'suitable for writing global information regarding the entire test suite, which aligns with the requirement to add `hostname` and `timestamp` '
             'properties to the `<testsuite>` element. However, this function seems to be more focused on adding `<property>` tags rather than directly '
             'modifying attributes of the `<testsuite>` element itself.\n'
             '\n'
             '2. **`record_property` function in `src/_pytest/junitxml.py`**:\n'
             '   - This function allows adding extra properties to the calling test, where user properties become part of the test report and are available to '
             'configured reporters, like JUnit XML. This function seems to be more focused on individual test properties rather than the global `<testsuite>` '
             'attributes.\n'
             '\n'
             'Given this context, it appears that `src/_pytest/junitxml.py` is indeed the correct file to focus on for addressing the issue, but neither of '
             'the functions directly mentioned seems to be responsible for setting the `hostname` and `timestamp` attributes on the `<testsuite>` element '
             'itself. Instead, they provide mechanisms for adding properties to the test suite and individual tests.\n'
             '\n'
             'To proceed, we need to find the part of the code that actually generates or modifies the `<testsuite>` element to include the `hostname` and '
             '`timestamp` attributes. Since the specific function or method responsible for this was not identified in the initial searches, we should look '
             'for more general functions or methods in `src/_pytest/junitxml.py` that might be responsible for generating the `<testsuite>` element or setting '
             'its attributes.\n'
             '\n'
             'Next steps could involve:\n'
             '- Searching for functions or methods in `src/_pytest/junitxml.py` that are responsible for the creation or modification of the `<testsuite>` XML '
             'element.\n'
             '- Reviewing the implementation of `src/_pytest/junitxml.py` to understand how the JUnit XML report is structured and where the `hostname` and '
             '`timestamp` attributes can be added.\n'
             '\n'
             'Given the information we have, a direct search for specific methods or classes within `src/_pytest/junitxml.py` related to the `<testsuite>` '
             'element creation or modification would be the next logical step. However, without more specific method or class names to search for, the next '
             'best action would be to manually inspect the `src/_pytest/junitxml.py` file for relevant code sections.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'},
 {'role': 'assistant',
  'content': '- do we need more context: \n'
             '\n'
             'Given the current information and analysis, it seems we need more context to pinpoint the exact location within the code where the `hostname` '
             'and `timestamp` attributes can be added to the `<testsuite>` element. Therefore, the following search API calls could provide more context:\n'
             '\n'
             '1. `search_code_in_file("testsuite", "src/_pytest/junitxml.py")`: This search is aimed at finding any references to the `testsuite` element '
             'within the `junitxml.py` file, which could lead us to the code responsible for its creation or modification.\n'
             '\n'
             '2. `search_method_in_file("add_testsuite_property", "src/_pytest/junitxml.py")`: Although the method name is hypothetical, this search is based '
             'on the assumption that there might be a method responsible for adding properties or attributes to the `testsuite` element. If such a method '
             'exists, it could be where we need to add the `hostname` and `timestamp`.\n'
             '\n'
             '- where are bug locations: \n'
             '\n'
             'Based on the initial analysis, the file likely to contain the bug or the missing feature implementation is:\n'
             '\n'
             '- **Buggy file**: `src/_pytest/junitxml.py`\n'
             '\n'
             'However, without further context or a deeper dive into the file, we cannot specify the exact methods that need modification to include the '
             '`hostname` and `timestamp` attributes in the `<testsuite>` element.'},
 {'role': 'user',
  'content': 'Result of search_code_in_file("testsuite", "src/_pytest/junitxml.py"):\n'
             'Found 8 snippets with code testsuite in file src/_pytest/junitxml.py.\n'
             'They appeared in the following methods:\n'
             '<file>src/_pytest/junitxml.py</file> <func>_check_record_param_type</func> (1 matches)\n'
             '<file>src/_pytest/junitxml.py</file> <func>record_testsuite_property</func> (5 matches)\n'
             '<file>src/_pytest/junitxml.py</file> <func>pytest_sessionfinish</func> (2 matches)\n'
             '\n'
             '\n'
             'Result of search_method_in_file("add_testsuite_property", "src/_pytest/junitxml.py"):\n'
             'The method add_testsuite_property does not appear in the codebase.\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': 'Based on the new search results, we have identified three methods within `src/_pytest/junitxml.py` that reference the `testsuite` element. These '
             'methods are likely candidates for where the modifications could be made to include the `hostname` and `timestamp` attributes in the JUnit XML '
             "reports. Let's analyze each method:\n"
             '\n'
             '1. **`_check_record_param_type`**:\n'
             '   - This method was mentioned to have 1 match for the term `testsuite`. However, based on its name, it seems more related to validation or type '
             "checking rather than directly manipulating the XML structure. It's less likely that this method is where we need to make changes to add "
             '`hostname` and `timestamp`.\n'
             '\n'
             '2. **`record_testsuite_property`**:\n'
             '   - With 5 matches for the term `testsuite`, this method seems to be significantly involved with the `testsuite` element, specifically in '
             'recording properties. While the initial analysis suggested that this method deals with adding `<property>` tags rather than setting attributes '
             "on the `testsuite` element itself, the high number of references indicates it's closely related to the manipulation of the `testsuite` element. "
             "It's worth investigating further, although it may not be the exact location for adding `hostname` and `timestamp`.\n"
             '\n'
             '3. **`pytest_sessionfinish`**:\n'
             "   - This method has 2 matches for `testsuite` and is named in a way that suggests it's called at the end of the test session. This could be a "
             'promising place to add global attributes like `hostname` and `timestamp` to the `testsuite` element, as it might be responsible for finalizing '
             'the XML report. The session finish phase is a logical point to add such global information.\n'
             '\n'
             'Given this analysis, the most promising method to investigate further for adding the `hostname` and `timestamp` attributes is '
             '`pytest_sessionfinish`. This method is likely involved in finalizing the XML report and thus could be the appropriate place to modify the '
             '`testsuite` element with global attributes.\n'
             '\n'
             '**Conclusion**:\n'
             '- **Buggy file**: `src/_pytest/junitxml.py`\n'
             '- **Potential methods to modify**:\n'
             '  - Primary candidate: **`pytest_sessionfinish`** - Likely responsible for finalizing the XML report, making it a suitable place to add global '
             'attributes like `hostname` and `timestamp`.\n'
             '  - Secondary consideration: **`record_testsuite_property`** - Although initially deemed less likely, its close association with the `testsuite` '
             'element warrants further investigation.\n'
             '\n'
             'The next step would be to inspect the implementation of `pytest_sessionfinish` (and possibly `record_testsuite_property`) in '
             '`src/_pytest/junitxml.py` to confirm where and how to implement the addition of `hostname` and `timestamp` attributes.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'}]
2024-04-05 06:11:59 Model API request cost info: input_tokens=3078, output_tokens=61, cost=0.032610
2024-04-05 06:11:59 Raw model response: ChatCompletionMessage(content='- do we need more context: \n\n- where are bug locations: \n  - **Buggy file**: `src/_pytest/junitxml.py`\n  - **Buggy methods**:\n    - **Primary**: `pytest_sessionfinish`\n    - **Secondary consideration**: `record_testsuite_property`', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:11:59 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 06:12:02 Model API request cost info: input_tokens=381, output_tokens=69, cost=0.005880
2024-04-05 06:12:02 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [],\n    "bug_locations":[\n        {\n            "file": "src/_pytest/junitxml.py",\n            "method": "pytest_sessionfinish"\n        },\n        {\n            "file": "src/_pytest/junitxml.py",\n            "method": "record_testsuite_property"\n        }\n    ]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:12:02 Raw issue json produced. Writing issue json into file.
2024-04-05 06:12:02 Extracted a valid json. Congratulations!
2024-04-05 06:12:02 Result of dispatch_intent: ('Found 1 methods with name `pytest_sessionfinish` in file src/_pytest/junitxml.py.\nSearch result 1: <file>src/_pytest/junitxml.py</file> <class>LogXML</class> <func>pytest_sessionfinish</func> <code>    def pytest_sessionfinish(self):\n        dirname = os.path.dirname(os.path.abspath(self.logfile))\n        if not os.path.isdir(dirname):\n            os.makedirs(dirname)\n        logfile = open(self.logfile, "w", encoding="utf-8")\n        suite_stop_time = time.time()\n        suite_time_delta = suite_stop_time - self.suite_start_time\n\n        numtests = (\n            self.stats["passed"]\n            + self.stats["failure"]\n            + self.stats["skipped"]\n            + self.stats["error"]\n            - self.cnt_double_fail_tests\n        )\n        logfile.write(\'<?xml version="1.0" encoding="utf-8"?>\')\n\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats["error"],\n            failures=self.stats["failure"],\n            skipped=self.stats["skipped"],\n            tests=numtests,\n            time="%.3f" % suite_time_delta,\n        )\n        logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n        logfile.close()\n</code>\n\n', 'Found 1 methods with name `pytest_sessionfinish` in file src/_pytest/junitxml.py.\n', True)
2024-04-05 06:12:02 Result of dispatch_intent: ('Found 1 methods with name `record_testsuite_property` in file src/_pytest/junitxml.py.\nSearch result 1: <file>src/_pytest/junitxml.py</file> <func>record_testsuite_property</func> <code>def record_testsuite_property(request):\n    """\n    Records a new ``<property>`` tag as child of the root ``<testsuite>``. This is suitable to\n    writing global information regarding the entire test suite, and is compatible with ``xunit2`` JUnit family.\n\n    This is a ``session``-scoped fixture which is called with ``(name, value)``. Example:\n\n    .. code-block:: python\n\n        def test_foo(record_testsuite_property):\n            record_testsuite_property("ARCH", "PPC")\n            record_testsuite_property("STORAGE_TYPE", "CEPH")\n\n    ``name`` must be a string, ``value`` will be converted to a string and properly xml-escaped.\n    """\n\n    __tracebackhide__ = True\n\n    def record_func(name, value):\n        """noop function in case --junitxml was not passed in the command-line"""\n        __tracebackhide__ = True\n        _check_record_param_type("name", name)\n\n    xml = getattr(request.config, "_xml", None)\n    if xml is not None:\n        record_func = xml.add_global_property  # noqa\n    return record_func\n</code>\n\n', 'Found 1 methods with name `record_testsuite_property` in file src/_pytest/junitxml.py.\n', True)
2024-04-05 06:12:02 Gathered enough information. Invoking write_patch.
2024-04-05 06:12:02 Trying to write a patch. Try 1 of 3.
2024-04-05 06:12:16 Model API request cost info: input_tokens=3920, output_tokens=319, cost=0.048770
2024-04-05 06:12:16 Raw model response: ChatCompletionMessage(content='# modification 1\n```python\n<file>src/_pytest/junitxml.py</file>\n<original>        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats["error"],\n            failures=self.stats["failure"],\n            skipped=self.stats["skipped"],\n            tests=numtests,\n            time="%.3f" % suite_time_delta,\n        )</original>\n<patched>        import socket\n        from datetime import datetime\n        hostname = socket.gethostname()\n        timestamp = datetime.now().isoformat()\n        suite_node = Junit.testsuite(\n            self._get_global_properties_node(),\n            [x.to_xml() for x in self.node_reporters_ordered],\n            name=self.suite_name,\n            errors=self.stats["error"],\n            failures=self.stats["failure"],\n            skipped=self.stats["skipped"],\n            tests=numtests,\n            time="%.3f" % suite_time_delta,\n            hostname=hostname,\n            timestamp=timestamp,\n        )</patched>\n```\n\nThis modification adds the `hostname` and `timestamp` attributes to the `<testsuite>` element in the JUnit XML report. It does so by importing the necessary `socket` library to get the hostname and the `datetime` library to generate the current timestamp. These values are then passed as attributes to the `testsuite` element creation within the `pytest_sessionfinish` method in `src/_pytest/junitxml.py`.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 06:12:16 Raw patch produced in try 1. Writing patch into file.
2024-04-05 06:12:16 [Validation] Applied patch. Going to run test suite.
2024-04-05 06:12:16 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.0 ; pytest -rA testing/test_junitxml.py ; conda deactivate
2024-04-05 06:12:18 [Run test-suite] Result of parsing test log: True
2024-04-05 06:12:18 [Run test-suite] Eval status: {'--junitxml': 'ERROR:', 'testing/test_junitxml.py::test_mangle_test_address': 'PASSED', 'testing/test_junitxml.py::test_dont_configure_on_slaves': 'PASSED', 'testing/test_junitxml.py::test_invalid_xml_escape': 'PASSED', 'testing/test_junitxml.py::test_logxml_path_expansion': 'PASSED', 'testing/test_junitxml.py::TestPython::test_summing_simple': 'PASSED', 'testing/test_junitxml.py::TestPython::test_summing_simple_with_errors': 'PASSED', 'testing/test_junitxml.py::TestPython::test_hostname_in_xml': 'PASSED', 'testing/test_junitxml.py::TestPython::test_timestamp_in_xml': 'PASSED', 'testing/test_junitxml.py::TestPython::test_timing_function': 'PASSED', 'testing/test_junitxml.py::TestPython::test_junit_duration_report[call]': 'PASSED', 'testing/test_junitxml.py::TestPython::test_junit_duration_report[total]': 'PASSED', 'testing/test_junitxml.py::TestPython::test_setup_error': 'PASSED', 'testing/test_junitxml.py::TestPython::test_teardown_error': 'PASSED', 'testing/test_junitxml.py::TestPython::test_call_failure_teardown_error': 'PASSED', 'testing/test_junitxml.py::TestPython::test_skip_contains_name_reason': 'PASSED', 'testing/test_junitxml.py::TestPython::test_mark_skip_contains_name_reason': 'PASSED', 'testing/test_junitxml.py::TestPython::test_mark_skipif_contains_name_reason': 'PASSED', 'testing/test_junitxml.py::TestPython::test_mark_skip_doesnt_capture_output': 'PASSED', 'testing/test_junitxml.py::TestPython::test_classname_instance': 'PASSED', 'testing/test_junitxml.py::TestPython::test_classname_nested_dir': 'PASSED', 'testing/test_junitxml.py::TestPython::test_internal_error': 'PASSED', 'testing/test_junitxml.py::TestPython::test_failure_function[no]': 'PASSED', 'testing/test_junitxml.py::TestPython::test_failure_function[system-out]': 'PASSED', 'testing/test_junitxml.py::TestPython::test_failure_function[system-err]': 'PASSED', 'testing/test_junitxml.py::TestPython::test_failure_verbose_message': 'PASSED', 'testing/test_junitxml.py::TestPython::test_failure_escape': 'PASSED', 'testing/test_junitxml.py::TestPython::test_junit_prefixing': 'PASSED', 'testing/test_junitxml.py::TestPython::test_xfailure_function': 'PASSED', 'testing/test_junitxml.py::TestPython::test_xfailure_marker': 'PASSED', 'testing/test_junitxml.py::TestPython::test_xfail_captures_output_once': 'PASSED', 'testing/test_junitxml.py::TestPython::test_xfailure_xpass': 'PASSED', 'testing/test_junitxml.py::TestPython::test_xfailure_xpass_strict': 'PASSED', 'testing/test_junitxml.py::TestPython::test_collect_error': 'PASSED', 'testing/test_junitxml.py::TestPython::test_unicode': 'PASSED', 'testing/test_junitxml.py::TestPython::test_assertion_binchars': 'PASSED', 'testing/test_junitxml.py::TestPython::test_pass_captures_stdout': 'PASSED', 'testing/test_junitxml.py::TestPython::test_pass_captures_stderr': 'PASSED', 'testing/test_junitxml.py::TestPython::test_setup_error_captures_stdout': 'PASSED', 'testing/test_junitxml.py::TestPython::test_setup_error_captures_stderr': 'PASSED', 'testing/test_junitxml.py::TestPython::test_avoid_double_stdout': 'PASSED', 'testing/test_junitxml.py::TestNonPython::test_summing_simple': 'PASSED', 'testing/test_junitxml.py::test_nullbyte': 'PASSED', 'testing/test_junitxml.py::test_nullbyte_replace': 'PASSED', 'testing/test_junitxml.py::test_logxml_changingdir': 'PASSED', 'testing/test_junitxml.py::test_logxml_makedir': 'PASSED', 'testing/test_junitxml.py::test_logxml_check_isdir': 'PASSED', 'testing/test_junitxml.py::test_escaped_parametrized_names_xml': 'PASSED', 'testing/test_junitxml.py::test_double_colon_split_function_issue469': 'PASSED', 'testing/test_junitxml.py::test_double_colon_split_method_issue469': 'PASSED', 'testing/test_junitxml.py::test_unicode_issue368': 'PASSED', 'testing/test_junitxml.py::test_record_property': 'PASSED', 'testing/test_junitxml.py::test_record_property_same_name': 'PASSED', 'testing/test_junitxml.py::test_record_fixtures_without_junitxml[record_property]': 'PASSED', 'testing/test_junitxml.py::test_record_fixtures_without_junitxml[record_xml_attribute]': 'PASSED', 'testing/test_junitxml.py::test_record_attribute': 'PASSED', 'testing/test_junitxml.py::test_record_fixtures_xunit2[record_xml_attribute]': 'PASSED', 'testing/test_junitxml.py::test_record_fixtures_xunit2[record_property]': 'PASSED', 'testing/test_junitxml.py::test_root_testsuites_tag': 'PASSED', 'testing/test_junitxml.py::test_runs_twice': 'PASSED', 'testing/test_junitxml.py::test_fancy_items_regression': 'PASSED', 'testing/test_junitxml.py::test_global_properties': 'PASSED', 'testing/test_junitxml.py::test_url_property': 'PASSED', 'testing/test_junitxml.py::test_record_testsuite_property': 'PASSED', 'testing/test_junitxml.py::test_record_testsuite_property_junit_disabled': 'PASSED', 'testing/test_junitxml.py::test_record_testsuite_property_type_checking[True]': 'PASSED', 'testing/test_junitxml.py::test_record_testsuite_property_type_checking[False]': 'PASSED', 'testing/test_junitxml.py::test_set_suite_name[my_suite]': 'PASSED', 'testing/test_junitxml.py::test_set_suite_name[]': 'PASSED', 'testing/test_junitxml.py::test_escaped_skipreason_issue3533': 'PASSED', 'testing/test_junitxml.py::test_logging_passing_tests_disabled_does_not_log_test_output': 'PASSED', '[1]': 'SKIPPED'}
2024-04-05 06:12:18 [Run test-suite] Eval result: {'FAIL_TO_PASS': {'success': ['testing/test_junitxml.py::TestPython::test_hostname_in_xml', 'testing/test_junitxml.py::TestPython::test_timestamp_in_xml'], 'failure': []}, 'PASS_TO_PASS': {'success': ['testing/test_junitxml.py::TestNonPython::test_summing_simple', 'testing/test_junitxml.py::TestPython::test_assertion_binchars', 'testing/test_junitxml.py::TestPython::test_avoid_double_stdout', 'testing/test_junitxml.py::TestPython::test_call_failure_teardown_error', 'testing/test_junitxml.py::TestPython::test_classname_instance', 'testing/test_junitxml.py::TestPython::test_classname_nested_dir', 'testing/test_junitxml.py::TestPython::test_collect_error', 'testing/test_junitxml.py::TestPython::test_failure_escape', 'testing/test_junitxml.py::TestPython::test_failure_function[no]', 'testing/test_junitxml.py::TestPython::test_failure_function[system-err]', 'testing/test_junitxml.py::TestPython::test_failure_function[system-out]', 'testing/test_junitxml.py::TestPython::test_failure_verbose_message', 'testing/test_junitxml.py::TestPython::test_internal_error', 'testing/test_junitxml.py::TestPython::test_junit_duration_report[call]', 'testing/test_junitxml.py::TestPython::test_junit_duration_report[total]', 'testing/test_junitxml.py::TestPython::test_junit_prefixing', 'testing/test_junitxml.py::TestPython::test_mark_skip_contains_name_reason', 'testing/test_junitxml.py::TestPython::test_mark_skip_doesnt_capture_output', 'testing/test_junitxml.py::TestPython::test_mark_skipif_contains_name_reason', 'testing/test_junitxml.py::TestPython::test_pass_captures_stderr', 'testing/test_junitxml.py::TestPython::test_pass_captures_stdout', 'testing/test_junitxml.py::TestPython::test_setup_error', 'testing/test_junitxml.py::TestPython::test_setup_error_captures_stderr', 'testing/test_junitxml.py::TestPython::test_setup_error_captures_stdout', 'testing/test_junitxml.py::TestPython::test_skip_contains_name_reason', 'testing/test_junitxml.py::TestPython::test_summing_simple', 'testing/test_junitxml.py::TestPython::test_summing_simple_with_errors', 'testing/test_junitxml.py::TestPython::test_teardown_error', 'testing/test_junitxml.py::TestPython::test_timing_function', 'testing/test_junitxml.py::TestPython::test_unicode', 'testing/test_junitxml.py::TestPython::test_xfail_captures_output_once', 'testing/test_junitxml.py::TestPython::test_xfailure_function', 'testing/test_junitxml.py::TestPython::test_xfailure_marker', 'testing/test_junitxml.py::TestPython::test_xfailure_xpass', 'testing/test_junitxml.py::TestPython::test_xfailure_xpass_strict', 'testing/test_junitxml.py::test_dont_configure_on_slaves', 'testing/test_junitxml.py::test_double_colon_split_function_issue469', 'testing/test_junitxml.py::test_double_colon_split_method_issue469', 'testing/test_junitxml.py::test_escaped_parametrized_names_xml', 'testing/test_junitxml.py::test_escaped_skipreason_issue3533', 'testing/test_junitxml.py::test_fancy_items_regression', 'testing/test_junitxml.py::test_global_properties', 'testing/test_junitxml.py::test_invalid_xml_escape', 'testing/test_junitxml.py::test_logging_passing_tests_disabled_does_not_log_test_output', 'testing/test_junitxml.py::test_logxml_changingdir', 'testing/test_junitxml.py::test_logxml_check_isdir', 'testing/test_junitxml.py::test_logxml_makedir', 'testing/test_junitxml.py::test_logxml_path_expansion', 'testing/test_junitxml.py::test_mangle_test_address', 'testing/test_junitxml.py::test_nullbyte', 'testing/test_junitxml.py::test_nullbyte_replace', 'testing/test_junitxml.py::test_record_attribute', 'testing/test_junitxml.py::test_record_fixtures_without_junitxml[record_property]', 'testing/test_junitxml.py::test_record_fixtures_without_junitxml[record_xml_attribute]', 'testing/test_junitxml.py::test_record_fixtures_xunit2[record_property]', 'testing/test_junitxml.py::test_record_fixtures_xunit2[record_xml_attribute]', 'testing/test_junitxml.py::test_record_property', 'testing/test_junitxml.py::test_record_property_same_name', 'testing/test_junitxml.py::test_record_testsuite_property', 'testing/test_junitxml.py::test_record_testsuite_property_junit_disabled', 'testing/test_junitxml.py::test_record_testsuite_property_type_checking[False]', 'testing/test_junitxml.py::test_record_testsuite_property_type_checking[True]', 'testing/test_junitxml.py::test_root_testsuites_tag', 'testing/test_junitxml.py::test_runs_twice', 'testing/test_junitxml.py::test_set_suite_name[]', 'testing/test_junitxml.py::test_set_suite_name[my_suite]', 'testing/test_junitxml.py::test_unicode_issue368', 'testing/test_junitxml.py::test_url_property'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}
2024-04-05 06:12:18 [Run test-suite] Resolution status: ResolvedStatus.FULL
2024-04-05 06:12:18 [Run test-suite] Returning True since all resolved.
2024-04-05 06:12:18 [Validation] Finishing. Result is True. Message: .
2024-04-05 06:12:18 Result of dispatch_intent: ('Written a patch that resolves the issue. Congratulations!', 'The tool returned the patch written by another agent.', True)
2024-04-05 06:12:18 Invoked write_patch. Ending workflow.
2024-04-05 06:12:18 Task pytest-dev__pytest-5692 completed successfully.
