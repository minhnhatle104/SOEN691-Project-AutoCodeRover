diff --git a/sympy/core/mul.py b/sympy/core/mul.py
index b399e9d7ae..2404637917 100644
--- a/sympy/core/mul.py
+++ b/sympy/core/mul.py
@@ -310,9 +310,20 @@ def flatten(cls, seq):
                             elif e.is_negative:    # also a sign of an unevaluated power
                                 seq.append(Pow(b, e))
                                 continue
+                            # This patch assumes the issue lies in the handling of negative bases and their exponents.
+                            # A more thorough check is added to ensure that the simplification respects the domain
+                            # and properties of the expressions involved.
                             elif b.is_negative:
-                                neg1e += e
-                                b = -b
+                                # Check if the exponent is an integer or can be simplified to an integer within the domain
+                                if e.is_integer or (e.is_Rational and e.q == 1):
+                                    neg1e += e
+                                    b = -b
+                                else:
+                                    # For non-integer exponents, we need to ensure that the simplification is valid.
+                                    # This might involve domain-specific checks or leaving the expression unsimplified
+                                    # if the simplification cannot be guaranteed to be correct in all cases.
+                                    # This is a placeholder for a more sophisticated handling that might be needed.
+                                    pass
                             if b is not S.One:
                                 pnum_rat.setdefault(b, []).append(e)
                             continue
