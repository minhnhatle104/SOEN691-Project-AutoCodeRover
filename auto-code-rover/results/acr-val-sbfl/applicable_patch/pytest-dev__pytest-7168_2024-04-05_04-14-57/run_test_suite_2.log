Output:
=================================================================== test session starts ====================================================================
platform linux -- Python 3.9.18, pytest-5.4.1.dev195+g4787fd64a, py-1.11.0, pluggy-0.13.1
rootdir: /media/media0/yuntong/SWE-bench/testbed/pytest-dev__pytest/setup_pytest-dev__pytest__5.4, inifile: tox.ini
plugins: cov-5.0.0
collected 11 items

testing/io/test_saferepr.py ...F......F                                                                                                              [100%]

========================================================================= FAILURES =========================================================================
_____________________________________________________________________ test_exceptions ______________________________________________________________________

    def test_exceptions():
        class BrokenRepr:
            def __init__(self, ex):
                self.ex = ex
    
            def __repr__(self):
                raise self.ex
    
        class BrokenReprException(Exception):
            __str__ = None
            __repr__ = None
    
        assert "Exception" in saferepr(BrokenRepr(Exception("broken")))
        s = saferepr(BrokenReprException("really broken"))
>       assert "TypeError" in s
E       assert 'TypeError' in "<Exception in __repr__: 'NoneType' object is not callable>"

testing/io/test_saferepr.py:42: AssertionError
_________________________________________________________________ test_broken_getattribute _________________________________________________________________

    def test_broken_getattribute():
        """saferepr() can create proper representations of classes with
        broken __getattribute__ (#7145)
        """
    
        class SomeClass:
            def __getattribute__(self, attr):
                raise RuntimeError
    
            def __repr__(self):
                raise RuntimeError
    
>       assert saferepr(SomeClass()).startswith(
            "<[RuntimeError() raised in repr()] SomeClass object at 0x"
        )
E       AssertionError: assert False
E        +  where False = <built-in method startswith of str object at 0x7f0289bf4940>('<[RuntimeError() raised in repr()] SomeClass object at 0x')
E        +    where <built-in method startswith of str object at 0x7f0289bf4940> = '<Exception in __repr__: >'.startswith
E        +      where '<Exception in __repr__: >' = saferepr(<Exception in __repr__: >)
E        +        where <Exception in __repr__: > = <class 'test_saferepr.test_broken_getattribute.<locals>.SomeClass'>()

testing/io/test_saferepr.py:171: AssertionError
========================================================================== PASSES ==========================================================================
================================================================= short test summary info ==================================================================
PASSED testing/io/test_saferepr.py::test_simple_repr
PASSED testing/io/test_saferepr.py::test_maxsize
PASSED testing/io/test_saferepr.py::test_maxsize_error_on_instance
PASSED testing/io/test_saferepr.py::test_baseexception
PASSED testing/io/test_saferepr.py::test_buggy_builtin_repr
PASSED testing/io/test_saferepr.py::test_big_repr
PASSED testing/io/test_saferepr.py::test_repr_on_newstyle
PASSED testing/io/test_saferepr.py::test_unicode
PASSED testing/io/test_saferepr.py::test_pformat_dispatch
FAILED testing/io/test_saferepr.py::test_exceptions - assert 'TypeError' in "<Exception in __repr__: 'NoneType' object is not callable>"
FAILED testing/io/test_saferepr.py::test_broken_getattribute - AssertionError: assert False
=============================================================== 2 failed, 9 passed in 0.03s ================================================================

>>>>> All Tests Passed
