[
    [
        "sympy/assumptions/wrapper.py",
        "",
        "is_extended_nonnegative",
        1.0
    ],
    [
        "sympy/core/add.py",
        "",
        "_unevaluated_Add",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_nonnegative",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "doit",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_eval_rewrite",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "rewrite",
        1.0
    ],
    [
        "sympy/core/cache.py",
        "",
        "__cacheit",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_parse_order",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_factors",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_terms",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_multiplicatively",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "gcd_terms",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Application",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_should_evalf",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Function",
        "class_key",
        1.0
    ],
    [
        "sympy/core/mod.py",
        "Mod",
        "eval",
        1.0
    ],
    [
        "sympy/core/mod.py",
        "Mod",
        "_eval_rewrite_as_floor",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_composite",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "",
        "comp",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "",
        "_as_integer_ratio",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__truediv__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__mod__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__sub__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__truediv__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mod__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rmod__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__int__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__le__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmod__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__lt__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_composite",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_Mod",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_conjugate",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "",
        "_canonical",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "lhs",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "rhs",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "reversed",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "negated",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "canonical",
        1.0
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_ge",
        1.0
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__sub__",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "eval",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "_eval_Mod",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "_eval_is_integer",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "_eval_is_even",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "_eval_is_composite",
        1.0
    ],
    [
        "sympy/functions/combinatorial/factorials.py",
        "factorial",
        "_eval_is_real",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_power",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__new__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "expr",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__iter__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "__new__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "_eval_conjugate",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "_eval_template_is_attr",
        1.0
    ],
    [
        "sympy/ntheory/primetest.py",
        "",
        "isprime",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo_ground",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_exquo_ground",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_ff_div",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_ff_div",
        1.0
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_div",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_convert",
        1.0
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_dict",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_monic",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_extract",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_extract",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_clear_denoms",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert_from",
        1.0
    ],
    [
        "sympy/polys/domains/mpelements.py",
        "MPContext",
        "to_rational",
        1.0
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "from_RealField",
        1.0
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "exquo",
        1.0
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "from_QQ",
        1.0
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "to_rational",
        1.0
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "get_exact",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_ff_trivial_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_rr_trivial_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_ff_trivial_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_qq_heu_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_qq_heu_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_inner_gcd",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_inner_gcd",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_parallel_poly_from_expr",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "gcd",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_no_gens",
        1.0
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Float",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "parenthesize",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_BooleanTrue",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_ExprCondPair",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Pow",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Relational",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "count",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "",
        "_make_find_query",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "pure_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__int__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "round",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "",
        "_mag",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/mod.py",
        "Mod",
        "_eval_is_nonpositive",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_conjugate",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_ordered_factors",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ge__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__le__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_Rrel",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ge__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__le__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_prime",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Zero",
        "__abs__",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "_Inequality",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "_Inequality",
        "_eval_relation",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_rr_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_max_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_max_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_LC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_strip",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_multi_deflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_eval",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_trunc",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/mpelements.py",
        "RealElement",
        "_set_mpf",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/mpelements.py",
        "ComplexElement",
        "_set_mpc",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/mpelements.py",
        "MPContext",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/mpelements.py",
        "MPContext",
        "_make_tol",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "precision",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "dps",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "tolerance",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "to_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/realfield.py",
        "RealField",
        "from_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_rr_trivial_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_simplify_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_zz_gcd_interpolate",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_zz_heu_gcd",
        0.7071067811865475
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Mul",
        0.7071067811865475
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Integer",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "order",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_as_ordered_terms",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "stringify",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Add",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Function",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Mul",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Pi",
        0.7071067811865475
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_pre",
        0.7071067811865475
    ],
    [
        "sympy/testing/randtest.py",
        "",
        "verify_numerically",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_positive",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_conjugate",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "primitive",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "subs",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_xreplace",
        0.5773502691896258
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/core/evalf.py",
        "",
        "_create_evalf_table",
        0.5773502691896258
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_to_mpmath",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__gt__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_conjugate",
        0.5773502691896258
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_evalf",
        0.5773502691896258
    ],
    [
        "sympy/core/mod.py",
        "Mod",
        "_eval_is_nonnegative",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mpf_norm",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_conjugate",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__int__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_Frel",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__gt__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rsub__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__gt__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "__abs__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "_as_mpf_val",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "doit",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_negative",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_numer_denom",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "StrictGreaterThan",
        "_eval_fuzzy_relation",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_gt",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_le",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "_new_check",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "_new",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "_cmp",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__mul__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__truediv__",
        0.5773502691896258
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_rational",
        0.5773502691896258
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_convert",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "from_QQ",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "lcm",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "get_ring",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "to_sympy",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "from_sympy",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "from_ZZ",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "denom",
        0.5773502691896258
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence",
        0.5773502691896258
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Float",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_negative",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "doit",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_from_mpmath",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_terms",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "could_extract_minus_sign",
        0.5
    ],
    [
        "sympy/core/mod.py",
        "Mod",
        "_eval_is_integer",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "",
        "_keep_coeff",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_Add",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_positive",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__abs__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ne__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "__eq__",
        0.5
    ],
    [
        "sympy/core/power.py",
        "",
        "integer_log",
        0.5
    ],
    [
        "sympy/core/symbol.py",
        "",
        "symbols",
        0.5
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_integer",
        0.5
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_odd",
        0.5
    ],
    [
        "sympy/functions/elementary/integers.py",
        "RoundFunction",
        "eval",
        0.5
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "multiplicity",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add_term",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_term",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_ground",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo_ground",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_abs",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_sub",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sqr",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_rr_div",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_div",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zeros",
        0.5
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_eval",
        0.5
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_trunc",
        0.5
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_primitive",
        0.5
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "new",
        0.5
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "tp",
        0.5
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__call__",
        0.5
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "abs",
        0.5
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "sqrt",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_zz_gcd_interpolate",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_zz_heu_gcd",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "class_key",
        0.4472135954999579
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "class_key",
        0.4472135954999579
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__truediv__",
        0.4472135954999579
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__complex__",
        0.4472135954999579
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_polynomial",
        0.4472135954999579
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_mul",
        0.4472135954999579
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_extended_positive",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_power",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ne__",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__lt__",
        0.4472135954999579
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__add__",
        0.4472135954999579
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_even",
        0.4472135954999579
    ],
    [
        "sympy/functions/elementary/integers.py",
        "floor",
        "_eval_number",
        0.4472135954999579
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "perfect_power",
        0.4472135954999579
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "primerange",
        0.4472135954999579
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_neg",
        0.4472135954999579
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one_p",
        0.4472135954999579
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_p",
        0.4472135954999579
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_inflate",
        0.4472135954999579
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_nonnegative",
        0.4472135954999579
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_inner_gcd",
        0.4472135954999579
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_content",
        0.4472135954999579
    ],
    [
        "sympy/polys/orderings.py",
        "LexOrder",
        "__call__",
        0.4472135954999579
    ],
    [
        "sympy/polys/orderings.py",
        "",
        "monomial_key",
        0.4472135954999579
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_gens",
        0.4472135954999579
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Integer",
        0.4472135954999579
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        0.4472135954999579
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "signsimp",
        0.4472135954999579
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        0.4082482904638631
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "iterable",
        0.4082482904638631
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_pow",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__mod__",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "gcd",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "__neg__",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_power",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_expandsums",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_val",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__eq__",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_extended_nonzero",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_zero",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_extended_positive",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "_eval_is_algebraic",
        0.4082482904638631
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "__call__",
        0.4082482904638631
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "dispatch",
        0.4082482904638631
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "dispatch_iter",
        0.4082482904638631
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorint",
        0.4082482904638631
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "nextprime",
        0.4082482904638631
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "gcd",
        0.4082482904638631
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "gcd",
        0.4082482904638631
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "expr_from_dict",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_nonpositive",
        0.3779644730092272
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "is_comparable",
        0.3779644730092272
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__lt__",
        0.3779644730092272
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_negative",
        0.3779644730092272
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_evalf",
        0.3779644730092272
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "class_key",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "sort_key",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__int__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__abs__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__sub__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_power",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__hash__",
        0.3779644730092272
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_real",
        0.3779644730092272
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        0.3779644730092272
    ],
    [
        "sympy/core/relational.py",
        "StrictLessThan",
        "_eval_fuzzy_relation",
        0.3779644730092272
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_lt",
        0.3779644730092272
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "_factorint_small",
        0.3779644730092272
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_term",
        0.3779644730092272
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo",
        0.3779644730092272
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_LC",
        0.3779644730092272
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_degree",
        0.3779644730092272
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero_p",
        0.3779644730092272
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_negative",
        0.3779644730092272
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "exquo",
        0.3779644730092272
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_gcd",
        0.3779644730092272
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Symbol",
        0.3779644730092272
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_post",
        0.3779644730092272
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_real_imag",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__mul__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_power",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "_eval_evalf",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "evalf",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_exp",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.35355339059327373
    ],
    [
        "sympy/core/relational.py",
        "",
        "_n2",
        0.35355339059327373
    ],
    [
        "sympy/core/relational.py",
        "",
        "_eval_is_ge",
        0.35355339059327373
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "conjugate",
        "eval",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify_with_symbols",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "unify",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "convert",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_unify",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "parallel_poly_from_expr",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_unify_gens",
        0.35355339059327373
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_numer_denom",
        0.3333333333333333
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        0.3333333333333333
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        0.3333333333333333
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "conjugate",
        0.3333333333333333
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "args_cnc",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "__init__",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "is_zero",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "as_expr",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "mul",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "normal",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "__init__",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "as_expr",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "mul",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "inv",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "quo",
        0.3333333333333333
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "gcd",
        0.3333333333333333
    ],
    [
        "sympy/core/function.py",
        "",
        "_coeff_isneg",
        0.3333333333333333
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "__new__",
        0.3333333333333333
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_derivative_n_times",
        0.3333333333333333
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        0.3333333333333333
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.3333333333333333
    ],
    [
        "sympy/core/mul.py",
        "",
        "prod",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_mul",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_Mul",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rtruediv__",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "Zero",
        "__neg__",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__sub__",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "_as_mpf_val",
        0.3333333333333333
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        0.3333333333333333
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_evalf",
        0.3333333333333333
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "multinomial_coefficients_iterator",
        0.3333333333333333
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_to_dict",
        0.3333333333333333
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__eq__",
        0.3333333333333333
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_one",
        0.3333333333333333
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "to_sympy",
        0.3333333333333333
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "gcd",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "per",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_sympy_dict",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyconfig.py",
        "",
        "query",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "default",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyoptions.py",
        "Sort",
        "default",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        0.3333333333333333
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "expr",
        0.3333333333333333
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_expr",
        0.3333333333333333
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr",
        0.3333333333333333
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_real_imag",
        0.31622776601683794
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "ordered",
        0.31622776601683794
    ],
    [
        "sympy/core/evalf.py",
        "",
        "add_terms",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rtruediv__",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_independent",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_expand_hint",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_subs",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__float__",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_new",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_extended_negative",
        0.31622776601683794
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.31622776601683794
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        0.31622776601683794
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "of_type",
        0.31622776601683794
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__setattr__",
        0.31622776601683794
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "allowed_flags",
        0.31622776601683794
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        0.31622776601683794
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has_matcher",
        0.30151134457776363
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "default_sort_key",
        0.30151134457776363
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_evalf",
        0.30151134457776363
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rsub__",
        0.30151134457776363
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_mul",
        0.30151134457776363
    ],
    [
        "sympy/core/mul.py",
        "",
        "_unevaluated_Mul",
        0.30151134457776363
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_numer_denom",
        0.30151134457776363
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_polynomial",
        0.30151134457776363
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_negative",
        0.30151134457776363
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "gcd",
        0.30151134457776363
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_composite",
        0.30151134457776363
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "binomial_coefficients",
        0.30151134457776363
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "multinomial_coefficients",
        0.30151134457776363
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        0.30151134457776363
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "from_sympy",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        0.30151134457776363
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        0.30151134457776363
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        0.30151134457776363
    ],
    [
        "sympy/core/_print_helpers.py",
        "Printable",
        "__str__",
        0.2886751345948129
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_derivative",
        0.2886751345948129
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "xreplace",
        0.2886751345948129
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_node_count",
        0.2886751345948129
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_nodes",
        0.2886751345948129
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__abs__",
        0.2886751345948129
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "factor_terms",
        0.2886751345948129
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_and",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_integer",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__neg__",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_content_primitive",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "NegativeOne",
        "__abs__",
        0.2886751345948129
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_eval_evalf",
        0.2886751345948129
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "eval",
        0.2886751345948129
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "eval",
        0.2886751345948129
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "trailing",
        0.2886751345948129
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "extend",
        0.2886751345948129
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "search",
        0.2886751345948129
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "primerange",
        0.2886751345948129
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_get_initial_settings",
        0.2886751345948129
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.2886751345948129
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.2886751345948129
    ],
    [
        "sympy/printing/printer.py",
        "_PrintFunction",
        "__call__",
        0.2886751345948129
    ],
    [
        "sympy/printing/str.py",
        "",
        "sstr",
        0.2886751345948129
    ],
    [
        "sympy/core/basic.py",
        "",
        "as_Basic",
        0.2773500981126146
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_eval_derivative_n_times",
        0.2773500981126146
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_add",
        0.2773500981126146
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_derivative_n_times",
        0.2773500981126146
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_get_zero_with_shape_like",
        0.2773500981126146
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        0.2773500981126146
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcd",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__sub__",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__truediv__",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__add__",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__add__",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmul__",
        0.2773500981126146
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__neg__",
        0.2773500981126146
    ],
    [
        "sympy/core/power.py",
        "",
        "_integer_nthroot_python",
        0.2773500981126146
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        0.2773500981126146
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        0.2773500981126146
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_algebraic",
        0.2773500981126146
    ],
    [
        "sympy/core/relational.py",
        "Equality",
        "__new__",
        0.2773500981126146
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_eq",
        0.2773500981126146
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "cond",
        0.2773500981126146
    ],
    [
        "sympy/assumptions/wrapper.py",
        "AssumptionsWrapper",
        "__new__",
        0.2672612419124244
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_subs",
        0.2672612419124244
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has",
        0.2672612419124244
    ],
    [
        "sympy/core/basic.py",
        "",
        "_aresame",
        0.2672612419124244
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__getitem__",
        0.2672612419124244
    ],
    [
        "sympy/core/evalf.py",
        "",
        "iszero",
        0.2672612419124244
    ],
    [
        "sympy/core/evalf.py",
        "",
        "complex_accuracy",
        0.2672612419124244
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_mul",
        0.2672612419124244
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "diff",
        0.2672612419124244
    ],
    [
        "sympy/core/function.py",
        "Function",
        "as_base_exp",
        0.2672612419124244
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_sort_variable_count",
        0.2672612419124244
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "_dispatch_eval_derivative_n_times",
        0.2672612419124244
    ],
    [
        "sympy/core/function.py",
        "",
        "_derivative_dispatch",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_subs",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__gt__",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__neg__",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_coeff_Add",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "NaN",
        "_as_mpf_val",
        0.2672612419124244
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_power",
        0.2672612419124244
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_diff_wrt",
        0.2672612419124244
    ],
    [
        "sympy/multipledispatch/core.py",
        "",
        "dispatch",
        0.2672612419124244
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_infinite",
        0.2581988897471611
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "replace",
        0.2581988897471611
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__len__",
        0.2581988897471611
    ],
    [
        "sympy/core/function.py",
        "Application",
        "func",
        0.2581988897471611
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "num",
        0.2581988897471611
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_as_mpf_op",
        0.2581988897471611
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__bool__",
        0.2581988897471611
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_positive",
        0.2581988897471611
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_odd",
        0.2581988897471611
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__ne__",
        0.2581988897471611
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        0.2581988897471611
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.2581988897471611
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_positive",
        0.2581988897471611
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "_hashable_content",
        0.2581988897471611
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_polynomial",
        0.25
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        0.25
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        0.25
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_polynomial",
        0.25
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_Add",
        0.25
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_is_polynomial",
        0.25
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_bool",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__radd__",
        0.25
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_complex",
        0.25
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__new__",
        0.25
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "denom",
        0.25
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "sift",
        0.25
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_power",
        0.24253562503633297
    ],
    [
        "sympy/core/evalf.py",
        "",
        "bitcount",
        0.24253562503633297
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__eq__",
        0.24253562503633297
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_content_primitive",
        0.24253562503633297
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_zero",
        0.24253562503633297
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mul__",
        0.24253562503633297
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "factors",
        0.24253562503633297
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorrat",
        0.24253562503633297
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_content_primitive",
        0.23570226039551587
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_is_commutative",
        0.23570226039551587
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        0.23570226039551587
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "as_numer_denom",
        0.23570226039551587
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__eq__",
        0.23570226039551587
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_even",
        0.23570226039551587
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        0.23570226039551587
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_hashable_content",
        0.22941573387056174
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "atoms",
        0.22941573387056174
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "_preorder_traversal",
        0.22941573387056174
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_real_imag",
        0.22941573387056174
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        0.22941573387056174
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_not",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "",
        "ilcm",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_as_mpf_op",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__add__",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_hashable_content",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__hash__",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_as_mpf_val",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__eq__",
        0.22941573387056174
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.22360679774997896
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        0.22360679774997896
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_hashable_content",
        0.22360679774997896
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "free_symbols",
        0.22360679774997896
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        0.2182178902359924
    ],
    [
        "sympy/core/add.py",
        "Add",
        "__neg__",
        0.2182178902359924
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.2182178902359924
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "free_symbols",
        0.21320071635561041
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_is_zero",
        0.21320071635561041
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has",
        0.20851441405707477
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__lt__",
        0.20851441405707477
    ],
    [
        "sympy/core/function.py",
        "Application",
        "__new__",
        0.20412414523193154
    ],
    [
        "sympy/core/function.py",
        "Function",
        "__new__",
        0.20412414523193154
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__index__",
        0.20412414523193154
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_is_numpy_instance",
        0.20412414523193154
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_numer_denom",
        0.2
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        0.2
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__hash__",
        0.2
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "",
        "sqrt",
        0.2
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.19611613513818404
    ],
    [
        "sympy/core/power.py",
        "",
        "integer_nthroot",
        0.19611613513818404
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        0.19245008972987526
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.19245008972987526
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "ExpMeta",
        "__instancecheck__",
        0.19245008972987526
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_positive_negative",
        0.1889822365046136
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__neg__",
        0.1889822365046136
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "make_args",
        0.1889822365046136
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.18569533817705186
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_evalf",
        0.18257418583505536
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_as_mpf_val",
        0.1796053020267749
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__bool__",
        0.1796053020267749
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_prime",
        0.17407765595569785
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_dummy",
        0.17149858514250882
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__init__",
        0.17149858514250882
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__next__",
        0.17149858514250882
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__iter__",
        0.17149858514250882
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "nargs",
        0.17149858514250882
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_finite",
        0.17149858514250882
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__divmod__",
        0.17149858514250882
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ne__",
        0.17149858514250882
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.17149858514250882
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "__contains__",
        0.17149858514250882
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__new__",
        0.17149858514250882
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_contains",
        0.17149858514250882
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "_infimum_key",
        0.1690308509457033
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_negative",
        0.16666666666666666
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_power",
        0.1643989873053573
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_numer_denom",
        0.1643989873053573
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__hash__",
        0.16222142113076254
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "as_int",
        0.16012815380508713
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__iter__",
        0.16012815380508713
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.16012815380508713
    ],
    [
        "sympy/core/numbers.py",
        "NegativeOne",
        "__neg__",
        0.16012815380508713
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.15811388300841897
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.15811388300841897
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__hash__",
        0.15811388300841897
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__bool__",
        0.15811388300841897
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__mul__",
        0.15617376188860607
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rmul__",
        0.1543033499620919
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_positive",
        0.1543033499620919
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.15249857033260467
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__neg__",
        0.15249857033260467
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new_stage2__",
        0.15249857033260467
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.15075567228888181
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_pow",
        0.15075567228888181
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__pow__",
        0.15075567228888181
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.15075567228888181
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "__neg__",
        0.15075567228888181
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        0.14907119849998599
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "base",
        0.14907119849998599
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "exp",
        0.14907119849998599
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sanitize",
        0.14907119849998599
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        0.14586499149789456
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.14586499149789456
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__sub__",
        0.14433756729740646
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_hermitian",
        0.14433756729740646
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new__",
        0.14433756729740646
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.14285714285714285
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_negative",
        0.14285714285714285
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_complex",
        0.14285714285714285
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.14285714285714285
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__ne__",
        0.14002800840280097
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__add__",
        0.1386750490563073
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_Mul",
        0.13608276348795434
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_positive",
        0.1336306209562122
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        0.13245323570650439
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "func",
        0.13130643285972254
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_negative",
        0.13130643285972254
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__hash__",
        0.13130643285972254
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_number",
        0.13018891098082389
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_real",
        0.13018891098082389
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.125
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_base_exp",
        0.125
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_coeff_Mul",
        0.125
    ],
    [
        "sympy/core/decorators.py",
        "_SympifyWrapper",
        "make_wrapped",
        0.12126781251816648
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.12126781251816648
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_hashable_content",
        0.12126781251816648
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        0.12126781251816648
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__mul__",
        0.11785113019775793
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.11704114719613057
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_hashable_content",
        0.11547005383792514
    ],
    [
        "sympy/core/numbers.py",
        "Zero",
        "__bool__",
        0.11547005383792514
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.11396057645963795
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        0.11396057645963795
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__hash__",
        0.1125087900926024
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "__init__",
        0.1125087900926024
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__hash__",
        0.11180339887498948
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        0.11043152607484653
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_exec_constructor_postprocessors",
        0.10846522890932808
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.10721125348377948
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__init__",
        0.10721125348377948
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.10660035817780521
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_sympify",
        0.10660035817780521
    ],
    [
        "conftest.py",
        "",
        "pytest_runtest_setup",
        0.10425720702853739
    ]
]