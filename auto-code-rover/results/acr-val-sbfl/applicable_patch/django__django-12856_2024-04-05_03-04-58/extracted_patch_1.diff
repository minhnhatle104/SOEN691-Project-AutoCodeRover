diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py
index 64bd60484e..3ae036394a 100644
--- a/django/db/models/constraints.py
+++ b/django/db/models/constraints.py
@@ -77,7 +77,7 @@ class Deferrable(Enum):
 
 
 class UniqueConstraint(BaseConstraint):
-    def __init__(self, *, fields, name, condition=None, deferrable=None):
+    def __init__(self, *, fields, name, condition=None, deferrable=None, model=None):
         if not fields:
             raise ValueError('At least one field is required to define a unique constraint.')
         if not isinstance(condition, (type(None), Q)):
@@ -94,6 +94,15 @@ class UniqueConstraint(BaseConstraint):
         self.condition = condition
         self.deferrable = deferrable
         super().__init__(name)
+        # Placeholder for model fields validation
+        if model:
+            self._validate_model_fields(model)
+            
+    def _validate_model_fields(self, model):
+        model_fields = {field.name for field in model._meta.get_fields()}
+        undefined_fields = set(self.fields) - model_fields
+        if undefined_fields:
+            raise ValueError(f"Fields {', '.join(undefined_fields)} do not exist on model {model.__name__}.")
 
     def _get_condition_sql(self, model, schema_editor):
         if self.condition is None:
