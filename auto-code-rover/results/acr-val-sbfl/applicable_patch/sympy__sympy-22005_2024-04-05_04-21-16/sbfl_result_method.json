[
    [
        "sympy/assumptions/wrapper.py",
        "AssumptionsWrapperMeta",
        "__init__",
        1.0
    ],
    [
        "sympy/assumptions/wrapper.py",
        "",
        "make_eval_method",
        1.0
    ],
    [
        "sympy/assumptions/wrapper.py",
        "AssumptionsWrapper",
        "__new__",
        1.0
    ],
    [
        "sympy/assumptions/wrapper.py",
        "",
        "is_infinite",
        1.0
    ],
    [
        "sympy/assumptions/wrapper.py",
        "",
        "is_extended_real",
        1.0
    ],
    [
        "sympy/assumptions/wrapper.py",
        "",
        "is_extended_nonnegative",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "",
        "free_group",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "",
        "xfree_group",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "",
        "vfree_group",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "",
        "_parse_symbols",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "_generators",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "clone",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__contains__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__hash__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__len__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__str__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__getitem__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "__eq__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "index",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "order",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "elements",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "rank",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "is_abelian",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "identity",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "contains",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroup",
        "center",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "new",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__hash__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "copy",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "is_identity",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "array_form",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "letter_form",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__getitem__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "index",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "letter_form_elm",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "ext_rep",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__contains__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__str__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__pow__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__mul__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__truediv__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__rtruediv__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__add__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "inverse",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "order",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "commutator",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "eliminate_words",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "eliminate_word",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__len__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__eq__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__lt__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__le__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__gt__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "__ge__",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "exponent_sum",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "generator_count",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "subword",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "subword_index",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "is_dependent",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "is_independent",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "contains_generators",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "cyclic_subword",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "cyclic_conjugates",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "is_cyclic_conjugate",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "number_syllables",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "exponent_syllable",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "generator_syllable",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "sub_syllables",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "substituted_word",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "is_cyclically_reduced",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "identity_cyclic_reduction",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "cyclic_reduction",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "FreeGroupElement",
        "power_of",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "",
        "letter_form_to_array_form",
        1.0
    ],
    [
        "sympy/combinatorics/free_groups.py",
        "",
        "zero_mul_simp",
        1.0
    ],
    [
        "sympy/combinatorics/generators.py",
        "",
        "symmetric",
        1.0
    ],
    [
        "sympy/combinatorics/generators.py",
        "",
        "cyclic",
        1.0
    ],
    [
        "sympy/combinatorics/generators.py",
        "",
        "alternating",
        1.0
    ],
    [
        "sympy/combinatorics/generators.py",
        "",
        "dihedral",
        1.0
    ],
    [
        "sympy/combinatorics/generators.py",
        "",
        "rubik_cube_generators",
        1.0
    ],
    [
        "sympy/combinatorics/generators.py",
        "",
        "rubik",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "next",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "selections",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "n",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "generate_gray",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "skip",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "rank",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "current",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "GrayCode",
        "unrank",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "",
        "random_bitstring",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "",
        "gray_to_bin",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "",
        "bin_to_gray",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "",
        "get_subset_from_bitstring",
        1.0
    ],
    [
        "sympy/combinatorics/graycode.py",
        "",
        "graycode_subsets",
        1.0
    ],
    [
        "sympy/combinatorics/group_constructs.py",
        "",
        "DirectProduct",
        1.0
    ],
    [
        "sympy/combinatorics/named_groups.py",
        "",
        "AbelianGroup",
        1.0
    ],
    [
        "sympy/combinatorics/named_groups.py",
        "",
        "AlternatingGroup",
        1.0
    ],
    [
        "sympy/combinatorics/named_groups.py",
        "",
        "CyclicGroup",
        1.0
    ],
    [
        "sympy/combinatorics/named_groups.py",
        "",
        "DihedralGroup",
        1.0
    ],
    [
        "sympy/combinatorics/named_groups.py",
        "",
        "SymmetricGroup",
        1.0
    ],
    [
        "sympy/combinatorics/named_groups.py",
        "",
        "RubikGroup",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "sort_key",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "partition",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "__add__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "__sub__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "__le__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "__lt__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "rank",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "RGS",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "Partition",
        "from_rgs",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "prev_lex",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "next_lex",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "as_dict",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "conjugate",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "__lt__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "__le__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "as_ferrers",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "IntegerPartition",
        "__str__",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "",
        "random_integer_partition",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "",
        "RGS_generalized",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "",
        "RGS_enum",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "",
        "RGS_unrank",
        1.0
    ],
    [
        "sympy/combinatorics/partitions.py",
        "",
        "RGS_rank",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "PolycyclicGroup",
        "__init__",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "PolycyclicGroup",
        "is_prime_order",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "PolycyclicGroup",
        "length",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "__init__",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "minimal_uncollected_subword",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "relations",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "subword_index",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "map_relation",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "collected_word",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "pc_relators",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "exponent_vector",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "depth",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "leading_exponent",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "_sift",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "induced_pcgs",
        1.0
    ],
    [
        "sympy/combinatorics/pc_groups.py",
        "Collector",
        "constructive_membership_test",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__getitem__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__contains__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__len__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__eq__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__hash__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "__mul__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_random_pr_init",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_union_find_merge",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_union_find_rep",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "base",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "baseswap",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "basic_orbits",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "basic_stabilizers",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "basic_transversals",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "composition_series",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "coset_transversal",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_coset_representative",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "coset_table",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "center",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "centralizer",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "commutator",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "coset_factor",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "generator_product",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "coset_rank",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "coset_unrank",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "degree",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "identity",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "elements",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_elements",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "derived_series",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "derived_subgroup",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "generate",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "generate_dimino",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "generate_schreier_sims",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "generators",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "contains",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_perfect",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_abelian",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "abelian_invariants",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_elementary",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_eval_is_alt_sym_naive",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_eval_is_alt_sym_monte_carlo",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_alt_sym",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_nilpotent",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_normal",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_primitive",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "minimal_blocks",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_solvable",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_subgroup",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_polycyclic",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_transitive",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_trivial",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "lower_central_series",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "max_div",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "minimal_block",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "conjugacy_class",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "conjugacy_classes",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "normal_closure",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "orbit",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "orbit_rep",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "orbit_transversal",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "orbits",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "order",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "index",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_symmetric",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_alternating",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_distinct_primes_lemma",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "is_cyclic",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "pointwise_stabilizer",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "make_perm",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "random",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "random_pr",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "random_stab",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "schreier_sims",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_schreier_sims",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "schreier_sims_incremental",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "schreier_sims_random",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "schreier_vector",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "stabilizer",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "strong_gens",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "subgroup",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "subgroup_search",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "transitivity_degree",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_p_elements_group",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_sylow_alt_sym",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "sylow_subgroup",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_block_verify",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "_verify",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "strong_presentation",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "presentation",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "PermutationGroup",
        "polycyclic_group",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "",
        "_orbit",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "",
        "_orbits",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "",
        "_orbit_transversal",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "",
        "_stabilizer",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "SymmetricPermutationGroup",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "SymmetricPermutationGroup",
        "__contains__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "SymmetricPermutationGroup",
        "order",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "SymmetricPermutationGroup",
        "degree",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "SymmetricPermutationGroup",
        "identity",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "Coset",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "Coset",
        "is_left_coset",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "Coset",
        "is_right_coset",
        1.0
    ],
    [
        "sympy/combinatorics/perm_groups.py",
        "Coset",
        "as_list",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_af_rmul",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_af_rmuln",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_af_parity",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_af_invert",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_af_pow",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_af_commutes_with",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "__missing__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "__iter__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "__call__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "list",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "__repr__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "__str__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "__init__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "size",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Cycle",
        "copy",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "_af_new",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "_hashable_content",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "array_form",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "list",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "cyclic_form",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "full_cyclic_form",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "size",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "support",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__add__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__sub__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "rmul",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "rmul_with_af",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "mul_inv",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__rmul__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__mul__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "commutes_with",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__pow__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__rxor__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__xor__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "transpositions",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "from_sequence",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__invert__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__iter__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__repr__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "__call__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "atoms",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "apply",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "next_lex",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "unrank_nonlex",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "rank_nonlex",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "next_nonlex",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "rank",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "cardinality",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "parity",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "is_even",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "is_odd",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "is_Singleton",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "is_Empty",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "is_identity",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "is_Identity",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "ascents",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "descents",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "max",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "min",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "inversions",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "commutator",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "signature",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "order",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "length",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "cycle_structure",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "cycles",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "index",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "runs",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "inversion_vector",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "rank_trotterjohnson",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "unrank_trotterjohnson",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "next_trotterjohnson",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "get_precedence_matrix",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "get_precedence_distance",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "get_adjacency_matrix",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "get_adjacency_distance",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "get_positional_distance",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "josephus",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "from_inversion_vector",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "random",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "unrank_lex",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "Permutation",
        "resize",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_merge",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "AppliedPermutation",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/permutations.py",
        "",
        "_eval_is_eq",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "corners",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "array_form",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "cyclic_form",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "size",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "faces",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "pgroup",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "edges",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "rotate",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "Polyhedron",
        "reset",
        1.0
    ],
    [
        "sympy/combinatorics/polyhedron.py",
        "",
        "_pgroup_calcs",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "prufer_repr",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "tree_repr",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "nodes",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "rank",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "size",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "to_prufer",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "to_tree",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "edges",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "prufer_rank",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "unrank",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "next",
        1.0
    ],
    [
        "sympy/combinatorics/prufer.py",
        "Prufer",
        "prev",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "__new__",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "iterate_binary",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "next_binary",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "prev_binary",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "next_lexicographic",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "prev_lexicographic",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "iterate_graycode",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "next_gray",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "prev_gray",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "rank_binary",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "rank_lexicographic",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "rank_gray",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "subset",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "size",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "superset",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "superset_size",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "cardinality",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "subset_from_bitlist",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "bitlist_from_subset",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "unrank_binary",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "unrank_gray",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "Subset",
        "subset_indices",
        1.0
    ],
    [
        "sympy/combinatorics/subsets.py",
        "",
        "ksubsets",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "dummy_sgs",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_min_dummies",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_trace_S",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_trace_D",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_dumx_remove",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "transversal2coset",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "double_coset_can_rep",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "canonical_free",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_get_map_slots",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_lift_sgens",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "canonicalize",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "perm_af_direct_product",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "bsgs_direct_product",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "get_symmetric_group_sgs",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "get_transversals",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "_is_minimal_bsgs",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "get_minimal_bsgs",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "tensor_gens",
        1.0
    ],
    [
        "sympy/combinatorics/tensor_can.py",
        "",
        "gens_products",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_base_ordering",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_check_cycles_alt_sym",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_distribute_gens_by_base",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_handle_precomputed_bsgs",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_orbits_transversals_from_bsgs",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_remove_gens",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_strip",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_strip_af",
        1.0
    ],
    [
        "sympy/combinatorics/util.py",
        "",
        "_strong_gens_from_distr",
        1.0
    ],
    [
        "sympy/conftest.py",
        "",
        "file_clear_cache",
        1.0
    ],
    [
        "sympy/conftest.py",
        "",
        "check_disabled",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_numer_denom",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_positive",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_negative",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_content_primitive",
        1.0
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        1.0
    ],
    [
        "sympy/core/assumptions.py",
        "ManagedProperties",
        "__init__",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "class_key",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "sort_key",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_content_primitive",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "subs",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "xreplace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "replace",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "doit",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "simplify",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "",
        "_aresame",
        1.0
    ],
    [
        "sympy/core/basic.py",
        "",
        "_atomic",
        1.0
    ],
    [
        "sympy/core/cache.py",
        "_cache",
        "clear_cache",
        1.0
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "as_int",
        1.0
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_nodes",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__getitem__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__add__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "__new__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "__getitem__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "items",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "keys",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "__len__",
        1.0
    ],
    [
        "sympy/core/containers.py",
        "Dict",
        "get",
        1.0
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__init__",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "deprecated",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "_sympifyit",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        1.0
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "fastlog",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "chop_parts",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_pow",
        1.0
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "sort_key",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__abs__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__truediv__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rtruediv__",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_negative",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_extended_positive_negative",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_independent",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "normal",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_multiplicatively",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_additively",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "could_extract_minus_sign",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_branch_factor",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "round",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "mul",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "normal",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "gcd",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "__init__",
        1.0
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "factor_terms",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "arity",
        1.0
    ],
    [
        "sympy/core/function.py",
        "Application",
        "eval",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_log",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_power_exp",
        1.0
    ],
    [
        "sympy/core/function.py",
        "",
        "count_ops",
        1.0
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "",
        "_unevaluated_Mul",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_evalf",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_two_terms",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_extended_positive",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        1.0
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "class_key",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "sort_key",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_Mul",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__new__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_new",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_extended_positive",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ne__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_Frel",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "limit_denominator",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__sub__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__truediv__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_as_mpf_val",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_mpmath_",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__abs__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__int__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "floor",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ne__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_Rrel",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "lcm",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "ceiling",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__floor__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ceil__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__divmod__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_prime",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_composite",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "as_numer_denom",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__floordiv__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Exp1",
        "__abs__",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Exp1",
        "_as_mpf_val",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Exp1",
        "approximation_interval",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "Exp1",
        "_eval_power_exp_is_pow",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "",
        "sympify_mpmath",
        1.0
    ],
    [
        "sympy/core/numbers.py",
        "",
        "sympify_complex",
        1.0
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_eval_evalf",
        1.0
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "doit",
        1.0
    ],
    [
        "sympy/core/power.py",
        "",
        "_integer_nthroot_python",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_power",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_positive",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_negative",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_extended_real",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_prime",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_adjoint",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_conjugate",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_real_imag",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_algebraic",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational_function",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "matches",
        1.0
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_content_primitive",
        1.0
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__init__",
        1.0
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "__contains__",
        1.0
    ],
    [
        "sympy/core/rules.py",
        "Transform",
        "get",
        1.0
    ],
    [
        "sympy/core/singleton.py",
        "Singleton",
        "__init__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__getnewargs_ex__",
        1.0
    ],
    [
        "sympy/core/symbol.py",
        "",
        "symbols",
        1.0
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        1.0
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "Abs",
        "fdiff",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "taylor_term",
        1.0
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_expand_log",
        1.0
    ],
    [
        "sympy/functions/elementary/integers.py",
        "RoundFunction",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/integers.py",
        "ceiling",
        "_eval_as_leading_term",
        1.0
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "",
        "root",
        1.0
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__hash__",
        1.0
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "_handle_creation_inputs",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "RepMatrix",
        "_dod_to_DomainMatrix",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "RepMatrix",
        "_flat_list_to_DomainMatrix",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "MutableRepMatrix",
        "__new__",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "MutableRepMatrix",
        "_new",
        1.0
    ],
    [
        "sympy/matrices/repmatrix.py",
        "MutableRepMatrix",
        "_fromrep",
        1.0
    ],
    [
        "sympy/multipledispatch/conflict.py",
        "",
        "supercedes",
        1.0
    ],
    [
        "sympy/multipledispatch/conflict.py",
        "",
        "consistent",
        1.0
    ],
    [
        "sympy/multipledispatch/conflict.py",
        "",
        "ambiguous",
        1.0
    ],
    [
        "sympy/multipledispatch/conflict.py",
        "",
        "ambiguities",
        1.0
    ],
    [
        "sympy/multipledispatch/conflict.py",
        "",
        "edge",
        1.0
    ],
    [
        "sympy/multipledispatch/conflict.py",
        "",
        "ordering",
        1.0
    ],
    [
        "sympy/multipledispatch/core.py",
        "",
        "dispatch",
        1.0
    ],
    [
        "sympy/multipledispatch/core.py",
        "",
        "ismethod",
        1.0
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "add",
        1.0
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "reorder",
        1.0
    ],
    [
        "sympy/multipledispatch/utils.py",
        "",
        "_toposort",
        1.0
    ],
    [
        "sympy/multipledispatch/utils.py",
        "",
        "reverse_dict",
        1.0
    ],
    [
        "sympy/multipledispatch/utils.py",
        "",
        "groupby",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "perfect_power",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "_factorint_small",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorint",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "factorrat",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "_divisors",
        1.0
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "divisors",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "extend",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "primerange",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "Sieve",
        "search",
        1.0
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "primerange",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_symbol",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "lambda_notation",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "factorial_notation",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "convert_xor",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "repeated_decimals",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_number",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "stringify_expr",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "eval_expr",
        1.0
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "parse_expr",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "msigma",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "pat_matrix",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "mgamma",
        1.0
    ],
    [
        "sympy/physics/matrices.py",
        "",
        "mdft",
        1.0
    ],
    [
        "sympy/physics/units/__init__.py",
        "",
        "find_unit",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "_QuantityMapper",
        "__init__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "_QuantityMapper",
        "set_quantity_dimension",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "_QuantityMapper",
        "set_quantity_scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "_QuantityMapper",
        "get_quantity_dimension",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "_QuantityMapper",
        "get_quantity_scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "name",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "symbol",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__hash__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__eq__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__str__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__repr__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__neg__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__add__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__radd__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__sub__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__rsub__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__pow__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_eval_power",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__mul__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__rmul__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__truediv__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "__rtruediv__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_from_dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "_get_dimensional_dependencies_for_name",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "is_dimensionless",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "Dimension",
        "has_integer_powers",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "base_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "derived_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "_get_dimensional_dependencies_for_name",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "get_dimensional_dependencies",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "equivalent_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "extend",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "sort_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "__getitem__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "__call__",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "is_dimensionless",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "list_can_dims",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "inv_can_transf_matrix",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "can_transf_matrix",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dim_can_vector",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dim_vector",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "print_dim_base",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "dim",
        1.0
    ],
    [
        "sympy/physics/units/dimensions.py",
        "DimensionSystem",
        "is_consistent",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "name",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "abbrev",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "base",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__str__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__mul__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__truediv__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "Prefix",
        "__rtruediv__",
        1.0
    ],
    [
        "sympy/physics/units/prefixes.py",
        "",
        "prefix_unit",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "__new__",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "set_dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "set_scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "set_global_dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "set_global_relative_scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "name",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "abbrev",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_is_positive",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_is_constant",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_Abs",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_eval_subs",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "get_dimensional_expr",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_collect_factor_and_dimension",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "_latex",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "convert_to",
        1.0
    ],
    [
        "sympy/physics/units/quantities.py",
        "Quantity",
        "free_symbols",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "__init__",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "__str__",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "__repr__",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "extend",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "print_unit_base",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "get_dimension_system",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "get_quantity_dimension",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "get_quantity_scale_factor",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "get_unit_system",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "get_default_unit_system",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "dim",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "is_consistent",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "get_dimensional_expr",
        1.0
    ],
    [
        "sympy/physics/units/unitsystem.py",
        "UnitSystem",
        "_collect_factor_and_dimension",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "_get_conversion_matrix_for_expr",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "convert_to",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "quantity_simplify",
        1.0
    ],
    [
        "sympy/physics/units/util.py",
        "",
        "check_dimensions",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_composite",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_expression",
        1.0
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_clear_denoms",
        1.0
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_clear_denoms",
        1.0
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "from_GeneralizedPolynomialRing",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__hash__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "as_expr",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "denom",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "simplify",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__neg__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "_to_ex",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__sub__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__mul__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__truediv__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__eq__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "__bool__",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "Expression",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "",
        "to_sympy",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "",
        "from_sympy",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "",
        "get_field",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "",
        "denom",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "",
        "gcd",
        1.0
    ],
    [
        "sympy/polys/domains/expressiondomain.py",
        "",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_rr_lcm",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_lcm",
        1.0
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_lcm",
        1.0
    ],
    [
        "sympy/polys/groebnertools.py",
        "",
        "_buchberger",
        1.0
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "__new__",
        1.0
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "from_rep",
        1.0
    ],
    [
        "sympy/polys/matrices/domainmatrix.py",
        "DomainMatrix",
        "convert_to",
        1.0
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "new",
        1.0
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "SDM",
        "convert_to",
        1.0
    ],
    [
        "sympy/polys/matrices/sdm.py",
        "",
        "unop_dict",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "per",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_ring",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "clear_denoms",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "is_monomial",
        1.0
    ],
    [
        "sympy/polys/polyerrors.py",
        "PolificationFailed",
        "__init__",
        1.0
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "roots_linear",
        1.0
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "_integer_basis",
        1.0
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "roots",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_poly",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_unify",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "per",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "to_ring",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "clear_denoms",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "eval",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_monomial",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_parallel_poly_from_expr",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "lcm",
        1.0
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "cancel",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_unify_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_if_gens",
        1.0
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_reorder",
        1.0
    ],
    [
        "sympy/polys/rationaltools.py",
        "",
        "together",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "",
        "sring",
        1.0
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_term_div",
        1.0
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Mul",
        1.0
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Integer",
        1.0
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Add",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_BooleanTrue",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_ExprCondPair",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Infinity",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Mul",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Order",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_EmptySequence",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_mpz",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Rational",
        1.0
    ],
    [
        "sympy/sets/fancysets.py",
        "Naturals0",
        "_contains",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__new__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "_latex",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__add__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__radd__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__mul__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rmul__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__sub__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rsub__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__pow__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rpow__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__truediv__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "__rtruediv__",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "SetExpr",
        "_eval_func",
        1.0
    ],
    [
        "sympy/sets/setexpr.py",
        "",
        "_setexpr_apply_operation",
        1.0
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__iter__",
        1.0
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_pre",
        1.0
    ],
    [
        "sympy/simplify/cse_opts.py",
        "",
        "sub_post",
        1.0
    ],
    [
        "sympy/simplify/hyperexpand.py",
        "",
        "hyperexpand",
        1.0
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "powsimp",
        1.0
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "powdenest",
        1.0
    ],
    [
        "sympy/simplify/powsimp.py",
        "",
        "_denest_pow",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "collect_abs",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "radsimp",
        1.0
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "signsimp",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "simplify",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "nsimplify",
        1.0
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "_real_to_rational",
        1.0
    ],
    [
        "sympy/solvers/polysys.py",
        "",
        "solve_poly_system",
        1.0
    ],
    [
        "sympy/solvers/polysys.py",
        "",
        "solve_biquadratic",
        1.0
    ],
    [
        "sympy/solvers/polysys.py",
        "",
        "solve_generic",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "deprecate_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "deprecate_fun_eval",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "deprecate_TensorType",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "__init__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "from_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "from_components_free_dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_free_dum_from_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "generate_indices_from_free_dum_index_types",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_get_generator_for_dummy_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_replace_dummy_names",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "__str__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "__repr__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_get_sorted_free_indices_for_canon",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_get_sorted_dum_indices_for_canon",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_get_lexicographically_sorted_index_types",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "_get_lexicographically_sorted_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "perm2tensor",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_IndexStructure",
        "indices_canon_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "components_canon_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "__getitem__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "_get",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "data_contract_dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "data_tensorhead_from_tensmul",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "data_from_tensor",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "_assign_data_to_tensor_expr",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "_check_permutations_on_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "__setitem__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "__delitem__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "__contains__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "add_metric_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "_flip_index_by_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "inverse_matrix",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "inverse_transpose_matrix",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "_correct_signature_from_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "_sort_data_axes",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "add_rearrange_tensmul_parts",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorDataLazyEvaluator",
        "parse_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "__init__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "_comm_init",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "comm",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "comm_symbols2i",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "comm_i2symbol",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "set_comm",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "set_comms",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "get_comm",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "_TensorManager",
        "clear",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "name",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "dummy_name",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "dim",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "eps_dim",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "delta",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "epsilon",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "set_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "__lt__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "__str__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "get_kronecker_delta",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "get_epsilon",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndexType",
        "_components_data_full_destroy",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "name",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "tensor_index_type",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "is_up",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "_print",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "__lt__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorIndex",
        "__neg__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "tensor_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "base",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "generators",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "rank",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "fully_symmetric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "direct_product",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "riemann",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorSymmetry",
        "no_symmetry",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "tensorsymmetry",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorType",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorType",
        "index_types",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorType",
        "symmetry",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorType",
        "types",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorType",
        "__str__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorType",
        "__call__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "tensorhead",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "name",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "index_types",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "symmetry",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "rank",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "__lt__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "commutes_with",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "_print",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "__call__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "__pow__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "__iter__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorHead",
        "_components_data_full_destroy",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "tensor_heads",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__neg__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__abs__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__add__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__radd__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__sub__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__rsub__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__mul__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__rmul__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__truediv__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__rtruediv__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__pow__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "__rpow__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "nocoeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "coeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_replace_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "fun_eval",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "get_matrix",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_get_indices_permutation",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "expand",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_expand",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_get_free_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_get_dummy_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_get_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_iterate_dummy_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_iterate_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_iterate_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_contract_and_permute_with_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_match_indices_with_other_tensor",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "replace_with_arrays",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_check_add_Sum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensExpr",
        "_expand_partial_derivative",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "coeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "nocoeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_replace_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "rank",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "free_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "doit",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_tensAdd_flatten",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_tensAdd_check",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_tensAdd_collect_terms",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_expand",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "__call__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "canon_bp",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "equals",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "__getitem__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "contract_delta",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "contract_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "substitute_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_print",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_extract_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "__iter__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_eval_rewrite_as_Indexed",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensAdd",
        "_eval_partial_derivative",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "free",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "ext_rank",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "coeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "nocoeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "component",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "components",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "head",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "index_types",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "rank",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_build_index_map",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "doit",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_parse_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_set_new_index_structure",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_set_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_get_free_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_get_dummy_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_get_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "free_in_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "dum_in_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "free_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "commutes_with",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "perm2tensor",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "canon_bp",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "split",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_expand",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "sorted_components",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_replace_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "as_base_exp",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "substitute_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "__call__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "__iter__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "__getitem__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_extract_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_print",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "equals",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "contract_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "contract_delta",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_eval_rewrite_as_Indexed",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "Tensor",
        "_eval_partial_derivative",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_indices_to_free_dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_dummy_data_to_dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_tensMul_contract_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_components_from_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_rebuild_tensors_list",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "doit",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "from_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_tensors_from_components_free_dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_free_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_dummy_indices_set",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_position_offset_for_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "free_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "components",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "free_in_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "coeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "nocoeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "dum_in_args",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "equals",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_replace_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "split",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_expand",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "__neg__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "__getitem__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_args_for_traditional_printer",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_sort_args_for_sorted_components",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "sorted_components",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "perm2tensor",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "canon_bp",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "contract_delta",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_get_indices_to_args_pos",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "contract_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_set_new_index_structure",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_set_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_index_replacement_for_contract_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "substitute_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "__call__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_extract_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "__iter__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_eval_rewrite_as_Indexed",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensMul",
        "_eval_partial_derivative",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "__new__",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "free",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "dum",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "expr",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "index_map",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "coeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "nocoeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "_replace_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "TensorElement",
        "_extract_data",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "canon_bp",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "tensor_mul",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "riemann_cyclic_replace",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "riemann_cyclic",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "get_lines",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "get_free_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "get_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "get_index_structure",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "get_coeff",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "contract_metric",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "perm2tensor",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "substitute_indices",
        1.0
    ],
    [
        "sympy/tensor/tensor.py",
        "",
        "_expand",
        1.0
    ],
    [
        "sympy/testing/randtest.py",
        "",
        "random_complex_number",
        1.0
    ],
    [
        "sympy/testing/randtest.py",
        "",
        "verify_numerically",
        1.0
    ],
    [
        "sympy/testing/randtest.py",
        "",
        "test_derivative_numerically",
        1.0
    ],
    [
        "sympy/testing/randtest.py",
        "",
        "_randrange",
        1.0
    ],
    [
        "sympy/testing/randtest.py",
        "",
        "_randint",
        1.0
    ],
    [
        "sympy/utilities/decorator.py",
        "",
        "public",
        1.0
    ],
    [
        "sympy/utilities/decorator.py",
        "",
        "memoize_property",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "rotate_right",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "multiset_combinations",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "uniq",
        1.0
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "runs",
        1.0
    ],
    [
        "sympy/core/add.py",
        "",
        "_unevaluated_Add",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "class_key",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "getO",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "atoms",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_xreplace",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_has_matcher",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "find",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "match",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_node_count",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "ordered",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__len__",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__hash__",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "pure_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "iszero",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "complex_accuracy",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "add_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_add",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "",
        "_create_evalf_table",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "_to_mpmath",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__gt__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getn",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "args_cnc",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_add",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "div",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "quo",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "mul",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "gcd_terms",
        0.7071067811865475
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "_coeff_isneg",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "func",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_should_evalf",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "expand",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_power_base",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_and",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "class_key",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_expandsums",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_base_exp",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_finite",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "prod",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "_keep_coeff",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcd",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_as_mpf_op",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__truediv__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_extended_negative",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__truediv__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__abs__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rsub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rtruediv__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__gt__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__int__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rdivmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__rsub__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "ComplexInfinity",
        "floor",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "ComplexInfinity",
        "ceiling",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "ComplexInfinity",
        "__neg__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "",
        "integer_nthroot",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "is_constant",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "StrictGreaterThan",
        "_eval_fuzzy_relation",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_gt",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_le",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "is_constant",
        0.7071067811865475
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "inverse",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "__call__",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "dispatch",
        0.7071067811865475
    ],
    [
        "sympy/multipledispatch/dispatcher.py",
        "Dispatcher",
        "dispatch_iter",
        0.7071067811865475
    ],
    [
        "sympy/ntheory/factor_.py",
        "",
        "trailing",
        0.7071067811865475
    ],
    [
        "sympy/ntheory/generate.py",
        "",
        "nextprime",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_rr_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_LC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_TC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_degree_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_nth",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_multi_deflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert_from",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "old_frac_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "neg",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "pos",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "log",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "is_Exact",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "to_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "from_ZZ",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "from_PolynomialRing",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "from_ZZ",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "zero",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "one",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "to_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "get_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "from_sympy",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "quo",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_rr_trivial_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_rr_trivial_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_simplify_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_zz_heu_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_zz_heu_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_inner_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_inner_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_cyclotomic_factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "raw_new",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "new",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "ground_new",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "field_new",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "to_domain",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__bool__",
        0.7071067811865475
    ],
    [
        "sympy/polys/heuristicgcd.py",
        "",
        "heugcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/heuristicgcd.py",
        "",
        "_gcd_interpolate",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "monomial_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "monomial_ldiv",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "monomial_min",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "_build",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "_vars",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "mul",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "pow",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "mulpow",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "ldiv",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "div",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "coeffs",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "terms",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "degree_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "nth",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "is_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Sort",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Composite",
        "default",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "roots_quadratic",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "preprocess_roots",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "from_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "unify",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "to_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "retract",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "terms",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "termwise",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "length",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "degree_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "nth",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "gcd_list",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_factors_product",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_symbolic_factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_generic_factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "factor",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "GroebnerBasis",
        "__iter__",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_no_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_no_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "parallel_dict_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "monomial_basis",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "one",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "ground_new",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "term_new",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "ring_new",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "index",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "drop",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "is_univariate",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "set_ring",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "as_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "as_expr_dict",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "clear_denoms",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__eq__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__ne__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "is_monomial",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "is_negative",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "is_nonpositive",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "div",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "rem",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_iadd_monom",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_iadd_poly_monom",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "degree",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "coeff",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "LT",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "leading_term",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "itermonoms",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "iterterms",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "content",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "monic",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "mul_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "mul_monom",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "extract_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "max_norm",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "deflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "cofactors",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd_zero",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd_monom",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd_ZZ",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd_QQ",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "canonical_unit",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "diff",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "evaluate",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "order",
        0.7071067811865475
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_as_ordered_terms",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "parenthesize",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "stringify",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_EulerGamma",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_MatMul",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_ElementwiseApplyFunction",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Ordinal",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Cycle",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Permutation",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_EmptySet",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_mpq",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_DMP",
        0.7071067811865475
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "collect",
        0.7071067811865475
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "rcollect",
        0.7071067811865475
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "bottom_up",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "sift",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "generate_bell",
        0.7071067811865475
    ],
    [
        "sympy/utilities/misc.py",
        "",
        "filldedent",
        0.7071067811865475
    ],
    [
        "conftest.py",
        "",
        "pytest_runtest_setup",
        0.5773502691896258
    ],
    [
        "sympy/core/_print_helpers.py",
        "Printable",
        "__str__",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_infinite",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_nonnegative",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_extended_nonpositive",
        0.5773502691896258
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.5773502691896258
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.5773502691896258
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.5773502691896258
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "as_property",
        0.5773502691896258
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_hashable_content",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__ne__",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "free_symbols",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_dummy",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "is_comparable",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "func",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_sorted_args",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "doit",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "class_key",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "_sorted_args",
        0.5773502691896258
    ],
    [
        "sympy/core/cache.py",
        "",
        "__cacheit",
        0.5773502691896258
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "iterable",
        0.5773502691896258
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "is_sequence",
        0.5773502691896258
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "default_sort_key",
        0.5773502691896258
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__iter__",
        0.5773502691896258
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        0.5773502691896258
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.5773502691896258
    ],
    [
        "sympy/core/decorators.py",
        "_SympifyWrapper",
        "make_wrapped",
        0.5773502691896258
    ],
    [
        "sympy/core/evalf.py",
        "",
        "bitcount",
        0.5773502691896258
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "evalf",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__neg__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__pow__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__complex__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_interval",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_conjugate",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_parse_order",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_factors",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_poly",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "removeO",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getO",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "coeff",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_powers_dict",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_mul",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "fourier_series",
        0.5773502691896258
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "collect",
        0.5773502691896258
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        0.5773502691896258
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "__init__",
        0.5773502691896258
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.5773502691896258
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "nargs",
        0.5773502691896258
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_mul",
        0.5773502691896258
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_multinomial",
        0.5773502691896258
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_bool",
        0.5773502691896258
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_not",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "__neg__",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_complex",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.5773502691896258
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mpf_norm",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "",
        "ilcm",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcdex",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_evalf",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__float__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__mul__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__getnewargs_ex__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_hashable_content",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "ceiling",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_finite",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__ge__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__le__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_sage_",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__mul__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ceil__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ge__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "factors",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "gcd",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__abs__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__add__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__sub__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__lt__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ge__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__le__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__sub__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "_eval_power",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__ne__",
        0.5773502691896258
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.5773502691896258
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "make_args",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_Mod",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        0.5773502691896258
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_composite",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "_Inequality",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "_Inequality",
        "_eval_relation",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "StrictLessThan",
        "_eval_fuzzy_relation",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "",
        "_n2",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "",
        "_eval_is_ge",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_lt",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "",
        "is_ge",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sanitize",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new_stage2__",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_hashable_content",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "sort_key",
        0.5773502691896258
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.5773502691896258
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_is_numpy_instance",
        0.5773502691896258
    ],
    [
        "sympy/core/sympify.py",
        "",
        "_sympify",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "_new_check",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "_new",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__mul__",
        0.5773502691896258
    ],
    [
        "sympy/external/pythonmpq.py",
        "PythonMPQ",
        "__truediv__",
        0.5773502691896258
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "eval",
        0.5773502691896258
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "eval",
        0.5773502691896258
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "binomial_coefficients",
        0.5773502691896258
    ],
    [
        "sympy/ntheory/multinomial.py",
        "",
        "multinomial_coefficients",
        0.5773502691896258
    ],
    [
        "sympy/ntheory/primetest.py",
        "",
        "isprime",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add_term",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_term",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_ground",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo_ground",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_abs",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub_mul",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_rr_div",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_div",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_max_norm",
        0.5773502691896258
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_l1_norm",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_LC",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_TC",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_degree",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_degree_in",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree_in",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_strip",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_convert",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_convert",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero_p",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_to_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_terms_gcd",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_list_terms",
        0.5773502691896258
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_list_terms",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_diff",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_eval",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_eval",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "_rec_eval_in",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_eval_in",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_trunc",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_content",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_primitive",
        0.5773502691896258
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_extract",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "map",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "canonical_unit",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/field.py",
        "Field",
        "quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "to_sympy",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "from_sympy",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "get_field",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "from_QQ",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "gcdex",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "gcd",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "lcm",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "sqrt",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "get_ring",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "to_sympy",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "from_ZZ",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/rationalfield.py",
        "RationalField",
        "denom",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "exquo",
        0.5773502691896258
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "invert",
        0.5773502691896258
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_zz_gcd_interpolate",
        0.5773502691896258
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_inner_gcd",
        0.5773502691896258
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_gcd",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_trial_division",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_hensel_step",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_hensel_lift",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "_test_pl",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_zassenhaus",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_zz_factor",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dup_factor_list",
        0.5773502691896258
    ],
    [
        "sympy/polys/factortools.py",
        "",
        "dmp_factor_list",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_int",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_degree",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_strip",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_trunc",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_from_int_poly",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_to_int_poly",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_neg",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_mul_ground",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_quo_ground",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_add",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sub",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_mul",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sqr",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sub_mul",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_div",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_rem",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_frobenius_monomial_base",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_frobenius_map",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_pow_mod",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_gcd",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_gcdex",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_monic",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_diff",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_sqf_p",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_ddf_zassenhaus",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_edf_zassenhaus",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_zassenhaus",
        0.5773502691896258
    ],
    [
        "sympy/polys/galoistools.py",
        "",
        "gf_factor_sqf",
        0.5773502691896258
    ],
    [
        "sympy/polys/groebnertools.py",
        "",
        "groebner",
        0.5773502691896258
    ],
    [
        "sympy/polys/groebnertools.py",
        "",
        "spoly",
        0.5773502691896258
    ],
    [
        "sympy/polys/orderings.py",
        "MonomialOrder",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/polys/orderings.py",
        "LexOrder",
        "__call__",
        0.5773502691896258
    ],
    [
        "sympy/polys/orderings.py",
        "",
        "monomial_key",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "unify",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_sympy_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "convert",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "monoms",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "all_coeffs",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "degree",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "factor_list",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "is_zero",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyconfig.py",
        "",
        "query",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "BooleanOption",
        "preprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__setattr__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "default",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "preprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Order",
        "default",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Order",
        "preprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "preprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "allowed_flags",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "expr",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_expr",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "gen",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "domain",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "get_domain",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "ltrim",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "monoms",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "all_coeffs",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_gen_to_level",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "degree",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "factor_list",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_zero",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_univariate",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_multivariate",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__bool__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_poly_from_expr",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "parallel_poly_from_expr",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_symbolic_factor_list",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "groebner",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "GroebnerBasis",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "GroebnerBasis",
        "_new",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "GroebnerBasis",
        "polys",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "GroebnerBasis",
        "__len__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polytools.py",
        "GroebnerBasis",
        "__getitem__",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_factors",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_if_gens",
        0.5773502691896258
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "expr_from_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "",
        "_parse_symbols",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__hash__",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__eq__",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "clone",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "zero",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "domain_new",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "from_dict",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "copy",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "strip_zero",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__sub__",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "quo",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_get_coeff",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "LM",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "leading_monom",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "listcoeffs",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "mul_term",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "quo_ground",
        0.5773502691896258
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "quo_term",
        0.5773502691896258
    ],
    [
        "sympy/polys/sqfreetools.py",
        "",
        "dup_sqf_part",
        0.5773502691896258
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_get_initial_settings",
        0.5773502691896258
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.5773502691896258
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.5773502691896258
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        0.5773502691896258
    ],
    [
        "sympy/printing/printer.py",
        "_PrintFunction",
        "__call__",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "_infimum_key",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "__contains__",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__new__",
        0.5773502691896258
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_contains",
        0.5773502691896258
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "subsets",
        0.5773502691896258
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_variety",
        0.5773502691896258
    ]
]