2024-04-05 04:20:45 ========== Running task pytest-dev__pytest-7432 (relative counter in this run: 180/300) ==========
2024-04-05 04:20:45 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; python -m pip install -e . ; conda deactivate
2024-04-05 04:20:48 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; python -m pip install xmlrunner coverage pytest pytest-cov ; conda deactivate
2024-04-05 04:20:55 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; python -m pytest --cov --cov-context=test  -rA testing/test_skipping.py ; conda deactivate
2024-04-05 04:21:06 SBFL result (lines): [('src/_pytest/faulthandler.py', 114, 114, 1.0), ('src/_pytest/faulthandler.py', 116, 116, 1.0), ('src/_pytest/pytester.py', 613, 613, 1.0), ('src/_pytest/pytester.py', 1445, 1445, 1.0), ('src/_pytest/pytester.py', 1542, 1544, 1.0), ('src/_pytest/pytester.py', 1589, 1592, 1.0), ('src/_pytest/skipping.py', 52, 52, 0.5), ('src/_pytest/skipping.py', 54, 55, 0.5), ('src/_pytest/skipping.py', 57, 57, 0.5), ('src/_pytest/skipping.py', 60, 61, 0.5), ('src/_pytest/skipping.py', 273, 275, 0.5), ('src/_pytest/outcomes.py', 155, 156, 0.4472135954999579), ('src/_pytest/skipping.py', 184, 185, 0.3779644730092272), ('src/_pytest/_code/source.py', 335, 340, 0.35355339059327373), ('src/_pytest/nodes.py', 363, 364, 0.3333333333333333), ('src/_pytest/terminal.py', 1259, 1262, 0.31622776601683794), ('src/_pytest/runner.py', 207, 214, 0.30151134457776363), ('src/_pytest/skipping.py', 181, 181, 0.30151134457776363), ('src/_pytest/_code/code.py', 173, 176, 0.2886751345948129), ('src/_pytest/_code/code.py', 683, 687, 0.2886751345948129), ('src/_pytest/cacheprovider.py', 276, 279, 0.2886751345948129), ('src/_pytest/pathlib.py', 153, 156, 0.2886751345948129), ('src/_pytest/pathlib.py', 165, 167, 0.2886751345948129), ('src/_pytest/pathlib.py', 178, 181, 0.2886751345948129), ('src/_pytest/skipping.py', 178, 179, 0.2886751345948129), ('src/_pytest/terminal.py', 546, 549, 0.2886751345948129), ('src/_pytest/_code/source.py', 371, 371, 0.2773500981126146), ('src/_pytest/_code/source.py', 373, 379, 0.2773500981126146), ('src/_pytest/runner.py', 218, 221, 0.2773500981126146), ('src/_pytest/terminal.py', 267, 267, 0.2773500981126146), ('src/_pytest/_code/source.py', 342, 343, 0.2672612419124244), ('src/_pytest/fixtures.py', 387, 387, 0.2672612419124244), ('src/_pytest/fixtures.py', 670, 670, 0.2672612419124244), ('src/_pytest/fixtures.py', 673, 675, 0.2672612419124244), ('src/_pytest/fixtures.py', 753, 764, 0.2672612419124244), ('src/_pytest/main.py', 485, 488, 0.2672612419124244), ('src/_pytest/python.py', 839, 842, 0.2672612419124244), ('src/_pytest/terminal.py', 1121, 1128, 0.2581988897471611), ('src/_pytest/terminal.py', 1161, 1164, 0.2581988897471611), ('src/_pytest/terminal.py', 1266, 1271, 0.2581988897471611), ('src/_pytest/terminal.py', 1248, 1252, 0.25), ('src/_pytest/terminal.py', 1254, 1255, 0.25), ('src/_pytest/python.py', 1594, 1598, 0.24253562503633297), ('src/_pytest/runner.py', 193, 194, 0.24253562503633297), ('src/_pytest/reports.py', 316, 318, 0.22941573387056174), ('src/_pytest/skipping.py', 236, 239, 0.22941573387056174), ('src/_pytest/_code/code.py', 333, 333, 0.22360679774997896), ('src/_pytest/_code/code.py', 337, 338, 0.22360679774997896), ('src/_pytest/_code/code.py', 340, 340, 0.22360679774997896), ('src/_pytest/reports.py', 311, 314, 0.22360679774997896), ('src/_pytest/runner.py', 150, 154, 0.22360679774997896), ('src/_pytest/terminal.py', 1116, 1119, 0.2182178902359924), ('src/_pytest/runner.py', 189, 190, 0.21428571428571427), ('src/_pytest/runner.py', 196, 197, 0.21428571428571427), ('src/_pytest/terminal.py', 538, 542, 0.21428571428571427), ('src/_pytest/capture.py', 738, 739, 0.21160368475757949), ('src/_pytest/logging.py', 682, 684, 0.21160368475757949), ('src/_pytest/runner.py', 111, 114, 0.21160368475757949), ('src/_pytest/nodes.py', 302, 305, 0.21004201260420147), ('src/_pytest/nodes.py', 253, 259, 0.2055566129482595), ('src/_pytest/nodes.py', 291, 291, 0.2055566129482595), ('src/_pytest/outcomes.py', 142, 143, 0.20412414523193154), ('src/_pytest/nodes.py', 242, 242, 0.2036532699906392), ('src/_pytest/capture.py', 321, 322, 0.2031856384435789), ('src/_pytest/capture.py', 324, 325, 0.2031856384435789), ('src/_pytest/capture.py', 456, 457, 0.2031856384435789), ('src/_pytest/capture.py', 459, 461, 0.2031856384435789), ('src/_pytest/capture.py', 539, 544, 0.2031856384435789), ('src/_pytest/capture.py', 638, 639, 0.2031856384435789), ('src/_pytest/capture.py', 678, 678, 0.2031856384435789), ('src/_pytest/capture.py', 707, 710, 0.2031856384435789), ('src/_pytest/logging.py', 293, 294, 0.2031856384435789), ('src/_pytest/logging.py', 297, 298, 0.2031856384435789), ('src/_pytest/logging.py', 300, 301, 0.2031856384435789), ('src/_pytest/logging.py', 304, 304, 0.2031856384435789), ('src/_pytest/logging.py', 329, 330, 0.2031856384435789), ('src/_pytest/logging.py', 668, 671, 0.2031856384435789), ('src/_pytest/runner.py', 228, 233, 0.2031856384435789), ('src/_pytest/runner.py', 236, 240, 0.2031856384435789), ('src/_pytest/runner.py', 283, 290, 0.2031856384435789), ('src/_pytest/store.py', 90, 90, 0.2031856384435789), ('src/_pytest/capture.py', 287, 288, 0.2027212135198458), ('src/_pytest/capture.py', 316, 318, 0.2027212135198458), ('src/_pytest/capture.py', 410, 411, 0.2027212135198458), ('src/_pytest/capture.py', 448, 449, 0.2027212135198458), ('src/_pytest/capture.py', 451, 453, 0.2027212135198458), ('src/_pytest/capture.py', 479, 484, 0.2027212135198458), ('src/_pytest/capture.py', 529, 534, 0.2027212135198458), ('src/_pytest/capture.py', 561, 562, 0.2027212135198458), ('src/_pytest/capture.py', 565, 566, 0.2027212135198458), ('src/_pytest/capture.py', 569, 569, 0.2027212135198458), ('src/_pytest/capture.py', 642, 643, 0.2027212135198458), ('src/_pytest/capture.py', 655, 656, 0.2027212135198458), ('src/_pytest/capture.py', 683, 683, 0.2027212135198458), ('src/_pytest/capture.py', 712, 713, 0.2027212135198458), ('src/_pytest/capture.py', 715, 717, 0.2027212135198458), ('src/_pytest/config/__init__.py', 1336, 1339, 0.2027212135198458), ('src/_pytest/config/__init__.py', 1341, 1341, 0.2027212135198458), ('src/_pytest/logging.py', 307, 308, 0.2027212135198458), ('src/_pytest/logging.py', 310, 310, 0.2027212135198458), ('src/_pytest/logging.py', 664, 664, 0.2027212135198458), ('src/_pytest/logging.py', 673, 673, 0.2027212135198458), ('src/_pytest/logging.py', 675, 676, 0.2027212135198458), ('src/_pytest/logging.py', 799, 799, 0.2027212135198458), ('src/_pytest/main.py', 497, 497, 0.2027212135198458), ('src/_pytest/mark/structures.py', 545, 546, 0.2027212135198458), ('src/_pytest/mark/structures.py', 549, 552, 0.2027212135198458), ('src/_pytest/nodes.py', 200, 200, 0.2027212135198458), ('src/_pytest/nodes.py', 239, 239, 0.2027212135198458), ('src/_pytest/nodes.py', 549, 551, 0.2027212135198458), ('src/_pytest/nodes.py', 553, 554, 0.2027212135198458), ('src/_pytest/nodes.py', 559, 560, 0.2027212135198458), ('src/_pytest/nodes.py', 651, 652, 0.2027212135198458), ('src/_pytest/python.py', 287, 289, 0.2027212135198458), ('src/_pytest/python.py', 292, 294, 0.2027212135198458), ('src/_pytest/reports.py', 139, 141, 0.2027212135198458), ('src/_pytest/reports.py', 251, 251, 0.2027212135198458), ('src/_pytest/reports.py', 256, 256, 0.2027212135198458), ('src/_pytest/reports.py', 260, 260, 0.2027212135198458), ('src/_pytest/reports.py', 263, 263, 0.2027212135198458), ('src/_pytest/reports.py', 266, 266, 0.2027212135198458), ('src/_pytest/reports.py', 269, 269, 0.2027212135198458), ('src/_pytest/reports.py', 273, 273, 0.2027212135198458), ('src/_pytest/reports.py', 279, 279, 0.2027212135198458), ('src/_pytest/reports.py', 282, 282, 0.2027212135198458), ('src/_pytest/reports.py', 284, 284, 0.2027212135198458), ('src/_pytest/reports.py', 296, 296, 0.2027212135198458), ('src/_pytest/reports.py', 298, 304, 0.2027212135198458), ('src/_pytest/reports.py', 306, 306, 0.2027212135198458), ('src/_pytest/reports.py', 323, 334, 0.2027212135198458), ('src/_pytest/runner.py', 178, 180, 0.2027212135198458), ('src/_pytest/runner.py', 182, 183, 0.2027212135198458), ('src/_pytest/runner.py', 294, 303, 0.2027212135198458), ('src/_pytest/runner.py', 313, 313, 0.2027212135198458), ('src/_pytest/skipping.py', 262, 264, 0.2027212135198458), ('src/_pytest/skipping.py', 266, 266, 0.2027212135198458), ('src/_pytest/skipping.py', 279, 279, 0.2027212135198458), ('src/_pytest/skipping.py', 294, 295, 0.2027212135198458), ('src/_pytest/skipping.py', 309, 309, 0.2027212135198458), ('src/_pytest/skipping.py', 314, 314, 0.2027212135198458), ('src/_pytest/stepwise.py', 85, 86, 0.2027212135198458), ('src/_pytest/store.py', 97, 97, 0.2027212135198458), ('src/_pytest/store.py', 102, 105, 0.2027212135198458), ('src/_pytest/store.py', 125, 125, 0.2027212135198458), ('src/_pytest/terminal.py', 477, 480, 0.2027212135198458), ('src/_pytest/terminal.py', 525, 528, 0.2027212135198458), ('src/_pytest/terminal.py', 530, 531, 0.2027212135198458), ('src/_pytest/terminal.py', 534, 536, 0.2027212135198458), ('src/_pytest/unittest.py', 293, 293, 0.2027212135198458), ('src/_pytest/unittest.py', 301, 303, 0.2027212135198458), ('src/_pytest/outcomes.py', 65, 66, 0.2), ('src/_pytest/terminal.py', 1169, 1170, 0.2), ('src/_pytest/_io/saferepr.py', 31, 31, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 35, 35, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 44, 46, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 49, 50, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 55, 55, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 58, 59, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 64, 64, 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 85, 85, 0.19611613513818404), ('src/_pytest/python.py', 1570, 1575, 0.19611613513818404), ('src/_pytest/python.py', 1582, 1582, 0.19611613513818404), ('src/_pytest/python.py', 1585, 1586, 0.19611613513818404), ('src/_pytest/_code/code.py', 97, 98, 0.1889822365046136), ('src/_pytest/_code/code.py', 113, 118, 0.1889822365046136), ('src/_pytest/_code/code.py', 179, 179, 0.1889822365046136), ('src/_pytest/_code/code.py', 223, 223, 0.1889822365046136), ('src/_pytest/_code/code.py', 226, 226, 0.1889822365046136), ('src/_pytest/_code/code.py', 232, 233, 0.1889822365046136), ('src/_pytest/_code/code.py', 235, 243, 0.1889822365046136), ('src/_pytest/_code/code.py', 248, 250, 0.1889822365046136), ('src/_pytest/_code/code.py', 327, 331, 0.1889822365046136), ('src/_pytest/_code/code.py', 519, 520, 0.1889822365046136), ('src/_pytest/_code/code.py', 522, 522, 0.1889822365046136), ('src/_pytest/_code/code.py', 533, 533, 0.1889822365046136), ('src/_pytest/_code/code.py', 663, 664, 0.1889822365046136), ('src/_pytest/_code/code.py', 674, 674, 0.1889822365046136), ('src/_pytest/_code/code.py', 677, 680, 0.1889822365046136), ('src/_pytest/_code/code.py', 698, 699, 0.1889822365046136), ('src/_pytest/_code/code.py', 702, 702, 0.1889822365046136), ('src/_pytest/_code/code.py', 704, 705, 0.1889822365046136), ('src/_pytest/_code/code.py', 708, 711, 0.1889822365046136), ('src/_pytest/_code/code.py', 713, 716, 0.1889822365046136), ('src/_pytest/_code/code.py', 733, 733, 0.1889822365046136), ('src/_pytest/_code/code.py', 757, 757, 0.1889822365046136), ('src/_pytest/_code/code.py', 762, 766, 0.1889822365046136), ('src/_pytest/_code/code.py', 770, 775, 0.1889822365046136), ('src/_pytest/_code/code.py', 778, 782, 0.1889822365046136), ('src/_pytest/_code/code.py', 793, 793, 0.1889822365046136), ('src/_pytest/_code/code.py', 800, 800, 0.1889822365046136), ('src/_pytest/_code/source.py', 72, 72, 0.1889822365046136), ('src/_pytest/_code/source.py', 75, 75, 0.1889822365046136), ('src/_pytest/_code/source.py', 77, 79, 0.1889822365046136), ('src/_pytest/_code/source.py', 125, 126, 0.1889822365046136), ('src/_pytest/_code/source.py', 132, 132, 0.1889822365046136), ('src/_pytest/_code/source.py', 134, 135, 0.1889822365046136), ('src/_pytest/_code/source.py', 139, 141, 0.1889822365046136), ('src/_pytest/_code/source.py', 159, 159, 0.1889822365046136), ('src/_pytest/_code/source.py', 327, 333, 0.1889822365046136), ('src/_pytest/_code/source.py', 352, 353, 0.1889822365046136), ('src/_pytest/_code/source.py', 356, 358, 0.1889822365046136), ('src/_pytest/_code/source.py', 360, 360, 0.1889822365046136), ('src/_pytest/_code/source.py', 365, 366, 0.1889822365046136), ('src/_pytest/_code/source.py', 368, 368, 0.1889822365046136), ('src/_pytest/_code/source.py', 384, 386, 0.1889822365046136), ('src/_pytest/_code/source.py', 390, 390, 0.1889822365046136), ('src/_pytest/_code/code.py', 360, 360, 0.18569533817705186), ('src/_pytest/_code/code.py', 371, 371, 0.18569533817705186), ('src/_pytest/_code/code.py', 721, 722, 0.18569533817705186), ('src/_pytest/_code/code.py', 724, 728, 0.18569533817705186), ('src/_pytest/_code/code.py', 730, 730, 0.18569533817705186), ('src/_pytest/_code/code.py', 819, 823, 0.18569533817705186), ('src/_pytest/python.py', 298, 298, 0.1841149235796647), ('src/_pytest/python.py', 1545, 1546, 0.1841149235796647), ('src/_pytest/terminal.py', 581, 583, 0.18333969940564226), ('src/_pytest/terminal.py', 587, 587, 0.18333969940564226), ('src/_pytest/terminal.py', 589, 589, 0.18333969940564226), ('src/_pytest/terminal.py', 591, 592, 0.18333969940564226), ('src/_pytest/_code/code.py', 218, 218, 0.18257418583505536), ('src/_pytest/config/__init__.py', 497, 499, 0.18257418583505536), ('src/_pytest/nodes.py', 361, 361, 0.18257418583505536), ('src/_pytest/nodes.py', 366, 366, 0.18257418583505536), ('src/_pytest/nodes.py', 368, 368, 0.18257418583505536), ('src/_pytest/nodes.py', 371, 373, 0.18257418583505536), ('src/_pytest/nodes.py', 375, 375, 0.18257418583505536), ('src/_pytest/nodes.py', 378, 378, 0.18257418583505536), ('src/_pytest/nodes.py', 384, 384, 0.18257418583505536), ('src/_pytest/nodes.py', 387, 387, 0.18257418583505536), ('src/_pytest/nodes.py', 395, 396, 0.18257418583505536), ('src/_pytest/nodes.py', 400, 406, 0.18257418583505536), ('src/_pytest/outcomes.py', 44, 45, 0.18257418583505536), ('src/_pytest/terminal.py', 404, 404, 0.18257418583505536), ('src/_pytest/terminal.py', 407, 408, 0.18257418583505536), ('src/_pytest/terminal.py', 410, 414, 0.18257418583505536), ('src/_pytest/terminal.py', 520, 522, 0.18257418583505536), ('src/_pytest/assertion/__init__.py', 127, 127, 0.18107149208503706), ('src/_pytest/assertion/__init__.py', 129, 129, 0.18107149208503706), ('src/_pytest/assertion/__init__.py', 157, 158, 0.18107149208503706), ('src/_pytest/assertion/__init__.py', 160, 160, 0.18107149208503706), ('src/_pytest/logging.py', 659, 660, 0.18107149208503706), ('src/_pytest/logging.py', 796, 796, 0.18107149208503706), ('src/_pytest/main.py', 319, 322, 0.18107149208503706), ('src/_pytest/runner.py', 98, 102, 0.18107149208503706), ('src/_pytest/terminal.py', 516, 516, 0.18107149208503706), ('src/_pytest/unittest.py', 322, 322, 0.18107149208503706), ('src/_pytest/warnings.py', 116, 118, 0.18107149208503706), ('src/_pytest/warnings.py', 158, 159, 0.18107149208503706), ('src/_pytest/_io/wcwidth.py', 49, 52, 0.18033392693348646), ('src/_pytest/_io/wcwidth.py', 54, 55, 0.18033392693348646), ('src/_pytest/assertion/__init__.py', 167, 167, 0.18033392693348646), ('src/_pytest/assertion/__init__.py', 169, 169, 0.18033392693348646), ('src/_pytest/logging.py', 702, 702, 0.18033392693348646), ('src/_pytest/main.py', 324, 324, 0.18033392693348646), ('src/_pytest/unittest.py', 347, 347, 0.18033392693348646), ('src/_pytest/warnings.py', 161, 161, 0.18033392693348646), ('src/_pytest/_code/code.py', 309, 309, 0.1796053020267749), ('src/_pytest/_code/code.py', 608, 608, 0.1796053020267749), ('src/_pytest/_code/code.py', 618, 625, 0.1796053020267749), ('src/_pytest/_code/code.py', 627, 627, 0.1796053020267749), ('src/_pytest/_code/code.py', 803, 804, 0.1796053020267749), ('src/_pytest/_code/code.py', 807, 807, 0.1796053020267749), ('src/_pytest/_code/code.py', 810, 810, 0.1796053020267749), ('src/_pytest/_code/code.py', 812, 814, 0.1796053020267749), ('src/_pytest/_code/code.py', 867, 868, 0.1796053020267749), ('src/_pytest/_code/code.py', 870, 879, 0.1796053020267749), ('src/_pytest/_code/code.py', 889, 890, 0.1796053020267749), ('src/_pytest/_code/code.py', 898, 899, 0.1796053020267749), ('src/_pytest/_code/code.py', 909, 911, 0.1796053020267749), ('src/_pytest/_code/code.py', 939, 939, 0.1796053020267749), ('src/_pytest/_code/code.py', 959, 959, 0.1796053020267749), ('src/_pytest/_code/code.py', 962, 963, 0.1796053020267749), ('src/_pytest/monkeypatch.py', 348, 349, 0.1781741612749496), ('src/_pytest/monkeypatch.py', 352, 357, 0.1781741612749496), ('src/_pytest/monkeypatch.py', 361, 363, 0.1781741612749496), ('src/_pytest/monkeypatch.py', 367, 367, 0.1781741612749496), ('src/_pytest/pytester.py', 534, 535, 0.1781741612749496), ('src/_pytest/pytester.py', 538, 540, 0.1781741612749496), ('src/_pytest/pytester.py', 542, 543, 0.1781741612749496), ('src/_pytest/pytester.py', 548, 548, 0.1781741612749496), ('src/_pytest/pytester.py', 551, 551, 0.1781741612749496), ('src/_pytest/pytester.py', 635, 636, 0.1781741612749496), ('src/_pytest/pytester.py', 638, 638, 0.1781741612749496), ('src/_pytest/runner.py', 165, 167, 0.1781741612749496), ('src/_pytest/runner.py', 185, 185, 0.1781741612749496), ('src/_pytest/runner.py', 121, 124, 0.17747130188322277), ('src/_pytest/runner.py', 394, 395, 0.17747130188322277), ('src/_pytest/runner.py', 398, 403, 0.17747130188322277), ('src/_pytest/runner.py', 409, 409, 0.17747130188322277), ('src/_pytest/config/__init__.py', 531, 532, 0.17677669529663687), ('src/_pytest/config/__init__.py', 537, 537, 0.17677669529663687), ('src/_pytest/config/__init__.py', 1293, 1295, 0.17677669529663687), ('src/_pytest/config/__init__.py', 1297, 1298, 0.17677669529663687), ('src/_pytest/logging.py', 680, 680, 0.17677669529663687), ('src/_pytest/main.py', 332, 334, 0.17677669529663687), ('src/_pytest/main.py', 347, 350, 0.17677669529663687), ('src/_pytest/main.py', 353, 353, 0.17677669529663687), ('src/_pytest/main.py', 356, 357, 0.17677669529663687), ('src/_pytest/main.py', 359, 361, 0.17677669529663687), ('src/_pytest/main.py', 364, 364, 0.17677669529663687), ('src/_pytest/main.py', 367, 368, 0.17677669529663687), ('src/_pytest/main.py', 370, 370, 0.17677669529663687), ('src/_pytest/main.py', 472, 472, 0.17677669529663687), ('src/_pytest/main.py', 616, 617, 0.17677669529663687), ('src/_pytest/main.py', 619, 621, 0.17677669529663687), ('src/_pytest/main.py', 623, 624, 0.17677669529663687), ('src/_pytest/main.py', 626, 628, 0.17677669529663687), ('src/_pytest/main.py', 633, 633, 0.17677669529663687), ('src/_pytest/main.py', 637, 639, 0.17677669529663687), ('src/_pytest/main.py', 642, 643, 0.17677669529663687), ('src/_pytest/main.py', 674, 674, 0.17677669529663687), ('src/_pytest/nodes.py', 589, 591, 0.17677669529663687), ('src/_pytest/nodes.py', 594, 598, 0.17677669529663687), ('src/_pytest/nodes.py', 601, 601, 0.17677669529663687), ('src/_pytest/nodes.py', 659, 661, 0.17677669529663687), ('src/_pytest/nodes.py', 664, 666, 0.17677669529663687), ('src/_pytest/python.py', 184, 188, 0.17677669529663687), ('src/_pytest/python.py', 201, 201, 0.17677669529663687), ('src/_pytest/runner.py', 108, 109, 0.17677669529663687), ('src/_pytest/logging.py', 696, 698, 0.17609018126512477), ('src/_pytest/store.py', 121, 121, 0.17609018126512477), ('src/_pytest/skipping.py', 234, 234, 0.17541160386140586), ('src/_pytest/_code/source.py', 286, 287, 0.17407765595569785), ('src/_pytest/_code/source.py', 290, 292, 0.17407765595569785), ('src/_pytest/config/__init__.py', 489, 490, 0.17407765595569785), ('src/_pytest/config/__init__.py', 1212, 1217, 0.17407765595569785), ('src/_pytest/config/findpaths.py', 96, 104, 0.17407765595569785), ('src/_pytest/config/findpaths.py', 127, 129, 0.17407765595569785), ('src/_pytest/config/findpaths.py', 182, 186, 0.17407765595569785), ('src/_pytest/reports.py', 186, 187, 0.17149858514250882), ('src/_pytest/reports.py', 189, 189, 0.17149858514250882), ('src/_pytest/terminal.py', 1148, 1151, 0.17149858514250882), ('src/_pytest/_code/code.py', 57, 59, 0.17025130615174972), ('src/_pytest/_code/code.py', 1169, 1170, 0.17025130615174972), ('src/_pytest/_code/code.py', 1173, 1174, 0.17025130615174972), ('src/_pytest/_code/code.py', 1190, 1190, 0.17025130615174972), ('src/_pytest/_code/source.py', 297, 298, 0.17025130615174972), ('src/_pytest/compat.py', 290, 296, 0.17025130615174972), ('src/_pytest/python.py', 309, 319, 0.17025130615174972), ('src/_pytest/python.py', 321, 324, 0.17025130615174972), ('src/_pytest/python.py', 328, 330, 0.17025130615174972), ('src/_pytest/python.py', 338, 341, 0.17025130615174972), ('src/_pytest/compat.py', 86, 87, 0.16963778593599418), ('src/_pytest/nodes.py', 347, 351, 0.16963778593599418), ('src/_pytest/skipping.py', 161, 161, 0.16963778593599418), ('src/_pytest/outcomes.py', 33, 33, 0.1690308509457033), ('src/_pytest/outcomes.py', 39, 41, 0.1690308509457033), ('src/_pytest/_code/code.py', 61, 64, 0.16724840200141816), ('src/_pytest/_code/code.py', 80, 80, 0.16724840200141816), ('src/_pytest/_code/code.py', 82, 83, 0.16724840200141816), ('src/_pytest/_code/code.py', 85, 85, 0.16724840200141816), ('src/_pytest/_code/code.py', 87, 87, 0.16724840200141816), ('src/_pytest/compat.py', 285, 286, 0.16724840200141816), ('src/_pytest/compat.py', 304, 304, 0.16724840200141816), ('src/_pytest/compat.py', 306, 306, 0.16724840200141816), ('src/_pytest/terminal.py', 387, 388, 0.16724840200141816), ('src/_pytest/terminal.py', 397, 397, 0.16724840200141816), ('src/_pytest/warnings.py', 97, 99, 0.16724840200141816), ('src/_pytest/warnings.py', 101, 101, 0.16724840200141816), ('src/_pytest/warnings.py', 103, 103, 0.16724840200141816), ('src/_pytest/warnings.py', 105, 106, 0.16724840200141816), ('src/_pytest/warnings.py', 110, 111, 0.16724840200141816), ('src/_pytest/warnings.py', 113, 113, 0.16724840200141816), ('src/_pytest/_io/terminalwriter.py', 92, 92, 0.16666666666666666), ('src/_pytest/config/__init__.py', 1234, 1238, 0.16666666666666666), ('src/_pytest/faulthandler.py', 84, 84, 0.16666666666666666), ('src/_pytest/monkeypatch.py', 118, 120, 0.16666666666666666), ('src/_pytest/monkeypatch.py', 122, 123, 0.16666666666666666), ('src/_pytest/terminal.py', 628, 628, 0.16666666666666666), ('src/_pytest/terminal.py', 1154, 1158, 0.16666666666666666), ('src/_pytest/warnings.py', 122, 122, 0.16666666666666666), ('src/_pytest/warnings.py', 124, 124, 0.16666666666666666), ('src/_pytest/fixtures.py', 770, 770, 0.16609095970747995), ('src/_pytest/fixtures.py', 999, 999, 0.16609095970747995), ('src/_pytest/terminal.py', 434, 434, 0.16609095970747995), ('src/_pytest/terminal.py', 577, 578, 0.16609095970747995), ('src/_pytest/_io/terminalwriter.py', 142, 145, 0.1655211777204736), ('src/_pytest/_io/terminalwriter.py', 160, 160, 0.1655211777204736), ('src/_pytest/capture.py', 743, 744, 0.1655211777204736), ('src/_pytest/capture.py', 748, 749, 0.1655211777204736), ('src/_pytest/compat.py', 100, 100, 0.1655211777204736), ('src/_pytest/logging.py', 690, 690, 0.1655211777204736), ('src/_pytest/runner.py', 116, 118, 0.1655211777204736), ('src/_pytest/skipping.py', 257, 257, 0.1655211777204736), ('src/_pytest/terminal.py', 370, 371, 0.1655211777204736), ('testing/conftest.py', 17, 19, 0.1655211777204736), ('src/_pytest/assertion/rewrite.py', 531, 537, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 539, 540, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 720, 720, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 741, 743, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 747, 749, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 753, 753, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 757, 759, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 775, 777, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 790, 791, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 802, 803, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 805, 809, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 811, 812, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 816, 818, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 829, 829, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 844, 846, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 848, 848, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 851, 853, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 855, 855, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 857, 857, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 859, 859, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 910, 912, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 916, 923, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 925, 925, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 928, 931, 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 933, 935, 0.1643989873053573), ('src/_pytest/fixtures.py', 467, 467, 0.16169041669088866), ('src/_pytest/fixtures.py', 720, 720, 0.16169041669088866), ('src/_pytest/fixtures.py', 722, 723, 0.16169041669088866), ('src/_pytest/main.py', 302, 302, 0.15811388300841897), ('src/_pytest/main.py', 300, 300, 0.15617376188860607), ('src/_pytest/skipping.py', 222, 222, 0.15384615384615385), ('src/_pytest/reports.py', 308, 308, 0.15075567228888181), ('src/_pytest/_code/code.py', 377, 380, 0.14907119849998599), ('src/_pytest/_code/code.py', 495, 496, 0.14907119849998599), ('src/_pytest/_code/code.py', 498, 498, 0.14907119849998599), ('src/_pytest/_code/code.py', 550, 556, 0.14907119849998599), ('src/_pytest/_code/code.py', 565, 568, 0.14907119849998599), ('src/_pytest/_code/source.py', 85, 85, 0.14907119849998599), ('src/_pytest/nose.py', 15, 15, 0.14744195615489714), ('src/_pytest/nose.py', 27, 28, 0.14744195615489714), ('src/_pytest/nose.py', 33, 35, 0.14744195615489714), ('src/_pytest/pytester.py', 1459, 1460, 0.14744195615489714), ('src/_pytest/pytester.py', 1502, 1502, 0.14744195615489714), ('src/_pytest/pytester.py', 1504, 1515, 0.14744195615489714), ('src/_pytest/pytester.py', 1519, 1519, 0.14744195615489714), ('src/_pytest/pytester.py', 1527, 1527, 0.14744195615489714), ('src/_pytest/pytester.py', 1534, 1536, 0.14744195615489714), ('src/_pytest/pytester.py', 1538, 1540, 0.14744195615489714), ('src/_pytest/terminal.py', 544, 544, 0.14744195615489714), ('src/_pytest/_code/code.py', 126, 130, 0.14586499149789456), ('src/_pytest/_code/code.py', 189, 191, 0.14586499149789456), ('src/_pytest/_code/code.py', 199, 199, 0.14586499149789456), ('src/_pytest/_code/code.py', 263, 265, 0.14586499149789456), ('src/_pytest/_code/code.py', 267, 267, 0.14586499149789456), ('src/_pytest/_code/code.py', 269, 269, 0.14586499149789456), ('src/_pytest/_code/code.py', 298, 299, 0.14586499149789456), ('src/_pytest/_code/code.py', 301, 305, 0.14586499149789456), ('src/_pytest/_code/code.py', 307, 307, 0.14586499149789456), ('src/_pytest/_code/code.py', 354, 354, 0.14586499149789456), ('src/_pytest/_code/code.py', 357, 357, 0.14586499149789456), ('src/_pytest/_code/code.py', 474, 479, 0.14586499149789456), ('src/_pytest/_code/code.py', 511, 512, 0.14586499149789456), ('src/_pytest/_code/code.py', 514, 514, 0.14586499149789456), ('src/_pytest/_code/code.py', 527, 529, 0.14586499149789456), ('src/_pytest/_code/code.py', 562, 562, 0.14586499149789456), ('src/_pytest/runner.py', 292, 292, 0.14586499149789456), ('src/_pytest/skipping.py', 202, 202, 0.14509525002200233), ('src/_pytest/assertion/rewrite.py', 202, 203, 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 226, 230, 0.14433756729740646), ('src/_pytest/pytester.py', 1397, 1397, 0.14433756729740646), ('src/_pytest/pytester.py', 1399, 1399, 0.14433756729740646), ('src/_pytest/pytester.py', 1401, 1401, 0.14433756729740646), ('src/_pytest/_code/code.py', 449, 450, 0.14285714285714285), ('src/_pytest/_code/code.py', 457, 457, 0.14285714285714285), ('src/_pytest/_io/terminalwriter.py', 151, 153, 0.14285714285714285), ('src/_pytest/pytester.py', 1441, 1441, 0.14285714285714285), ('src/_pytest/terminal.py', 431, 431, 0.14285714285714285), ('src/_pytest/terminal.py', 602, 604, 0.14285714285714285), ('src/_pytest/terminal.py', 612, 614, 0.14285714285714285), ('src/_pytest/terminal.py', 619, 623, 0.14285714285714285), ('src/_pytest/assertion/rewrite.py', 195, 195, 0.1414213562373095), ('src/_pytest/assertion/rewrite.py', 197, 197, 0.1414213562373095), ('src/_pytest/assertion/rewrite.py', 200, 200, 0.1414213562373095), ('src/_pytest/capture.py', 195, 195, 0.1414213562373095), ('src/_pytest/capture.py', 198, 199, 0.1414213562373095), ('src/_pytest/capture.py', 264, 266, 0.1414213562373095), ('src/_pytest/capture.py', 338, 341, 0.1414213562373095), ('src/_pytest/capture.py', 573, 576, 0.1414213562373095), ('src/_pytest/pathlib.py', 394, 395, 0.1414213562373095), ('src/_pytest/pathlib.py', 397, 397, 0.1414213562373095), ('src/_pytest/pathlib.py', 403, 404, 0.1414213562373095), ('src/_pytest/pathlib.py', 409, 409, 0.1414213562373095), ('src/_pytest/pytester.py', 428, 430, 0.1414213562373095), ('src/_pytest/pytester.py', 433, 433, 0.1414213562373095), ('src/_pytest/pytester.py', 435, 435, 0.1414213562373095), ('src/_pytest/pytester.py', 437, 437, 0.1414213562373095), ('src/_pytest/pytester.py', 443, 443, 0.1414213562373095), ('src/_pytest/pytester.py', 445, 446, 0.1414213562373095), ('src/_pytest/pytester.py', 998, 998, 0.1414213562373095), ('src/_pytest/pytester.py', 1000, 1000, 0.1414213562373095), ('src/_pytest/pytester.py', 1002, 1007, 0.1414213562373095), ('src/_pytest/pytester.py', 1025, 1028, 0.1414213562373095), ('src/_pytest/pytester.py', 1030, 1031, 0.1414213562373095), ('src/_pytest/pytester.py', 1033, 1034, 0.1414213562373095), ('src/_pytest/pytester.py', 1041, 1043, 0.1414213562373095), ('src/_pytest/pytester.py', 1393, 1394, 0.1414213562373095), ('src/_pytest/terminal.py', 426, 428, 0.1414213562373095), ('src/_pytest/terminal.py', 1285, 1286, 0.1414213562373095), ('src/_pytest/_code/code.py', 503, 504, 0.14002800840280097), ('src/_pytest/_code/code.py', 506, 506, 0.14002800840280097), ('src/_pytest/assertion/rewrite.py', 180, 182, 0.14002800840280097), ('src/_pytest/assertion/rewrite.py', 185, 185, 0.14002800840280097), ('src/_pytest/assertion/rewrite.py', 187, 187, 0.14002800840280097), ('src/_pytest/main.py', 298, 298, 0.14002800840280097), ('src/_pytest/main.py', 316, 316, 0.14002800840280097), ('src/_pytest/main.py', 326, 326, 0.1386750490563073), ('src/_pytest/assertion/__init__.py', 111, 114, 0.13736056394868904), ('src/_pytest/assertion/rewrite.py', 217, 218, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 458, 458, 0.13736056394868904), ('src/_pytest/cacheprovider.py', 462, 462, 0.13736056394868904), ('src/_pytest/compat.py', 325, 328, 0.13736056394868904), ('src/_pytest/fixtures.py', 1083, 1083, 0.13736056394868904), ('src/_pytest/fixtures.py', 1087, 1088, 0.13736056394868904), ('src/_pytest/helpconfig.py', 143, 143, 0.13736056394868904), ('src/_pytest/helpconfig.py', 146, 146, 0.13736056394868904), ('src/_pytest/helpconfig.py', 151, 151, 0.13736056394868904), ('src/_pytest/logging.py', 635, 635, 0.13736056394868904), ('src/_pytest/logging.py', 637, 639, 0.13736056394868904), ('src/_pytest/logging.py', 645, 645, 0.13736056394868904), ('src/_pytest/logging.py', 649, 649, 0.13736056394868904), ('src/_pytest/logging.py', 653, 655, 0.13736056394868904), ('src/_pytest/main.py', 231, 240, 0.13736056394868904), ('src/_pytest/main.py', 273, 278, 0.13736056394868904), ('src/_pytest/main.py', 284, 285, 0.13736056394868904), ('src/_pytest/main.py', 289, 289, 0.13736056394868904), ('src/_pytest/main.py', 295, 296, 0.13736056394868904), ('src/_pytest/main.py', 306, 306, 0.13736056394868904), ('src/_pytest/main.py', 310, 310, 0.13736056394868904), ('src/_pytest/main.py', 541, 557, 0.13736056394868904), ('src/_pytest/main.py', 566, 569, 0.13736056394868904), ('src/_pytest/mark/__init__.py', 123, 123, 0.13736056394868904), ('src/_pytest/python.py', 122, 122, 0.13736056394868904), ('src/_pytest/python.py', 125, 125, 0.13736056394868904), ('src/_pytest/python.py', 128, 128, 0.13736056394868904), ('src/_pytest/python.py', 797, 798, 0.13736056394868904), ('src/_pytest/python.py', 1564, 1567, 0.13736056394868904), ('src/_pytest/reports.py', 160, 160, 0.13736056394868904), ('src/_pytest/terminal.py', 631, 631, 0.13736056394868904), ('src/_pytest/terminal.py', 635, 635, 0.13736056394868904), ('src/_pytest/terminal.py', 1184, 1189, 0.13736056394868904), ('src/_pytest/terminal.py', 1191, 1193, 0.13736056394868904), ('src/_pytest/warnings.py', 166, 168, 0.13736056394868904), ('src/_pytest/warnings.py', 170, 170, 0.13736056394868904), ('src/_pytest/config/__init__.py', 134, 136, 0.13608276348795434), ('src/_pytest/config/__init__.py', 156, 158, 0.13608276348795434), ('src/_pytest/config/__init__.py', 160, 161, 0.13608276348795434), ('src/_pytest/config/__init__.py', 165, 165, 0.13608276348795434), ('src/_pytest/config/__init__.py', 304, 309, 0.13608276348795434), ('src/_pytest/config/__init__.py', 312, 314, 0.13608276348795434), ('src/_pytest/mark/__init__.py', 108, 108, 0.13608276348795434), ('src/_pytest/mark/__init__.py', 110, 110, 0.13608276348795434), ('src/_pytest/mark/structures.py', 38, 40, 0.13608276348795434), ('src/_pytest/mark/structures.py', 337, 342, 0.13608276348795434), ('src/_pytest/mark/structures.py', 377, 377, 0.13608276348795434), ('src/_pytest/mark/structures.py', 380, 380, 0.13608276348795434), ('src/_pytest/pytester.py', 195, 196, 0.13608276348795434), ('src/_pytest/pytester.py', 218, 219, 0.13608276348795434), ('src/_pytest/pytester.py', 221, 222, 0.13608276348795434), ('src/_pytest/pytester.py', 224, 225, 0.13608276348795434), ('src/_pytest/pytester.py', 227, 227, 0.13608276348795434), ('src/_pytest/pytester.py', 230, 230, 0.13608276348795434), ('src/_pytest/pytester.py', 642, 644, 0.13608276348795434), ('src/_pytest/pytester.py', 948, 948, 0.13608276348795434), ('src/_pytest/pytester.py', 950, 952, 0.13608276348795434), ('src/_pytest/pytester.py', 957, 958, 0.13608276348795434), ('src/_pytest/pytester.py', 966, 966, 0.13608276348795434), ('src/_pytest/pytester.py', 968, 970, 0.13608276348795434), ('src/_pytest/pytester.py', 972, 975, 0.13608276348795434), ('src/_pytest/pytester.py', 981, 981, 0.13608276348795434), ('src/_pytest/pytester.py', 985, 985, 0.13608276348795434), ('src/_pytest/pytester.py', 989, 989, 0.13608276348795434), ('src/_pytest/pytester.py', 991, 992, 0.13608276348795434), ('src/_pytest/setuponly.py', 92, 92, 0.13608276348795434), ('src/_pytest/setuponly.py', 94, 94, 0.13608276348795434), ('src/_pytest/setupplan.py', 37, 37, 0.13608276348795434), ('src/_pytest/setupplan.py', 40, 40, 0.13608276348795434), ('src/_pytest/terminal.py', 1173, 1176, 0.13483997249264842), ('src/_pytest/main.py', 410, 412, 0.1336306209562122), ('src/_pytest/mark/structures.py', 366, 367, 0.13245323570650439), ('src/_pytest/mark/structures.py', 531, 536, 0.13245323570650439), ('src/_pytest/python.py', 788, 790, 0.13245323570650439), ('src/_pytest/python.py', 1512, 1516, 0.13245323570650439), ('src/_pytest/mark/structures.py', 484, 484, 0.12909944487358055), ('src/_pytest/mark/structures.py', 488, 488, 0.12909944487358055), ('src/_pytest/mark/structures.py', 498, 498, 0.12909944487358055), ('src/_pytest/mark/structures.py', 518, 518, 0.12909944487358055), ('src/_pytest/mark/structures.py', 539, 539, 0.12909944487358055), ('src/_pytest/python.py', 531, 532, 0.12803687993289598), ('src/_pytest/pytester.py', 1049, 1051, 0.1270001270001905), ('src/_pytest/terminal.py', 1020, 1023, 0.125), ('src/_pytest/python.py', 507, 508, 0.12403473458920847), ('src/_pytest/terminal.py', 1003, 1006, 0.12403473458920847), ('src/_pytest/compat.py', 347, 348, 0.12309149097933272), ('src/_pytest/fixtures.py', 438, 438, 0.12309149097933272), ('src/_pytest/fixtures.py', 440, 440, 0.12309149097933272), ('src/_pytest/fixtures.py', 442, 448, 0.12309149097933272), ('src/_pytest/fixtures.py', 1466, 1467, 0.12309149097933272), ('src/_pytest/fixtures.py', 1474, 1474, 0.12309149097933272), ('src/_pytest/fixtures.py', 1479, 1480, 0.12309149097933272), ('src/_pytest/fixtures.py', 1484, 1485, 0.12309149097933272), ('src/_pytest/fixtures.py', 1487, 1490, 0.12309149097933272), ('src/_pytest/fixtures.py', 1492, 1492, 0.12309149097933272), ('src/_pytest/fixtures.py', 1515, 1518, 0.12309149097933272), ('src/_pytest/fixtures.py', 1523, 1524, 0.12309149097933272), ('src/_pytest/fixtures.py', 1536, 1537, 0.12309149097933272), ('src/_pytest/fixtures.py', 1539, 1540, 0.12309149097933272), ('src/_pytest/fixtures.py', 1544, 1544, 0.12309149097933272), ('src/_pytest/fixtures.py', 1549, 1549, 0.12309149097933272), ('src/_pytest/fixtures.py', 1551, 1555, 0.12309149097933272), ('src/_pytest/fixtures.py', 1565, 1565, 0.12309149097933272), ('src/_pytest/fixtures.py', 1573, 1574, 0.12309149097933272), ('src/_pytest/fixtures.py', 1577, 1577, 0.12309149097933272), ('src/_pytest/fixtures.py', 1616, 1618, 0.12309149097933272), ('src/_pytest/main.py', 767, 772, 0.12309149097933272), ('src/_pytest/mark/structures.py', 350, 351, 0.12309149097933272), ('src/_pytest/mark/structures.py', 353, 353, 0.12309149097933272), ('src/_pytest/mark/structures.py', 363, 364, 0.12309149097933272), ('src/_pytest/mark/structures.py', 369, 369, 0.12309149097933272), ('src/_pytest/python.py', 132, 132, 0.12309149097933272), ('src/_pytest/python.py', 214, 216, 0.12309149097933272), ('src/_pytest/python.py', 219, 219, 0.12309149097933272), ('src/_pytest/python.py', 222, 222, 0.12309149097933272), ('src/_pytest/python.py', 224, 224, 0.12309149097933272), ('src/_pytest/python.py', 228, 228, 0.12309149097933272), ('src/_pytest/python.py', 238, 239, 0.12309149097933272), ('src/_pytest/python.py', 247, 248, 0.12309149097933272), ('src/_pytest/python.py', 275, 276, 0.12309149097933272), ('src/_pytest/python.py', 346, 346, 0.12309149097933272), ('src/_pytest/python.py', 355, 355, 0.12309149097933272), ('src/_pytest/python.py', 361, 362, 0.12309149097933272), ('src/_pytest/python.py', 365, 367, 0.12309149097933272), ('src/_pytest/python.py', 370, 370, 0.12309149097933272), ('src/_pytest/python.py', 380, 382, 0.12309149097933272), ('src/_pytest/python.py', 386, 386, 0.12309149097933272), ('src/_pytest/python.py', 390, 390, 0.12309149097933272), ('src/_pytest/python.py', 393, 393, 0.12309149097933272), ('src/_pytest/python.py', 398, 403, 0.12309149097933272), ('src/_pytest/python.py', 406, 413, 0.12309149097933272), ('src/_pytest/python.py', 415, 415, 0.12309149097933272), ('src/_pytest/python.py', 417, 419, 0.12309149097933272), ('src/_pytest/python.py', 421, 422, 0.12309149097933272), ('src/_pytest/python.py', 430, 431, 0.12309149097933272), ('src/_pytest/python.py', 433, 433, 0.12309149097933272), ('src/_pytest/python.py', 436, 441, 0.12309149097933272), ('src/_pytest/python.py', 443, 444, 0.12309149097933272), ('src/_pytest/python.py', 446, 447, 0.12309149097933272), ('src/_pytest/python.py', 449, 450, 0.12309149097933272), ('src/_pytest/python.py', 452, 452, 0.12309149097933272), ('src/_pytest/python.py', 455, 455, 0.12309149097933272), ('src/_pytest/python.py', 457, 458, 0.12309149097933272), ('src/_pytest/python.py', 488, 491, 0.12309149097933272), ('src/_pytest/python.py', 503, 504, 0.12309149097933272), ('src/_pytest/python.py', 527, 529, 0.12309149097933272), ('src/_pytest/python.py', 593, 594, 0.12309149097933272), ('src/_pytest/python.py', 685, 687, 0.12309149097933272), ('src/_pytest/python.py', 889, 889, 0.12309149097933272), ('src/_pytest/python.py', 892, 892, 0.12309149097933272), ('src/_pytest/python.py', 895, 895, 0.12309149097933272), ('src/_pytest/python.py', 898, 898, 0.12309149097933272), ('src/_pytest/python.py', 901, 901, 0.12309149097933272), ('src/_pytest/python.py', 904, 904, 0.12309149097933272), ('src/_pytest/python.py', 906, 907, 0.12309149097933272), ('src/_pytest/python.py', 1478, 1478, 0.12309149097933272), ('src/_pytest/python.py', 1480, 1481, 0.12309149097933272), ('src/_pytest/python.py', 1489, 1489, 0.12309149097933272), ('src/_pytest/python.py', 1494, 1496, 0.12309149097933272), ('src/_pytest/python.py', 1506, 1506, 0.12309149097933272), ('src/_pytest/python.py', 1520, 1522, 0.12309149097933272), ('src/_pytest/python.py', 1524, 1526, 0.12309149097933272), ('src/_pytest/python.py', 1533, 1533, 0.12309149097933272), ('src/_pytest/python.py', 1536, 1537, 0.12309149097933272), ('src/_pytest/terminal.py', 1166, 1167, 0.12309149097933272), ('src/_pytest/unittest.py', 50, 51, 0.12309149097933272), ('src/_pytest/unittest.py', 55, 56, 0.12309149097933272), ('src/_pytest/config/__init__.py', 604, 610, 0.12126781251816648), ('src/_pytest/config/__init__.py', 616, 616, 0.12126781251816648), ('src/_pytest/fixtures.py', 249, 253, 0.12126781251816648), ('src/_pytest/fixtures.py', 290, 293, 0.12126781251816648), ('src/_pytest/fixtures.py', 296, 296, 0.12126781251816648), ('src/_pytest/main.py', 201, 201, 0.12126781251816648), ('src/_pytest/main.py', 204, 204, 0.12126781251816648), ('src/_pytest/main.py', 207, 207, 0.12126781251816648), ('src/_pytest/main.py', 209, 209, 0.12126781251816648), ('src/_pytest/main.py', 211, 212, 0.12126781251816648), ('src/_pytest/main.py', 214, 214, 0.12126781251816648), ('src/_pytest/main.py', 217, 217, 0.12126781251816648), ('src/_pytest/main.py', 221, 221, 0.12126781251816648), ('src/_pytest/main.py', 224, 224, 0.12126781251816648), ('src/_pytest/main.py', 762, 765, 0.12126781251816648), ('src/_pytest/nodes.py', 146, 146, 0.12126781251816648), ('src/_pytest/nodes.py', 148, 148, 0.12126781251816648), ('src/_pytest/nodes.py', 169, 169, 0.12126781251816648), ('src/_pytest/nodes.py', 171, 173, 0.12126781251816648), ('src/_pytest/nodes.py', 625, 626, 0.12126781251816648), ('src/_pytest/nodes.py', 630, 630, 0.12126781251816648), ('src/_pytest/pathlib.py', 517, 518, 0.12126781251816648), ('src/_pytest/pathlib.py', 521, 524, 0.12126781251816648), ('src/_pytest/pathlib.py', 526, 526, 0.12126781251816648), ('src/_pytest/pathlib.py', 529, 530, 0.12126781251816648), ('src/_pytest/pathlib.py', 534, 534, 0.12126781251816648), ('src/_pytest/pathlib.py', 537, 537, 0.12126781251816648), ('src/_pytest/pytester.py', 1054, 1055, 0.12126781251816648), ('src/_pytest/tmpdir.py', 34, 34, 0.12126781251816648), ('src/_pytest/cacheprovider.py', 502, 502, 0.1203858530857692), ('src/_pytest/capture.py', 723, 729, 0.1203858530857692), ('src/_pytest/capture.py', 731, 731, 0.1203858530857692), ('src/_pytest/config/findpaths.py', 119, 120, 0.1203858530857692), ('src/_pytest/config/findpaths.py', 174, 178, 0.1203858530857692), ('src/_pytest/config/findpaths.py', 189, 191, 0.1203858530857692), ('src/_pytest/nodes.py', 191, 191, 0.1203858530857692), ('src/_pytest/nodes.py', 193, 193, 0.1203858530857692), ('src/_pytest/nodes.py', 195, 195, 0.1203858530857692), ('src/_pytest/nodes.py', 517, 523, 0.1203858530857692), ('src/_pytest/nodes.py', 527, 528, 0.1203858530857692), ('src/_pytest/nodes.py', 530, 530, 0.1203858530857692), ('src/_pytest/nodes.py', 532, 532, 0.1203858530857692), ('src/_pytest/nodes.py', 544, 544, 0.1203858530857692), ('src/_pytest/python.py', 191, 193, 0.1203858530857692), ('src/_pytest/python.py', 195, 195, 0.1203858530857692), ('src/_pytest/python.py', 205, 205, 0.1203858530857692), ('src/_pytest/python.py', 208, 209, 0.1203858530857692), ('src/_pytest/python.py', 485, 485, 0.1203858530857692), ('src/_pytest/python.py', 500, 501, 0.1203858530857692), ('src/_pytest/python.py', 551, 553, 0.1203858530857692), ('src/_pytest/terminal.py', 247, 247, 0.1203858530857692), ('src/_pytest/terminal.py', 249, 249, 0.1203858530857692), ('src/_pytest/terminal.py', 251, 252, 0.1203858530857692), ('src/_pytest/terminal.py', 705, 708, 0.1203858530857692), ('src/_pytest/terminal.py', 821, 821, 0.1203858530857692), ('src/_pytest/terminal.py', 911, 912, 0.1203858530857692), ('src/_pytest/capture.py', 114, 115, 0.11952286093343936), ('src/_pytest/capture.py', 119, 119, 0.11952286093343936), ('src/_pytest/capture.py', 152, 159, 0.11952286093343936), ('src/_pytest/capture.py', 358, 358, 0.11952286093343936), ('src/_pytest/capture.py', 360, 361, 0.11952286093343936), ('src/_pytest/capture.py', 379, 380, 0.11952286093343936), ('src/_pytest/capture.py', 382, 384, 0.11952286093343936), ('src/_pytest/capture.py', 386, 386, 0.11952286093343936), ('src/_pytest/capture.py', 388, 391, 0.11952286093343936), ('src/_pytest/capture.py', 393, 394, 0.11952286093343936), ('src/_pytest/capture.py', 398, 398, 0.11952286093343936), ('src/_pytest/capture.py', 418, 421, 0.11952286093343936), ('src/_pytest/capture.py', 434, 435, 0.11952286093343936), ('src/_pytest/capture.py', 437, 439, 0.11952286093343936), ('src/_pytest/capture.py', 443, 445, 0.11952286093343936), ('src/_pytest/config/__init__.py', 469, 473, 0.11952286093343936), ('src/_pytest/config/findpaths.py', 108, 108, 0.11952286093343936), ('src/_pytest/terminal.py', 358, 358, 0.11952286093343936), ('src/_pytest/terminal.py', 360, 362, 0.11952286093343936), ('src/_pytest/_code/source.py', 35, 38, 0.11867816581938533), ('src/_pytest/_code/source.py', 40, 40, 0.11867816581938533), ('src/_pytest/_code/source.py', 42, 42, 0.11867816581938533), ('src/_pytest/_code/source.py', 44, 45, 0.11867816581938533), ('src/_pytest/_code/source.py', 48, 50, 0.11867816581938533), ('src/_pytest/_code/source.py', 321, 321, 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 111, 112, 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 115, 115, 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 121, 121, 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 126, 128, 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 136, 137, 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 139, 139, 0.11867816581938533), ('src/_pytest/assertion/__init__.py', 173, 176, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 76, 77, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 118, 122, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 128, 128, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 131, 134, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 136, 136, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 146, 150, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 154, 155, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 158, 165, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 167, 167, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 170, 170, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 291, 291, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 293, 294, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 296, 297, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 329, 331, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 338, 340, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 348, 349, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 354, 361, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 371, 374, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 410, 410, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 654, 659, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 663, 663, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 671, 671, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 676, 678, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 680, 682, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 684, 689, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 696, 697, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 701, 702, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 706, 707, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 709, 709, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 711, 718, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 722, 727, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 730, 730, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 732, 732, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 1081, 1082, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 1095, 1095, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 1100, 1100, 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 1109, 1109, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 143, 146, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 148, 149, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 153, 157, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 161, 162, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 166, 167, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 169, 171, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 173, 174, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 271, 271, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 273, 273, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 282, 284, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 294, 294, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 296, 297, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 343, 344, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 347, 349, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 366, 366, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 368, 368, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 382, 382, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 388, 389, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 392, 392, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 395, 396, 0.11867816581938533), ('src/_pytest/cacheprovider.py', 491, 491, 0.11867816581938533), ('src/_pytest/capture.py', 734, 734, 0.11867816581938533), ('src/_pytest/compat.py', 170, 171, 0.11867816581938533), ('src/_pytest/compat.py', 178, 180, 0.11867816581938533), ('src/_pytest/compat.py', 182, 182, 0.11867816581938533), ('src/_pytest/compat.py', 185, 185, 0.11867816581938533), ('src/_pytest/compat.py', 187, 187, 0.11867816581938533), ('src/_pytest/compat.py', 193, 194, 0.11867816581938533), ('src/_pytest/compat.py', 198, 198, 0.11867816581938533), ('src/_pytest/compat.py', 200, 200, 0.11867816581938533), ('src/_pytest/compat.py', 314, 316, 0.11867816581938533), ('src/_pytest/compat.py', 319, 319, 0.11867816581938533), ('src/_pytest/compat.py', 321, 321, 0.11867816581938533), ('src/_pytest/compat.py', 339, 342, 0.11867816581938533), ('src/_pytest/config/__init__.py', 509, 510, 0.11867816581938533), ('src/_pytest/doctest.py', 123, 125, 0.11867816581938533), ('src/_pytest/doctest.py', 131, 131, 0.11867816581938533), ('src/_pytest/fixtures.py', 105, 106, 0.11867816581938533), ('src/_pytest/fixtures.py', 108, 114, 0.11867816581938533), ('src/_pytest/fixtures.py', 117, 117, 0.11867816581938533), ('src/_pytest/fixtures.py', 231, 233, 0.11867816581938533), ('src/_pytest/fixtures.py', 239, 239, 0.11867816581938533), ('src/_pytest/fixtures.py', 281, 288, 0.11867816581938533), ('src/_pytest/fixtures.py', 301, 302, 0.11867816581938533), ('src/_pytest/fixtures.py', 304, 304, 0.11867816581938533), ('src/_pytest/fixtures.py', 323, 324, 0.11867816581938533), ('src/_pytest/fixtures.py', 797, 799, 0.11867816581938533), ('src/_pytest/fixtures.py', 974, 979, 0.11867816581938533), ('src/_pytest/fixtures.py', 982, 986, 0.11867816581938533), ('src/_pytest/fixtures.py', 988, 991, 0.11867816581938533), ('src/_pytest/fixtures.py', 993, 996, 0.11867816581938533), ('src/_pytest/fixtures.py', 1039, 1041, 0.11867816581938533), ('src/_pytest/fixtures.py', 1045, 1046, 0.11867816581938533), ('src/_pytest/fixtures.py', 1448, 1453, 0.11867816581938533), ('src/_pytest/fixtures.py', 1455, 1455, 0.11867816581938533), ('src/_pytest/fixtures.py', 1495, 1499, 0.11867816581938533), ('src/_pytest/fixtures.py', 1501, 1501, 0.11867816581938533), ('src/_pytest/fixtures.py', 1506, 1506, 0.11867816581938533), ('src/_pytest/fixtures.py', 1511, 1511, 0.11867816581938533), ('src/_pytest/fixtures.py', 1608, 1608, 0.11867816581938533), ('src/_pytest/fixtures.py', 1613, 1614, 0.11867816581938533), ('src/_pytest/fixtures.py', 1621, 1623, 0.11867816581938533), ('src/_pytest/fixtures.py', 1626, 1628, 0.11867816581938533), ('src/_pytest/fixtures.py', 1631, 1631, 0.11867816581938533), ('src/_pytest/fixtures.py', 1633, 1633, 0.11867816581938533), ('src/_pytest/fixtures.py', 1639, 1639, 0.11867816581938533), ('src/_pytest/fixtures.py', 1641, 1649, 0.11867816581938533), ('src/_pytest/fixtures.py', 1652, 1653, 0.11867816581938533), ('src/_pytest/fixtures.py', 1660, 1662, 0.11867816581938533), ('src/_pytest/fixtures.py', 1665, 1665, 0.11867816581938533), ('src/_pytest/helpconfig.py', 240, 241, 0.11867816581938533), ('src/_pytest/helpconfig.py', 250, 250, 0.11867816581938533), ('src/_pytest/helpconfig.py', 259, 259, 0.11867816581938533), ('src/_pytest/logging.py', 627, 627, 0.11867816581938533), ('src/_pytest/logging.py', 629, 631, 0.11867816581938533), ('src/_pytest/logging.py', 706, 706, 0.11867816581938533), ('src/_pytest/logging.py', 708, 710, 0.11867816581938533), ('src/_pytest/main.py', 374, 376, 0.11867816581938533), ('src/_pytest/main.py', 425, 426, 0.11867816581938533), ('src/_pytest/main.py', 428, 434, 0.11867816581938533), ('src/_pytest/main.py', 437, 438, 0.11867816581938533), ('src/_pytest/main.py', 440, 441, 0.11867816581938533), ('src/_pytest/main.py', 443, 444, 0.11867816581938533), ('src/_pytest/main.py', 448, 448, 0.11867816581938533), ('src/_pytest/main.py', 450, 451, 0.11867816581938533), ('src/_pytest/main.py', 454, 454, 0.11867816581938533), ('src/_pytest/main.py', 458, 459, 0.11867816581938533), ('src/_pytest/main.py', 476, 476, 0.11867816581938533), ('src/_pytest/main.py', 478, 478, 0.11867816581938533), ('src/_pytest/main.py', 514, 519, 0.11867816581938533), ('src/_pytest/main.py', 522, 524, 0.11867816581938533), ('src/_pytest/main.py', 563, 563, 0.11867816581938533), ('src/_pytest/main.py', 572, 576, 0.11867816581938533), ('src/_pytest/main.py', 583, 587, 0.11867816581938533), ('src/_pytest/main.py', 592, 592, 0.11867816581938533), ('src/_pytest/main.py', 597, 600, 0.11867816581938533), ('src/_pytest/main.py', 603, 605, 0.11867816581938533), ('src/_pytest/main.py', 694, 695, 0.11867816581938533), ('src/_pytest/main.py', 697, 699, 0.11867816581938533), ('src/_pytest/main.py', 705, 705, 0.11867816581938533), ('src/_pytest/mark/__init__.py', 178, 180, 0.11867816581938533), ('src/_pytest/mark/__init__.py', 234, 236, 0.11867816581938533), ('src/_pytest/mark/__init__.py', 259, 260, 0.11867816581938533), ('src/_pytest/mark/structures.py', 481, 482, 0.11867816581938533), ('src/_pytest/mark/structures.py', 526, 528, 0.11867816581938533), ('src/_pytest/nodes.py', 99, 99, 0.11867816581938533), ('src/_pytest/nodes.py', 129, 129, 0.11867816581938533), ('src/_pytest/nodes.py', 132, 132, 0.11867816581938533), ('src/_pytest/nodes.py', 135, 136, 0.11867816581938533), ('src/_pytest/nodes.py', 138, 138, 0.11867816581938533), ('src/_pytest/nodes.py', 140, 140, 0.11867816581938533), ('src/_pytest/nodes.py', 143, 144, 0.11867816581938533), ('src/_pytest/nodes.py', 151, 151, 0.11867816581938533), ('src/_pytest/nodes.py', 154, 154, 0.11867816581938533), ('src/_pytest/nodes.py', 157, 157, 0.11867816581938533), ('src/_pytest/nodes.py', 160, 160, 0.11867816581938533), ('src/_pytest/nodes.py', 163, 163, 0.11867816581938533), ('src/_pytest/nodes.py', 165, 167, 0.11867816581938533), ('src/_pytest/nodes.py', 177, 177, 0.11867816581938533), ('src/_pytest/nodes.py', 525, 525, 0.11867816581938533), ('src/_pytest/nodes.py', 535, 535, 0.11867816581938533), ('src/_pytest/nodes.py', 537, 537, 0.11867816581938533), ('src/_pytest/nodes.py', 584, 585, 0.11867816581938533), ('src/_pytest/nodes.py', 603, 603, 0.11867816581938533), ('src/_pytest/pastebin.py', 96, 97, 0.11867816581938533), ('src/_pytest/pathlib.py', 467, 467, 0.11867816581938533), ('src/_pytest/pathlib.py', 469, 469, 0.11867816581938533), ('src/_pytest/pathlib.py', 471, 471, 0.11867816581938533), ('src/_pytest/pathlib.py', 474, 474, 0.11867816581938533), ('src/_pytest/pathlib.py', 492, 493, 0.11867816581938533), ('src/_pytest/pathlib.py', 500, 501, 0.11867816581938533), ('src/_pytest/pathlib.py', 506, 506, 0.11867816581938533), ('src/_pytest/pathlib.py', 509, 511, 0.11867816581938533), ('src/_pytest/pathlib.py', 515, 515, 0.11867816581938533), ('src/_pytest/pathlib.py', 545, 549, 0.11867816581938533), ('src/_pytest/pathlib.py', 553, 553, 0.11867816581938533), ('src/_pytest/pytester.py', 655, 655, 0.11867816581938533), ('src/_pytest/pytester.py', 657, 658, 0.11867816581938533), ('src/_pytest/pytester.py', 660, 660, 0.11867816581938533), ('src/_pytest/pytester.py', 665, 674, 0.11867816581938533), ('src/_pytest/pytester.py', 734, 734, 0.11867816581938533), ('src/_pytest/reports.py', 353, 353, 0.11867816581938533), ('src/_pytest/reports.py', 356, 356, 0.11867816581938533), ('src/_pytest/reports.py', 359, 359, 0.11867816581938533), ('src/_pytest/reports.py', 362, 362, 0.11867816581938533), ('src/_pytest/reports.py', 368, 368, 0.11867816581938533), ('src/_pytest/reports.py', 370, 370, 0.11867816581938533), ('src/_pytest/runner.py', 58, 61, 0.11867816581938533), ('src/_pytest/runner.py', 90, 90, 0.11867816581938533), ('src/_pytest/runner.py', 94, 94, 0.11867816581938533), ('src/_pytest/runner.py', 269, 269, 0.11867816581938533), ('src/_pytest/runner.py', 274, 274, 0.11867816581938533), ('src/_pytest/runner.py', 317, 317, 0.11867816581938533), ('src/_pytest/runner.py', 319, 321, 0.11867816581938533), ('src/_pytest/runner.py', 341, 344, 0.11867816581938533), ('src/_pytest/runner.py', 351, 352, 0.11867816581938533), ('src/_pytest/runner.py', 387, 387, 0.11867816581938533), ('src/_pytest/runner.py', 389, 389, 0.11867816581938533), ('src/_pytest/runner.py', 391, 391, 0.11867816581938533), ('src/_pytest/runner.py', 432, 436, 0.11867816581938533), ('src/_pytest/runner.py', 438, 438, 0.11867816581938533), ('src/_pytest/stepwise.py', 47, 47, 0.11867816581938533), ('src/_pytest/stepwise.py', 52, 53, 0.11867816581938533), ('src/_pytest/stepwise.py', 112, 112, 0.11867816581938533), ('src/_pytest/stepwise.py', 114, 114, 0.11867816581938533), ('src/_pytest/stepwise.py', 117, 118, 0.11867816581938533), ('src/_pytest/stepwise.py', 122, 122, 0.11867816581938533), ('src/_pytest/terminal.py', 344, 344, 0.11867816581938533), ('src/_pytest/terminal.py', 375, 375, 0.11867816581938533), ('src/_pytest/terminal.py', 379, 379, 0.11867816581938533), ('src/_pytest/terminal.py', 383, 383, 0.11867816581938533), ('src/_pytest/terminal.py', 400, 401, 0.11867816581938533), ('src/_pytest/terminal.py', 437, 437, 0.11867816581938533), ('src/_pytest/terminal.py', 439, 440, 0.11867816581938533), ('src/_pytest/terminal.py', 467, 468, 0.11867816581938533), ('src/_pytest/terminal.py', 639, 639, 0.11867816581938533), ('src/_pytest/terminal.py', 641, 641, 0.11867816581938533), ('src/_pytest/terminal.py', 643, 645, 0.11867816581938533), ('src/_pytest/terminal.py', 649, 649, 0.11867816581938533), ('src/_pytest/terminal.py', 652, 652, 0.11867816581938533), ('src/_pytest/terminal.py', 662, 667, 0.11867816581938533), ('src/_pytest/terminal.py', 670, 671, 0.11867816581938533), ('src/_pytest/terminal.py', 673, 673, 0.11867816581938533), ('src/_pytest/terminal.py', 675, 675, 0.11867816581938533), ('src/_pytest/terminal.py', 677, 677, 0.11867816581938533), ('src/_pytest/terminal.py', 679, 679, 0.11867816581938533), ('src/_pytest/terminal.py', 681, 681, 0.11867816581938533), ('src/_pytest/terminal.py', 686, 686, 0.11867816581938533), ('src/_pytest/terminal.py', 690, 692, 0.11867816581938533), ('src/_pytest/terminal.py', 694, 699, 0.11867816581938533), ('src/_pytest/terminal.py', 702, 703, 0.11867816581938533), ('src/_pytest/terminal.py', 711, 713, 0.11867816581938533), ('src/_pytest/terminal.py', 715, 715, 0.11867816581938533), ('src/_pytest/terminal.py', 720, 722, 0.11867816581938533), ('src/_pytest/terminal.py', 725, 725, 0.11867816581938533), ('src/_pytest/terminal.py', 727, 727, 0.11867816581938533), ('src/_pytest/terminal.py', 730, 731, 0.11867816581938533), ('src/_pytest/terminal.py', 734, 734, 0.11867816581938533), ('src/_pytest/terminal.py', 736, 737, 0.11867816581938533), ('src/_pytest/terminal.py', 739, 739, 0.11867816581938533), ('src/_pytest/terminal.py', 742, 742, 0.11867816581938533), ('src/_pytest/terminal.py', 744, 745, 0.11867816581938533), ('src/_pytest/terminal.py', 747, 747, 0.11867816581938533), ('src/_pytest/terminal.py', 749, 749, 0.11867816581938533), ('src/_pytest/terminal.py', 802, 810, 0.11867816581938533), ('src/_pytest/terminal.py', 812, 814, 0.11867816581938533), ('src/_pytest/terminal.py', 816, 816, 0.11867816581938533), ('src/_pytest/terminal.py', 818, 818, 0.11867816581938533), ('src/_pytest/terminal.py', 823, 823, 0.11867816581938533), ('src/_pytest/terminal.py', 827, 832, 0.11867816581938533), ('src/_pytest/terminal.py', 834, 834, 0.11867816581938533), ('src/_pytest/terminal.py', 900, 901, 0.11867816581938533), ('src/_pytest/terminal.py', 904, 904, 0.11867816581938533), ('src/_pytest/terminal.py', 907, 909, 0.11867816581938533), ('src/_pytest/terminal.py', 964, 965, 0.11867816581938533), ('src/_pytest/terminal.py', 1048, 1048, 0.11867816581938533), ('src/_pytest/terminal.py', 1051, 1053, 0.11867816581938533), ('src/_pytest/terminal.py', 1055, 1063, 0.11867816581938533), ('src/_pytest/terminal.py', 1065, 1070, 0.11867816581938533), ('src/_pytest/terminal.py', 1072, 1074, 0.11867816581938533), ('src/_pytest/terminal.py', 1076, 1077, 0.11867816581938533), ('src/_pytest/terminal.py', 1079, 1080, 0.11867816581938533), ('src/_pytest/terminal.py', 1085, 1085, 0.11867816581938533), ('src/_pytest/terminal.py', 1088, 1088, 0.11867816581938533), ('src/_pytest/terminal.py', 1098, 1098, 0.11867816581938533), ('src/_pytest/terminal.py', 1108, 1108, 0.11867816581938533), ('src/_pytest/terminal.py', 1133, 1139, 0.11867816581938533), ('src/_pytest/terminal.py', 1142, 1146, 0.11867816581938533), ('src/_pytest/terminal.py', 1182, 1182, 0.11867816581938533), ('src/_pytest/terminal.py', 1195, 1195, 0.11867816581938533), ('src/_pytest/terminal.py', 1198, 1198, 0.11867816581938533), ('src/_pytest/terminal.py', 1313, 1314, 0.11867816581938533), ('src/_pytest/warnings.py', 177, 179, 0.11867816581938533), ('src/_pytest/warnings.py', 181, 181, 0.11867816581938533), ('src/_pytest/warnings.py', 186, 188, 0.11867816581938533), ('src/_pytest/warnings.py', 190, 190, 0.11867816581938533), ('src/_pytest/_argcomplete.py', 107, 107, 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 26, 26, 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 28, 29, 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 63, 65, 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 73, 77, 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 156, 157, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 25, 32, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 34, 34, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 40, 44, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 79, 79, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 86, 88, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 93, 96, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 98, 101, 0.11785113019775793), ('src/_pytest/assertion/__init__.py', 103, 104, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 60, 62, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 65, 67, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 70, 73, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 104, 105, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 107, 107, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 109, 109, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 113, 113, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 115, 115, 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 213, 213, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 69, 70, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 72, 72, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 84, 84, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 114, 114, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 127, 129, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 131, 132, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 247, 252, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 254, 256, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 258, 258, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 357, 360, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 400, 406, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 409, 414, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 418, 423, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 426, 430, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 432, 432, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 436, 440, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 442, 443, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 445, 453, 0.11785113019775793), ('src/_pytest/cacheprovider.py', 467, 469, 0.11785113019775793), ('src/_pytest/capture.py', 33, 40, 0.11785113019775793), ('src/_pytest/capture.py', 42, 47, 0.11785113019775793), ('src/_pytest/capture.py', 60, 60, 0.11785113019775793), ('src/_pytest/capture.py', 85, 85, 0.11785113019775793), ('src/_pytest/capture.py', 162, 162, 0.11785113019775793), ('src/_pytest/capture.py', 165, 168, 0.11785113019775793), ('src/_pytest/capture.py', 234, 234, 0.11785113019775793), ('src/_pytest/capture.py', 257, 262, 0.11785113019775793), ('src/_pytest/capture.py', 294, 296, 0.11785113019775793), ('src/_pytest/capture.py', 307, 308, 0.11785113019775793), ('src/_pytest/capture.py', 310, 313, 0.11785113019775793), ('src/_pytest/capture.py', 501, 503, 0.11785113019775793), ('src/_pytest/capture.py', 511, 517, 0.11785113019775793), ('src/_pytest/capture.py', 521, 522, 0.11785113019775793), ('src/_pytest/capture.py', 524, 524, 0.11785113019775793), ('src/_pytest/capture.py', 526, 526, 0.11785113019775793), ('src/_pytest/capture.py', 550, 550, 0.11785113019775793), ('src/_pytest/capture.py', 552, 558, 0.11785113019775793), ('src/_pytest/capture.py', 603, 605, 0.11785113019775793), ('src/_pytest/capture.py', 625, 627, 0.11785113019775793), ('src/_pytest/capture.py', 630, 633, 0.11785113019775793), ('src/_pytest/config/__init__.py', 262, 266, 0.11785113019775793), ('src/_pytest/config/__init__.py', 270, 270, 0.11785113019775793), ('src/_pytest/config/__init__.py', 272, 272, 0.11785113019775793), ('src/_pytest/config/__init__.py', 274, 275, 0.11785113019775793), ('src/_pytest/config/__init__.py', 277, 277, 0.11785113019775793), ('src/_pytest/config/__init__.py', 296, 296, 0.11785113019775793), ('src/_pytest/config/__init__.py', 298, 298, 0.11785113019775793), ('src/_pytest/config/__init__.py', 300, 300, 0.11785113019775793), ('src/_pytest/config/__init__.py', 316, 316, 0.11785113019775793), ('src/_pytest/config/__init__.py', 333, 333, 0.11785113019775793), ('src/_pytest/config/__init__.py', 335, 335, 0.11785113019775793), ('src/_pytest/config/__init__.py', 337, 337, 0.11785113019775793), ('src/_pytest/config/__init__.py', 340, 344, 0.11785113019775793), ('src/_pytest/config/__init__.py', 346, 348, 0.11785113019775793), ('src/_pytest/config/__init__.py', 361, 361, 0.11785113019775793), ('src/_pytest/config/__init__.py', 363, 363, 0.11785113019775793), ('src/_pytest/config/__init__.py', 369, 370, 0.11785113019775793), ('src/_pytest/config/__init__.py', 372, 372, 0.11785113019775793), ('src/_pytest/config/__init__.py', 375, 376, 0.11785113019775793), ('src/_pytest/config/__init__.py', 379, 379, 0.11785113019775793), ('src/_pytest/config/__init__.py', 383, 385, 0.11785113019775793), ('src/_pytest/config/__init__.py', 388, 388, 0.11785113019775793), ('src/_pytest/config/__init__.py', 390, 392, 0.11785113019775793), ('src/_pytest/config/__init__.py', 395, 397, 0.11785113019775793), ('src/_pytest/config/__init__.py', 399, 399, 0.11785113019775793), ('src/_pytest/config/__init__.py', 402, 407, 0.11785113019775793), ('src/_pytest/config/__init__.py', 409, 409, 0.11785113019775793), ('src/_pytest/config/__init__.py', 414, 414, 0.11785113019775793), ('src/_pytest/config/__init__.py', 424, 427, 0.11785113019775793), ('src/_pytest/config/__init__.py', 430, 432, 0.11785113019775793), ('src/_pytest/config/__init__.py', 446, 448, 0.11785113019775793), ('src/_pytest/config/__init__.py', 451, 453, 0.11785113019775793), ('src/_pytest/config/__init__.py', 456, 456, 0.11785113019775793), ('src/_pytest/config/__init__.py', 475, 479, 0.11785113019775793), ('src/_pytest/config/__init__.py', 495, 495, 0.11785113019775793), ('src/_pytest/config/__init__.py', 653, 653, 0.11785113019775793), ('src/_pytest/config/__init__.py', 656, 656, 0.11785113019775793), ('src/_pytest/config/__init__.py', 661, 662, 0.11785113019775793), ('src/_pytest/config/__init__.py', 674, 674, 0.11785113019775793), ('src/_pytest/config/__init__.py', 677, 677, 0.11785113019775793), ('src/_pytest/config/__init__.py', 680, 681, 0.11785113019775793), ('src/_pytest/config/__init__.py', 683, 683, 0.11785113019775793), ('src/_pytest/config/__init__.py', 688, 689, 0.11785113019775793), ('src/_pytest/config/__init__.py', 704, 705, 0.11785113019775793), ('src/_pytest/config/__init__.py', 713, 714, 0.11785113019775793), ('src/_pytest/config/__init__.py', 716, 716, 0.11785113019775793), ('src/_pytest/config/__init__.py', 719, 719, 0.11785113019775793), ('src/_pytest/config/__init__.py', 722, 723, 0.11785113019775793), ('src/_pytest/config/__init__.py', 809, 809, 0.11785113019775793), ('src/_pytest/config/__init__.py', 852, 852, 0.11785113019775793), ('src/_pytest/config/__init__.py', 854, 854, 0.11785113019775793), ('src/_pytest/config/__init__.py', 859, 859, 0.11785113019775793), ('src/_pytest/config/__init__.py', 864, 864, 0.11785113019775793), ('src/_pytest/config/__init__.py', 866, 869, 0.11785113019775793), ('src/_pytest/config/__init__.py', 871, 871, 0.11785113019775793), ('src/_pytest/config/__init__.py', 876, 881, 0.11785113019775793), ('src/_pytest/config/__init__.py', 884, 888, 0.11785113019775793), ('src/_pytest/config/__init__.py', 891, 891, 0.11785113019775793), ('src/_pytest/config/__init__.py', 899, 899, 0.11785113019775793), ('src/_pytest/config/__init__.py', 904, 904, 0.11785113019775793), ('src/_pytest/config/__init__.py', 907, 911, 0.11785113019775793), ('src/_pytest/config/__init__.py', 914, 920, 0.11785113019775793), ('src/_pytest/config/__init__.py', 931, 932, 0.11785113019775793), ('src/_pytest/config/__init__.py', 952, 952, 0.11785113019775793), ('src/_pytest/config/__init__.py', 990, 991, 0.11785113019775793), ('src/_pytest/config/__init__.py', 993, 995, 0.11785113019775793), ('src/_pytest/config/__init__.py', 999, 999, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1002, 1003, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1005, 1009, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1011, 1019, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1021, 1021, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1030, 1033, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1035, 1036, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1040, 1041, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1049, 1049, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1051, 1051, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1053, 1053, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1067, 1070, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1073, 1073, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1075, 1075, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1078, 1080, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1085, 1088, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1091, 1094, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1098, 1100, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1102, 1103, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1106, 1108, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1125, 1125, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1128, 1128, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1130, 1131, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1147, 1147, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1151, 1153, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1193, 1194, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1198, 1199, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1201, 1202, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1204, 1204, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1206, 1210, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1225, 1227, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1241, 1242, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1245, 1254, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1309, 1309, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1313, 1313, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1325, 1325, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1353, 1353, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1360, 1360, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1383, 1386, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1398, 1399, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1401, 1401, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1404, 1405, 0.11785113019775793), ('src/_pytest/config/__init__.py', 1408, 1408, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 43, 49, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 52, 54, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 70, 79, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 102, 102, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 104, 107, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 110, 110, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 112, 122, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 125, 126, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 134, 137, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 147, 147, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 157, 159, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 178, 180, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 212, 215, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 222, 225, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 228, 228, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 253, 254, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 256, 264, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 273, 273, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 277, 286, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 288, 289, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 295, 296, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 302, 303, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 309, 309, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 311, 311, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 317, 317, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 337, 340, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 350, 351, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 353, 353, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 355, 356, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 359, 360, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 363, 365, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 367, 369, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 379, 386, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 390, 390, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 409, 410, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 418, 418, 0.11785113019775793), ('src/_pytest/config/argparsing.py', 469, 471, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 90, 90, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 112, 114, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 116, 117, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 131, 131, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 135, 135, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 138, 138, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 141, 141, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 147, 147, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 149, 149, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 153, 153, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 165, 167, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 193, 193, 0.11785113019775793), ('src/_pytest/config/findpaths.py', 201, 202, 0.11785113019775793), ('src/_pytest/debugging.py', 39, 44, 0.11785113019775793), ('src/_pytest/debugging.py', 46, 51, 0.11785113019775793), ('src/_pytest/debugging.py', 54, 58, 0.11785113019775793), ('src/_pytest/debugging.py', 63, 63, 0.11785113019775793), ('src/_pytest/debugging.py', 65, 65, 0.11785113019775793), ('src/_pytest/debugging.py', 67, 67, 0.11785113019775793), ('src/_pytest/debugging.py', 70, 71, 0.11785113019775793), ('src/_pytest/debugging.py', 73, 75, 0.11785113019775793), ('src/_pytest/debugging.py', 79, 84, 0.11785113019775793), ('src/_pytest/debugging.py', 86, 86, 0.11785113019775793), ('src/_pytest/doctest.py', 65, 69, 0.11785113019775793), ('src/_pytest/doctest.py', 71, 72, 0.11785113019775793), ('src/_pytest/doctest.py', 74, 80, 0.11785113019775793), ('src/_pytest/doctest.py', 82, 88, 0.11785113019775793), ('src/_pytest/doctest.py', 90, 96, 0.11785113019775793), ('src/_pytest/doctest.py', 98, 103, 0.11785113019775793), ('src/_pytest/doctest.py', 105, 110, 0.11785113019775793), ('src/_pytest/doctest.py', 117, 117, 0.11785113019775793), ('src/_pytest/faulthandler.py', 18, 19, 0.11785113019775793), ('src/_pytest/faulthandler.py', 22, 22, 0.11785113019775793), ('src/_pytest/faulthandler.py', 26, 26, 0.11785113019775793), ('src/_pytest/faulthandler.py', 28, 28, 0.11785113019775793), ('src/_pytest/faulthandler.py', 33, 33, 0.11785113019775793), ('src/_pytest/faulthandler.py', 37, 38, 0.11785113019775793), ('src/_pytest/faulthandler.py', 88, 90, 0.11785113019775793), ('src/_pytest/fixtures.py', 778, 780, 0.11785113019775793), ('src/_pytest/fixtures.py', 782, 782, 0.11785113019775793), ('src/_pytest/fixtures.py', 1032, 1033, 0.11785113019775793), ('src/_pytest/fixtures.py', 1404, 1408, 0.11785113019775793), ('src/_pytest/helpconfig.py', 28, 34, 0.11785113019775793), ('src/_pytest/helpconfig.py', 46, 53, 0.11785113019775793), ('src/_pytest/helpconfig.py', 56, 61, 0.11785113019775793), ('src/_pytest/helpconfig.py', 63, 69, 0.11785113019775793), ('src/_pytest/helpconfig.py', 73, 78, 0.11785113019775793), ('src/_pytest/helpconfig.py', 80, 85, 0.11785113019775793), ('src/_pytest/helpconfig.py', 87, 92, 0.11785113019775793), ('src/_pytest/helpconfig.py', 98, 100, 0.11785113019775793), ('src/_pytest/junitxml.py', 391, 400, 0.11785113019775793), ('src/_pytest/junitxml.py', 402, 408, 0.11785113019775793), ('src/_pytest/junitxml.py', 410, 411, 0.11785113019775793), ('src/_pytest/junitxml.py', 413, 415, 0.11785113019775793), ('src/_pytest/junitxml.py', 417, 417, 0.11785113019775793), ('src/_pytest/junitxml.py', 419, 423, 0.11785113019775793), ('src/_pytest/junitxml.py', 425, 428, 0.11785113019775793), ('src/_pytest/junitxml.py', 430, 431, 0.11785113019775793), ('src/_pytest/junitxml.py', 436, 436, 0.11785113019775793), ('src/_pytest/junitxml.py', 438, 438, 0.11785113019775793), ('src/_pytest/junitxml.py', 456, 457, 0.11785113019775793), ('src/_pytest/logging.py', 62, 64, 0.11785113019775793), ('src/_pytest/logging.py', 66, 68, 0.11785113019775793), ('src/_pytest/logging.py', 70, 70, 0.11785113019775793), ('src/_pytest/logging.py', 72, 74, 0.11785113019775793), ('src/_pytest/logging.py', 78, 80, 0.11785113019775793), ('src/_pytest/logging.py', 82, 83, 0.11785113019775793), ('src/_pytest/logging.py', 100, 101, 0.11785113019775793), ('src/_pytest/logging.py', 142, 143, 0.11785113019775793), ('src/_pytest/logging.py', 189, 194, 0.11785113019775793), ('src/_pytest/logging.py', 199, 199, 0.11785113019775793), ('src/_pytest/logging.py', 201, 203, 0.11785113019775793), ('src/_pytest/logging.py', 205, 205, 0.11785113019775793), ('src/_pytest/logging.py', 207, 211, 0.11785113019775793), ('src/_pytest/logging.py', 213, 213, 0.11785113019775793), ('src/_pytest/logging.py', 218, 222, 0.11785113019775793), ('src/_pytest/logging.py', 224, 228, 0.11785113019775793), ('src/_pytest/logging.py', 230, 234, 0.11785113019775793), ('src/_pytest/logging.py', 236, 237, 0.11785113019775793), ('src/_pytest/logging.py', 239, 243, 0.11785113019775793), ('src/_pytest/logging.py', 245, 249, 0.11785113019775793), ('src/_pytest/logging.py', 251, 255, 0.11785113019775793), ('src/_pytest/logging.py', 257, 261, 0.11785113019775793), ('src/_pytest/logging.py', 263, 267, 0.11785113019775793), ('src/_pytest/logging.py', 269, 273, 0.11785113019775793), ('src/_pytest/logging.py', 275, 279, 0.11785113019775793), ('src/_pytest/logging.py', 320, 321, 0.11785113019775793), ('src/_pytest/logging.py', 479, 483, 0.11785113019775793), ('src/_pytest/logging.py', 486, 486, 0.11785113019775793), ('src/_pytest/logging.py', 504, 504, 0.11785113019775793), ('src/_pytest/logging.py', 517, 517, 0.11785113019775793), ('src/_pytest/logging.py', 520, 523, 0.11785113019775793), ('src/_pytest/logging.py', 525, 527, 0.11785113019775793), ('src/_pytest/logging.py', 530, 535, 0.11785113019775793), ('src/_pytest/logging.py', 537, 538, 0.11785113019775793), ('src/_pytest/logging.py', 540, 540, 0.11785113019775793), ('src/_pytest/logging.py', 543, 544, 0.11785113019775793), ('src/_pytest/logging.py', 546, 546, 0.11785113019775793), ('src/_pytest/logging.py', 554, 558, 0.11785113019775793), ('src/_pytest/logging.py', 560, 560, 0.11785113019775793), ('src/_pytest/logging.py', 564, 566, 0.11785113019775793), ('src/_pytest/logging.py', 568, 569, 0.11785113019775793), ('src/_pytest/logging.py', 574, 575, 0.11785113019775793), ('src/_pytest/logging.py', 578, 578, 0.11785113019775793), ('src/_pytest/logging.py', 612, 616, 0.11785113019775793), ('src/_pytest/logging.py', 716, 716, 0.11785113019775793), ('src/_pytest/main.py', 49, 53, 0.11785113019775793), ('src/_pytest/main.py', 55, 57, 0.11785113019775793), ('src/_pytest/main.py', 59, 60, 0.11785113019775793), ('src/_pytest/main.py', 62, 69, 0.11785113019775793), ('src/_pytest/main.py', 71, 78, 0.11785113019775793), ('src/_pytest/main.py', 80, 83, 0.11785113019775793), ('src/_pytest/main.py', 85, 89, 0.11785113019775793), ('src/_pytest/main.py', 91, 96, 0.11785113019775793), ('src/_pytest/main.py', 99, 104, 0.11785113019775793), ('src/_pytest/main.py', 106, 110, 0.11785113019775793), ('src/_pytest/main.py', 115, 121, 0.11785113019775793), ('src/_pytest/main.py', 123, 126, 0.11785113019775793), ('src/_pytest/main.py', 128, 132, 0.11785113019775793), ('src/_pytest/main.py', 134, 138, 0.11785113019775793), ('src/_pytest/main.py', 140, 144, 0.11785113019775793), ('src/_pytest/main.py', 146, 152, 0.11785113019775793), ('src/_pytest/main.py', 154, 159, 0.11785113019775793), ('src/_pytest/main.py', 161, 167, 0.11785113019775793), ('src/_pytest/main.py', 169, 174, 0.11785113019775793), ('src/_pytest/main.py', 176, 181, 0.11785113019775793), ('src/_pytest/main.py', 185, 191, 0.11785113019775793), ('src/_pytest/main.py', 193, 193, 0.11785113019775793), ('src/_pytest/main.py', 494, 494, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 65, 72, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 86, 92, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 96, 99, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 102, 103, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 264, 265, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 267, 267, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 269, 269, 0.11785113019775793), ('src/_pytest/mark/__init__.py', 277, 277, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 182, 183, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 185, 185, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 195, 195, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 202, 203, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 207, 207, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 209, 210, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 253, 254, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 262, 263, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 273, 273, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 284, 284, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 286, 286, 0.11785113019775793), ('src/_pytest/monkeypatch.py', 295, 296, 0.11785113019775793), ('src/_pytest/pastebin.py', 19, 27, 0.11785113019775793), ('src/_pytest/pastebin.py', 33, 33, 0.11785113019775793), ('src/_pytest/pastebin.py', 53, 53, 0.11785113019775793), ('src/_pytest/pathlib.py', 173, 173, 0.11785113019775793), ('src/_pytest/pathlib.py', 195, 197, 0.11785113019775793), ('src/_pytest/pathlib.py', 200, 201, 0.11785113019775793), ('src/_pytest/pathlib.py', 208, 208, 0.11785113019775793), ('src/_pytest/pathlib.py', 210, 214, 0.11785113019775793), ('src/_pytest/pathlib.py', 218, 219, 0.11785113019775793), ('src/_pytest/pathlib.py', 367, 371, 0.11785113019775793), ('src/_pytest/pathlib.py', 374, 374, 0.11785113019775793), ('src/_pytest/pytester.py', 391, 391, 0.11785113019775793), ('src/_pytest/pytester.py', 526, 526, 0.11785113019775793), ('src/_pytest/pytester.py', 529, 529, 0.11785113019775793), ('src/_pytest/pytester.py', 580, 582, 0.11785113019775793), ('src/_pytest/pytester.py', 584, 585, 0.11785113019775793), ('src/_pytest/pytester.py', 588, 597, 0.11785113019775793), ('src/_pytest/pytester.py', 599, 600, 0.11785113019775793), ('src/_pytest/pytester.py', 602, 602, 0.11785113019775793), ('src/_pytest/pytester.py', 604, 604, 0.11785113019775793), ('src/_pytest/pytester.py', 606, 608, 0.11785113019775793), ('src/_pytest/pytester.py', 610, 610, 0.11785113019775793), ('src/_pytest/pytester.py', 626, 629, 0.11785113019775793), ('src/_pytest/pytester.py', 652, 652, 0.11785113019775793), ('src/_pytest/python.py', 76, 83, 0.11785113019775793), ('src/_pytest/python.py', 86, 91, 0.11785113019775793), ('src/_pytest/python.py', 93, 95, 0.11785113019775793), ('src/_pytest/python.py', 97, 98, 0.11785113019775793), ('src/_pytest/python.py', 100, 104, 0.11785113019775793), ('src/_pytest/python.py', 106, 110, 0.11785113019775793), ('src/_pytest/python.py', 112, 116, 0.11785113019775793), ('src/_pytest/python.py', 138, 140, 0.11785113019775793), ('src/_pytest/python.py', 149, 151, 0.11785113019775793), ('src/_pytest/resultlog.py', 20, 27, 0.11785113019775793), ('src/_pytest/resultlog.py', 32, 32, 0.11785113019775793), ('src/_pytest/resultlog.py', 34, 34, 0.11785113019775793), ('src/_pytest/resultlog.py', 49, 50, 0.11785113019775793), ('src/_pytest/runner.py', 46, 53, 0.11785113019775793), ('src/_pytest/runner.py', 381, 384, 0.11785113019775793), ('src/_pytest/setuponly.py', 15, 20, 0.11785113019775793), ('src/_pytest/setuponly.py', 22, 26, 0.11785113019775793), ('src/_pytest/setupplan.py', 13, 18, 0.11785113019775793), ('src/_pytest/skipping.py', 31, 37, 0.11785113019775793), ('src/_pytest/skipping.py', 40, 42, 0.11785113019775793), ('src/_pytest/skipping.py', 44, 45, 0.11785113019775793), ('src/_pytest/skipping.py', 50, 50, 0.11785113019775793), ('src/_pytest/skipping.py', 63, 65, 0.11785113019775793), ('src/_pytest/skipping.py', 69, 71, 0.11785113019775793), ('src/_pytest/skipping.py', 76, 78, 0.11785113019775793), ('src/_pytest/stepwise.py', 13, 19, 0.11785113019775793), ('src/_pytest/stepwise.py', 21, 25, 0.11785113019775793), ('src/_pytest/stepwise.py', 31, 31, 0.11785113019775793), ('src/_pytest/stepwise.py', 36, 39, 0.11785113019775793), ('src/_pytest/stepwise.py', 41, 41, 0.11785113019775793), ('src/_pytest/store.py', 86, 86, 0.11785113019775793), ('src/_pytest/terminal.py', 88, 94, 0.11785113019775793), ('src/_pytest/terminal.py', 111, 118, 0.11785113019775793), ('src/_pytest/terminal.py', 120, 125, 0.11785113019775793), ('src/_pytest/terminal.py', 127, 132, 0.11785113019775793), ('src/_pytest/terminal.py', 134, 140, 0.11785113019775793), ('src/_pytest/terminal.py', 142, 147, 0.11785113019775793), ('src/_pytest/terminal.py', 149, 155, 0.11785113019775793), ('src/_pytest/terminal.py', 161, 167, 0.11785113019775793), ('src/_pytest/terminal.py', 169, 175, 0.11785113019775793), ('src/_pytest/terminal.py', 177, 184, 0.11785113019775793), ('src/_pytest/terminal.py', 186, 192, 0.11785113019775793), ('src/_pytest/terminal.py', 195, 200, 0.11785113019775793), ('src/_pytest/terminal.py', 202, 209, 0.11785113019775793), ('src/_pytest/terminal.py', 211, 215, 0.11785113019775793), ('src/_pytest/terminal.py', 218, 221, 0.11785113019775793), ('src/_pytest/terminal.py', 226, 228, 0.11785113019775793), ('src/_pytest/terminal.py', 238, 238, 0.11785113019775793), ('src/_pytest/terminal.py', 240, 243, 0.11785113019775793), ('src/_pytest/terminal.py', 245, 245, 0.11785113019775793), ('src/_pytest/terminal.py', 254, 255, 0.11785113019775793), ('src/_pytest/terminal.py', 259, 259, 0.11785113019775793), ('src/_pytest/terminal.py', 317, 317, 0.11785113019775793), ('src/_pytest/terminal.py', 319, 322, 0.11785113019775793), ('src/_pytest/terminal.py', 324, 328, 0.11785113019775793), ('src/_pytest/terminal.py', 330, 340, 0.11785113019775793), ('src/_pytest/terminal.py', 355, 355, 0.11785113019775793), ('src/_pytest/terminal.py', 501, 501, 0.11785113019775793), ('src/_pytest/terminal.py', 840, 840, 0.11785113019775793), ('src/_pytest/tmpdir.py', 45, 46, 0.11785113019775793), ('src/_pytest/tmpdir.py', 50, 51, 0.11785113019775793), ('src/_pytest/tmpdir.py', 55, 55, 0.11785113019775793), ('src/_pytest/tmpdir.py', 72, 73, 0.11785113019775793), ('src/_pytest/tmpdir.py', 77, 79, 0.11785113019775793), ('src/_pytest/tmpdir.py', 83, 84, 0.11785113019775793), ('src/_pytest/tmpdir.py', 120, 120, 0.11785113019775793), ('src/_pytest/tmpdir.py', 146, 151, 0.11785113019775793), ('src/_pytest/warnings.py', 59, 64, 0.11785113019775793), ('src/_pytest/warnings.py', 66, 69, 0.11785113019775793), ('src/_pytest/warnings.py', 76, 78, 0.11785113019775793), ('testing/conftest.py', 135, 136, 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 16, 16, 0.11704114719613057), ('src/_pytest/_io/terminalwriter.py', 19, 19, 0.11704114719613057), ('src/_pytest/_io/terminalwriter.py', 22, 22, 0.11704114719613057), ('src/_pytest/_io/terminalwriter.py', 81, 81, 0.11704114719613057), ('src/_pytest/_io/terminalwriter.py', 83, 83, 0.11704114719613057), ('src/_pytest/assertion/rewrite.py', 88, 88, 0.11704114719613057), ('src/_pytest/assertion/rewrite.py', 90, 91, 0.11704114719613057), ('src/_pytest/assertion/rewrite.py', 93, 93, 0.11704114719613057), ('src/_pytest/assertion/rewrite.py', 96, 97, 0.11704114719613057), ('src/_pytest/assertion/rewrite.py', 99, 99, 0.11704114719613057), ('src/_pytest/assertion/rewrite.py', 190, 191, 0.11704114719613057), ('src/_pytest/compat.py', 105, 106, 0.11704114719613057), ('src/_pytest/config/__init__.py', 506, 506, 0.11704114719613057), ('src/_pytest/config/__init__.py', 512, 512, 0.11704114719613057), ('src/_pytest/config/__init__.py', 517, 519, 0.11704114719613057), ('src/_pytest/config/__init__.py', 521, 522, 0.11704114719613057), ('src/_pytest/config/__init__.py', 525, 526, 0.11704114719613057), ('src/_pytest/faulthandler.py', 99, 99, 0.11704114719613057), ('src/_pytest/fixtures.py', 162, 163, 0.11704114719613057), ('src/_pytest/fixtures.py', 165, 165, 0.11704114719613057), ('src/_pytest/fixtures.py', 728, 729, 0.11704114719613057), ('src/_pytest/fixtures.py', 732, 732, 0.11704114719613057), ('src/_pytest/fixtures.py', 735, 735, 0.11704114719613057), ('src/_pytest/logging.py', 694, 694, 0.11704114719613057), ('src/_pytest/nodes.py', 324, 324, 0.11704114719613057), ('src/_pytest/python.py', 172, 173, 0.11704114719613057), ('src/_pytest/python.py', 175, 177, 0.11704114719613057), ('src/_pytest/python.py', 1561, 1561, 0.11704114719613057), ('src/_pytest/runner.py', 145, 147, 0.11704114719613057), ('src/_pytest/terminal.py', 264, 265, 0.11704114719613057), ('src/_pytest/terminal.py', 270, 271, 0.11704114719613057), ('src/_pytest/terminal.py', 275, 275, 0.11704114719613057), ('src/_pytest/terminal.py', 552, 553, 0.11704114719613057), ('src/_pytest/terminal.py', 573, 573, 0.11704114719613057), ('src/_pytest/_io/terminalwriter.py', 95, 96, 0.11624763874381928), ('src/_pytest/_io/terminalwriter.py', 98, 98, 0.11624763874381928), ('src/_pytest/_io/terminalwriter.py', 102, 102, 0.11624763874381928), ('src/_pytest/_io/terminalwriter.py', 147, 147, 0.11624763874381928), ('src/_pytest/_io/terminalwriter.py', 149, 149, 0.11624763874381928), ('src/_pytest/terminal.py', 1178, 1179, 0.11624763874381928), ('src/_pytest/fixtures.py', 914, 916, 0.11547005383792514), ('src/_pytest/fixtures.py', 922, 925, 0.11547005383792514), ('src/_pytest/fixtures.py', 911, 912, 0.11470786693528087), ('src/_pytest/fixtures.py', 1002, 1007, 0.11470786693528087), ('src/_pytest/runner.py', 416, 417, 0.11470786693528087), ('src/_pytest/fixtures.py', 900, 902, 0.11396057645963795), ('src/_pytest/fixtures.py', 904, 906, 0.11396057645963795), ('src/_pytest/fixtures.py', 475, 477, 0.11322770341445956), ('src/_pytest/fixtures.py', 480, 480, 0.11322770341445956), ('src/_pytest/fixtures.py', 482, 486, 0.11322770341445956), ('src/_pytest/fixtures.py', 581, 583, 0.11322770341445956), ('src/_pytest/fixtures.py', 588, 597, 0.11322770341445956), ('src/_pytest/fixtures.py', 601, 603, 0.11322770341445956), ('src/_pytest/fixtures.py', 606, 607, 0.11322770341445956), ('src/_pytest/fixtures.py', 609, 615, 0.11322770341445956), ('src/_pytest/fixtures.py', 696, 698, 0.11322770341445956), ('src/_pytest/fixtures.py', 813, 816, 0.11322770341445956), ('src/_pytest/fixtures.py', 1028, 1030, 0.11322770341445956), ('src/_pytest/fixtures.py', 1052, 1054, 0.11322770341445956), ('src/_pytest/fixtures.py', 1097, 1103, 0.11322770341445956), ('src/_pytest/fixtures.py', 1114, 1115, 0.11322770341445956), ('src/_pytest/fixtures.py', 135, 136, 0.11180339887498948), ('src/_pytest/fixtures.py', 470, 471, 0.11180339887498948), ('src/_pytest/fixtures.py', 491, 491, 0.11180339887498948), ('src/_pytest/fixtures.py', 496, 496, 0.11180339887498948), ('src/_pytest/fixtures.py', 509, 513, 0.11180339887498948), ('src/_pytest/fixtures.py', 534, 534, 0.11180339887498948), ('src/_pytest/fixtures.py', 564, 568, 0.11180339887498948), ('src/_pytest/fixtures.py', 625, 635, 0.11180339887498948), ('src/_pytest/fixtures.py', 646, 646, 0.11180339887498948), ('src/_pytest/fixtures.py', 677, 677, 0.11180339887498948), ('src/_pytest/fixtures.py', 680, 681, 0.11180339887498948), ('src/_pytest/fixtures.py', 683, 683, 0.11180339887498948), ('src/_pytest/fixtures.py', 685, 685, 0.11180339887498948), ('src/_pytest/fixtures.py', 691, 692, 0.11180339887498948), ('src/_pytest/fixtures.py', 790, 790, 0.11180339887498948), ('src/_pytest/fixtures.py', 1013, 1013, 0.11180339887498948), ('src/_pytest/fixtures.py', 1016, 1017, 0.11180339887498948), ('src/_pytest/fixtures.py', 1022, 1023, 0.11180339887498948), ('src/_pytest/fixtures.py', 1035, 1036, 0.11180339887498948), ('src/_pytest/fixtures.py', 1057, 1057, 0.11180339887498948), ('src/_pytest/fixtures.py', 1071, 1072, 0.11180339887498948), ('src/_pytest/fixtures.py', 1080, 1080, 0.11180339887498948), ('src/_pytest/fixtures.py', 1090, 1090, 0.11180339887498948), ('src/_pytest/fixtures.py', 1105, 1108, 0.11180339887498948), ('src/_pytest/fixtures.py', 1678, 1682, 0.11180339887498948), ('src/_pytest/setuponly.py', 34, 35, 0.11180339887498948), ('src/_pytest/setuponly.py', 51, 53, 0.11180339887498948), ('src/_pytest/setupplan.py', 28, 28, 0.11180339887498948), ('src/_pytest/setupplan.py', 32, 32, 0.11180339887498948), ('src/_pytest/fixtures.py', 1687, 1687, 0.1111111111111111), ('src/_pytest/fixtures.py', 1689, 1691, 0.1111111111111111), ('src/_pytest/nodes.py', 83, 85, 0.1111111111111111), ('src/_pytest/nodes.py', 87, 87, 0.1111111111111111), ('src/_pytest/terminal.py', 594, 597, 0.10846522890932808), ('src/_pytest/skipping.py', 249, 251, 0.10153461651336192), ('src/_pytest/nose.py', 10, 11, 0.0949157995752499), ('src/_pytest/nose.py', 13, 13, 0.0949157995752499), ('src/_pytest/nose.py', 19, 21, 0.0949157995752499), ('src/_pytest/skipping.py', 253, 254, 0.0949157995752499), ('src/_pytest/fixtures.py', 454, 456, 0.0944911182523068), ('src/_pytest/runner.py', 356, 357, 0.0944911182523068), ('src/_pytest/runner.py', 359, 359, 0.0944911182523068), ('src/_pytest/runner.py', 366, 371, 0.0944911182523068), ('src/_pytest/logging.py', 688, 688, 0.09407208683835973), ('src/_pytest/nodes.py', 248, 248, 0.0936585811581694), ('src/_pytest/runner.py', 140, 141, 0.0936585811581694), ('src/_pytest/runner.py', 362, 363, 0.0936585811581694), ('src/_pytest/runner.py', 377, 377, 0.0936585811581694), ('src/_pytest/runner.py', 421, 425, 0.0936585811581694), ('src/_pytest/skipping.py', 241, 243, 0.09325048082403138), ('src/_pytest/skipping.py', 187, 187, 0.09245003270420485)]
2024-04-05 04:21:06 SBFL result (methods): [('src/_pytest/pytester.py', '', '__take_sys_modules_snapshot', 1.0), ('src/_pytest/pytester.py', 'LineMatcher', 're_match_lines', 1.0), ('src/_pytest/pytester.py', 'LineMatcher', '_no_match_line', 1.0), ('src/_pytest/skipping.py', '', 'pytest_configure', 0.5), ('src/_pytest/outcomes.py', '', 'fail', 0.4472135954999579), ('src/_pytest/_code/source.py', '', 'getsource', 0.35355339059327373), ('src/_pytest/nodes.py', 'Node', 'repr_failure', 0.3333333333333333), ('src/_pytest/runner.py', '', 'call_runtest_hook', 0.30151134457776363), ('src/_pytest/skipping.py', '', 'pytest_report_teststatus', 0.30151134457776363), ('src/_pytest/_code/code.py', 'Frame', 'getargs', 0.2886751345948129), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_getentrysource', 0.2886751345948129), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_collection_modifyitems', 0.2886751345948129), ('src/_pytest/pathlib.py', '', '_force_symlink', 0.2886751345948129), ('src/_pytest/pathlib.py', '', 'make_numbered_dir', 0.2886751345948129), ('src/_pytest/terminal.py', 'TerminalReporter', '_width_of_current_line', 0.2886751345948129), ('src/_pytest/_code/source.py', '', 'getstatementrange_ast', 0.2773500981126146), ('src/_pytest/terminal.py', 'TerminalReporter', '__init__', 0.2773500981126146), ('src/_pytest/fixtures.py', 'FixtureRequest', '_getnextfixturedef', 0.2672612419124244), ('src/_pytest/fixtures.py', 'SubRequest', '_schedule_finalizers', 0.2672612419124244), ('src/_pytest/fixtures.py', 'FixtureLookupErrorRepr', '__init__', 0.2672612419124244), ('src/_pytest/fixtures.py', 'FixtureLookupErrorRepr', 'toterminal', 0.2672612419124244), ('src/_pytest/main.py', 'Session', '_perform_collect', 0.2672612419124244), ('src/_pytest/python.py', 'Metafunc', '__init__', 0.2672612419124244), ('src/_pytest/terminal.py', '', '_get_pos', 0.2581988897471611), ('src/_pytest/terminal.py', '', '_get_line_with_reprcrash_message', 0.2581988897471611), ('src/_pytest/terminal.py', '', '_folded_skips', 0.2581988897471611), ('src/_pytest/runner.py', '', 'call_and_report', 0.24253562503633297), ('src/_pytest/reports.py', 'CollectReport', '__init__', 0.22941573387056174), ('src/_pytest/_code/code.py', 'Traceback', 'cut', 0.22360679774997896), ('src/_pytest/reports.py', 'TestReport', 'from_item_and_call', 0.22360679774997896), ('src/_pytest/runner.py', '', 'pytest_runtest_teardown', 0.22360679774997896), ('src/_pytest/terminal.py', 'TerminalReporter', 'build_summary_stats_line', 0.2182178902359924), ('src/_pytest/terminal.py', 'TerminalReporter', '_write_progress_information_filling_space', 0.21428571428571427), ('src/_pytest/capture.py', '', '_colorama_workaround', 0.21160368475757949), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logfinish', 0.21160368475757949), ('src/_pytest/runner.py', '', 'runtestprotocol', 0.21160368475757949), ('src/_pytest/runner.py', '', 'show_test_item', 0.21160368475757949), ('src/_pytest/nodes.py', 'Node', 'addfinalizer', 0.21004201260420147), ('src/_pytest/nodes.py', 'Node', 'add_marker', 0.2055566129482595), ('src/_pytest/nodes.py', 'Node', 'listextrakeywords', 0.2055566129482595), ('src/_pytest/outcomes.py', '', 'skip', 0.20412414523193154), ('src/_pytest/capture.py', 'CaptureIO', '__init__', 0.2031856384435789), ('src/_pytest/capture.py', 'MultiCapture', 'suspend_capturing', 0.2031856384435789), ('src/_pytest/capture.py', 'FDCaptureBinary', '__init__', 0.2031856384435789), ('src/_pytest/capture.py', 'FDCaptureBinary', '__repr__', 0.2031856384435789), ('src/_pytest/capture.py', 'SysCaptureBinary', '__repr__', 0.2031856384435789), ('src/_pytest/capture.py', 'SysCapture', 'snap', 0.2031856384435789), ('src/_pytest/capture.py', 'DontReadFromInput', 'read', 0.2031856384435789), ('src/_pytest/logging.py', '', 'catching_logs', 0.2031856384435789), ('src/_pytest/logging.py', 'LogCaptureHandler', '__init__', 0.2031856384435789), ('src/_pytest/logging.py', 'LogCaptureFixture', '_finalize', 0.2031856384435789), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_teardown', 0.2031856384435789), ('src/_pytest/runner.py', '', 'pytest_runtest_makereport', 0.2031856384435789), ('src/_pytest/runner.py', '', 'pytest_make_collect_report', 0.2031856384435789), ('src/_pytest/store.py', 'Store', '__setitem__', 0.2031856384435789), ('src/_pytest/capture.py', '', 'capsysbinary', 0.2027212135198458), ('src/_pytest/capture.py', '', 'capfdbinary', 0.2027212135198458), ('src/_pytest/capture.py', 'EncodedFile', 'mode', 0.2027212135198458), ('src/_pytest/capture.py', 'MultiCapture', 'pop_outerr_to_orig', 0.2027212135198458), ('src/_pytest/capture.py', 'MultiCapture', 'stop_capturing', 0.2027212135198458), ('src/_pytest/capture.py', 'FDCaptureBinary', 'snap', 0.2027212135198458), ('src/_pytest/capture.py', 'FDCaptureBinary', '_done', 0.2027212135198458), ('src/_pytest/capture.py', 'SysCaptureBinary', 'start', 0.2027212135198458), ('src/_pytest/capture.py', 'SysCaptureBinary', 'done', 0.2027212135198458), ('src/_pytest/logging.py', 'LogCaptureHandler', 'emit', 0.2027212135198458), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_call', 0.2027212135198458), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logstart', 0.2027212135198458), ('src/_pytest/main.py', 'Session', 'collect', 0.2027212135198458), ('src/_pytest/nodes.py', 'Node', 'warn', 0.2027212135198458), ('src/_pytest/nodes.py', 'Item', '__init__', 0.2027212135198458), ('src/_pytest/python.py', 'PyobjMixin', 'getmodpath', 0.2027212135198458), ('src/_pytest/reports.py', 'BaseReport', 'count_towards_summary', 0.2027212135198458), ('src/_pytest/reports.py', 'TestReport', '__init__', 0.2027212135198458), ('src/_pytest/reports.py', 'TestReport', '__repr__', 0.2027212135198458), ('src/_pytest/reports.py', 'CollectReport', 'location', 0.2027212135198458), ('src/_pytest/reports.py', 'CollectReport', '__repr__', 0.2027212135198458), ('src/_pytest/runner.py', '', 'pytest_report_teststatus', 0.2027212135198458), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_runtest_logreport', 0.2027212135198458), ('src/_pytest/store.py', 'Store', '__getitem__', 0.2027212135198458), ('src/_pytest/store.py', 'Store', 'get', 0.2027212135198458), ('src/_pytest/store.py', 'Store', '__contains__', 0.2027212135198458), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logreport', 0.2027212135198458), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_progress_information_message', 0.2027212135198458), ('src/_pytest/unittest.py', '', 'pytest_runtest_protocol', 0.2027212135198458), ('src/_pytest/unittest.py', '', 'check_testcase_implements_trial_reporter', 0.2027212135198458), ('src/_pytest/outcomes.py', 'Skipped', '__init__', 0.2), ('src/_pytest/_io/saferepr.py', '', '_ellipsize', 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 'SafeRepr', 'repr', 0.19611613513818404), ('src/_pytest/_io/saferepr.py', 'SafeRepr', 'repr_instance', 0.19611613513818404), ('src/_pytest/_io/saferepr.py', '', 'safeformat', 0.19611613513818404), ('src/_pytest/_code/code.py', 'Code', 'source', 0.1889822365046136), ('src/_pytest/_code/code.py', 'Code', 'getargs', 0.1889822365046136), ('src/_pytest/_code/code.py', 'TracebackEntry', 'locals', 0.1889822365046136), ('src/_pytest/_code/code.py', 'TracebackEntry', 'getsource', 0.1889822365046136), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'tb', 0.1889822365046136), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_getindent', 0.1889822365046136), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'get_source', 0.1889822365046136), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'get_exconly', 0.1889822365046136), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_locals', 0.1889822365046136), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_traceback_entry', 0.1889822365046136), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_makepath', 0.1889822365046136), ('src/_pytest/_code/source.py', 'Source', '__getitem__', 0.1889822365046136), ('src/_pytest/_code/source.py', 'Source', 'getstatement', 0.1889822365046136), ('src/_pytest/_code/source.py', 'Source', 'getstatementrange', 0.1889822365046136), ('src/_pytest/_code/source.py', 'Source', 'deindent', 0.1889822365046136), ('src/_pytest/_code/source.py', '', 'findsource', 0.1889822365046136), ('src/_pytest/_code/source.py', '', 'get_statement_startend2', 0.1889822365046136), ('src/_pytest/_code/code.py', 'Traceback', '__getitem__', 0.18569533817705186), ('src/_pytest/_code/code.py', 'Traceback', 'filter', 0.18569533817705186), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_traceback', 0.18569533817705186), ('src/_pytest/python.py', 'PyobjMixin', 'reportinfo', 0.1841149235796647), ('src/_pytest/python.py', 'Function', 'repr_failure', 0.1841149235796647), ('src/_pytest/terminal.py', 'TerminalReporter', 'report_collect', 0.18333969940564226), ('src/_pytest/_code/code.py', 'TracebackEntry', 'path', 0.18257418583505536), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_importconftest', 0.18257418583505536), ('src/_pytest/nodes.py', 'Node', '_repr_failure_py', 0.18257418583505536), ('src/_pytest/nodes.py', '', 'get_fslocation_from_item', 0.18257418583505536), ('src/_pytest/nodes.py', '', 'collect', 0.18257418583505536), ('src/_pytest/outcomes.py', 'OutcomeException', '__repr__', 0.18257418583505536), ('src/_pytest/terminal.py', 'TerminalReporter', '_add_stats', 0.18257418583505536), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_internalerror', 0.18257418583505536), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_warning_captured', 0.18257418583505536), ('src/_pytest/assertion/__init__.py', '', 'pytest_runtest_protocol', 0.18107149208503706), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_setup', 0.18107149208503706), ('src/_pytest/main.py', '', 'pytest_ignore_collect', 0.18107149208503706), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logfinish', 0.18107149208503706), ('src/_pytest/warnings.py', '', 'pytest_runtest_protocol', 0.18107149208503706), ('src/_pytest/warnings.py', '', '_issue_warning_captured', 0.18107149208503706), ('src/_pytest/_io/wcwidth.py', '', 'wcswidth', 0.18033392693348646), ('src/_pytest/assertion/__init__.py', '', 'pytest_sessionfinish', 0.18033392693348646), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_sessionfinish', 0.18033392693348646), ('src/_pytest/_code/code.py', 'Traceback', '__init__', 0.1796053020267749), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'getrepr', 0.1796053020267749), ('src/_pytest/_code/code.py', 'FormattedExcinfo', '_truncate_recursive_traceback', 0.1796053020267749), ('src/_pytest/_code/code.py', 'FormattedExcinfo', 'repr_excinfo', 0.1796053020267749), ('src/_pytest/_code/code.py', 'ExceptionChainRepr', '__attrs_post_init__', 0.1796053020267749), ('src/_pytest/_code/code.py', 'ExceptionChainRepr', 'toterminal', 0.1796053020267749), ('src/_pytest/pytester.py', '', '_makefile', 0.1781741612749496), ('src/_pytest/runner.py', '', '_update_current_test_var', 0.1781741612749496), ('src/_pytest/runner.py', 'SetupState', 'prepare', 0.17747130188322277), ('src/_pytest/runner.py', '', 'collect_one_node', 0.17747130188322277), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'consider_preparse', 0.17677669529663687), ('src/_pytest/main.py', '', 'pytest_collection_modifyitems', 0.17677669529663687), ('src/_pytest/main.py', '_bestrelpath_cache', '__missing__', 0.17677669529663687), ('src/_pytest/main.py', 'Session', '_parsearg', 0.17677669529663687), ('src/_pytest/main.py', 'Session', 'matchnodes', 0.17677669529663687), ('src/_pytest/main.py', 'Session', '_matchnodes', 0.17677669529663687), ('src/_pytest/main.py', 'Session', 'genitems', 0.17677669529663687), ('src/_pytest/nodes.py', 'Item', 'location', 0.17677669529663687), ('src/_pytest/python.py', '', 'pytest_pyfunc_call', 0.17677669529663687), ('src/_pytest/python.py', '', 'pytest_collect_file', 0.17677669529663687), ('src/_pytest/python.py', '', 'path_matches_patterns', 0.17677669529663687), ('src/_pytest/store.py', 'Store', '__delitem__', 0.17609018126512477), ('src/_pytest/_code/source.py', '', 'getfslineno', 0.17407765595569785), ('src/_pytest/config/__init__.py', '', '_warn_about_missing_assertion', 0.17407765595569785), ('src/_pytest/config/__init__.py', '', 'create_terminal_writer', 0.17407765595569785), ('src/_pytest/config/findpaths.py', '', 'get_dirs_from_args', 0.17407765595569785), ('src/_pytest/config/findpaths.py', '', 'determine_setup', 0.17407765595569785), ('src/_pytest/reports.py', 'BaseReport', '_from_json', 0.17149858514250882), ('src/_pytest/_code/code.py', 'Code', '__init__', 0.17025130615174972), ('src/_pytest/_code/code.py', '', 'filter_traceback', 0.17025130615174972), ('src/_pytest/compat.py', '', 'get_real_func', 0.17025130615174972), ('src/_pytest/python.py', 'PyCollector', 'funcnamefilter', 0.17025130615174972), ('src/_pytest/python.py', 'PyCollector', 'isnosetest', 0.17025130615174972), ('src/_pytest/python.py', 'PyCollector', 'istestfunction', 0.17025130615174972), ('src/_pytest/python.py', 'PyCollector', 'istestclass', 0.17025130615174972), ('src/_pytest/compat.py', '', 'iscoroutinefunction', 0.16963778593599418), ('src/_pytest/skipping.py', '', 'pytest_runtest_makereport', 0.16963778593599418), ('src/_pytest/outcomes.py', 'OutcomeException', '__init__', 0.1690308509457033), ('src/_pytest/_code/code.py', 'Code', '__eq__', 0.16724840200141816), ('src/_pytest/_code/code.py', 'Code', 'path', 0.16724840200141816), ('src/_pytest/compat.py', '', 'get_real_method', 0.16724840200141816), ('src/_pytest/terminal.py', 'TerminalReporter', 'rewrite', 0.16724840200141816), ('src/_pytest/terminal.py', 'TerminalReporter', 'line', 0.16724840200141816), ('src/_pytest/warnings.py', '', 'catch_warnings_for_item', 0.16724840200141816), ('src/_pytest/warnings.py', '', 'warning_record_to_str', 0.16724840200141816), ('src/_pytest/config/__init__.py', '', '_strtobool', 0.16666666666666666), ('src/_pytest/faulthandler.py', 'FaultHandlerHooks', 'pytest_runtest_protocol', 0.16666666666666666), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'context', 0.16666666666666666), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_sessionstart', 0.16666666666666666), ('src/_pytest/warnings.py', '', 'pytest_collection', 0.16666666666666666), ('src/_pytest/fixtures.py', '', 'wrap_function_to_error_out_if_called_directly', 0.16609095970747995), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'sep', 0.1655211777204736), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'write', 0.1655211777204736), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_line', 0.1655211777204736), ('testing/conftest.py', '', 'restore_tracing', 0.1655211777204736), ('src/_pytest/assertion/rewrite.py', '', '_get_assertion_exprs', 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'builtin', 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'push_format_context', 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'pop_format_context', 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'generic_visit', 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'visit_Assert', 0.1643989873053573), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'visit_BoolOp', 0.1643989873053573), ('src/_pytest/fixtures.py', 'FixtureRequest', 'applymarker', 0.16169041669088866), ('src/_pytest/fixtures.py', 'FixtureLookupError', 'formatrepr', 0.16169041669088866), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'fill_unfilled', 0.14907119849998599), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'exconly', 0.14907119849998599), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'errisinstance', 0.14907119849998599), ('src/_pytest/nose.py', '', 'is_potential_nosetest', 0.14744195615489714), ('src/_pytest/nose.py', '', 'call_optional', 0.14744195615489714), ('src/_pytest/pytester.py', 'LineMatcher', '_match_lines', 0.14744195615489714), ('src/_pytest/pytester.py', 'LineMatcher', 'no_fnmatch_line', 0.14744195615489714), ('src/_pytest/pytester.py', 'LineMatcher', 'no_re_match_line', 0.14744195615489714), ('src/_pytest/_code/code.py', 'Frame', '__init__', 0.14586499149789456), ('src/_pytest/_code/code.py', 'TracebackEntry', '__init__', 0.14586499149789456), ('src/_pytest/_code/code.py', 'TracebackEntry', 'ishidden', 0.14586499149789456), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'from_current', 0.14586499149789456), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'value', 0.14586499149789456), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'typename', 0.14586499149789456), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_should_rewrite', 0.14433756729740646), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_is_marked_for_rewrite', 0.14433756729740646), ('src/_pytest/pytester.py', 'LineMatcher', '_match_lines_random', 0.14433756729740646), ('src/_pytest/pytester.py', 'LineMatcher', 'get_lines_after', 0.14433756729740646), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'from_exc_info', 0.14285714285714285), ('src/_pytest/capture.py', 'CaptureManager', 'suspend_fixture', 0.1414213562373095), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_internalerror', 0.1414213562373095), ('src/_pytest/capture.py', 'TeeCaptureIO', 'write', 0.1414213562373095), ('src/_pytest/pytester.py', 'RunResult', '__init__', 0.1414213562373095), ('src/_pytest/pytester.py', 'RunResult', '__repr__', 0.1414213562373095), ('src/_pytest/pytester.py', '', 'runpytest_inprocess', 0.1414213562373095), ('src/_pytest/pytester.py', '', 'runpytest', 0.1414213562373095), ('src/_pytest/pytester.py', '', '_ensure_basetemp', 0.1414213562373095), ('src/_pytest/pytester.py', '', 'parseconfig', 0.1414213562373095), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_plugin_registered', 0.1414213562373095), ('src/_pytest/_code/code.py', 'ExceptionInfo', 'type', 0.14002800840280097), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '_early_rewrite_bailout', 0.14002800840280097), ('src/_pytest/cacheprovider.py', '', 'pytest_report_header', 0.13736056394868904), ('src/_pytest/compat.py', '', 'safe_getattr', 0.13736056394868904), ('src/_pytest/fixtures.py', '', '_parse_fixture_args', 0.13736056394868904), ('src/_pytest/fixtures.py', '', 'fixture', 0.13736056394868904), ('src/_pytest/helpconfig.py', '', 'pytest_cmdline_main', 0.13736056394868904), ('src/_pytest/helpconfig.py', '', 'showhelp', 0.13736056394868904), ('src/_pytest/logging.py', 'LoggingPlugin', '_runtest_for_main', 0.13736056394868904), ('src/_pytest/main.py', '', 'wrap_session', 0.13736056394868904), ('src/_pytest/main.py', '', 'pytest_cmdline_main', 0.13736056394868904), ('src/_pytest/main.py', '', 'pytest_runtestloop', 0.13736056394868904), ('src/_pytest/main.py', '', '_in_venv', 0.13736056394868904), ('src/_pytest/main.py', 'Session', '_collect', 0.13736056394868904), ('src/_pytest/python.py', '', 'pytest_addoption', 0.13736056394868904), ('src/_pytest/python.py', '', 'pytest_cmdline_main', 0.13736056394868904), ('src/_pytest/python.py', 'CallSpec2', 'id', 0.13736056394868904), ('src/_pytest/reports.py', 'BaseReport', 'head_line', 0.13736056394868904), ('src/_pytest/config/__init__.py', '', 'main', 0.13608276348795434), ('src/_pytest/config/__init__.py', '', 'directory_arg', 0.13608276348795434), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '__init__', 0.13608276348795434), ('src/_pytest/mark/__init__.py', '', 'pytest_cmdline_main', 0.13608276348795434), ('src/_pytest/mark/structures.py', '', 'get_empty_parameterset_mark', 0.13608276348795434), ('src/_pytest/mark/structures.py', 'MarkGenerator', '__getattr__', 0.13608276348795434), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__init__', 0.13608276348795434), ('src/_pytest/mark/structures.py', 'NodeKeywords', '__getitem__', 0.13608276348795434), ('src/_pytest/pytester.py', 'ParsedCall', '__repr__', 0.13608276348795434), ('src/_pytest/pytester.py', 'HookRecorder', '__init__', 0.13608276348795434), ('src/_pytest/pytester.py', 'HookRecorder', 'finish_recording', 0.13608276348795434), ('src/_pytest/pytester.py', 'HookRecorder', 'getcalls', 0.13608276348795434), ('src/_pytest/pytester.py', '', 'inline_run', 0.13608276348795434), ('src/_pytest/main.py', 'Session', 'from_config', 0.1336306209562122), ('src/_pytest/python.py', 'CallSpec2', 'getparam', 0.13245323570650439), ('src/_pytest/python.py', 'Function', 'runtest', 0.13245323570650439), ('src/_pytest/python.py', 'Function', 'setup', 0.13245323570650439), ('src/_pytest/python.py', 'Module', '_importtestmodule', 0.12803687993289598), ('src/_pytest/pytester.py', '', 'parseconfigure', 0.1270001270001905), ('src/_pytest/terminal.py', 'TerminalReporter', 'short_test_summary', 0.125), ('src/_pytest/compat.py', '', 'overload', 0.12309149097933272), ('src/_pytest/fixtures.py', 'FixtureRequest', 'keywords', 0.12309149097933272), ('src/_pytest/fixtures.py', 'FixtureRequest', 'session', 0.12309149097933272), ('src/_pytest/fixtures.py', 'FixtureRequest', 'addfinalizer', 0.12309149097933272), ('src/_pytest/fixtures.py', 'FixtureManager', 'getfixturedefs', 0.12309149097933272), ('src/_pytest/fixtures.py', 'FixtureManager', '_matchfactories', 0.12309149097933272), ('src/_pytest/fixtures.py', '', 'get_use_fixtures_for_node', 0.12309149097933272), ('src/_pytest/python.py', '', 'pytest_pycollect_makeitem', 0.12309149097933272), ('src/_pytest/python.py', 'PyCollector', '_matches_prefix_or_glob_option', 0.12309149097933272), ('src/_pytest/python.py', 'PyCollector', 'collect', 0.12309149097933272), ('src/_pytest/python.py', 'PyCollector', '_makeitem', 0.12309149097933272), ('src/_pytest/python.py', 'PyCollector', '_genfunctions', 0.12309149097933272), ('src/_pytest/python.py', 'Module', '_getobj', 0.12309149097933272), ('src/_pytest/python.py', 'Module', 'collect', 0.12309149097933272), ('src/_pytest/python.py', 'Module', '_inject_setup_module_fixture', 0.12309149097933272), ('src/_pytest/python.py', 'Module', '_inject_setup_function_fixture', 0.12309149097933272), ('src/_pytest/python.py', 'Package', 'collect', 0.12309149097933272), ('src/_pytest/python.py', 'Class', '_inject_setup_class_fixture', 0.12309149097933272), ('src/_pytest/python.py', 'Metafunc', 'parametrize', 0.12309149097933272), ('src/_pytest/python.py', 'Function', 'from_parent', 0.12309149097933272), ('src/_pytest/python.py', 'Function', 'function', 0.12309149097933272), ('src/_pytest/python.py', 'Function', '_getobj', 0.12309149097933272), ('src/_pytest/python.py', 'Function', 'funcargnames', 0.12309149097933272), ('src/_pytest/python.py', 'Function', '_prunetraceback', 0.12309149097933272), ('src/_pytest/unittest.py', 'UnitTestCase', 'collect', 0.12309149097933272), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'import_plugin', 0.12126781251816648), ('src/_pytest/fixtures.py', '', 'reorder_items_atscope', 0.12126781251816648), ('src/_pytest/fixtures.py', '', 'fillfixtures', 0.12126781251816648), ('src/_pytest/nodes.py', 'Node', '__init__', 0.12126781251816648), ('src/_pytest/nodes.py', 'Node', 'from_parent', 0.12126781251816648), ('src/_pytest/nodes.py', 'Node', 'ihook', 0.12126781251816648), ('src/_pytest/cacheprovider.py', '', 'cacheshow', 0.1203858530857692), ('src/_pytest/capture.py', 'DontReadFromInput', 'isatty', 0.1203858530857692), ('src/_pytest/capture.py', 'DontReadFromInput', 'close', 0.1203858530857692), ('src/_pytest/capture.py', 'DontReadFromInput', 'buffer', 0.1203858530857692), ('src/_pytest/nodes.py', 'FSCollector', '_recurse', 0.1203858530857692), ('src/_pytest/nodes.py', 'FSCollector', '_collectfile', 0.1203858530857692), ('src/_pytest/python.py', '', 'pytest_pycollect_makemodule', 0.1203858530857692), ('src/_pytest/terminal.py', 'WarningReport', 'get_location', 0.1203858530857692), ('src/_pytest/terminal.py', 'TerminalReporter', '_printcollecteditems', 0.1203858530857692), ('src/_pytest/terminal.py', 'TerminalReporter', 'getreports', 0.1203858530857692), ('src/_pytest/terminal.py', 'TerminalReporter', 'print_teardown_sections', 0.1203858530857692), ('src/_pytest/capture.py', 'CaptureManager', 'start_global_capturing', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureManager', '_capturing_for_request', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureFixture', '_start', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureFixture', 'close', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureFixture', 'readouterr', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureFixture', '_suspend', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureFixture', '_resume', 0.11952286093343936), ('src/_pytest/capture.py', 'CaptureFixture', 'disabled', 0.11952286093343936), ('src/_pytest/capture.py', 'MultiCapture', '__repr__', 0.11952286093343936), ('src/_pytest/capture.py', 'MultiCapture', 'start_capturing', 0.11952286093343936), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_getconftestmodules', 0.11952286093343936), ('src/_pytest/terminal.py', 'TerminalReporter', 'ensure_newline', 0.11952286093343936), ('src/_pytest/_code/source.py', 'Source', '__init__', 0.11867816581938533), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'markup', 0.11867816581938533), ('src/_pytest/assertion/__init__.py', '', 'pytest_assertrepr_compare', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'find_spec', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'exec_module', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', '', '_rewrite_test', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', '', '_read_pyc', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', '', 'rewrite_asserts', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', '', '_format_assertmsg', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'run', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'variable', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'assign', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'display', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'helper', 0.11867816581938533), ('src/_pytest/assertion/rewrite.py', 'AssertionRewriter', 'explanation_param', 0.11867816581938533), ('src/_pytest/cacheprovider.py', 'Cache', 'set', 0.11867816581938533), ('src/_pytest/cacheprovider.py', 'Cache', '_ensure_supporting_files', 0.11867816581938533), ('src/_pytest/cacheprovider.py', 'LFPluginCollWrapper', '__init__', 0.11867816581938533), ('src/_pytest/cacheprovider.py', 'NFPlugin', 'pytest_collection_modifyitems', 0.11867816581938533), ('src/_pytest/cacheprovider.py', '', 'pytest_addoption', 0.11867816581938533), ('src/_pytest/compat.py', '', 'getfuncargnames', 0.11867816581938533), ('src/_pytest/compat.py', '', 'nullcontext', 0.11867816581938533), ('src/_pytest/compat.py', '', 'getimfunc', 0.11867816581938533), ('src/_pytest/compat.py', '', 'safe_isclass', 0.11867816581938533), ('src/_pytest/doctest.py', '', '_is_setup_py', 0.11867816581938533), ('src/_pytest/doctest.py', '', '_is_doctest', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'get_scope_package', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'get_scope_node', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'add_funcarg_pseudo_fixture_def', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'fix_cache_order', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'get_direct_param_fixture_func', 0.11867816581938533), ('src/_pytest/fixtures.py', 'FuncFixtureInfo', 'prune_dependency_tree', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'call_fixture_func', 0.11867816581938533), ('src/_pytest/fixtures.py', '', 'pytest_fixture_setup', 0.11867816581938533), ('src/_pytest/fixtures.py', '', '_ensure_immutable_ids', 0.11867816581938533), ('src/_pytest/fixtures.py', 'FixtureFunctionMarker', '__call__', 0.11867816581938533), ('src/_pytest/fixtures.py', 'FixtureManager', 'parsefactories', 0.11867816581938533), ('src/_pytest/helpconfig.py', '', 'pytest_report_header', 0.11867816581938533), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_sessionstart', 0.11867816581938533), ('src/_pytest/main.py', 'Session', 'pytest_collectstart', 0.11867816581938533), ('src/_pytest/main.py', 'Session', 'pytest_runtest_logreport', 0.11867816581938533), ('src/_pytest/main.py', 'Session', 'isinitpath', 0.11867816581938533), ('src/_pytest/main.py', 'Session', 'perform_collect', 0.11867816581938533), ('src/_pytest/main.py', 'Session', '_visit_filter', 0.11867816581938533), ('src/_pytest/main.py', 'Session', '_tryconvertpyarg', 0.11867816581938533), ('src/_pytest/mark/__init__.py', '', 'deselect_by_keyword', 0.11867816581938533), ('src/_pytest/mark/__init__.py', '', 'deselect_by_mark', 0.11867816581938533), ('src/_pytest/mark/__init__.py', '', 'pytest_configure', 0.11867816581938533), ('src/_pytest/nodes.py', 'Node', '__repr__', 0.11867816581938533), ('src/_pytest/nodes.py', 'Item', 'reportinfo', 0.11867816581938533), ('src/_pytest/pastebin.py', '', 'pytest_terminal_summary', 0.11867816581938533), ('src/_pytest/pytester.py', '', 'makefile', 0.11867816581938533), ('src/_pytest/pytester.py', '', 'syspathinsert', 0.11867816581938533), ('src/_pytest/reports.py', '', 'pytest_report_from_serializable', 0.11867816581938533), ('src/_pytest/reports.py', '', '_report_to_json', 0.11867816581938533), ('src/_pytest/runner.py', '', 'pytest_terminal_summary', 0.11867816581938533), ('src/_pytest/runner.py', '', 'pytest_runtest_protocol', 0.11867816581938533), ('src/_pytest/runner.py', 'CallInfo', 'from_call', 0.11867816581938533), ('src/_pytest/runner.py', 'SetupState', '_callfinalizers', 0.11867816581938533), ('src/_pytest/runner.py', 'SetupState', '_teardown_with_finalization', 0.11867816581938533), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_collection_modifyitems', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_fspath_result', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_runtest_logstart', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_write_report_lines_from_hooks', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_report_header', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_collection_finish', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_sessionfinish', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'pytest_terminal_summary', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_getfailureheadline', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_getcrashline', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', 'summary_warnings', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_teardown_reports', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_handle_teardown_sections', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_outrep_summary', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_get_main_color', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_determine_main_color', 0.11867816581938533), ('src/_pytest/terminal.py', 'TerminalReporter', '_set_main_color', 0.11867816581938533), ('src/_pytest/terminal.py', '', '_make_plural', 0.11867816581938533), ('src/_pytest/_argcomplete.py', '', 'try_argcomplete', 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', '', 'char_width', 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', '__init__', 0.11785113019775793), ('src/_pytest/assertion/__init__.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/assertion/__init__.py', '', 'install_importhook', 0.11785113019775793), ('src/_pytest/assertion/__init__.py', '', 'pytest_collection', 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', '__init__', 0.11785113019775793), ('src/_pytest/assertion/rewrite.py', 'AssertionRewritingHook', 'set_session', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'Cache', 'clear_cache', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'Cache', 'warn', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'Cache', 'get', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'get_last_failed_paths', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_report_collectionfinish', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'LFPlugin', 'pytest_runtest_logreport', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'NFPlugin', '_get_increasing_order', 0.11785113019775793), ('src/_pytest/cacheprovider.py', 'NFPlugin', 'pytest_sessionfinish', 0.11785113019775793), ('src/_pytest/cacheprovider.py', '', 'pytest_cmdline_main', 0.11785113019775793), ('src/_pytest/cacheprovider.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/cacheprovider.py', '', 'cache', 0.11785113019775793), ('src/_pytest/capture.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/capture.py', '', 'pytest_load_initial_conftests', 0.11785113019775793), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_make_collect_report', 0.11785113019775793), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_runtest_teardown', 0.11785113019775793), ('src/_pytest/capture.py', 'CaptureManager', 'pytest_keyboard_interrupt', 0.11785113019775793), ('src/_pytest/capture.py', 'FDCaptureBinary', '_start', 0.11785113019775793), ('src/_pytest/capture.py', 'FDCapture', 'snap', 0.11785113019775793), ('src/_pytest/capture.py', 'SysCaptureBinary', '__init__', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_prepareconfig', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_fail_on_non_top_pytest_plugins', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'parse_hookimpl_opts', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'parse_hookspec_opts', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'register', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'getplugin', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'hasplugin', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', 'pytest_configure', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_set_initial_conftests', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'PytestPluginManager', '_try_load_conftest', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_ensure_removed_sysmodule', 0.11785113019775793), ('src/_pytest/config/__init__.py', 'Notset', '__repr__', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_iter_rewritable_modules', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '__init__', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'pytest_cmdline_parse', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'notify_exception', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'cwd_relative_nodeid', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'fromdictargs', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_processopt', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'pytest_load_initial_conftests', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_initini', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_consider_importhook', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_mark_plugins_for_rewrite', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_preparse', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_checkversion', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'parse', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'addinivalue_line', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', 'getini', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_getini', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_getconftest_pathlist', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_get_override_ini_value', 0.11785113019775793), ('src/_pytest/config/__init__.py', '', '_assertion_supported', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', '__init__', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'processoption', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'getgroup', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'parse', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', '_getparser', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_setoption', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_known_args', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'parse_known_and_unknown_args', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Parser', 'addini', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Argument', '__init__', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Argument', 'names', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Argument', 'attrs', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'Argument', '_set_opt_strings', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'OptionGroup', '__init__', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'OptionGroup', 'addoption', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'OptionGroup', '_addoption', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'OptionGroup', '_addoption_instance', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'MyOptionParser', '__init__', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'MyOptionParser', 'parse_args', 0.11785113019775793), ('src/_pytest/config/argparsing.py', 'DropShorterLongHelpFormatter', '__init__', 0.11785113019775793), ('src/_pytest/debugging.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/debugging.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/debugging.py', 'pytestPDB', '_is_capturing', 0.11785113019775793), ('src/_pytest/doctest.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/doctest.py', '', 'pytest_unconfigure', 0.11785113019775793), ('src/_pytest/doctest.py', '', 'pytest_collect_file', 0.11785113019775793), ('src/_pytest/faulthandler.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/faulthandler.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/fixtures.py', '', 'fail_fixturefunc', 0.11785113019775793), ('src/_pytest/fixtures.py', 'FixtureManager', 'pytest_collection_modifyitems', 0.11785113019775793), ('src/_pytest/helpconfig.py', 'HelpAction', '__init__', 0.11785113019775793), ('src/_pytest/helpconfig.py', 'HelpAction', '__call__', 0.11785113019775793), ('src/_pytest/helpconfig.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/helpconfig.py', '', 'pytest_cmdline_parse', 0.11785113019775793), ('src/_pytest/junitxml.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/junitxml.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/junitxml.py', '', 'pytest_unconfigure', 0.11785113019775793), ('src/_pytest/junitxml.py', '', 'mangle_test_address', 0.11785113019775793), ('src/_pytest/junitxml.py', 'LogXML', '__init__', 0.11785113019775793), ('src/_pytest/logging.py', 'ColoredLevelFormatter', '__init__', 0.11785113019775793), ('src/_pytest/logging.py', 'ColoredLevelFormatter', 'format', 0.11785113019775793), ('src/_pytest/logging.py', 'PercentStyleMultiline', '_get_auto_indent', 0.11785113019775793), ('src/_pytest/logging.py', 'PercentStyleMultiline', 'format', 0.11785113019775793), ('src/_pytest/logging.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/logging.py', 'LogCaptureFixture', '__init__', 0.11785113019775793), ('src/_pytest/logging.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/logging.py', 'LoggingPlugin', '__init__', 0.11785113019775793), ('src/_pytest/logging.py', 'LoggingPlugin', '_create_formatter', 0.11785113019775793), ('src/_pytest/logging.py', 'LoggingPlugin', '_setup_cli_logging', 0.11785113019775793), ('src/_pytest/logging.py', 'LoggingPlugin', 'set_log_path', 0.11785113019775793), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_collection', 0.11785113019775793), ('src/_pytest/main.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/mark/__init__.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/mark/__init__.py', '', 'pytest_unconfigure', 0.11785113019775793), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'delattr', 0.11785113019775793), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'setitem', 0.11785113019775793), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'syspath_prepend', 0.11785113019775793), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'chdir', 0.11785113019775793), ('src/_pytest/monkeypatch.py', 'MonkeyPatch', 'undo', 0.11785113019775793), ('src/_pytest/pastebin.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/pastebin.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/pastebin.py', '', 'pytest_unconfigure', 0.11785113019775793), ('src/_pytest/pathlib.py', '', 'create_cleanup_lock', 0.11785113019775793), ('src/_pytest/pathlib.py', '', 'register_cleanup_lock_removal', 0.11785113019775793), ('src/_pytest/pathlib.py', '', 'parts', 0.11785113019775793), ('src/_pytest/pytester.py', 'SysPathsSnapshot', '__init__', 0.11785113019775793), ('src/_pytest/pytester.py', 'SysPathsSnapshot', 'restore', 0.11785113019775793), ('src/_pytest/pytester.py', '', '__init__', 0.11785113019775793), ('src/_pytest/pytester.py', '', '__repr__', 0.11785113019775793), ('src/_pytest/pytester.py', '', '__str__', 0.11785113019775793), ('src/_pytest/pytester.py', '', 'finalize', 0.11785113019775793), ('src/_pytest/pytester.py', '', 'chdir', 0.11785113019775793), ('src/_pytest/python.py', '', 'pytest_generate_tests', 0.11785113019775793), ('src/_pytest/python.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/resultlog.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/resultlog.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/runner.py', 'SetupState', '_teardown_towards', 0.11785113019775793), ('src/_pytest/setuponly.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/setuponly.py', '', 'pytest_fixture_setup', 0.11785113019775793), ('src/_pytest/setupplan.py', '', 'pytest_fixture_setup', 0.11785113019775793), ('src/_pytest/skipping.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/skipping.py', '', 'pytest_runtest_setup', 0.11785113019775793), ('src/_pytest/stepwise.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/stepwise.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/stepwise.py', 'StepwisePlugin', '__init__', 0.11785113019775793), ('src/_pytest/stepwise.py', 'StepwisePlugin', 'pytest_sessionstart', 0.11785113019775793), ('src/_pytest/store.py', 'Store', '__init__', 0.11785113019775793), ('src/_pytest/terminal.py', '', 'pytest_addoption', 0.11785113019775793), ('src/_pytest/terminal.py', '', 'pytest_configure', 0.11785113019775793), ('src/_pytest/terminal.py', '', 'getreportopt', 0.11785113019775793), ('src/_pytest/terminal.py', '', 'pytest_report_teststatus', 0.11785113019775793), ('src/_pytest/terminal.py', 'TerminalReporter', 'showfspath', 0.11785113019775793), ('src/_pytest/terminal.py', 'TerminalReporter', 'showlongtestinfo', 0.11785113019775793), ('src/_pytest/terminal.py', 'TerminalReporter', 'hasopt', 0.11785113019775793), ('src/_pytest/terminal.py', 'TerminalReporter', 'write_ensure_prefix', 0.11785113019775793), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'from_config', 0.11785113019775793), ('src/_pytest/tmpdir.py', 'TempPathFactory', '_ensure_relative_to_basetemp', 0.11785113019775793), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'mktemp', 0.11785113019775793), ('src/_pytest/tmpdir.py', 'TempPathFactory', 'getbasetemp', 0.11785113019775793), ('src/_pytest/tmpdir.py', '', 'pytest_configure', 0.11785113019775793), ('testing/conftest.py', '', 'testdir', 0.11785113019775793), ('src/_pytest/_io/terminalwriter.py', '', 'get_terminal_width', 0.11704114719613057), ('src/_pytest/compat.py', '', 'getlocation', 0.11704114719613057), ('src/_pytest/faulthandler.py', 'FaultHandlerHooks', 'pytest_enter_pdb', 0.11704114719613057), ('src/_pytest/python.py', '', 'async_warn_and_skip', 0.11704114719613057), ('src/_pytest/runner.py', '', 'pytest_runtest_call', 0.11704114719613057), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'fullwidth', 0.11624763874381928), ('src/_pytest/_io/terminalwriter.py', 'TerminalWriter', 'width_of_current_line', 0.11624763874381928), ('src/_pytest/fixtures.py', 'FixtureDef', 'execute', 0.11547005383792514), ('src/_pytest/fixtures.py', 'FixtureDef', 'cache_key', 0.11547005383792514), ('src/_pytest/fixtures.py', 'FixtureRequest', '_fillfixtures', 0.11322770341445956), ('src/_pytest/fixtures.py', 'FixtureRequest', 'getfixturevalue', 0.11322770341445956), ('src/_pytest/fixtures.py', 'FixtureRequest', '_compute_fixture_value', 0.11322770341445956), ('src/_pytest/fixtures.py', 'FixtureRequest', '_schedule_finalizers', 0.11322770341445956), ('src/_pytest/fixtures.py', 'FixtureRequest', '_check_scope', 0.11322770341445956), ('src/_pytest/fixtures.py', 'FixtureRequest', '_factorytraceback', 0.11322770341445956), ('src/_pytest/fixtures.py', '', 'scope2index', 0.11322770341445956), ('src/_pytest/fixtures.py', '', '_teardown_yield_fixture', 0.11322770341445956), ('src/_pytest/fixtures.py', 'FixtureRequest', 'raiseerror', 0.11180339887498948), ('src/_pytest/fixtures.py', 'FixtureRequest', '_get_active_fixturedef', 0.11180339887498948), ('src/_pytest/fixtures.py', 'FixtureRequest', '_get_fixturestack', 0.11180339887498948), ('src/_pytest/fixtures.py', 'FixtureRequest', '_getscopeitem', 0.11180339887498948), ('src/_pytest/fixtures.py', 'SubRequest', '__init__', 0.11180339887498948), ('src/_pytest/fixtures.py', '', 'scopemismatch', 0.11180339887498948), ('src/_pytest/setuponly.py', '', '_show_fixture_action', 0.11180339887498948), ('src/_pytest/setupplan.py', '', 'pytest_cmdline_main', 0.11180339887498948), ('src/_pytest/nodes.py', 'NodeMeta', '__call__', 0.1111111111111111), ('src/_pytest/nodes.py', 'NodeMeta', '_create', 0.1111111111111111), ('src/_pytest/nose.py', '', 'pytest_runtest_setup', 0.0949157995752499), ('src/_pytest/nose.py', '', 'teardown_nose', 0.0949157995752499), ('src/_pytest/fixtures.py', 'FixtureRequest', '_addfinalizer', 0.0944911182523068), ('src/_pytest/runner.py', 'SetupState', 'teardown_all', 0.0944911182523068), ('src/_pytest/runner.py', 'SetupState', 'teardown_exact', 0.0944911182523068), ('src/_pytest/logging.py', 'LoggingPlugin', 'pytest_runtest_logreport', 0.09407208683835973)]
2024-04-05 04:21:06 
========== Conversation Round 0 ==========
2024-04-05 04:21:06 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>skipping: --runxfail breaks pytest.mark.skip location reporting\n'
             'pytest versions: 5.4.x, current master\n'
             'When `@pytest.mark.skip`/`skipif` marks are used to skip a test, for example\n'
             '```py\n'
             'import pytest\n'
             '@pytest.mark.skip\n'
             'def test_skip_location() -> None:\n'
             'assert 0\n'
             '```\n'
             'the expected skip location reported should point to the item itself, and this is indeed what happens when running with `pytest -rs`:\n'
             '```\n'
             'SKIPPED [1] test_it.py:3: unconditional skip\n'
             '```\n'
             'However, adding `pytest -rs --runxfail` breaks this:\n'
             '```\n'
             'SKIPPED [1] src/_pytest/skipping.py:238: unconditional skip\n'
             '```\n'
             'The `--runxfail` is only about xfail and should not affect this at all.\n'
             '---\n'
             'Hint: the bug is in `src/_pytest/skipping.py`, the `pytest_runtest_makereport` hook.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/pytester.py</file> <func>__take_sys_modules_snapshot</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/pytester.py</file> <class>LineMatcher</class> <func>re_match_lines</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/pytester.py</file> <class>LineMatcher</class> <func>_no_match_line</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/skipping.py</file> <func>pytest_configure</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/outcomes.py</file> <func>fail</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '}]
2024-04-05 04:21:21 Model API request cost info: input_tokens=691, output_tokens=276, cost=0.015190
2024-04-05 04:21:21 Raw model response: ChatCompletionMessage(content='To address the issue effectively, we need to focus on the `pytest_runtest_makereport` hook within `src/_pytest/skipping.py`, as hinted in the issue description. This hook is likely responsible for the incorrect skip location reporting when the `--runxfail` option is used. Given this information, I will invoke the following search API calls to gather more context about the implementation of this hook and how it interacts with the skipping mechanism:\n\n1. `search_method_in_file("pytest_runtest_makereport", "src/_pytest/skipping.py")` - This will provide us with the implementation details of the `pytest_runtest_makereport` hook within the `skipping.py` file, which is directly related to the issue.\n\n2. `search_code_in_file("@pytest.mark.skip", "src/_pytest/skipping.py")` - Although it\'s less likely that decorators are directly defined in `skipping.py`, this search could help us understand if there\'s any handling or special consideration for `@pytest.mark.skip` within the context of skipping logic in this file.\n\nThese searches are aimed at pinpointing the exact implementation and behavior of the skipping mechanism, especially in relation to the `pytest_runtest_makereport` hook, which seems to be misbehaving when used with `--runxfail`.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:21:21 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 04:21:23 Model API request cost info: input_tokens=596, output_tokens=63, cost=0.007850
2024-04-05 04:21:23 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [\n        "search_method_in_file(\\"pytest_runtest_makereport\\", \\"src/_pytest/skipping.py\\")",\n        "search_code_in_file(\\"@pytest.mark.skip\\", \\"src/_pytest/skipping.py\\")"\n    ],\n    "bug_locations": []\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:21:23 Raw issue json produced. Writing issue json into file.
2024-04-05 04:21:23 Extracted a valid json. Congratulations!
2024-04-05 04:21:23 Refactored invocation argument parsing failed on 'search_method_in_file("pytest_runtest_makereport", "src/_pytest/skipping.py")': malformed node or string on line 1: <ast.Name object at 0x7f0e409297b0>
2024-04-05 04:21:23 Result of dispatch_intent: ('Found 1 methods with name `pytest_runtest_makereport` in file src/_pytest/skipping.py.\nSearch result 1: <file>src/_pytest/skipping.py</file> <func>pytest_runtest_makereport</func> <code>def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n    outcome = yield\n    rep = outcome.get_result()\n    xfailed = item._store.get(xfailed_key, None)\n    # unittest special case, see setting of unexpectedsuccess_key\n    if unexpectedsuccess_key in item._store and rep.when == "call":\n        reason = item._store[unexpectedsuccess_key]\n        if reason:\n            rep.longrepr = "Unexpected success: {}".format(reason)\n        else:\n            rep.longrepr = "Unexpected success"\n        rep.outcome = "failed"\n    elif item.config.option.runxfail:\n        pass  # don\'t interfere\n    elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n        assert call.excinfo.value.msg is not None\n        rep.wasxfail = "reason: " + call.excinfo.value.msg\n        rep.outcome = "skipped"\n    elif not rep.skipped and xfailed:\n        if call.excinfo:\n            raises = xfailed.raises\n            if raises is not None and not isinstance(call.excinfo.value, raises):\n                rep.outcome = "failed"\n            else:\n                rep.outcome = "skipped"\n                rep.wasxfail = xfailed.reason\n        elif call.when == "call":\n            if xfailed.strict:\n                rep.outcome = "failed"\n                rep.longrepr = "[XPASS(strict)] " + xfailed.reason\n            else:\n                rep.outcome = "passed"\n                rep.wasxfail = xfailed.reason\n    elif (\n        item._store.get(skipped_by_mark_key, True)\n        and rep.skipped\n        and type(rep.longrepr) is tuple\n    ):\n        # skipped by mark.skipif; change the location of the failure\n        # to point to the item definition, otherwise it will display\n        # the location of where the skip exception was raised within pytest\n        _, _, reason = rep.longrepr\n        filename, line = item.reportinfo()[:2]\n        assert line is not None\n        rep.longrepr = str(filename), line + 1, reason\n</code>\n\n', 'Found 1 methods with name `pytest_runtest_makereport` in file src/_pytest/skipping.py.\n', True)
2024-04-05 04:21:23 Refactored invocation argument parsing failed on 'search_code_in_file("@pytest.mark.skip", "src/_pytest/skipping.py")': invalid syntax (<unknown>, line 1)
2024-04-05 04:21:23 Result of dispatch_intent: ('Could not find code @pytest.mark.skip in file src/_pytest/skipping.py.', 'Could not find code @pytest.mark.skip in file src/_pytest/skipping.py.', False)
2024-04-05 04:21:54 Model API request cost info: input_tokens=1552, output_tokens=583, cost=0.033010
2024-04-05 04:21:54 Raw model response: ChatCompletionMessage(content='Analyzing the provided context from the `pytest_runtest_makereport` function in `src/_pytest/skipping.py`, we can deduce several key points that are relevant to the issue at hand:\n\n1. **Handling of Skipped Tests**: The function modifies the report (`rep`) of a test based on various conditions. Notably, it handles cases where tests are marked as skipped (`rep.skipped`), xfailed, or have an unexpected success.\n\n2. **Special Handling for `--runxfail`**: There\'s a specific branch that checks if `item.config.option.runxfail` is true, with the comment "don\'t interfere", indicating that when `--runxfail` is used, certain modifications to the report are intentionally bypassed. This is likely intended to preserve the original behavior of xfail tests when they are run despite being expected to fail.\n\n3. **Modification of Skip Location**: The last conditional block in the provided code snippet is particularly relevant to the issue. It checks if a test was skipped due to a `mark.skipif` and then modifies the `longrepr` of the report to change the location of the failure to point to the item definition. This is done to ensure that the skip location reported points to where the test itself is defined, rather than where the skip exception was raised within pytest.\n\nGiven the issue description, the problem arises when `--runxfail` is used alongside `@pytest.mark.skip`/`skipif`, which incorrectly reports the skip location as `src/_pytest/skipping.py:238` instead of the test item\'s location. From the analyzed context, it seems that the handling of skip location modification is not affected by the `--runxfail` option as it should be. The condition `elif item.config.option.runxfail:` simply passes without any action, which might be correct for its intended purpose but does not directly relate to the issue of skip location reporting.\n\nThe actual bug seems to lie in how the skip location is modified for tests skipped by `mark.skipif`. The condition:\n```python\nelif (\n    item._store.get(skipped_by_mark_key, True)\n    and rep.skipped\n    and type(rep.longrepr) is tuple\n):\n```\ncorrectly identifies tests skipped by a mark and attempts to modify their reported location. However, the issue might be with how this modification interacts with the `--runxfail` option or with an oversight in how skipped tests\' locations are determined when `--runxfail` is active.\n\nTo resolve the issue, we need to ensure that the skip location reporting logic correctly identifies and reports the location of the test item itself, even when `--runxfail` is used. This might involve adding additional checks or modifying how the skip location is determined in the presence of the `--runxfail` option.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:21:54 
========== Conversation Round 1 ==========
2024-04-05 04:21:54 [32mCurrent message thread:[0m
[{'role': 'system',
  'content': 'You are a software developer maintaining a large project.\n'
             'You are working on an issue submitted to your project.\n'
             'The issue contains a description marked between <issue> and </issue>.\n'
             'Your task is to invoke a few search API calls to gather buggy information, then write patches to solve the issues.\n'},
 {'role': 'user',
  'content': '<issue>skipping: --runxfail breaks pytest.mark.skip location reporting\n'
             'pytest versions: 5.4.x, current master\n'
             'When `@pytest.mark.skip`/`skipif` marks are used to skip a test, for example\n'
             '```py\n'
             'import pytest\n'
             '@pytest.mark.skip\n'
             'def test_skip_location() -> None:\n'
             'assert 0\n'
             '```\n'
             'the expected skip location reported should point to the item itself, and this is indeed what happens when running with `pytest -rs`:\n'
             '```\n'
             'SKIPPED [1] test_it.py:3: unconditional skip\n'
             '```\n'
             'However, adding `pytest -rs --runxfail` breaks this:\n'
             '```\n'
             'SKIPPED [1] src/_pytest/skipping.py:238: unconditional skip\n'
             '```\n'
             'The `--runxfail` is only about xfail and should not affect this at all.\n'
             '---\n'
             'Hint: the bug is in `src/_pytest/skipping.py`, the `pytest_runtest_makereport` hook.\n'
             '</issue>'},
 {'role': 'user',
  'content': 'An external analysis tool has been deployed to identify the suspicious code to be fixed. You can choose to use the results from this tool, if '
             'you think they are useful.The tool output is as follows:\n'
             'Top-5 suspicious methods:\n'
             'Suspicious method #1:\n'
             '<file>src/_pytest/pytester.py</file> <func>__take_sys_modules_snapshot</func>\n'
             '\n'
             'Suspicious method #2:\n'
             '<file>src/_pytest/pytester.py</file> <class>LineMatcher</class> <func>re_match_lines</func>\n'
             '\n'
             'Suspicious method #3:\n'
             '<file>src/_pytest/pytester.py</file> <class>LineMatcher</class> <func>_no_match_line</func>\n'
             '\n'
             'Suspicious method #4:\n'
             '<file>src/_pytest/skipping.py</file> <func>pytest_configure</func>\n'
             '\n'
             'Suspicious method #5:\n'
             '<file>src/_pytest/outcomes.py</file> <func>fail</func>\n'
             '\n'},
 {'role': 'user',
  'content': 'Based on the files, classes, methods, code statements from the issue that related to the bug, you can use below search APIs to get more context '
             'of the project.\n'
             '        search_class(class_name: str): Search for a class in the codebase.\n'
             '        search_method_in_file(method_name: str, file_path: str): Search for a method in a given file.\n'
             '        search_method_in_class(method_name: str, class_name: str): Search for a method in a given class.\n'
             '        search_method(method_name: str): Search for a method in the entire codebase.\n'
             '        search_code(code_str: str): Search for a code snippet in the entire codebase.\n'
             '        search_code_in_file(code_str: str, file_path: str): Search for a code snippet in a given file file.\n'
             '        Note that you can use multiple search APIs in one round.\n'
             '        Now analyze the issue and select necessary APIs to get more context of the project, each API call must have concrete arguments as '
             'inputs.\n'
             '        '},
 {'role': 'assistant',
  'content': 'To address the issue effectively, we need to focus on the `pytest_runtest_makereport` hook within `src/_pytest/skipping.py`, as hinted in the '
             'issue description. This hook is likely responsible for the incorrect skip location reporting when the `--runxfail` option is used. Given this '
             'information, I will invoke the following search API calls to gather more context about the implementation of this hook and how it interacts with '
             'the skipping mechanism:\n'
             '\n'
             '1. `search_method_in_file("pytest_runtest_makereport", "src/_pytest/skipping.py")` - This will provide us with the implementation details of the '
             '`pytest_runtest_makereport` hook within the `skipping.py` file, which is directly related to the issue.\n'
             '\n'
             '2. `search_code_in_file("@pytest.mark.skip", "src/_pytest/skipping.py")` - Although it\'s less likely that decorators are directly defined in '
             "`skipping.py`, this search could help us understand if there's any handling or special consideration for `@pytest.mark.skip` within the context "
             'of skipping logic in this file.\n'
             '\n'
             'These searches are aimed at pinpointing the exact implementation and behavior of the skipping mechanism, especially in relation to the '
             '`pytest_runtest_makereport` hook, which seems to be misbehaving when used with `--runxfail`.'},
 {'role': 'user',
  'content': 'Result of search_method_in_file("pytest_runtest_makereport", "src/_pytest/skipping.py"):\n'
             'Found 1 methods with name `pytest_runtest_makereport` in file src/_pytest/skipping.py.\n'
             'Search result 1: <file>src/_pytest/skipping.py</file> <func>pytest_runtest_makereport</func> <code>def pytest_runtest_makereport(item: Item, '
             'call: CallInfo[None]):\n'
             '    outcome = yield\n'
             '    rep = outcome.get_result()\n'
             '    xfailed = item._store.get(xfailed_key, None)\n'
             '    # unittest special case, see setting of unexpectedsuccess_key\n'
             '    if unexpectedsuccess_key in item._store and rep.when == "call":\n'
             '        reason = item._store[unexpectedsuccess_key]\n'
             '        if reason:\n'
             '            rep.longrepr = "Unexpected success: {}".format(reason)\n'
             '        else:\n'
             '            rep.longrepr = "Unexpected success"\n'
             '        rep.outcome = "failed"\n'
             '    elif item.config.option.runxfail:\n'
             "        pass  # don't interfere\n"
             '    elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n'
             '        assert call.excinfo.value.msg is not None\n'
             '        rep.wasxfail = "reason: " + call.excinfo.value.msg\n'
             '        rep.outcome = "skipped"\n'
             '    elif not rep.skipped and xfailed:\n'
             '        if call.excinfo:\n'
             '            raises = xfailed.raises\n'
             '            if raises is not None and not isinstance(call.excinfo.value, raises):\n'
             '                rep.outcome = "failed"\n'
             '            else:\n'
             '                rep.outcome = "skipped"\n'
             '                rep.wasxfail = xfailed.reason\n'
             '        elif call.when == "call":\n'
             '            if xfailed.strict:\n'
             '                rep.outcome = "failed"\n'
             '                rep.longrepr = "[XPASS(strict)] " + xfailed.reason\n'
             '            else:\n'
             '                rep.outcome = "passed"\n'
             '                rep.wasxfail = xfailed.reason\n'
             '    elif (\n'
             '        item._store.get(skipped_by_mark_key, True)\n'
             '        and rep.skipped\n'
             '        and type(rep.longrepr) is tuple\n'
             '    ):\n'
             '        # skipped by mark.skipif; change the location of the failure\n'
             '        # to point to the item definition, otherwise it will display\n'
             '        # the location of where the skip exception was raised within pytest\n'
             '        _, _, reason = rep.longrepr\n'
             '        filename, line = item.reportinfo()[:2]\n'
             '        assert line is not None\n'
             '        rep.longrepr = str(filename), line + 1, reason\n'
             '</code>\n'
             '\n'
             '\n'
             '\n'
             'Result of search_code_in_file("@pytest.mark.skip", "src/_pytest/skipping.py"):\n'
             'Could not find code @pytest.mark.skip in file src/_pytest/skipping.py.\n'
             '\n'},
 {'role': 'user', 'content': "Let's analyze collected context first"},
 {'role': 'assistant',
  'content': 'Analyzing the provided context from the `pytest_runtest_makereport` function in `src/_pytest/skipping.py`, we can deduce several key points that '
             'are relevant to the issue at hand:\n'
             '\n'
             '1. **Handling of Skipped Tests**: The function modifies the report (`rep`) of a test based on various conditions. Notably, it handles cases '
             'where tests are marked as skipped (`rep.skipped`), xfailed, or have an unexpected success.\n'
             '\n'
             "2. **Special Handling for `--runxfail`**: There's a specific branch that checks if `item.config.option.runxfail` is true, with the comment "
             '"don\'t interfere", indicating that when `--runxfail` is used, certain modifications to the report are intentionally bypassed. This is likely '
             'intended to preserve the original behavior of xfail tests when they are run despite being expected to fail.\n'
             '\n'
             '3. **Modification of Skip Location**: The last conditional block in the provided code snippet is particularly relevant to the issue. It checks '
             'if a test was skipped due to a `mark.skipif` and then modifies the `longrepr` of the report to change the location of the failure to point to '
             'the item definition. This is done to ensure that the skip location reported points to where the test itself is defined, rather than where the '
             'skip exception was raised within pytest.\n'
             '\n'
             'Given the issue description, the problem arises when `--runxfail` is used alongside `@pytest.mark.skip`/`skipif`, which incorrectly reports the '
             "skip location as `src/_pytest/skipping.py:238` instead of the test item's location. From the analyzed context, it seems that the handling of "
             'skip location modification is not affected by the `--runxfail` option as it should be. The condition `elif item.config.option.runxfail:` simply '
             'passes without any action, which might be correct for its intended purpose but does not directly relate to the issue of skip location '
             'reporting.\n'
             '\n'
             'The actual bug seems to lie in how the skip location is modified for tests skipped by `mark.skipif`. The condition:\n'
             '```python\n'
             'elif (\n'
             '    item._store.get(skipped_by_mark_key, True)\n'
             '    and rep.skipped\n'
             '    and type(rep.longrepr) is tuple\n'
             '):\n'
             '```\n'
             'correctly identifies tests skipped by a mark and attempts to modify their reported location. However, the issue might be with how this '
             "modification interacts with the `--runxfail` option or with an oversight in how skipped tests' locations are determined when `--runxfail` is "
             'active.\n'
             '\n'
             'To resolve the issue, we need to ensure that the skip location reporting logic correctly identifies and reports the location of the test item '
             'itself, even when `--runxfail` is used. This might involve adding additional checks or modifying how the skip location is determined in the '
             'presence of the `--runxfail` option.'},
 {'role': 'user',
  'content': 'Based on your analysis, answer below questions:  - do we need more context: construct search API calls to get more context of the project. '
             "(leave it empty if you don't need more context)  - where are bug locations: buggy files and methods. (leave it empty if you don't have enough "
             'information)'}]
2024-04-05 04:21:58 Model API request cost info: input_tokens=2208, output_tokens=50, cost=0.023580
2024-04-05 04:21:58 Raw model response: ChatCompletionMessage(content='- do we need more context: \n\n- where are bug locations: \n  - buggy files and methods:\n    - **File**: `src/_pytest/skipping.py`\n    - **Method**: `pytest_runtest_makereport`', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:21:58 Trying to select search APIs in json. Try 1 of 5.
2024-04-05 04:22:00 Model API request cost info: input_tokens=370, output_tokens=37, cost=0.004810
2024-04-05 04:22:00 Raw model response: ChatCompletionMessage(content='{\n    "API_calls": [],\n    "bug_locations":[{"file": "src/_pytest/skipping.py", "method": "pytest_runtest_makereport"}]\n}', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:22:00 Raw issue json produced. Writing issue json into file.
2024-04-05 04:22:00 Extracted a valid json. Congratulations!
2024-04-05 04:22:00 Result of dispatch_intent: ('Found 1 methods with name `pytest_runtest_makereport` in file src/_pytest/skipping.py.\nSearch result 1: <file>src/_pytest/skipping.py</file> <func>pytest_runtest_makereport</func> <code>def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n    outcome = yield\n    rep = outcome.get_result()\n    xfailed = item._store.get(xfailed_key, None)\n    # unittest special case, see setting of unexpectedsuccess_key\n    if unexpectedsuccess_key in item._store and rep.when == "call":\n        reason = item._store[unexpectedsuccess_key]\n        if reason:\n            rep.longrepr = "Unexpected success: {}".format(reason)\n        else:\n            rep.longrepr = "Unexpected success"\n        rep.outcome = "failed"\n    elif item.config.option.runxfail:\n        pass  # don\'t interfere\n    elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n        assert call.excinfo.value.msg is not None\n        rep.wasxfail = "reason: " + call.excinfo.value.msg\n        rep.outcome = "skipped"\n    elif not rep.skipped and xfailed:\n        if call.excinfo:\n            raises = xfailed.raises\n            if raises is not None and not isinstance(call.excinfo.value, raises):\n                rep.outcome = "failed"\n            else:\n                rep.outcome = "skipped"\n                rep.wasxfail = xfailed.reason\n        elif call.when == "call":\n            if xfailed.strict:\n                rep.outcome = "failed"\n                rep.longrepr = "[XPASS(strict)] " + xfailed.reason\n            else:\n                rep.outcome = "passed"\n                rep.wasxfail = xfailed.reason\n    elif (\n        item._store.get(skipped_by_mark_key, True)\n        and rep.skipped\n        and type(rep.longrepr) is tuple\n    ):\n        # skipped by mark.skipif; change the location of the failure\n        # to point to the item definition, otherwise it will display\n        # the location of where the skip exception was raised within pytest\n        _, _, reason = rep.longrepr\n        filename, line = item.reportinfo()[:2]\n        assert line is not None\n        rep.longrepr = str(filename), line + 1, reason\n</code>\n\n', 'Found 1 methods with name `pytest_runtest_makereport` in file src/_pytest/skipping.py.\n', True)
2024-04-05 04:22:00 Gathered enough information. Invoking write_patch.
2024-04-05 04:22:00 Trying to write a patch. Try 1 of 3.
2024-04-05 04:22:13 Model API request cost info: input_tokens=2947, output_tokens=391, cost=0.041200
2024-04-05 04:22:13 Raw model response: ChatCompletionMessage(content='# modification 1\n```python\n<file>src/_pytest/skipping.py</file>\n<original>elif (\n    item._store.get(skipped_by_mark_key, True)\n    and rep.skipped\n    and type(rep.longrepr) is tuple\n):\n    # skipped by mark.skipif; change the location of the failure\n    # to point to the item definition, otherwise it will display\n    # the location of where the skip exception was raised within pytest\n    _, _, reason = rep.longrepr\n    filename, line = item.reportinfo()[:2]\n    assert line is not None\n    rep.longrepr = str(filename), line + 1, reason</original>\n<patched>elif (\n    item._store.get(skipped_by_mark_key, True)\n    and rep.skipped\n    and type(rep.longrepr) is tuple\n    and not item.config.option.runxfail  # Do not modify skip location when --runxfail is used\n):\n    # skipped by mark.skipif; change the location of the failure\n    # to point to the item definition, otherwise it will display\n    # the location of where the skip exception was raised within pytest\n    _, _, reason = rep.longrepr\n    filename, line = item.reportinfo()[:2]\n    assert line is not None\n    rep.longrepr = str(filename), line + 1, reason</patched>\n```\n\nThis patch addresses the issue by ensuring that the skip location is not modified when the `--runxfail` option is used. This is achieved by adding a condition to check if `--runxfail` is active (`not item.config.option.runxfail`) before modifying the skip location. This way, the original behavior of reporting the skip location as the location of the test item itself is preserved, while still respecting the intention behind the `--runxfail` option.', role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:22:13 Raw patch produced in try 1. Writing patch into file.
2024-04-05 04:22:13 [Validation] Applied patch. Going to run test suite.
2024-04-05 04:22:13 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; pytest -rA testing/test_skipping.py ; conda deactivate
2024-04-05 04:22:15 [Run test-suite] Result of parsing test log: True
2024-04-05 04:22:15 [Run test-suite] Eval status: {'[1]': 'SKIPPED', 'test_xfail_run_anyway.py::test_func': 'FAILED', 'test_xfail_imperative_in_setup_function.py::test_this': 'FAILED', 'test_xfail_raises.py::test_raises': 'FAILED', '[2]': 'SKIPPED', 'test_reportchars.py::test_1': 'FAILED', 'test_simple.py::test_foo': 'ERROR', 'test_reportchars_all.py::test_5': 'ERROR', 'test_reportchars_all.py::test_1': 'FAILED', 'test_errors_in_xfail_skip_expressions.py::test_nameerror': 'ERROR', 'test_errors_in_xfail_skip_expressions.py::test_syntax': 'ERROR', 'test_module_level_skip_error.py': 'ERROR', 'test_invalid_skip_keyword_parameter.py': 'ERROR', 'test_summary_list_after_errors.py::test_fail': 'FAILED', 'testing/test_skipping.py::test_importorskip': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_no_marker': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_skipif_class': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_simple[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_simple[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_using_platform': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_run_anyway': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input0-expected0]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_not_report_default': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_xpass': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_imperative': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function': 'PASSED', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run': 'PASSED', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_sanity': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]': 'PASSED', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9': 'PASSED', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skip_class': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skips_on_false_string': 'PASSED', 'testing/test_skipping.py::TestSkip::test_arg_as_reason': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skip_no_reason': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skip_with_reason': 'PASSED', 'testing/test_skipping.py::TestSkip::test_only_skips_marked_test': 'PASSED', 'testing/test_skipping.py::TestSkip::test_strict_and_skip': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_conditional': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting["hasattr(sys,': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_using_platform': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]': 'PASSED', 'testing/test_skipping.py::test_skip_not_report_default': 'PASSED', 'testing/test_skipping.py::test_skipif_class': 'PASSED', 'testing/test_skipping.py::test_skipped_reasons_functional': 'PASSED', 'testing/test_skipping.py::test_skipped_folding': 'PASSED', 'testing/test_skipping.py::test_reportchars': 'PASSED', 'testing/test_skipping.py::test_reportchars_error': 'PASSED', 'testing/test_skipping.py::test_reportchars_all': 'PASSED', 'testing/test_skipping.py::test_reportchars_all_error': 'PASSED', 'testing/test_skipping.py::test_errors_in_xfail_skip_expressions': 'PASSED', 'testing/test_skipping.py::test_xfail_skipif_with_globals': 'PASSED', 'testing/test_skipping.py::test_default_markers': 'PASSED', 'testing/test_skipping.py::test_xfail_test_setup_exception': 'PASSED', 'testing/test_skipping.py::test_imperativeskip_on_xfail_test': 'PASSED', 'testing/test_skipping.py::TestBooleanCondition::test_skipif': 'PASSED', 'testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason': 'PASSED', 'testing/test_skipping.py::TestBooleanCondition::test_xfail': 'PASSED', 'testing/test_skipping.py::test_xfail_item': 'PASSED', 'testing/test_skipping.py::test_module_level_skip_error': 'PASSED', 'testing/test_skipping.py::test_module_level_skip_with_allow_module_level': 'PASSED', 'testing/test_skipping.py::test_invalid_skip_keyword_parameter': 'PASSED', 'testing/test_skipping.py::test_mark_xfail_item': 'PASSED', 'testing/test_skipping.py::test_summary_list_after_errors': 'PASSED', 'testing/test_skipping.py::test_relpath_rootdir': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input1-expected1]': 'FAILED'}
2024-04-05 04:22:15 [Run test-suite] Eval result: {'FAIL_TO_PASS': {'success': [], 'failure': ['testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input1-expected1]']}, 'PASS_TO_PASS': {'success': ['testing/test_skipping.py::TestBooleanCondition::test_skipif', 'testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason', 'testing/test_skipping.py::TestBooleanCondition::test_xfail', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean', 'testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args', 'testing/test_skipping.py::TestEvaluation::test_no_marker', 'testing/test_skipping.py::TestEvaluation::test_skipif_class', 'testing/test_skipping.py::TestSkip::test_arg_as_reason', 'testing/test_skipping.py::TestSkip::test_only_skips_marked_test', 'testing/test_skipping.py::TestSkip::test_skip_class', 'testing/test_skipping.py::TestSkip::test_skip_no_reason', 'testing/test_skipping.py::TestSkip::test_skip_with_reason', 'testing/test_skipping.py::TestSkip::test_skips_on_false_string', 'testing/test_skipping.py::TestSkip::test_strict_and_skip', 'testing/test_skipping.py::TestSkipif::test_skipif_conditional', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting["hasattr(sys,', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]', 'testing/test_skipping.py::TestSkipif::test_skipif_using_platform', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup', 'testing/test_skipping.py::TestXFail::test_strict_sanity', 'testing/test_skipping.py::TestXFail::test_strict_xfail[False]', 'testing/test_skipping.py::TestXFail::test_strict_xfail[True]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]', 'testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails', 'testing/test_skipping.py::TestXFail::test_xfail_imperative', 'testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function', 'testing/test_skipping.py::TestXFail::test_xfail_not_report_default', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting', 'testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1', 'testing/test_skipping.py::TestXFail::test_xfail_run_anyway', 'testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input0-expected0]', 'testing/test_skipping.py::TestXFail::test_xfail_simple[False]', 'testing/test_skipping.py::TestXFail::test_xfail_simple[True]', 'testing/test_skipping.py::TestXFail::test_xfail_using_platform', 'testing/test_skipping.py::TestXFail::test_xfail_xpass', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9', 'testing/test_skipping.py::test_default_markers', 'testing/test_skipping.py::test_errors_in_xfail_skip_expressions', 'testing/test_skipping.py::test_imperativeskip_on_xfail_test', 'testing/test_skipping.py::test_importorskip', 'testing/test_skipping.py::test_invalid_skip_keyword_parameter', 'testing/test_skipping.py::test_mark_xfail_item', 'testing/test_skipping.py::test_module_level_skip_error', 'testing/test_skipping.py::test_module_level_skip_with_allow_module_level', 'testing/test_skipping.py::test_relpath_rootdir', 'testing/test_skipping.py::test_reportchars', 'testing/test_skipping.py::test_reportchars_all', 'testing/test_skipping.py::test_reportchars_all_error', 'testing/test_skipping.py::test_reportchars_error', 'testing/test_skipping.py::test_skip_not_report_default', 'testing/test_skipping.py::test_skipif_class', 'testing/test_skipping.py::test_skipped_folding', 'testing/test_skipping.py::test_skipped_reasons_functional', 'testing/test_skipping.py::test_summary_list_after_errors', 'testing/test_skipping.py::test_xfail_item', 'testing/test_skipping.py::test_xfail_skipif_with_globals', 'testing/test_skipping.py::test_xfail_test_setup_exception'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}
2024-04-05 04:22:15 [Run test-suite] Resolution status: ResolvedStatus.NO
2024-04-05 04:22:15 [Run test-suite] Returning False since some tests failed.
2024-04-05 04:22:15 [Validation] Finishing. Result is False. Message: Some tests have failed..
2024-04-05 04:22:15 Trying to write a patch. Try 2 of 3.
2024-04-05 04:22:43 Model API request cost info: input_tokens=3369, output_tokens=607, cost=0.051900
2024-04-05 04:22:43 Raw model response: ChatCompletionMessage(content="Given the feedback and the need to revise the approach, let's consider a different angle to address the issue. The initial patch aimed to conditionally modify the skip location based on the `--runxfail` flag. However, if this did not resolve the issue, it suggests that the problem might not solely lie in the handling of `--runxfail` but perhaps in how the skip location is determined and reported more broadly.\n\nUpon reevaluation, a more robust solution might involve ensuring that the skip location is always accurately reported, regardless of the `--runxfail` flag's state. This could involve a more direct approach to determining the skip location that does not get inadvertently altered by other flags or conditions.\n\nUnfortunately, without the ability to run tests or see the specific failures caused by the initial patch, I can only hypothesize a more general approach to fixing the issue based on the provided context. Here's an alternative patch that aims to ensure the skip location is correctly determined and reported:\n\n# modification 1\n```python\n<file>src/_pytest/skipping.py</file>\n<original>elif (\n    item._store.get(skipped_by_mark_key, True)\n    and rep.skipped\n    and type(rep.longrepr) is tuple\n):\n    # skipped by mark.skipif; change the location of the failure\n    # to point to the item definition, otherwise it will display\n    # the location of where the skip exception was raised within pytest\n    _, _, reason = rep.longrepr\n    filename, line = item.reportinfo()[:2]\n    assert line is not None\n    rep.longrepr = str(filename), line + 1, reason</original>\n<patched>elif (\n    item._store.get(skipped_by_mark_key, True)\n    and rep.skipped\n    and type(rep.longrepr) is tuple\n):\n    # Ensure accurate skip location reporting regardless of --runxfail\n    # This approach focuses on refining how the skip location is determined\n    # to ensure it's always reported as the location of the test item itself.\n    _, _, reason = rep.longrepr\n    filename, line = item.location[0], item.location[1]\n    rep.longrepr = str(filename), line, reason</patched>\n```\n\nThis revised patch changes the strategy for determining the skip location. Instead of adjusting the line number (`line + 1`), it directly uses the location information available from the `item` object (`item.location[0]` for the filename and `item.location[1]` for the line number). This approach aims to directly address the issue of skip location reporting by ensuring that the location is derived in a straightforward manner from the test item's metadata, which should remain accurate regardless of other test execution flags like `--runxfail`.\n\nPlease note, without the ability to test this patch or see the specific test failures, this solution is based on a theoretical understanding of the problem and the provided context.", role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:22:43 Raw patch produced in try 2. Writing patch into file.
2024-04-05 04:22:43 [Validation] Applied patch. Going to run test suite.
2024-04-05 04:22:43 Running command: source /home/yuntong/miniconda3/etc/profile.d/conda.sh ; conda activate setup_pytest-dev__pytest__5.4 ; pytest -rA testing/test_skipping.py ; conda deactivate
2024-04-05 04:22:45 [Run test-suite] Result of parsing test log: True
2024-04-05 04:22:45 [Run test-suite] Eval status: {'[1]': 'SKIPPED', '[2]': 'SKIPPED', 'test_xfail_run_anyway.py::test_func': 'FAILED', 'test_xfail_imperative_in_setup_function.py::test_this': 'FAILED', 'test_xfail_raises.py::test_raises': 'FAILED', 'test_reportchars.py::test_1': 'FAILED', 'test_simple.py::test_foo': 'ERROR', 'test_reportchars_all.py::test_5': 'ERROR', 'test_reportchars_all.py::test_1': 'FAILED', 'test_errors_in_xfail_skip_expressions.py::test_nameerror': 'ERROR', 'test_errors_in_xfail_skip_expressions.py::test_syntax': 'ERROR', 'test_module_level_skip_error.py': 'ERROR', 'test_invalid_skip_keyword_parameter.py': 'ERROR', 'test_summary_list_after_errors.py::test_fail': 'FAILED', 'testing/test_skipping.py::test_importorskip': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_no_marker': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean': 'PASSED', 'testing/test_skipping.py::TestEvaluation::test_skipif_class': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_simple[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_simple[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_using_platform': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_run_anyway': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_not_report_default': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_xpass': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_imperative': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function': 'PASSED', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run': 'PASSED', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_sanity': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]': 'PASSED', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]': 'PASSED', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9': 'PASSED', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skip_class': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skips_on_false_string': 'PASSED', 'testing/test_skipping.py::TestSkip::test_arg_as_reason': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skip_no_reason': 'PASSED', 'testing/test_skipping.py::TestSkip::test_skip_with_reason': 'PASSED', 'testing/test_skipping.py::TestSkip::test_only_skips_marked_test': 'PASSED', 'testing/test_skipping.py::TestSkip::test_strict_and_skip': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_conditional': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting["hasattr(sys,': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_using_platform': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]': 'PASSED', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]': 'PASSED', 'testing/test_skipping.py::test_skip_not_report_default': 'PASSED', 'testing/test_skipping.py::test_skipif_class': 'PASSED', 'testing/test_skipping.py::test_skipped_folding': 'PASSED', 'testing/test_skipping.py::test_reportchars': 'PASSED', 'testing/test_skipping.py::test_reportchars_error': 'PASSED', 'testing/test_skipping.py::test_reportchars_all': 'PASSED', 'testing/test_skipping.py::test_reportchars_all_error': 'PASSED', 'testing/test_skipping.py::test_errors_in_xfail_skip_expressions': 'PASSED', 'testing/test_skipping.py::test_xfail_skipif_with_globals': 'PASSED', 'testing/test_skipping.py::test_default_markers': 'PASSED', 'testing/test_skipping.py::test_xfail_test_setup_exception': 'PASSED', 'testing/test_skipping.py::test_imperativeskip_on_xfail_test': 'PASSED', 'testing/test_skipping.py::TestBooleanCondition::test_skipif': 'PASSED', 'testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason': 'PASSED', 'testing/test_skipping.py::TestBooleanCondition::test_xfail': 'PASSED', 'testing/test_skipping.py::test_xfail_item': 'PASSED', 'testing/test_skipping.py::test_module_level_skip_error': 'PASSED', 'testing/test_skipping.py::test_module_level_skip_with_allow_module_level': 'PASSED', 'testing/test_skipping.py::test_invalid_skip_keyword_parameter': 'PASSED', 'testing/test_skipping.py::test_mark_xfail_item': 'PASSED', 'testing/test_skipping.py::test_summary_list_after_errors': 'PASSED', 'testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input0-expected0]': 'FAILED', 'testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input1-expected1]': 'FAILED', 'testing/test_skipping.py::test_skipped_reasons_functional': 'FAILED', 'testing/test_skipping.py::test_relpath_rootdir': 'FAILED'}
2024-04-05 04:22:45 [Run test-suite] Eval result: {'FAIL_TO_PASS': {'success': [], 'failure': ['testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input1-expected1]']}, 'PASS_TO_PASS': {'success': ['testing/test_skipping.py::TestBooleanCondition::test_skipif', 'testing/test_skipping.py::TestBooleanCondition::test_skipif_noreason', 'testing/test_skipping.py::TestBooleanCondition::test_xfail', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_twice2', 'testing/test_skipping.py::TestEvaluation::test_marked_one_arg_with_reason', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_no_args', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_boolean_without_reason', 'testing/test_skipping.py::TestEvaluation::test_marked_skipif_with_invalid_boolean', 'testing/test_skipping.py::TestEvaluation::test_marked_xfail_no_args', 'testing/test_skipping.py::TestEvaluation::test_no_marker', 'testing/test_skipping.py::TestEvaluation::test_skipif_class', 'testing/test_skipping.py::TestSkip::test_arg_as_reason', 'testing/test_skipping.py::TestSkip::test_only_skips_marked_test', 'testing/test_skipping.py::TestSkip::test_skip_class', 'testing/test_skipping.py::TestSkip::test_skip_no_reason', 'testing/test_skipping.py::TestSkip::test_skip_with_reason', 'testing/test_skipping.py::TestSkip::test_skips_on_false_string', 'testing/test_skipping.py::TestSkip::test_strict_and_skip', 'testing/test_skipping.py::TestSkipif::test_skipif_conditional', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting["hasattr(sys,', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting[True,', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[skipif-SKIP-skipped]', 'testing/test_skipping.py::TestSkipif::test_skipif_reporting_multiple[xfail-XPASS-xpassed]', 'testing/test_skipping.py::TestSkipif::test_skipif_using_platform', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_no_run', 'testing/test_skipping.py::TestXFail::test_dynamic_xfail_set_during_funcarg_setup', 'testing/test_skipping.py::TestXFail::test_strict_sanity', 'testing/test_skipping.py::TestXFail::test_strict_xfail[False]', 'testing/test_skipping.py::TestXFail::test_strict_xfail[True]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[False]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_condition[True]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[false]', 'testing/test_skipping.py::TestXFail::test_strict_xfail_default_from_file[true]', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[False]', 'testing/test_skipping.py::TestXFail::test_xfail_condition_keyword[True]', 'testing/test_skipping.py::TestXFail::test_xfail_evalfalse_but_fails', 'testing/test_skipping.py::TestXFail::test_xfail_imperative', 'testing/test_skipping.py::TestXFail::test_xfail_imperative_in_setup_function', 'testing/test_skipping.py::TestXFail::test_xfail_not_report_default', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_no_setup_run', 'testing/test_skipping.py::TestXFail::test_xfail_not_run_xfail_reporting', 'testing/test_skipping.py::TestXFail::test_xfail_raises[(AttributeError,', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-IndexError-*1', 'testing/test_skipping.py::TestXFail::test_xfail_raises[TypeError-TypeError-*1', 'testing/test_skipping.py::TestXFail::test_xfail_run_anyway', 'testing/test_skipping.py::TestXFail::test_xfail_simple[False]', 'testing/test_skipping.py::TestXFail::test_xfail_simple[True]', 'testing/test_skipping.py::TestXFail::test_xfail_using_platform', 'testing/test_skipping.py::TestXFail::test_xfail_xpass', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed', 'testing/test_skipping.py::TestXFail::test_xfail_xpassed_strict', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_setup_issue9', 'testing/test_skipping.py::TestXFailwithSetupTeardown::test_failing_teardown_issue9', 'testing/test_skipping.py::test_default_markers', 'testing/test_skipping.py::test_errors_in_xfail_skip_expressions', 'testing/test_skipping.py::test_imperativeskip_on_xfail_test', 'testing/test_skipping.py::test_importorskip', 'testing/test_skipping.py::test_invalid_skip_keyword_parameter', 'testing/test_skipping.py::test_mark_xfail_item', 'testing/test_skipping.py::test_module_level_skip_error', 'testing/test_skipping.py::test_module_level_skip_with_allow_module_level', 'testing/test_skipping.py::test_reportchars', 'testing/test_skipping.py::test_reportchars_all', 'testing/test_skipping.py::test_reportchars_all_error', 'testing/test_skipping.py::test_reportchars_error', 'testing/test_skipping.py::test_skip_not_report_default', 'testing/test_skipping.py::test_skipif_class', 'testing/test_skipping.py::test_skipped_folding', 'testing/test_skipping.py::test_summary_list_after_errors', 'testing/test_skipping.py::test_xfail_item', 'testing/test_skipping.py::test_xfail_skipif_with_globals', 'testing/test_skipping.py::test_xfail_test_setup_exception'], 'failure': ['testing/test_skipping.py::TestXFail::test_xfail_run_with_skip_mark[test_input0-expected0]', 'testing/test_skipping.py::test_relpath_rootdir', 'testing/test_skipping.py::test_skipped_reasons_functional']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}
2024-04-05 04:22:45 [Run test-suite] Resolution status: ResolvedStatus.NO
2024-04-05 04:22:45 [Run test-suite] Returning False since some tests failed.
2024-04-05 04:22:45 [Validation] Finishing. Result is False. Message: Some tests have failed..
2024-04-05 04:22:45 Trying to write a patch. Try 3 of 3.
2024-04-05 04:22:59 Model API request cost info: input_tokens=4007, output_tokens=342, cost=0.050330
2024-04-05 04:22:59 Raw model response: ChatCompletionMessage(content="Given the constraints and the feedback received, it's clear that the previous attempts to directly modify the handling of skip location reporting in the presence of the `--runxfail` flag have not resolved the issue. Without the ability to test changes or see specific test failures, and based on the information provided, creating an effective patch is challenging. \n\nHowever, since direct modifications have not led to a successful resolution, and without further specific details on the test failures or additional context from the codebase, it's difficult to propose a new, accurate patch that addresses the issue without potentially introducing new problems.\n\nIn a real-world scenario, the next steps would involve:\n\n1. **Reviewing Test Failures**: Understanding exactly which tests failed and why. This would provide crucial insights into how the patch affected the behavior and potentially reveal what aspect of the patch did not work as expected.\n\n2. **Debugging**: Running the tests locally or in a development environment with detailed logging to see how the skip locations are determined and reported in both standard and `--runxfail` scenarios.\n\n3. **Consulting with the Team or Community**: Discussing the issue with other developers or the testing framework's community. Sometimes, issues like these can stem from deeper, more systemic problems within the framework, or there might be ongoing work or discussions related to the issue.\n\n4. **Iterative Patching**: Based on the insights from debugging and discussions, iteratively updating the patch and testing until the issue is resolved.\n\nWithout the ability to perform these steps or access more detailed information, I'm unable to provide a further revised patch. In a practical setting, following the steps outlined above would be the recommended approach to finding a solution.", role='assistant', function_call=None, tool_calls=None)
2024-04-05 04:22:59 Raw patch produced in try 3. Writing patch into file.
2024-04-05 04:22:59 Result of dispatch_intent: ('Failed to write a valid patch.', 'The tool returned the patch written by another agent.', True)
2024-04-05 04:22:59 Invoked write_patch. Ending workflow.
2024-04-05 04:23:00 Task pytest-dev__pytest-7432 completed successfully.
