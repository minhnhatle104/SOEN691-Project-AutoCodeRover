[
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__new__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "expr",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "cond",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "is_commutative",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "ExprCondPair",
        "__iter__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "__new__",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "eval",
        1.0
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "__eval_cond",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "parenthesize",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "stringify",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Function",
        1.0
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Mul",
        1.0
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__ge__",
        0.8164965809277261
    ],
    [
        "sympy/core/operations.py",
        "LatticeOp",
        "__new__",
        0.8164965809277261
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "reversed",
        0.8164965809277261
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "canonical",
        0.8164965809277261
    ],
    [
        "sympy/core/relational.py",
        "Unequality",
        "__new__",
        0.8164965809277261
    ],
    [
        "sympy/core/relational.py",
        "_Inequality",
        "__new__",
        0.8164965809277261
    ],
    [
        "sympy/core/relational.py",
        "GreaterThan",
        "_eval_relation",
        0.8164965809277261
    ],
    [
        "sympy/core/relational.py",
        "StrictLessThan",
        "_eval_relation",
        0.8164965809277261
    ],
    [
        "sympy/logic/boolalg.py",
        "Or",
        "_new_args_filter",
        0.8164965809277261
    ],
    [
        "sympy/logic/boolalg.py",
        "Not",
        "eval",
        0.8164965809277261
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Mul",
        0.8164965809277261
    ],
    [
        "sympy/core/add.py",
        "",
        "_unevaluated_Add",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_derivative",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_numer_denom",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_poly",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "replace",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "match",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "rewrite",
        0.7071067811865475
    ],
    [
        "sympy/core/basic.py",
        "Atom",
        "matches",
        0.7071067811865475
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "_nodes",
        0.7071067811865475
    ],
    [
        "sympy/core/decorators.py",
        "",
        "__sympifyit",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "sort_key",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__le__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__lt__",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_interval",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "getO",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "args_cnc",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "coeff",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_independent",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_multiplicatively",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "extract_branch_factor",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "diff",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_expand_hint",
        0.7071067811865475
    ],
    [
        "sympy/core/expr.py",
        "AtomicExpr",
        "_eval_derivative",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_isnumber",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "mul",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "normal",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "gcd",
        0.7071067811865475
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Application",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "is_commutative",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_derivative",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_is_commutative",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_eval_is_complex",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Function",
        "as_base_exp",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "Derivative",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/function.py",
        "",
        "nfloat",
        0.7071067811865475
    ],
    [
        "sympy/core/logic.py",
        "",
        "_fuzzy_group",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "",
        "_unevaluated_Mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "flatten",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_real_imag",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_expand_mul",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_derivative",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_difference_delta",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_matches_simple",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "matches",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_infinite",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_pos_neg",
        0.7071067811865475
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_prime",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "limit_denominator",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_eval_power",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_as_mpf_val",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__gt__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rdivmod__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmul__",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_matches_commutative",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_derivative",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "matches",
        0.7071067811865475
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_content_primitive",
        0.7071067811865475
    ],
    [
        "sympy/core/relational.py",
        "Equality",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "__xnew__",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_positive",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_nonnegative",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "_eval_interval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "_sort_expr_cond",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "_eval_subs",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "Piecewise",
        "_eval_template_is_attr",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/piecewise.py",
        "",
        "piecewise_fold",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_eval_is_rational",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "TrigonometricFunction",
        "_eval_is_algebraic",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "",
        "_pi_coeff",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_expand_trig",
        0.7071067811865475
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/special/bessel.py",
        "besselj",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/special/bessel.py",
        "besselj",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/functions/special/bessel.py",
        "bessely",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/functions/special/bessel.py",
        "besseli",
        "eval",
        0.7071067811865475
    ],
    [
        "sympy/functions/special/bessel.py",
        "besseli",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/functions/special/bessel.py",
        "besselk",
        "_eval_is_real",
        0.7071067811865475
    ],
    [
        "sympy/integrals/deltafunctions.py",
        "",
        "change_mul",
        0.7071067811865475
    ],
    [
        "sympy/integrals/deltafunctions.py",
        "",
        "deltaintegrate",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "components",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "_symbols",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "heurisch_wrapper",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "_create_table",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "diffs",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "BesselTable",
        "has",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "DiffCache",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "DiffCache",
        "get_diff",
        0.7071067811865475
    ],
    [
        "sympy/integrals/heurisch.py",
        "",
        "heurisch",
        0.7071067811865475
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "_eval_is_zero",
        0.7071067811865475
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "doit",
        0.7071067811865475
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "_eval_integral",
        0.7071067811865475
    ],
    [
        "sympy/integrals/integrals.py",
        "",
        "integrate",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "prde_normal_denom",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "real_imag",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "prde_special_denom",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "prde_linear_constraints",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "constant_system",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "prde_spde",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "prde_no_cancel_b_large",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "prde_no_cancel_b_small",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "param_rischDE",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "limited_integrate_reduce",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "limited_integrate",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "parametric_log_deriv_heu",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "parametric_log_deriv",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "is_deriv_k",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "is_log_deriv_k_t_radical",
        0.7071067811865475
    ],
    [
        "sympy/integrals/prde.py",
        "",
        "is_log_deriv_k_t_radical_in_field",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rationaltools.py",
        "",
        "ratint",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rationaltools.py",
        "",
        "ratint_ratpart",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rationaltools.py",
        "",
        "ratint_logpart",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rationaltools.py",
        "",
        "log_to_atan",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rationaltools.py",
        "",
        "log_to_real",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "order_at",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "order_at_oo",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "weak_normalizer",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "normal_denom",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "special_denom",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "bound_degree",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "spde",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "no_cancel_b_large",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "no_cancel_b_small",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "no_cancel_equal",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "cancel_primitive",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "cancel_exp",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "solve_poly_rde",
        0.7071067811865475
    ],
    [
        "sympy/integrals/rde.py",
        "",
        "rischDE",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integer_powers",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__getattr__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_auto_attrs",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_exp_part",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_log_part",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "_important_attrs",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "__str__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "reset",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "increment_level",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DifferentialExtension",
        "decrement_level",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DecrementLevel",
        "__init__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DecrementLevel",
        "__enter__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "DecrementLevel",
        "__exit__",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "gcdex_diophantine",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "frac_in",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "as_poly_1t",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "derivation",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "get_case",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "splitfactor",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "splitfactor_sqf",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "canonical_representation",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "hermite_reduce",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "polynomial_reduce",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "laurent_series",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "recognize_derivative",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "recognize_log_derivative",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "residue_reduce",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "residue_reduce_to_basic",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "residue_reduce_derivation",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_primitive_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_primitive",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_hyperexponential_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_hyperexponential",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_hypertangent_polynomial",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "integrate_nonlinear_no_specials",
        0.7071067811865475
    ],
    [
        "sympy/integrals/risch.py",
        "",
        "risch_integrate",
        0.7071067811865475
    ],
    [
        "sympy/integrals/singularityfunctions.py",
        "",
        "singularityintegrate",
        0.7071067811865475
    ],
    [
        "sympy/integrals/trigonometry.py",
        "",
        "_integer_instance",
        0.7071067811865475
    ],
    [
        "sympy/integrals/trigonometry.py",
        "",
        "_pat_sincos",
        0.7071067811865475
    ],
    [
        "sympy/integrals/trigonometry.py",
        "",
        "trigintegrate",
        0.7071067811865475
    ],
    [
        "sympy/logic/boolalg.py",
        "Boolean",
        "__invert__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "DenseMatrix",
        "__getitem__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "DenseMatrix",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "DenseMatrix",
        "tolist",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "DenseMatrix",
        "zeros",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "",
        "_force_mutable",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "__setitem__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "as_mutable",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "row_op",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "row_swap",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "zip_row_op",
        0.7071067811865475
    ],
    [
        "sympy/matrices/dense.py",
        "",
        "zeros",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "__len__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "_handle_creation_inputs",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "_setitem",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "copy",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "rref",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "",
        "classof",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "",
        "a2idx",
        0.7071067811865475
    ],
    [
        "sympy/matrices/matrices.py",
        "",
        "_find_reasonable_pivot",
        0.7071067811865475
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_number",
        0.7071067811865475
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_composite",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sub",
        0.7071067811865475
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_rr_div",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_TC",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_convert",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_convert",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_p",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_multi_deflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_inflate",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "_rec_list_terms",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_content",
        0.7071067811865475
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dmp_ground_primitive",
        0.7071067811865475
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_nonnegative",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dup_rr_trivial_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_rr_trivial_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_zz_heu_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_rr_lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "_rebuild_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__sub__",
        0.7071067811865475
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "itermonomials",
        0.7071067811865475
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "monomial_min",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "convert",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "monoms",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "total_degree",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "is_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "roots",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "to_field",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "terms_gcd",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "total_degree",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_ground",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_multivariate",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "lcm",
        0.7071067811865475
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_sort_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_if_gens",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "_rebuild_expr",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__add__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__radd__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__mul__",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "coeff",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "coeffs",
        0.7071067811865475
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "cancel",
        0.7071067811865475
    ],
    [
        "sympy/polys/solvers.py",
        "",
        "eqs_to_matrix",
        0.7071067811865475
    ],
    [
        "sympy/polys/solvers.py",
        "",
        "solve_lin_sys",
        0.7071067811865475
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Relational",
        0.7071067811865475
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Piecewise",
        0.7071067811865475
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_FourierSeries",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_ExprCondPair",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Pow",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Relational",
        0.7071067811865475
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_WildFunction",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "",
        "fourier_sin_seq",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "",
        "_process_limits",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "a0",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "an",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "bn",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "interval",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "start",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "stop",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "length",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "truncate",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "FourierSeries",
        "_eval_term",
        0.7071067811865475
    ],
    [
        "sympy/series/fourier.py",
        "",
        "fourier_series",
        0.7071067811865475
    ],
    [
        "sympy/series/sequences.py",
        "SeqFormula",
        "__new__",
        0.7071067811865475
    ],
    [
        "sympy/series/series_class.py",
        "SeriesBase",
        "term",
        0.7071067811865475
    ],
    [
        "sympy/series/series_class.py",
        "SeriesBase",
        "_ith_point",
        0.7071067811865475
    ],
    [
        "sympy/series/series_class.py",
        "SeriesBase",
        "__iter__",
        0.7071067811865475
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "fraction",
        0.7071067811865475
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "_simple_dens",
        0.7071067811865475
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "denoms",
        0.7071067811865475
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "check_assumptions",
        0.7071067811865475
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "solve",
        0.7071067811865475
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "_solve",
        0.7071067811865475
    ],
    [
        "sympy/solvers/solvers.py",
        "",
        "solve_linear",
        0.7071067811865475
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "uniq",
        0.7071067811865475
    ],
    [
        "sympy/core/operations.py",
        "LatticeOp",
        "_new_args_filter",
        0.6324555320336759
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_Add",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "lhs",
        0.5773502691896258
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "rhs",
        0.5773502691896258
    ],
    [
        "sympy/core/add.py",
        "Add",
        "primitive",
        0.5345224838248488
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "_ask",
        0.5345224838248488
    ],
    [
        "sympy/core/relational.py",
        "Relational",
        "__new__",
        0.5345224838248488
    ],
    [
        "sympy/core/add.py",
        "Add",
        "flatten",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_irrational",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_subs",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "compare",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__str__",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "subs",
        0.5
    ],
    [
        "sympy/core/basic.py",
        "",
        "_aresame",
        0.5
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "default_sort_key",
        0.5
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__cmp__",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_expr",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_rational_function",
        0.5
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_rational_function",
        0.5
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "factor_terms",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "class_key",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_coeff_Mul",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_integer",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_real_imag",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_odd",
        0.5
    ],
    [
        "sympy/core/mul.py",
        "",
        "expand_2arg",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__div__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_power",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__div__",
        0.5
    ],
    [
        "sympy/core/numbers.py",
        "NumberSymbol",
        "__le__",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "__new__",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_even",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_odd",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_subs",
        0.5
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_numer_denom",
        0.5
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "as_real_imag",
        0.5
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "re",
        "eval",
        0.5
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "im",
        "eval",
        0.5
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "",
        "_unpolarify",
        0.5
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_rational",
        0.5
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_real",
        0.5
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "_eval_is_finite",
        0.5
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "MinMaxBase",
        "_find_localzeros",
        0.5
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "MinMaxBase",
        "_is_connected",
        0.5
    ],
    [
        "sympy/functions/special/bessel.py",
        "BesselBase",
        "eval",
        0.5
    ],
    [
        "sympy/functions/special/bessel.py",
        "bessely",
        "eval",
        0.5
    ],
    [
        "sympy/functions/special/bessel.py",
        "besselk",
        "eval",
        0.5
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "free_symbols",
        0.5
    ],
    [
        "sympy/logic/boolalg.py",
        "And",
        "_new_args_filter",
        0.5
    ],
    [
        "sympy/matrices/dense.py",
        "DenseMatrix",
        "_eval_transpose",
        0.5
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "transpose",
        0.5
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "_construct_simple",
        0.5
    ],
    [
        "sympy/polys/constructor.py",
        "",
        "construct_domain",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add_term",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul_term",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_add",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_sub",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_mul",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_sqr",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_div",
        0.5
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_quo",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_strip",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_tuple",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zeros",
        0.5
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_to_dict",
        0.5
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "one",
        0.5
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "__hash__",
        0.5
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "to_sympy",
        0.5
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "from_sympy",
        0.5
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "from_sympy",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_simplify_gcd",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_zz_heu_gcd",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "_dmp_inner_gcd",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_inner_gcd",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_gcd",
        0.5
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dmp_content",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "__hash__",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "ground_new",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "field_new",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "from_expr",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__hash__",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "as_expr",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__eq__",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__neg__",
        0.5
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__truediv__",
        0.5
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "monomial_div",
        0.5
    ],
    [
        "sympy/polys/monomials.py",
        "",
        "monomial_ldiv",
        0.5
    ],
    [
        "sympy/polys/polyoptions.py",
        "Composite",
        "default",
        0.5
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "_integer_basis",
        0.5
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__new__",
        0.5
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_poly",
        0.5
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "gen",
        0.5
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "parallel_dict_from_expr",
        0.5
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr",
        0.5
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "ring_new",
        0.5
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "from_expr",
        0.5
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "as_expr",
        0.5
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "as_expr_dict",
        0.5
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__rmul__",
        0.5
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Mul",
        0.5
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_BooleanTrue",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqBase",
        "coeff",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqExpr",
        "gen",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqExpr",
        "interval",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqExpr",
        "start",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqExpr",
        "stop",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqExpr",
        "variables",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqFormula",
        "formula",
        0.5
    ],
    [
        "sympy/series/sequences.py",
        "SeqFormula",
        "_eval_coeff",
        0.5
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_positive",
        0.47140452079103173
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_negative",
        0.47140452079103173
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "ordered",
        0.47140452079103173
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_numer_denom",
        0.47140452079103173
    ],
    [
        "sympy/core/numbers.py",
        "",
        "ilcm",
        0.47140452079103173
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcdex",
        0.47140452079103173
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_imaginary",
        0.4472135954999579
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_odd",
        0.4472135954999579
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_monotonic_sign",
        0.4472135954999579
    ],
    [
        "sympy/core/mul.py",
        "",
        "_keep_coeff",
        0.4472135954999579
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonnegative",
        0.42640143271122083
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_eval_is_nonpositive",
        0.42640143271122083
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__hash__",
        0.42640143271122083
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_imaginary",
        0.42640143271122083
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_hermitian",
        0.42640143271122083
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__hash__",
        0.42640143271122083
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence",
        0.42640143271122083
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_traditional",
        0.42640143271122083
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "free_symbols",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "as_coeff_add",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_matches_simple",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "matches",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "_combine_inverse",
        0.4082482904638631
    ],
    [
        "sympy/core/add.py",
        "Add",
        "__neg__",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "find",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "count",
        0.4082482904638631
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "doit",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__radd__",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__gt__",
        0.4082482904638631
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_add",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "__init__",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "is_zero",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Factors",
        "as_expr",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "as_expr",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "mul",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "inv",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "quo",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "Term",
        "gcd",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "_gcd_terms",
        0.4082482904638631
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "gcd_terms",
        0.4082482904638631
    ],
    [
        "sympy/core/function.py",
        "Function",
        "_should_evalf",
        0.4082482904638631
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_bool",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_power",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_matches",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_powers_dict",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_numer_denom",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_base_exp",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_herm_antiherm",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "",
        "igcd",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__sub__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "as_coeff_mul",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__sub__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ge__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_numer_denom",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "_sage_",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__index__",
        0.4082482904638631
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "_eval_power",
        0.4082482904638631
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_has_matcher",
        0.4082482904638631
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_imaginary",
        0.4082482904638631
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "sort_key",
        0.4082482904638631
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "__new__",
        0.4082482904638631
    ],
    [
        "sympy/core/symbol.py",
        "Wild",
        "matches",
        0.4082482904638631
    ],
    [
        "sympy/core/sympify.py",
        "",
        "sympify",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/complexes.py",
        "",
        "unpolarify",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "as_base_exp",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "MinMaxBase",
        "__new__",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/miscellaneous.py",
        "MinMaxBase",
        "_new_args_filter",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "taylor_term",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_rewrite_as_exp",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_rewrite_as_Pow",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_rewrite_as_sin",
        0.4082482904638631
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "cos",
        "_eval_rewrite_as_tan",
        0.4082482904638631
    ],
    [
        "sympy/integrals/integrals.py",
        "Integral",
        "__new__",
        0.4082482904638631
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "__new__",
        0.4082482904638631
    ],
    [
        "sympy/matrices/dense.py",
        "MutableDenseMatrix",
        "_new",
        0.4082482904638631
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "extract",
        0.4082482904638631
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "key2ij",
        0.4082482904638631
    ],
    [
        "sympy/matrices/matrices.py",
        "MatrixBase",
        "shape",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "auto_symbol",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "lambda_notation",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "factorial_notation",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "convert_xor",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "stringify_expr",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "eval_expr",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_parser.py",
        "",
        "parse_expr",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "Untokenizer",
        "__init__",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "Untokenizer",
        "untokenize",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "Untokenizer",
        "compat",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "",
        "untokenize",
        0.4082482904638631
    ],
    [
        "sympy/parsing/sympy_tokenize.py",
        "",
        "generate_tokens",
        0.4082482904638631
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_ground",
        0.4082482904638631
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dmp_neg",
        0.4082482904638631
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul",
        0.4082482904638631
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_sqr",
        0.4082482904638631
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_rr_div",
        0.4082482904638631
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground_LC",
        0.4082482904638631
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one_p",
        0.4082482904638631
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_from_dict",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "frac_field",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "__init__",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "new",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/fractionfield.py",
        "FractionField",
        "zero",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/integerring.py",
        "IntegerRing",
        "get_field",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__init__",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "zero",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "one",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/polynomialring.py",
        "PolynomialRing",
        "__hash__",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "lcm",
        0.4082482904638631
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "get_ring",
        0.4082482904638631
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "__eq__",
        0.4082482904638631
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "raw_new",
        0.4082482904638631
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "new",
        0.4082482904638631
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "raw_new",
        0.4082482904638631
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "new",
        0.4082482904638631
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "cancel",
        0.4082482904638631
    ],
    [
        "sympy/polys/polyoptions.py",
        "BooleanOption",
        "preprocess",
        0.4082482904638631
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "preprocess",
        0.4082482904638631
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "allowed_flags",
        0.4082482904638631
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "cancel",
        0.4082482904638631
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "ground_new",
        0.4082482904638631
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "term_new",
        0.4082482904638631
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "to_domain",
        0.4082482904638631
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__eq__",
        0.4082482904638631
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__neg__",
        0.4082482904638631
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__sub__",
        0.4082482904638631
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_needs_mul_brackets",
        0.4082482904638631
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_Dummy",
        0.4082482904638631
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "sup",
        0.4082482904638631
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "simplify",
        0.4082482904638631
    ],
    [
        "sympy/simplify/simplify.py",
        "",
        "bottom_up",
        0.4082482904638631
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_zero",
        0.3922322702763681
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_new_rawargs",
        0.3922322702763681
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__gt__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__sub__",
        0.3779644730092272
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rsub__",
        0.3779644730092272
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "_tell",
        0.3651483716701107
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_polar",
        0.3651483716701107
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__gt__",
        0.3651483716701107
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__lt__",
        0.3651483716701107
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "",
        "_process_limits",
        0.35355339059327373
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "function",
        0.35355339059327373
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "is_number",
        0.35355339059327373
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "AddWithLimits",
        "__new__",
        0.35355339059327373
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_subs",
        0.35355339059327373
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__getitem__",
        0.35355339059327373
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__eq__",
        0.35355339059327373
    ],
    [
        "sympy/core/function.py",
        "Application",
        "func",
        0.35355339059327373
    ],
    [
        "sympy/core/function.py",
        "Function",
        "class_key",
        0.35355339059327373
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_and",
        0.35355339059327373
    ],
    [
        "sympy/core/logic.py",
        "",
        "fuzzy_not",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__div__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__eq__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rdiv__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__gt__",
        0.35355339059327373
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__ge__",
        0.35355339059327373
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "__new__",
        0.35355339059327373
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "_from_args",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_power",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_positive",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_negative",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_zero",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_integer",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_real",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_complex",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_prime",
        0.35355339059327373
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_rational",
        0.35355339059327373
    ],
    [
        "sympy/functions/elementary/exponential.py",
        "log",
        "eval",
        0.35355339059327373
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "taylor_term",
        0.35355339059327373
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_rewrite_as_exp",
        0.35355339059327373
    ],
    [
        "sympy/functions/elementary/trigonometric.py",
        "sin",
        "_eval_rewrite_as_Pow",
        0.35355339059327373
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_add_term",
        0.35355339059327373
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_mul_term",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_TC",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_degree",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_degree_in",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero_p",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_zero",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_one",
        0.35355339059327373
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_list_terms",
        0.35355339059327373
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_primitive",
        0.35355339059327373
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_extract",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "new",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify_with_symbols",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "unify",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "exquo",
        0.35355339059327373
    ],
    [
        "sympy/polys/domains/ring.py",
        "Ring",
        "quo",
        0.35355339059327373
    ],
    [
        "sympy/polys/euclidtools.py",
        "",
        "dup_inner_gcd",
        0.35355339059327373
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "__new__",
        0.35355339059327373
    ],
    [
        "sympy/polys/fields.py",
        "FracField",
        "_gens",
        0.35355339059327373
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__init__",
        0.35355339059327373
    ],
    [
        "sympy/polys/fields.py",
        "FracElement",
        "__nonzero__",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "terms",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "degree",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "primitive",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__init__",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "__setattr__",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "preprocess",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyoptions.py",
        "Auto",
        "postprocess",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyroots.py",
        "",
        "preprocess_roots",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "from_dict",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_dict",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_from_expr",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_hashable_content",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "domain",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_unify",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "per",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "retract",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "terms",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_dict",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "_gen_to_level",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "degree",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "clear_denoms",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "primitive",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "is_univariate",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "parallel_poly_from_expr",
        0.35355339059327373
    ],
    [
        "sympy/polys/polytools.py",
        "",
        "_parallel_poly_from_expr",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_unify_gens",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_parallel_dict_from_expr_no_gens",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_if_gens",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr_no_gens",
        0.35355339059327373
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_dict_from_expr",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "",
        "_parse_symbols",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__eq__",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "from_dict",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "copy",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "strip_zero",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "is_negative",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__pow__",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_sorted",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "terms",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "cofactors",
        0.35355339059327373
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_gcd_monom",
        0.35355339059327373
    ],
    [
        "sympy/sets/sets.py",
        "Interval",
        "start",
        0.35355339059327373
    ],
    [
        "sympy/simplify/radsimp.py",
        "",
        "denom",
        0.35355339059327373
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__sub__",
        0.34299717028501764
    ],
    [
        "sympy/core/facts.py",
        "FactKB",
        "deduce_all_facts",
        0.34299717028501764
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "matches",
        0.3333333333333333
    ],
    [
        "sympy/core/numbers.py",
        "AlgebraicNumber",
        "__new__",
        0.3333333333333333
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__neg__",
        0.3244428422615251
    ],
    [
        "sympy/core/function.py",
        "Application",
        "__new__",
        0.3244428422615251
    ],
    [
        "sympy/concrete/expr_with_limits.py",
        "ExprWithLimits",
        "limits",
        0.31622776601683794
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "as_property",
        0.31622776601683794
    ],
    [
        "sympy/core/assumptions.py",
        "ManagedProperties",
        "__init__",
        0.31622776601683794
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "atoms",
        0.31622776601683794
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "free_symbols",
        0.31622776601683794
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "xreplace",
        0.31622776601683794
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "is_sequence",
        0.31622776601683794
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__init__",
        0.31622776601683794
    ],
    [
        "sympy/core/evalf.py",
        "",
        "_create_evalf_table",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_power",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "count_ops",
        0.31622776601683794
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_content_primitive",
        0.31622776601683794
    ],
    [
        "sympy/core/function.py",
        "",
        "expand_power_base",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_negative",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_subs",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "as_ordered_factors",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_sorted_args",
        0.31622776601683794
    ],
    [
        "sympy/core/mul.py",
        "",
        "prod",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_eval_is_finite",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__rsub__",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "as_content_primitive",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "",
        "_intcache_printinfo",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Infinity",
        "__div__",
        0.31622776601683794
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_is_finite",
        0.31622776601683794
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_exp",
        0.31622776601683794
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_power_base",
        0.31622776601683794
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "_eval_expand_multinomial",
        0.31622776601683794
    ],
    [
        "sympy/core/symbol.py",
        "Dummy",
        "__new__",
        0.31622776601683794
    ],
    [
        "sympy/polys/densetools.py",
        "",
        "dup_content",
        0.31622776601683794
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__nonzero__",
        0.31622776601683794
    ],
    [
        "sympy/polys/domains/pythonrationalfield.py",
        "PythonRationalField",
        "from_ZZ_python",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "__init__",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "_build",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "_vars",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "mul",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "pow",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "mulpow",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "ldiv",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "div",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "lcm",
        0.31622776601683794
    ],
    [
        "sympy/polys/monomials.py",
        "MonomialOps",
        "gcd",
        0.31622776601683794
    ],
    [
        "sympy/polys/orderings.py",
        "MonomialOrder",
        "__hash__",
        0.31622776601683794
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gens",
        "default",
        0.31622776601683794
    ],
    [
        "sympy/polys/polyoptions.py",
        "Order",
        "preprocess",
        0.31622776601683794
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "get_domain",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__new__",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "_gens",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "__hash__",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "monomial_basis",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "zero",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "one",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyRing",
        "domain_new",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "new",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "__hash__",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "leading_expv",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "_get_coeff",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "LC",
        0.31622776601683794
    ],
    [
        "sympy/polys/rings.py",
        "PolyElement",
        "iterterms",
        0.31622776601683794
    ],
    [
        "sympy/printing/precedence.py",
        "",
        "precedence_Integer",
        0.31622776601683794
    ],
    [
        "sympy/printing/str.py",
        "StrPrinter",
        "_print_int",
        0.31622776601683794
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "flatten",
        0.31622776601683794
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "_eval_is_odd",
        0.3086066999241838
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "__init__",
        0.30151134457776363
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "copy",
        0.30151134457776363
    ],
    [
        "sympy/core/assumptions.py",
        "",
        "make_property",
        0.30151134457776363
    ],
    [
        "sympy/core/core.py",
        "BasicMeta",
        "__lt__",
        0.30151134457776363
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_eval_subs",
        0.2886751345948129
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "has",
        0.2886751345948129
    ],
    [
        "sympy/core/basic.py",
        "",
        "_atomic",
        0.2886751345948129
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__iter__",
        0.2886751345948129
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_negative",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__add__",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__eq__",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ne__",
        0.2886751345948129
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__ge__",
        0.2886751345948129
    ],
    [
        "sympy/polys/densearith.py",
        "",
        "dup_neg",
        0.2886751345948129
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_strip",
        0.2886751345948129
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dmp_ground",
        0.2886751345948129
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_one",
        0.2886751345948129
    ],
    [
        "sympy/polys/domains/pythonrational.py",
        "PythonRational",
        "__init__",
        0.2886751345948129
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__hash__",
        0.2886751345948129
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "unify",
        0.2886751345948129
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "per",
        0.2886751345948129
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_tuple",
        0.2886751345948129
    ],
    [
        "sympy/polys/polyconfig.py",
        "",
        "query",
        0.2886751345948129
    ],
    [
        "sympy/polys/polyoptions.py",
        "Sort",
        "default",
        0.2886751345948129
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "__hash__",
        0.2886751345948129
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Add",
        0.2886751345948129
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "inf",
        0.2886751345948129
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanFalse",
        "__nonzero__",
        0.282842712474619
    ],
    [
        "sympy/printing/str.py",
        "",
        "sstr",
        0.282842712474619
    ],
    [
        "sympy/core/add.py",
        "",
        "_addsort",
        0.2773500981126146
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "__next__",
        0.2721655269759087
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "as_int",
        0.2721655269759087
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__new__",
        0.2721655269759087
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new_stage2__",
        0.2721655269759087
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_xreplace",
        0.2672612419124244
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "could_extract_minus_sign",
        0.2672612419124244
    ],
    [
        "sympy/core/function.py",
        "",
        "_coeff_isneg",
        0.2672612419124244
    ],
    [
        "sympy/core/function.py",
        "",
        "count_ops",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "_as_mpf_op",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__lt__",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__le__",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__rmod__",
        0.2672612419124244
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__eq__",
        0.2672612419124244
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "poly_LC",
        0.2672612419124244
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "convert_from",
        0.2672612419124244
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "to_sympy",
        0.2672612419124244
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "from_sympy",
        0.2672612419124244
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "from_dict",
        0.2672612419124244
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "default",
        0.2672612419124244
    ],
    [
        "sympy/polys/polyoptions.py",
        "Options",
        "clone",
        0.2672612419124244
    ],
    [
        "sympy/polys/polyoptions.py",
        "Domain",
        "postprocess",
        0.2672612419124244
    ],
    [
        "sympy/polys/polyoptions.py",
        "",
        "build_options",
        0.2672612419124244
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "new",
        0.2672612419124244
    ],
    [
        "sympy/polys/polytools.py",
        "Poly",
        "as_expr",
        0.2672612419124244
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__pow__",
        0.2626128657194451
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "is_number",
        0.2581988897471611
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rdiv__",
        0.25
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coefficient",
        0.25
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "expand",
        0.25
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_even",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__add__",
        0.25
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__divmod__",
        0.25
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "_sanitize",
        0.25
    ],
    [
        "sympy/core/symbol.py",
        "",
        "symbols",
        0.25
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__eq__",
        0.25
    ],
    [
        "sympy/polys/domains/pythonintegerring.py",
        "PythonIntegerRing",
        "gcd",
        0.25
    ],
    [
        "sympy/polys/polyoptions.py",
        "Expand",
        "default",
        0.25
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_hprint_Function",
        0.25
    ],
    [
        "sympy/core/mul.py",
        "",
        "_mulsort",
        0.24253562503633297
    ],
    [
        "sympy/core/evalf.py",
        "EvalfMixin",
        "evalf",
        0.23570226039551587
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__mul__",
        0.23570226039551587
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_antihermitian",
        0.23570226039551587
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_irrational",
        0.23570226039551587
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__eq__",
        0.23570226039551587
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__gt__",
        0.23570226039551587
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__hash__",
        0.23570226039551587
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__call__",
        0.23570226039551587
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "is_negative",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "to_sympy_dict",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "Option",
        "postprocess",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "OptionType",
        "__init__",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "Split",
        "postprocess",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "Gaussian",
        "postprocess",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "Extension",
        "postprocess",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "Modulus",
        "postprocess",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyoptions.py",
        "Series",
        "default",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "_not_a_coeff",
        0.23570226039551587
    ],
    [
        "sympy/polys/polyutils.py",
        "",
        "expr_from_dict",
        0.23570226039551587
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "order",
        0.23570226039551587
    ],
    [
        "sympy/sets/sets.py",
        "Interval",
        "__new__",
        0.23570226039551587
    ],
    [
        "sympy/sets/sets.py",
        "Interval",
        "open",
        0.23570226039551587
    ],
    [
        "sympy/sets/sets.py",
        "Interval",
        "left_open",
        0.23570226039551587
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "sift",
        0.23570226039551587
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "__new__",
        0.23249527748763857
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_base_exp",
        0.22941573387056174
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "base",
        0.22941573387056174
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "exp",
        0.22941573387056174
    ],
    [
        "sympy/core/numbers.py",
        "One",
        "__abs__",
        0.22645540682891913
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__ge__",
        0.22360679774997896
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__le__",
        0.22360679774997896
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_from_dict",
        0.22360679774997896
    ],
    [
        "sympy/polys/densebasic.py",
        "",
        "dup_to_dict",
        0.22360679774997896
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "__hash__",
        0.22360679774997896
    ],
    [
        "sympy/polys/polyclasses.py",
        "DMP",
        "__init__",
        0.22360679774997896
    ],
    [
        "sympy/utilities/iterables.py",
        "",
        "has_dups",
        0.22360679774997896
    ],
    [
        "sympy/core/basic.py",
        "preorder_traversal",
        "skip",
        0.22086305214969307
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_coeff_Mul",
        0.22086305214969307
    ],
    [
        "sympy/core/symbol.py",
        "Symbol",
        "assumptions0",
        0.22086305214969307
    ],
    [
        "sympy/core/operations.py",
        "AssocOp",
        "make_args",
        0.2182178902359924
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__eq__",
        0.21566554640687682
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "__ne__",
        0.21566554640687682
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Function",
        0.21320071635561041
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "args",
        0.21081851067789195
    ],
    [
        "sympy/core/assumptions.py",
        "StdFactKB",
        "generator",
        0.20412414523193154
    ],
    [
        "sympy/core/mul.py",
        "Mul",
        "_eval_is_positive",
        0.20412414523193154
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "sort_key",
        0.20412414523193154
    ],
    [
        "sympy/core/numbers.py",
        "NegativeInfinity",
        "__gt__",
        0.20412414523193154
    ],
    [
        "sympy/core/containers.py",
        "Tuple",
        "__len__",
        0.19611613513818404
    ],
    [
        "sympy/core/numbers.py",
        "Rational",
        "gcd",
        0.19611613513818404
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "tp",
        0.19611613513818404
    ],
    [
        "sympy/polys/domains/domain.py",
        "Domain",
        "of_type",
        0.19611613513818404
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Rational",
        0.19425717247145283
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_print",
        0.19069251784911848
    ],
    [
        "sympy/core/compatibility.py",
        "",
        "iterable",
        0.1889822365046136
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "canonical_variables",
        0.18257418583505536
    ],
    [
        "sympy/core/decorators.py",
        "",
        "call_highest_priority",
        0.18257418583505536
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__rmul__",
        0.17677669529663687
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_eval_is_positive",
        0.17677669529663687
    ],
    [
        "sympy/core/function.py",
        "Function",
        "__new__",
        0.17677669529663687
    ],
    [
        "sympy/core/numbers.py",
        "Number",
        "__mul__",
        0.17677669529663687
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__hash__",
        0.17277368511627203
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__div__",
        0.17149858514250882
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__hash__",
        0.17149858514250882
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "_sorted_args",
        0.17025130615174972
    ],
    [
        "sympy/printing/latex.py",
        "",
        "translate",
        0.16666666666666666
    ],
    [
        "sympy/core/sympify.py",
        "",
        "kernS",
        0.1655211777204736
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Symbol",
        0.1643989873053573
    ],
    [
        "sympy/printing/conventions.py",
        "",
        "split_super_sub",
        0.16329931618554522
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_deal_with_super_sub",
        0.16329931618554522
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__new__",
        0.16222142113076254
    ],
    [
        "sympy/core/numbers.py",
        "Integer",
        "__getnewargs__",
        0.16222142113076254
    ],
    [
        "sympy/core/basic.py",
        "Basic",
        "__new__",
        0.15339299776947407
    ],
    [
        "sympy/core/power.py",
        "Pow",
        "as_base_exp",
        0.15075567228888181
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "doprint",
        0.1466471150213533
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "doprint",
        0.1466471150213533
    ],
    [
        "sympy/printing/latex.py",
        "",
        "latex",
        0.14586499149789456
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "__init__",
        0.14586499149789456
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "__init__",
        0.14509525002200233
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__add__",
        0.1414213562373095
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "_parse_order",
        0.13608276348795434
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_terms",
        0.13608276348795434
    ],
    [
        "sympy/polys/orderings.py",
        "",
        "monomial_key",
        0.13608276348795434
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "parenthesize",
        0.13608276348795434
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_needs_add_brackets",
        0.13608276348795434
    ],
    [
        "sympy/printing/printer.py",
        "Printer",
        "_as_ordered_terms",
        0.13608276348795434
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "__complex__",
        0.1336306209562122
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_ordered_terms",
        0.1336306209562122
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_eval_is_finite",
        0.1336306209562122
    ],
    [
        "sympy/printing/latex.py",
        "LatexPrinter",
        "_print_Pow",
        0.1336306209562122
    ],
    [
        "sympy/core/exprtools.py",
        "",
        "decompose_power",
        0.13130643285972254
    ],
    [
        "sympy/polys/orderings.py",
        "LexOrder",
        "__call__",
        0.13130643285972254
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_contains",
        0.13130643285972254
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_eval_imageset",
        0.13130643285972254
    ],
    [
        "sympy/core/numbers.py",
        "",
        "mpf_norm",
        0.12909944487358055
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_new",
        0.12909944487358055
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__getnewargs__",
        0.12909944487358055
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "__getstate__",
        0.12909944487358055
    ],
    [
        "sympy/core/evalf.py",
        "",
        "evalf",
        0.1270001270001905
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "ceiling",
        0.1270001270001905
    ],
    [
        "sympy/core/numbers.py",
        "Float",
        "_sage_",
        0.1270001270001905
    ],
    [
        "sympy/core/function.py",
        "FunctionClass",
        "nargs",
        0.125
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "__contains__",
        0.12309149097933272
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "contains",
        0.12126781251816648
    ],
    [
        "sympy/core/expr.py",
        "Expr",
        "as_real_imag",
        0.11952286093343936
    ],
    [
        "sympy/core/sympify.py",
        "SympifyError",
        "__init__",
        0.11785113019775793
    ],
    [
        "sympy/sets/sets.py",
        "Set",
        "_infimum_key",
        0.11624763874381928
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "__new__",
        0.11624763874381928
    ],
    [
        "sympy/sets/sets.py",
        "FiniteSet",
        "_eval_Eq",
        0.11624763874381928
    ],
    [
        "sympy/logic/boolalg.py",
        "BooleanTrue",
        "__nonzero__",
        0.11470786693528087
    ]
]