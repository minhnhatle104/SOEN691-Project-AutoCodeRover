diff --git a/sympy/parsing/mathematica.py b/sympy/parsing/mathematica.py
index 7ea14ce33a..239f5b50bc 100644
--- a/sympy/parsing/mathematica.py
+++ b/sympy/parsing/mathematica.py
@@ -620,7 +620,11 @@ def _get_tokenizer(self):
         return self._regex_tokenizer
 
     def _from_mathematica_to_tokens(self, code: str):
+        code = str(code)  # Ensure code is treated as a Unicode string
+        import re
         tokenizer = self._get_tokenizer()
+        # Update the tokenizer regex to include Unicode character handling
+        self._regex_tokenizer = re.compile(r'[\\w\\d\\s]+|[^\\w\\d\\s]', re.UNICODE)
 
         # Find strings:
         code_splits: List[typing.Union[str, list]] = []
@@ -1067,7 +1071,8 @@ def recurse(expr):
                     head = self._node_conversions.get(expr[0], Function(expr[0]))
                 return head(*list(recurse(arg) for arg in expr[1:]))
             else:
-                return self._atom_conversions.get(expr, sympify(expr))
+                from sympy import symbols
+                return self._atom_conversions.get(expr, symbols(expr, cls=Dummy))
 
         return recurse(full_form_list)
 
