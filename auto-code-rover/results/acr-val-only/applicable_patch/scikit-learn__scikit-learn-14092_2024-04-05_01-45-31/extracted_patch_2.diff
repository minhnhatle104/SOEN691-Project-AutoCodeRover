diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py
index 1d278b6e1..3ad82fcee 100644
--- a/sklearn/neighbors/nca.py
+++ b/sklearn/neighbors/nca.py
@@ -299,7 +299,11 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):
 
         # Check the preferred dimensionality of the projected space
         if self.n_components is not None:
-            check_scalar(self.n_components, 'n_components', int, 1)
+            from numbers import Integral
+            if isinstance(self.n_components, Integral):
+                self.n_components = int(self.n_components)
+            else:
+                raise TypeError("n_components must be an integer; got (type={})".format(type(self.n_components).__name__))
 
             if self.n_components > X.shape[1]:
                 raise ValueError('The preferred dimensionality of the '
@@ -319,7 +323,11 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):
                                          self.components_.shape[1]))
 
         check_scalar(self.max_iter, 'max_iter', int, 1)
-        check_scalar(self.tol, 'tol', float, 0.)
+        from numbers import Real
+        if isinstance(self.tol, Real):
+            self.tol = float(self.tol)
+        else:
+            raise TypeError("tol must be a float; got (type={})".format(type(self.tol).__name__))
         check_scalar(self.verbose, 'verbose', int, 0)
 
         if self.callback is not None:
