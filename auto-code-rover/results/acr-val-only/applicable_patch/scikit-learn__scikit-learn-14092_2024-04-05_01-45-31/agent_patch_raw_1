# modification 1
```python
<file>sklearn/neighbors/nca.py</file>
<original>check_scalar(self.n_components, 'n_components', int, 1)</original>
<patched>check_scalar(self.n_components, 'n_components', numbers.Integral, 1)</patched>
```

# modification 2
```python
<file>sklearn/neighbors/nca.py</file>
<original>check_scalar(self.tol, 'tol', float, 0.)</original>
<patched>check_scalar(self.tol, 'tol', numbers.Real, 0.)</patched>
```

Explanation:
- For the `n_components` parameter, the original code strictly checks for the `int` type, which does not account for numpy integer types like `np.int64`. By changing the type check to `numbers.Integral`, we accommodate all integer types, including those from numpy.
- Similarly, for the `tol` parameter, changing the type check from `float` to `numbers.Real` allows for a broader range of real number types, including numpy floating-point types, thus resolving the issue with too strict parameter checks during GridSearch.