# modification 1
```python
<file>django/contrib/admin/utils.py</file>
<original>else:
    return display_for_value(value, empty_value_display)</original>
<patched>elif hasattr(field, 'get_prep_value'):
    # This handles fields like JSONField that have custom preparation logic
    prepared_value = field.get_prep_value(value)
    return json.dumps(prepared_value, ensure_ascii=False)
else:
    return display_for_value(value, empty_value_display)</patched>
```

This patch adds a condition before the final `else` in the `display_for_field` function to check if the field has a `get_prep_value` method, which is common in fields that require special value preparation, such as `JSONField`. If such a method exists, it uses this method to prepare the value and then converts it to a JSON string using `json.dumps`, ensuring the output is valid JSON. This approach should resolve the issue with `JSONField` values not being displayed correctly in the admin when they are readonly. Note that `ensure_ascii=False` is used in `json.dumps` to ensure that non-ASCII characters are properly displayed.