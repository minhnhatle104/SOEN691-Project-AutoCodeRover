To address the issue of displaying fixture scopes with `pytest --fixtures`, we need to modify the `pytest_addoption` function in `src/_pytest/python.py` to include an additional option that enables the display of fixture scopes. Additionally, we need to ensure that the logic for displaying fixtures (when `--fixtures` is used) is updated to retrieve and show the scope of each fixture. However, since the retrieval and display logic is not explicitly shown in the provided context, the patch will focus on adding a command-line option to enable this feature.

Given the structure of the `pytest_addoption` function and the way options are added, the patch will introduce a new option `--show-fixture-scopes` that works in conjunction with `--fixtures` to display the scope of each fixture.

# modification 1
```python
<file>src/_pytest/python.py</file>
<original>group.addoption(
        "--fixtures-per-test",
        action="store_true",
        dest="show_fixtures_per_test",
        default=False,
        help="show fixtures per test",
    )</original>
<patched>group.addoption(
        "--fixtures-per-test",
        action="store_true",
        dest="show_fixtures_per_test",
        default=False,
        help="show fixtures per test",
    )
    group.addoption(
        "--show-fixture-scopes",
        action="store_true",
        dest="show_fixture_scopes",
        default=False,
        help="show the scope of each fixture when using --fixtures",
    )</patched>
```

This modification introduces a new command-line option `--show-fixture-scopes` to the pytest configuration. The actual logic to display the fixture scopes based on this flag would need to be implemented in the part of the code that handles the output of `--fixtures`. This would likely involve modifying the function that generates the fixtures list for display, to check if `show_fixture_scopes` is `True` and, if so, include the scope of each fixture in the output. This logic is not shown in the provided context, so a specific patch for that part cannot be provided without further information.

The introduction of the `--show-fixture-scopes` option is the first step towards implementing the requested feature. The next step would involve enhancing the fixtures display logic to use this option and include scope information in the output, which would require access to the `FixtureDef` objects and their `scope` attributes during the generation of the fixtures list for display.