Given the constraints and the nature of the request, without direct access to the specific logic that handles the output of the `--fixtures` command, we can only propose a conceptual approach to how this feature could be implemented based on the provided context and the structure of pytest. The actual implementation would require modifying both the command-line option handling (to introduce a flag for showing fixture scopes) and the logic that generates the output for the `--fixtures` command to include scope information.

Since we cannot directly modify the logic for displaying fixtures due to the lack of specific context in that area, the following is a refined conceptual approach that outlines what needs to be done in more detail, assuming access to the necessary parts of the codebase.

### Conceptual Patch for Displaying Fixture Scopes with `pytest --fixtures`

1. **Introduce a Command-Line Option to Enable Displaying Fixture Scopes**

First, we add a command-line option that allows users to request the display of fixture scopes along with the fixtures themselves.

```python
<file>src/_pytest/python.py</file>
<original>group.addoption(
        "--fixtures-per-test",
        action="store_true",
        dest="show_fixtures_per_test",
        default=False,
        help="show fixtures per test",
    )</original>
<patched>group.addoption(
        "--fixtures-per-test",
        action="store_true",
        dest="show_fixtures_per_test",
        default=False,
        help="show fixtures per test",
    )
    group.addoption(
        "--show-fixture-scopes",
        action="store_true",
        dest="show_fixture_scopes",
        default=False,
        help="show the scope of each fixture when using --fixtures",
    )</patched>
```

2. **Modify the Fixtures Display Logic to Include Scope Information**

Next, we would need to modify the part of the code that generates and displays the fixtures list when `--fixtures` is used. This involves accessing each fixture's scope attribute and including it in the output. Since the specific function or method responsible for this output is not provided, below is a conceptual outline of what the modification might look like:

```python
# This is a conceptual snippet and not directly applicable without the actual function context
<file>src/_pytest/python.py</file>  # Hypothetical location
<original># Code that generates the fixtures list for display</original>
<patched># Enhanced code that checks if 'show_fixture_scopes' is True
# and includes each fixture's scope in the output
if config.option.show_fixture_scopes:
    # Iterate over fixtures, retrieve the scope of each fixture, and include it in the output
    for fixture in fixtures:
        scope = fixture.scope  # Hypothetical way of accessing a fixture's scope
        print(f"{fixture.name} (scope: {scope})")  # Hypothetical output format
else:
    # Original logic for displaying fixtures without scope information
    for fixture in fixtures:
        print(fixture.name)</patched>
```

This conceptual approach outlines the necessary steps to implement the feature request. The actual implementation would require access to the specific parts of the pytest codebase that handle the `--fixtures` output, which involves retrieving fixture definitions and their scopes, and formatting this information for display based on the new command-line option.