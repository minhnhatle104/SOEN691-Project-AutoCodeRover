diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py
index a9f66740f..5ebe8eccd 100644
--- a/sklearn/mixture/base.py
+++ b/sklearn/mixture/base.py
@@ -148,6 +148,7 @@ class BaseMixture(six.with_metaclass(ABCMeta, DensityMixin, BaseEstimator)):
             label = cluster.KMeans(n_clusters=self.n_components, n_init=1,
                                    random_state=random_state).fit(X).labels_
             resp[np.arange(n_samples), label] = 1
+            self.labels_ = label  # Store labels_ from KMeans initialization
         elif self.init_params == 'random':
             resp = random_state.rand(n_samples, self.n_components)
             resp /= resp.sum(axis=1)[:, np.newaxis]
diff --git a/sklearn/mixture/gmm.py b/sklearn/mixture/gmm.py
index b3c231314..af201b84d 100644
--- a/sklearn/mixture/gmm.py
+++ b/sklearn/mixture/gmm.py
@@ -450,7 +450,8 @@ class _GMMBase(BaseEstimator):
         -------
         C : array, shape = (n_samples,) component memberships
         """
-        return self._fit(X, y).argmax(axis=1)
+        self.fit(X, y)  # Fit the model with X
+        return self.predict(X)  # Use the predict method to assign labels
 
     def _fit(self, X, y=None, do_prediction=False):
         """Estimate model parameters with the EM algorithm.
