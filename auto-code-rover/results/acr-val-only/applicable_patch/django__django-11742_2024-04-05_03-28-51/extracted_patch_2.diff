diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 9ce46e3f73..fc70bf941b 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -156,6 +156,12 @@ class Field(RegisterLookupMixin):
         if isinstance(choices, collections.abc.Iterator):
             choices = list(choices)
         self.choices = choices
+        # Enhanced patch to ensure max_length fits the longest choice value, not the choice key.
+        if self.choices and self.max_length is not None:
+            # Assuming choices are in the format (key, value) or just a value for simple cases.
+            max_choice_length = max(len(str(choice[1] if isinstance(choice, tuple) else choice)) for choice in self.choices)
+            if max_choice_length > self.max_length:
+                raise ValueError(f"Field '{self.name}' max_length={self.max_length} is too small for the longest choice value length of {max_choice_length}.")
         self.help_text = help_text
         self.db_index = db_index
         self.db_column = db_column
