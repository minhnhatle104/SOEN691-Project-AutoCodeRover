diff --git a/django/contrib/staticfiles/handlers.py b/django/contrib/staticfiles/handlers.py
index 711d8864ad..df090a26ca 100644
--- a/django/contrib/staticfiles/handlers.py
+++ b/django/contrib/staticfiles/handlers.py
@@ -69,6 +69,22 @@ class StaticFilesHandler(StaticFilesHandlerMixin, WSGIHandler):
         return super().__call__(environ, start_response)
 
 
+from urllib.parse import urlparse
+from django.core.handlers.asgi import ASGIHandler
+
+class StaticFilesHandlerMixin:
+    """
+    Mixin for ASGIStaticFilesHandler to provide static files handling.
+    """
+    handles_files = True
+
+    async def get_response_async(self, request):
+        """
+        Asynchronously get a response for the request.
+        """
+        # Implement logic to asynchronously handle request and serve static files
+        pass
+
 class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):
     """
     ASGI application which wraps another and intercepts requests for static
@@ -82,7 +98,23 @@ class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):
         # Only even look at HTTP requests
         if scope['type'] == 'http' and self._should_handle(scope['path']):
             # Serve static content
-            # (the one thing super() doesn't do is __call__, apparently)
-            return await super().__call__(scope, receive, send)
+            request = await self.get_asgi_request(scope, receive, send)
+            response = await self.get_response_async(request)
+            await self.send_response(response, send)
+            return
         # Hand off to the main app
         return await self.application(scope, receive, send)
+
+    async def get_asgi_request(self, scope, receive, send):
+        """
+        Construct an ASGIRequest object from the ASGI scope.
+        """
+        # Implement logic to construct ASGIRequest from scope
+        pass
+
+    async def send_response(self, response, send):
+        """
+        Send the response back to the client.
+        """
+        # Implement logic to send response back to client
+        pass
