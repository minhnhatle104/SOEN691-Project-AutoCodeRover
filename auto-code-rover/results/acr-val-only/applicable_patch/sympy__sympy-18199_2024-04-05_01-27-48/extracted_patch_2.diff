diff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py
index 9a3052d4c3..baafca63e9 100644
--- a/sympy/ntheory/residue_ntheory.py
+++ b/sympy/ntheory/residue_ntheory.py
@@ -771,7 +771,16 @@ def nthroot_mod(a, n, p, all_roots=False):
     if n == 2:
         return sqrt_mod(a, p, all_roots)
     # see Hackman "Elementary Number Theory" (2009), page 76
-    if not is_nthpow_residue(a, n, p):
+    if a % p == 0:
+        # If a is 0 mod p, then 0 is always a root. Add it to the roots if all_roots is True, or return it directly otherwise.
+        if all_roots:
+            roots = [0]
+            # If we are looking for all roots, we need to continue to find other roots as well.
+            if not is_nthpow_residue(a, n, p):
+                return roots
+        else:
+            return 0
+    elif not is_nthpow_residue(a, n, p):
         return None
     if not isprime(p):
         raise NotImplementedError("Not implemented for composite p")
