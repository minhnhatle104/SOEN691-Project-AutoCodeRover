# modification 1
```python
<file>seaborn/_core/scales.py</file>
<original>            a = forward(vmin)
            b = forward(vmax) - forward(vmin)

            def normalize(x):
                return (x - a) / b</original>
<patched>            # Check if data is boolean and handle it differently
            if data.dtype == bool:
                # Convert boolean data to integers for normalization
                vmin, vmax = 0, 1
                a, b = 0, 1
            else:
                a = forward(vmin)
                b = forward(vmax) - forward(vmin)

            def normalize(x):
                if data.dtype == bool:
                    # Directly return the integer representation for boolean data
                    return x.astype(int)
                return (x - a) / b</patched>
```

This patch addresses the issue by adding a check for boolean data types in the `_setup` method of the `ContinuousBase` class. If the data is boolean, it normalizes the data by converting boolean values to integers (0 and 1) directly, avoiding the subtraction operation that caused the `TypeError`. This approach ensures that boolean data is handled appropriately without altering the expected behavior for other data types.