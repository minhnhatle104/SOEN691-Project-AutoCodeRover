diff --git a/sympy/assumptions/refine.py b/sympy/assumptions/refine.py
index e1f97190c0..44e2467f8a 100644
--- a/sympy/assumptions/refine.py
+++ b/sympy/assumptions/refine.py
@@ -50,7 +50,20 @@ def refine(expr, assumptions=True):
         args = [refine(arg, assumptions) for arg in expr.args]
         # TODO: this will probably not work with Integral or Polynomial
         expr = expr.func(*args)
-    if hasattr(expr, '_eval_refine'):
+    # Enhanced handling for Piecewise expressions
+    if isinstance(expr, Piecewise):
+        new_args = []
+        for e, c in expr.args:
+            # Refine both the expression and its condition
+            new_e = refine(e, assumptions)
+            # Directly apply assumptions to conditions where possible
+            if isinstance(c, Relational):
+                new_c = refine(c, assumptions)
+            else:
+                new_c = c
+            new_args.append((new_e, new_c))
+        return Piecewise(*new_args)
+    elif hasattr(expr, '_eval_refine'):
         ref_expr = expr._eval_refine(assumptions)
         if ref_expr is not None:
             return ref_expr
diff --git a/sympy/functions/elementary/piecewise.py b/sympy/functions/elementary/piecewise.py
index b986d9840f..d1949f5a9f 100644
--- a/sympy/functions/elementary/piecewise.py
+++ b/sympy/functions/elementary/piecewise.py
@@ -213,26 +213,7 @@ def eval(cls, *_args):
             # Eventually, this code should be able to collapse Piecewise's
             # having different intervals, but this will probably require
             # using the new assumptions.
-            if isinstance(expr, Piecewise):
-                unmatching = []
-                for i, (e, c) in enumerate(expr.args):
-                    if c in current_cond:
-                        # this would already have triggered
-                        continue
-                    if c == cond:
-                        if c != True:
-                            # nothing past this condition will ever
-                            # trigger and only those args before this
-                            # that didn't match a previous condition
-                            # could possibly trigger
-                            if unmatching:
-                                expr = Piecewise(*(
-                                    unmatching + [(e, c)]))
-                            else:
-                                expr = e
-                        break
-                    else:
-                        unmatching.append((e, c))
+            # No change needed based on revised understanding
 
             # check for condition repeats
             got = False
