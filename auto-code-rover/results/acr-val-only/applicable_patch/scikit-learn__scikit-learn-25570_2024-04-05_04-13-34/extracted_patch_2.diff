diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py
index a26145117..0cf297513 100644
--- a/sklearn/compose/_column_transformer.py
+++ b/sklearn/compose/_column_transformer.py
@@ -753,6 +753,14 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
         else:
             self.sparse_output_ = False
 
+        # Filter out empty transformations to avoid length mismatch in pandas DataFrame output
+        non_empty_transforms = [(transform, X) for transform, X in zip(transformers, Xs) if X.shape[1] > 0]
+        if not non_empty_transforms:
+            # If all transformations result in empty outputs, return an empty DataFrame
+            return pd.DataFrame()
+        else:
+            Xs, transformers = zip(*non_empty_transforms)
+
         self._update_fitted_transformers(transformers)
         self._validate_output(Xs)
         self._record_output_indices(Xs)
@@ -869,7 +877,12 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
                 names_out = self._add_prefix_for_feature_names_out(
                     list(zip(transformer_names, feature_names_outs))
                 )
-                output.columns = names_out
+                # Ensure that the output DataFrame has columns set only if there are any columns to set.
+                if names_out:
+                    output.columns = names_out
+                else:
+                    # Handle the case where there are no names to set (e.g., all transformers resulted in 0 features)
+                    output = output.iloc[:, :0]
                 return output
 
             return np.hstack(Xs)
