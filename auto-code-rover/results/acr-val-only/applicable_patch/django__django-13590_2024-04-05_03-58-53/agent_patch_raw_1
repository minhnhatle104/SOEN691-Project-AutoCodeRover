# modification 1
```python
<file>django/db/models/sql/query.py</file>
<original>    elif isinstance(value, (list, tuple)):
            # The items of the iterable may be expressions and therefore need
            # to be resolved independently.
            return type(value)(
                self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                for sub_value in value
            )</original>
<patched>    elif isinstance(value, (list, tuple)):
            # Check if value is a named tuple by looking for the _fields attribute
            if isinstance(value, tuple) and hasattr(value, '_fields'):
                # Handle named tuple specifically by unpacking the iterator
                return type(value)(
                    *(self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                      for sub_value in value)
                )
            else:
                # The items of the iterable may be expressions and therefore need
                # to be resolved independently for lists and unnamed tuples.
                return type(value)(
                    self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
                    for sub_value in value
                )</patched>
```