diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 4648daf395..73224a8b37 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1075,12 +1075,20 @@ class Query(BaseExpression):
                 self, reuse=can_reuse, allow_joins=allow_joins,
             )
         elif isinstance(value, (list, tuple)):
-            # The items of the iterable may be expressions and therefore need
-            # to be resolved independently.
-            return type(value)(
-                self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
-                for sub_value in value
-            )
+                # Check if value is a named tuple by looking for the _fields attribute
+                if isinstance(value, tuple) and hasattr(value, '_fields'):
+                    # Handle named tuple specifically by unpacking the iterator
+                    return type(value)(
+                        *(self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
+                          for sub_value in value)
+                    )
+                else:
+                    # The items of the iterable may be expressions and therefore need
+                    # to be resolved independently for lists and unnamed tuples.
+                    return type(value)(
+                        self.resolve_lookup_value(sub_value, can_reuse, allow_joins)
+                        for sub_value in value
+                    )
         return value
 
     def solve_lookup_type(self, lookup):
