diff --git a/django/db/migrations/recorder.py b/django/db/migrations/recorder.py
index 1a37c6b7d0..5dcbfdfaf1 100644
--- a/django/db/migrations/recorder.py
+++ b/django/db/migrations/recorder.py
@@ -57,11 +57,20 @@ class MigrationRecorder:
         return self.Migration._meta.db_table in tables
 
     def ensure_schema(self):
-        """Ensure the table exists and has the correct schema."""
+        """Ensure the table exists and has the correct schema, respecting db router allow_migrate rules."""
+        from django.db import connections, router
         # If the table's there, that's fine - we've never changed its schema
         # in the codebase.
         if self.has_table():
             return
+        # Dynamically get all routers to check if migration is allowed
+        allow = False
+        for alias in connections:
+            if router.allow_migrate(connection=connections[alias], model=self.Migration):
+                allow = True
+                break
+        if not allow:
+            return
         # Make the table
         try:
             with self.connection.schema_editor() as editor:
