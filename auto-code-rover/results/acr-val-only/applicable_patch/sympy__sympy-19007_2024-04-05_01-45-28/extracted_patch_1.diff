diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py
index b821c42845..47bac9ca8e 100644
--- a/sympy/matrices/expressions/blockmatrix.py
+++ b/sympy/matrices/expressions/blockmatrix.py
@@ -234,16 +234,28 @@ def transpose(self):
 
     def _entry(self, i, j, **kwargs):
         # Find row entry
-        for row_block, numrows in enumerate(self.rowblocksizes):
-            if (i < numrows) != False:
+        row_block = None
+        col_block = None
+        for idx, numrows in enumerate(self.rowblocksizes):
+            if i < numrows:
+                row_block = idx
                 break
             else:
                 i -= numrows
-        for col_block, numcols in enumerate(self.colblocksizes):
-            if (j < numcols) != False:
+        # If i is not less than any individual block's numrows, it means i is out of bounds
+        if row_block is None:
+            raise IndexError("Row index out of range")
+
+        for idx, numcols in enumerate(self.colblocksizes):
+            if j < numcols:
+                col_block = idx
                 break
             else:
                 j -= numcols
+        # If j is not less than any individual block's numcols, it means j is out of bounds
+        if col_block is None:
+            raise IndexError("Column index out of range")
+
         return self.blocks[row_block, col_block][i, j]
 
     @property
