diff --git a/sympy/tensor/array/dense_ndim_array.py b/sympy/tensor/array/dense_ndim_array.py
index 6019daf787..e326e6f43a 100644
--- a/sympy/tensor/array/dense_ndim_array.py
+++ b/sympy/tensor/array/dense_ndim_array.py
@@ -167,13 +167,17 @@ def __new__(cls, iterable=None, shape=None, **kwargs):
 
     @classmethod
     def _new(cls, iterable, shape, **kwargs):
-        shape, flat_list = cls._handle_ndarray_creation_inputs(iterable, shape, **kwargs)
-        flat_list = flatten(flat_list)
+        if not iterable and shape in [None, (), []]:
+            shape = ()
+            flat_list = []
+        else:
+            shape, flat_list = cls._handle_ndarray_creation_inputs(iterable, shape, **kwargs)
+            flat_list = flatten(flat_list)
         self = object.__new__(cls)
         self._shape = shape
         self._array = list(flat_list)
-        self._rank = len(shape)
-        self._loop_size = functools.reduce(lambda x,y: x*y, shape) if shape else len(flat_list)
+        self._rank = len(shape) if shape else 0
+        self._loop_size = functools.reduce(lambda x,y: x*y, shape, 1) if shape else 0
         return self
 
     def __setitem__(self, index, value):
