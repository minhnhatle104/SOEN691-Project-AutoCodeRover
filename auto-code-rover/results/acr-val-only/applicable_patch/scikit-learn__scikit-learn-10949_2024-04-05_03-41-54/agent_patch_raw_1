```python
<file>sklearn/utils/validation.py</file>
<original>if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:
    msg = ("Data with input dtype %s was converted to %s%s."
           % (dtype_orig, array.dtype, context))
    warnings.warn(msg, DataConversionWarning)</original>
<patched>if warn_on_dtype and dtype_orig is not None and array.dtype != dtype_orig:
    # Check if the original array is a pandas DataFrame with dtype=object to ensure the warning is correctly issued
    if isinstance(array_orig, pd.DataFrame) and dtype_orig == object:
        msg = ("Data in a pandas DataFrame with input dtype object was converted to %s%s."
               % (array.dtype, context))
    else:
        msg = ("Data with input dtype %s was converted to %s%s."
               % (dtype_orig, array.dtype, context))
    warnings.warn(msg, DataConversionWarning)</patched>
```

**Explanation:**
The patch addresses the issue where `warn_on_dtype=True` does not trigger a warning when a pandas DataFrame with `dtype=object` is passed to `check_array`. The modification explicitly checks if the original input (`array_orig`) is a pandas DataFrame and if its `dtype` was `object` before conversion. If both conditions are true, it customizes the warning message to clearly indicate that data in a pandas DataFrame with `dtype=object` was converted. This ensures that users are properly warned about the dtype conversion, addressing the reported issue. 

Note: This patch assumes the availability of pandas (`pd`) in the scope. If not already imported, adding `import pandas as pd` at the beginning of the file or within the relevant scope would be necessary.