diff --git a/xarray/core/concat.py b/xarray/core/concat.py
index ecae2566..eaa682a4 100644
--- a/xarray/core/concat.py
+++ b/xarray/core/concat.py
@@ -16,6 +16,7 @@ def concat(
     positions=None,
     fill_value=dtypes.NA,
     join="outer",
+    ignore_missing_vars=False,
 ):
     """Concatenate xarray objects along a new or existing dimension.
 
@@ -120,15 +121,19 @@ def concat(
         )
 
     if isinstance(first_obj, DataArray):
-        f = _dataarray_concat
+        f = lambda objs, dim, data_vars, coords, compat, positions, fill_value, join, ignore_missing_vars=False: _dataarray_concat(
+            objs, dim, data_vars, coords, compat, positions, fill_value, join, ignore_missing_vars=ignore_missing_vars
+        )
     elif isinstance(first_obj, Dataset):
-        f = _dataset_concat
+        f = lambda objs, dim, data_vars, coords, compat, positions, fill_value, join, ignore_missing_vars=False: _dataset_concat(
+            objs, dim, data_vars, coords, compat, positions, fill_value, join, ignore_missing_vars=ignore_missing_vars
+        )
     else:
         raise TypeError(
             "can only concatenate xarray Dataset and DataArray "
             "objects, got %s" % type(first_obj)
         )
-    return f(objs, dim, data_vars, coords, compat, positions, fill_value, join)
+    return f(objs, dim, data_vars, coords, compat, positions, fill_value, join, ignore_missing_vars)
 
 
 def _calc_concat_dim_coord(dim):
