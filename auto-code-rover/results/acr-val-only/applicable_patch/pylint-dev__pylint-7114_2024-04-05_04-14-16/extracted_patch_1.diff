diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py
index 289e1afce..585f7ddbc 100644
--- a/pylint/lint/expand_modules.py
+++ b/pylint/lint/expand_modules.py
@@ -24,16 +24,14 @@ def _modpath_from_file(filename: str, is_namespace: bool, path: list[str]) -> li
 
 
 def get_python_path(filepath: str) -> str:
-    """TODO This get the python path with the (bad) assumption that there is always
-    an __init__.py.
-
-    This is not true since python 3.3 and is causing problem.
-    """
+    """Updated to reflect that __init__.py is not required for packages since Python 3.3."""
     dirname = os.path.realpath(os.path.expanduser(filepath))
     if not os.path.isdir(dirname):
         dirname = os.path.dirname(dirname)
     while True:
-        if not os.path.exists(os.path.join(dirname, "__init__.py")):
+        init_py = os.path.join(dirname, "__init__.py")
+        py_cache = os.path.join(dirname, "__pycache__")
+        if not os.path.exists(init_py) and not os.path.isdir(py_cache):
             return dirname
         old_dirname = dirname
         dirname = os.path.dirname(dirname)
@@ -91,7 +89,12 @@ def expand_modules(
             except ImportError:
                 modname = os.path.splitext(basename)[0]
             if os.path.isdir(something):
-                filepath = os.path.join(something, "__init__.py")
+                init_py = os.path.join(something, "__init__.py")
+                if os.path.exists(init_py):
+                    filepath = init_py
+                else:
+                    # Handle namespace packages and regular directories without __init__.py
+                    filepath = something
             else:
                 filepath = something
         else:
