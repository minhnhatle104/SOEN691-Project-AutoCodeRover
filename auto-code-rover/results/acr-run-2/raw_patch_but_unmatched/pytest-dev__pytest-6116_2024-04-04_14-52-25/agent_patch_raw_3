Given the limitations and the lack of specific code snippets where the `--collect-only` option is registered, I'm unable to provide a direct patch that matches the original program structure exactly. Without precise details on how and where `--collect-only` is implemented in the pytest codebase, creating an accurate patch is not feasible in this format.

To proceed with enhancing pytest with a one-character shortcut for `--collect-only`, the following general steps should be taken by a developer with access to the pytest codebase:

1. **Identify the Registration Location**: Find where `--collect-only` is registered in the pytest codebase. This is likely in a configuration setup file where command-line options are defined, such as `src/_pytest/config/argparsing.py`.

2. **Choose a Suitable Shortcut**: Select an appropriate one-character shortcut that does not conflict with existing shortcuts. This requires a review of the current command-line options to ensure uniqueness.

3. **Modify the Option Registration**: Update the code where `--collect-only` is registered to include the new shortcut. This involves modifying the call to `addoption` to include the short option alongside the existing long option.

4. **Update Documentation and Tests**: Ensure that the documentation reflects the new shortcut and update or add tests as necessary to cover the new functionality.

5. **Review and Test Thoroughly**: Carefully review the changes and test the new shortcut in various scenarios to ensure it works as expected and does not introduce any regressions.

Unfortunately, without specific code snippets and a more detailed view of the pytest codebase, I cannot provide a more accurate or actionable patch. The steps outlined above offer a guideline for implementing this enhancement within the pytest project.