Given the context and the issue described, it seems the problem might not be directly within the `add_marker` method itself but rather in how the dynamically added `xfail` markers are processed during the test execution phase in pytest 6.0.0rc0 compared to version 5.x. However, without specific details on the internal changes between these versions regarding marker processing, proposing a direct patch is challenging.

Nonetheless, a hypothetical patch could involve ensuring that dynamically added `xfail` markers are correctly recognized and processed in the test execution phase, similar to statically defined markers. This would likely involve changes in the parts of the pytest codebase that handle test outcomes based on markers. Since we don't have direct access to those parts of the codebase or specific changes that led to this issue, the following patch is speculative and aims to illustrate a potential approach to resolving the issue:

# modification 1
```python
<file>src/_pytest/mark/structures.py</file>
<original>
# Hypothetical original code snippet where marker evaluation occurs, affecting test outcomes.
# This is a placeholder as the exact location and code snippet are not provided.
</original>
<patched>
# Hypothetical patched code snippet that ensures dynamically added xfail markers
# are correctly evaluated in the test execution phase.
# This is a placeholder as the exact location and code snippet are not provided.
</patched>
```

To truly address the issue, one would need to:
1. Identify the internal changes in pytest version 6.0.0rc0 that affected the handling of dynamically added markers, particularly `xfail`.
2. Review the test execution and marker evaluation logic to ensure that dynamically added `xfail` markers are treated equivalently to statically defined ones.

This would likely involve a deep dive into the pytest changelog, commit history, and potentially discussions with the pytest development community to understand the rationale behind any changes and the best approach to restoring the desired behavior.