# modification 1
```python
<file>django/core/exceptions.py</file>
<original></original>
<patched>    def __eq__(self, other):
        if not isinstance(other, ValidationError):
            return NotImplemented

        # Compare error messages regardless of their order
        self_messages = self.messages
        other_messages = other.messages

        if hasattr(self, 'error_dict') and hasattr(other, 'error_dict'):
            return set(self_messages) == set(other_messages) and self.code == other.code and self.params == other.params
        elif hasattr(self, 'error_list') and hasattr(other, 'error_list'):
            return set(self_messages) == set(other_messages) and self.code == other.code and self.params == other.params
        else:
            return self.message == other.message and self.code == other.code and self.params == other.params
</patched>
```

This patch adds an `__eq__` method to the `ValidationError` class, enabling comparison of instances based on their messages, code, and params. The comparison is made order-independent for messages by converting them into sets. This approach handles different scenarios where `ValidationError` instances might have `error_dict`, `error_list`, or a single message. It ensures that two `ValidationError` instances are considered equal if they contain the same messages (regardless of order), codes, and params.