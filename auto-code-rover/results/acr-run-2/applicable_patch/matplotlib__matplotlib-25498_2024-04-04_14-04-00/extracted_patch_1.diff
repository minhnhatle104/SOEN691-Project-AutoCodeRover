diff --git a/lib/matplotlib/colorbar.py b/lib/matplotlib/colorbar.py
index d3d53e3d98..2693146b40 100644
--- a/lib/matplotlib/colorbar.py
+++ b/lib/matplotlib/colorbar.py
@@ -497,6 +497,8 @@ class Colorbar:
         This is meant to be called when the norm of the image or contour plot
         to which this colorbar belongs changes.
 
+        Enhanced to handle LogNorm and other special norms more effectively.
+
         If the norm on the mappable is different than before, this resets the
         locator and formatter for the axis, so if these have been customized,
         they will need to be customized again.  However, if the norm only
@@ -509,6 +511,11 @@ class Colorbar:
         self.cmap = mappable.cmap
         if mappable.norm != self.norm:
             self.norm = mappable.norm
+            # Check if the new norm is LogNorm and handle it specifically
+            if isinstance(self.norm, matplotlib.colors.LogNorm):
+                # Ensure vmin and vmax are positive for LogNorm
+                if self.norm.vmin <= 0 or self.norm.vmax <= 0:
+                    self.norm.vmin, self.norm.vmax = self._positive_vmin_vmax(self.mappable.get_array())
             self._reset_locator_formatter_scale()
 
         self._draw_all()
@@ -518,6 +525,15 @@ class Colorbar:
                 self.add_lines(CS)
         self.stale = True
 
+    def _positive_vmin_vmax(self, data):
+        """
+        Ensure vmin and vmax are positive for LogNorm.
+        """
+        positive_data = data[data > 0]
+        vmin = np.min(positive_data) if positive_data.size else 1e-10
+        vmax = np.max(positive_data) if positive_data.size else 1
+        return vmin, vmax
+
     @_api.deprecated("3.6", alternative="fig.draw_without_rendering()")
     def draw_all(self):
         """
