# modification 1
```python
<file>sympy/core/power.py</file>
<original>if b is S.NaN:
    return (b**e)**other  # let __new__ handle it</original>
<patched>from sympy import oo, zoo, S
if b is S.NaN:
    return (b**e)**other  # let __new__ handle it
elif b is S.Zero and e is -oo:
    return zoo</patched>
```

This patch adds a condition to the `_eval_power` method in the `Pow` class to handle the specific case where the base is `0` and the exponent is `-oo`. According to the issue description and the documentation, `0**-oo` should return `zoo` (ComplexInfinity). The patch introduces a check for this condition right after the check for `NaN` base, ensuring that `0**-oo` correctly returns `zoo` before any other evaluations proceed. This approach minimizes the impact on the existing logic and specifically addresses the reported issue.