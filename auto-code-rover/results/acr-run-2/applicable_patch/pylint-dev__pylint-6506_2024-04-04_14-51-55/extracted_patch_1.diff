diff --git a/pylint/__init__.py b/pylint/__init__.py
index 3aa4b7f9d..ac2ae84d5 100644
--- a/pylint/__init__.py
+++ b/pylint/__init__.py
@@ -25,6 +25,10 @@ def run_pylint(argv: Sequence[str] | None = None) -> None:
         PylintRun(argv or sys.argv[1:])
     except KeyboardInterrupt:
         sys.exit(1)
+    except pylint.config.exceptions._UnrecognizedOptionError as e:
+        # Handle unrecognized options gracefully without a traceback.
+        print(f"Error: {e}\nFor help, use --help or -h.")
+        sys.exit(1)
 
 
 def run_epylint(argv: Sequence[str] | None = None) -> NoReturn:
diff --git a/pylint/config/config_initialization.py b/pylint/config/config_initialization.py
index 24e453a73..4429125f5 100644
--- a/pylint/config/config_initialization.py
+++ b/pylint/config/config_initialization.py
@@ -79,10 +79,12 @@ def _config_initialization(
             unrecognized_options.append(opt[2:])
         elif opt.startswith("-"):
             unrecognized_options.append(opt[1:])
+    # Instead of raising an exception, print a helpful message and exit.
     if unrecognized_options:
         msg = ", ".join(unrecognized_options)
         linter.add_message("unrecognized-option", line=0, args=msg)
-        raise _UnrecognizedOptionError(options=unrecognized_options)
+        print(f"Unrecognized options: {msg}\nFor help, use --help or -h.")
+        sys.exit(1)
 
     # Set the current module to configuration as we don't know where
     # the --load-plugins key is coming from
