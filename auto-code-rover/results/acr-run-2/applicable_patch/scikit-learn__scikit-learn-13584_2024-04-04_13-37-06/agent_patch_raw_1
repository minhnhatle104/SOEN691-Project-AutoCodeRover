# modification 1
```python
<file>sklearn/utils/_pprint.py</file>
<original>params = _changed_params(object)</original>
<patched>from sklearn.utils.validation import check_array
params = {k: check_array(v, ensure_2d=False, allow_nd=True, force_all_finite=False) if isinstance(v, np.ndarray) else v for k, v in _changed_params(object).items()}</patched>
```

# modification 2
```python
<file>sklearn/utils/_pprint.py</file>
<original>params = object.get_params(deep=False)</original>
<patched>from sklearn.utils.validation import check_array
params = {k: check_array(v, ensure_2d=False, allow_nd=True, force_all_finite=False) if isinstance(v, np.ndarray) else v for k, v in object.get_params(deep=False).items()}</patched>
```

Explanation:
The proposed patch addresses the issue where numpy arrays as parameters cause a `ValueError` when `print_changed_only=True` is set in scikit-learn's configuration. The error arises because the pretty printer attempts to directly compare numpy arrays, which is not straightforward due to numpy's array comparison semantics.

The patch modifies the `_pprint_estimator` method in `sklearn/utils/_pprint.py`, specifically where the parameters are fetched for printing. It introduces a preprocessing step using `check_array` from `sklearn.utils.validation` to handle numpy arrays properly. This function ensures that numpy arrays are allowed to pass through without raising an error due to ambiguous truth values. The `ensure_2d=False, allow_nd=True, force_all_finite=False` arguments are set to accommodate various shapes and types of data that might be present in the parameters without enforcing unnecessary constraints.

This solution aims to maintain the original intention of showing changed parameters while ensuring compatibility with numpy arrays, thus resolving the reported issue.