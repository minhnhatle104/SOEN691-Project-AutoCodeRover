# modification 1
```python
<file>sklearn/utils/validation.py</file>
<original>if dtype_numeric and array.dtype.kind == "O":
    array = array.astype(np.float64)</original>
<patched>if dtype_numeric:
    if hasattr(array, "dtypes") and any(dtype.kind == "O" for dtype in array.dtypes):
        # This is a DataFrame with object type, convert to float and warn
        array = array.astype(np.float64)
        if warn_on_dtype:
            msg = ("Data with input dtype object was converted to float64.")
            warnings.warn(msg, DataConversionWarning)
    elif array.dtype.kind == "O":
        # This is a numpy array with object type, convert to float
        array = array.astype(np.float64)</patched>
```

Explanation:
The original code checks if the input array's dtype is object (`"O"`) and converts it to float64 without issuing a warning when `warn_on_dtype` is True. The patched code adds an additional check to determine if the input is a pandas DataFrame (by checking for the `dtypes` attribute, which is specific to DataFrames). If it finds that any column in the DataFrame is of object type, it converts the entire DataFrame to float64 and issues a warning if `warn_on_dtype` is True. This ensures that the expected warning is issued when a DataFrame containing object types is passed to `check_array` with `warn_on_dtype=True`.