# modification 1
```python
<file>sympy/solvers/polysys.py</file>
<original>if len(polys) == len(opt.gens) == 2:
    f, g = polys

    if all(i <= 2 for i in f.degree_list() + g.degree_list()):
        try:
            return solve_biquadratic(f, g, opt)
        except SolveFailed:
            pass

return solve_generic(polys, opt)</original>
<patched>if len(polys) > 0:
    # Check if the system is zero-dimensional
    if len(polys) != len(opt.gens):
        raise NotImplementedError("only zero-dimensional systems supported (finite number of solutions)")
    if len(polys) == len(opt.gens) == 2:
        f, g = polys

        if all(i <= 2 for i in f.degree_list() + g.degree_list()):
            try:
                return solve_biquadratic(f, g, opt)
            except SolveFailed:
                pass

return solve_generic(polys, opt)</patched>
```