diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index 9f609177dd..79f8427cab 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -1668,7 +1668,9 @@ def doit(self, **hints):
     def simplify(self, **kwargs):
         """See the simplify function in sympy.simplify"""
         from sympy.simplify import simplify
-        return simplify(self, **kwargs)
+        # Pass along the evaluate parameter explicitly if provided
+        evaluate_param = kwargs.get('evaluate', True)
+        return simplify(self, evaluate=evaluate_param, **kwargs)
 
     def _eval_rewrite(self, pattern, rule, **hints):
         if self.is_Atom:
diff --git a/sympy/functions/elementary/integers.py b/sympy/functions/elementary/integers.py
index fe1e71e3f2..18e1f20788 100644
--- a/sympy/functions/elementary/integers.py
+++ b/sympy/functions/elementary/integers.py
@@ -74,7 +74,9 @@ def eval(cls, arg):
         elif isinstance(spart, (floor, ceiling)):
             return ipart + spart
         else:
-            return ipart + cls(spart, evaluate=False)
+            # Ensure that the evaluate parameter is explicitly considered
+            evaluate_param = kwargs.get('evaluate', True)
+            return ipart + cls(spart, evaluate=evaluate_param)
 
     def _eval_is_finite(self):
         return self.args[0].is_finite
diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py
index 5f5eab3b9d..154980616f 100644
--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -104,7 +104,7 @@ def separatevars(expr, symbols=[], dict=False, force=False):
     True
 
     """
-    expr = sympify(expr)
+    expr = sympify(expr, evaluate=kwargs.get('evaluate', True))
     if dict:
         return _separatevars_dict(_separatevars(expr, force), symbols)
     else:
