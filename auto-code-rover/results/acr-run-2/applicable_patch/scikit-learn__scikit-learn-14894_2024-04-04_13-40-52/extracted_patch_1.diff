diff --git a/sklearn/svm/base.py b/sklearn/svm/base.py
index 64cebe837..ff4c6ec36 100644
--- a/sklearn/svm/base.py
+++ b/sklearn/svm/base.py
@@ -287,11 +287,16 @@ class BaseLibSVM(BaseEstimator, metaclass=ABCMeta):
         n_SV = self.support_vectors_.shape[0]
 
         dual_coef_indices = np.tile(np.arange(n_SV), n_class)
+        # Avoid division by zero when n_class is 0 by using max function
         dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,
-                                     dual_coef_indices.size / n_class)
-        self.dual_coef_ = sp.csr_matrix(
-            (dual_coef_data, dual_coef_indices, dual_coef_indptr),
-            (n_class, n_SV))
+                                             dual_coef_indices.size / max(n_class, 1))
+        # Handle the case when n_class is 0, creating an empty csr_matrix for dual_coef_
+        if n_class > 0:
+            self.dual_coef_ = sp.csr_matrix(
+                (dual_coef_data, dual_coef_indices, dual_coef_indptr),
+                (n_class, n_SV))
+        else:
+            self.dual_coef_ = sp.csr_matrix((0, 0))
 
     def predict(self, X):
         """Perform regression on samples in X.
