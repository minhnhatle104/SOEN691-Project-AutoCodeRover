# modification 1
```python
<file>src/_pytest/assertion/rewrite.py</file>
<original>    def is_rewrite_disabled(docstring: str) -> bool:
        return "PYTEST_DONT_REWRITE" in docstring
</original>
<patched>    def is_rewrite_disabled(docstring: Optional[str]) -> bool:
        if not isinstance(docstring, str):
            return False
        return "PYTEST_DONT_REWRITE" in docstring
</patched>
```

This patch modifies the `is_rewrite_disabled` method in the `AssertionRewriter` class to handle cases where the first expression of a file is not a string (e.g., a number or None). It first checks if the `docstring` argument is an instance of `str`. If not, it returns `False`, indicating that rewriting should not be disabled based on this criterion. This approach prevents the `TypeError` that occurs when attempting to use the `in` operator with a non-string type.