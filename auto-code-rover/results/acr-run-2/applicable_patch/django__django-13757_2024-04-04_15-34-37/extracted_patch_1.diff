diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py
index 29c6ff0926..7b98fccc14 100644
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -366,14 +366,16 @@ class CaseInsensitiveMixin:
 class KeyTransformIsNull(lookups.IsNull):
     # key__isnull=False is the same as has_key='key'
     def as_oracle(self, compiler, connection):
-        if not self.rhs:
-            return HasKey(self.lhs.lhs, self.lhs.key_name).as_oracle(compiler, connection)
-        return super().as_sql(compiler, connection)
+        # Check if the key exists and is not JSON null
+        key_check_sql, key_check_params = self.lhs.as_oracle(compiler, connection)
+        json_null_check_sql = "JSON_QUERY(%s, '$.%s') IS NOT NULL" % (key_check_sql, self.lhs.key_name)
+        return json_null_check_sql, key_check_params
 
     def as_sqlite(self, compiler, connection):
-        if not self.rhs:
-            return HasKey(self.lhs.lhs, self.lhs.key_name).as_sqlite(compiler, connection)
-        return super().as_sql(compiler, connection)
+        # Check if the key exists and is not JSON null
+        key_check_sql, key_check_params = self.lhs.as_sqlite(compiler, connection)
+        json_null_check_sql = "json_extract(%s, '$.%s') IS NOT NULL" % (key_check_sql, self.lhs.key_name)
+        return json_null_check_sql, key_check_params
 
 
 class KeyTransformIn(lookups.In):
