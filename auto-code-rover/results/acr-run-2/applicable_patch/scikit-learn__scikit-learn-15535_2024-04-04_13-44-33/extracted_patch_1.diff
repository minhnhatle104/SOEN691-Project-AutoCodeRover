diff --git a/sklearn/metrics/cluster/_supervised.py b/sklearn/metrics/cluster/_supervised.py
index 4bddae35c..77af68ddd 100644
--- a/sklearn/metrics/cluster/_supervised.py
+++ b/sklearn/metrics/cluster/_supervised.py
@@ -113,6 +113,9 @@ def contingency_matrix(labels_true, labels_pred, eps=None, sparse=False):
 
     classes, class_idx = np.unique(labels_true, return_inverse=True)
     clusters, cluster_idx = np.unique(labels_pred, return_inverse=True)
+    # Ensure labels are of a numeric type for mutual information computation
+    if labels_true.dtype == object or labels_pred.dtype == object:
+        raise ValueError("Input labels must be of a numeric type.")
     n_classes = classes.shape[0]
     n_clusters = clusters.shape[0]
     # Using coo_matrix to accelerate simple histogram calculation,
@@ -216,7 +219,7 @@ def adjusted_rand_score(labels_true, labels_pred):
     adjusted_mutual_info_score: Adjusted Mutual Information
 
     """
-    labels_true, labels_pred = check_clusterings(labels_true, labels_pred)
+    labels_true, labels_pred = check_clusterings(np.asarray(labels_true), np.asarray(labels_pred))
     n_samples = labels_true.shape[0]
     n_classes = np.unique(labels_true).shape[0]
     n_clusters = np.unique(labels_pred).shape[0]
