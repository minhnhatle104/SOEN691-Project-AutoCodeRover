# modification 1
```python
<file>src/_pytest/_code/code.py</file>
<original>    def __str__(self):
        if self._excinfo is None:
            return repr(self)
        entry = self.traceback[-1]
        loc = ReprFileLocation(entry.path, entry.lineno + 1, self.exconly())
        return str(loc)
</original>
<patched>    def __str__(self):
        if self._excinfo is None:
            return repr(self)
        # Provide a more detailed string representation including the full exception message.
        full_exception_message = str(self.value)
        entry = self.traceback[-1]
        loc = ReprFileLocation(entry.path, entry.lineno + 1, full_exception_message)
        return str(loc)
</patched>
```

This patch modifies the `__str__` method of the `ExceptionInfo` class to include the full exception message (`str(self.value)`) in its string representation. This change aims to address the issue where `str(e)` in the context of `pytest.raises` did not return the full exception message, requiring users to explicitly use `str(e.value)`. By incorporating the full exception message directly into the `__str__` method's output, this patch seeks to make the behavior more intuitive and aligned with user expectations.